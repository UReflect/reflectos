{"version":3,"sources":["webpack://ur-live/webpack/universalModuleDefinition","webpack://ur-live/webpack/bootstrap","webpack://ur-live/./node_modules/vue-video-player/node_modules/videojs-vtt.js/lib/vtt.js","webpack://ur-live/./node_modules/tsml/tsml.js","webpack://ur-live/./node_modules/vue-video-player/node_modules/videojs-vtt.js/lib/vttcue.js","webpack://ur-live/./node_modules/is-callable/index.js","webpack://ur-live/./node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js","webpack://ur-live/./node_modules/mux.js/lib/mp4/probe.js","webpack://ur-live/./node_modules/videojs-vtt.js/lib/browser-index.js","webpack://ur-live/./node_modules/aes-decrypter/es5/decrypter.js","webpack://ur-live/./node_modules/mux.js/lib/m2ts/probe.js","webpack://ur-live/./node_modules/mux.js/lib/utils/stream.js","webpack://ur-live/./node_modules/aes-decrypter/es5/stream.js","webpack://ur-live/./node_modules/vue-video-player/node_modules/videojs-vtt.js/lib/browser-index.js","webpack://ur-live/./node_modules/m3u8-parser/es5/parser.js","webpack://ur-live/./node_modules/trim/index.js","webpack://ur-live/./node_modules/xtend/immutable.js","webpack://ur-live/./Live.vue?d0ae","webpack://ur-live/Live.vue","webpack://ur-live/./Live.vue?e9e2","webpack://ur-live//Users/aurelien/.config/yarn/global/node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack://ur-live/./Live.vue","webpack://ur-live//Users/aurelien/.config/yarn/global/node_modules/@vue/cli-service/lib/commands/build/entry-lib.js","webpack://ur-live/./node_modules/m3u8-parser/es5/parse-stream.js","webpack://ur-live/./node_modules/videojs-contrib-hls/dist/videojs-contrib-hls.js","webpack://ur-live/./node_modules/parse-headers/parse-headers.js","webpack://ur-live/./node_modules/vue-video-player/node_modules/videojs-vtt.js/lib/vttregion.js","webpack://ur-live/./node_modules/pkcs7/lib/pad.js","webpack://ur-live/./node_modules/aes-decrypter/es5/aes.js","webpack://ur-live/./node_modules/is-function/index.js","webpack://ur-live/./node_modules/mpd-parser/dist/mpd-parser.es.js","webpack://ur-live/./node_modules/aes-decrypter/es5/async-stream.js","webpack://ur-live/./node_modules/safe-json-parse/tuple.js","webpack://ur-live/./node_modules/mux.js/lib/aac/probe.js","webpack://ur-live/(webpack)/buildin/global.js","webpack://ur-live/./node_modules/vue-video-player/node_modules/video.js/dist/video.cjs.js","webpack://ur-live/./node_modules/mux.js/lib/m2ts/stream-types.js","webpack://ur-live/./node_modules/videojs-vtt.js/lib/vttcue.js","webpack://ur-live/./node_modules/aes-decrypter/es5/index.js","webpack://ur-live/./node_modules/global/window.js","webpack://ur-live/./node_modules/m3u8-parser/es5/index.js","webpack://ur-live/./node_modules/pkcs7/lib/pkcs7.js","webpack://ur-live/./node_modules/for-each/index.js","webpack://ur-live/./node_modules/videojs-vtt.js/lib/vtt.js","webpack://ur-live/./node_modules/url-toolkit/src/url-toolkit.js","webpack://ur-live/./node_modules/vue-video-player/dist/vue-video-player.js","webpack://ur-live/./node_modules/mux.js/lib/tools/ts-inspector.js","webpack://ur-live/./node_modules/m3u8-parser/es5/line-stream.js","webpack://ur-live/./node_modules/pkcs7/lib/unpad.js","webpack://ur-live//Users/aurelien/.config/yarn/global/node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack://ur-live/./Live.vue?d5f9","webpack://ur-live/./node_modules/xhr/index.js","webpack://ur-live/./node_modules/global/document.js","webpack://ur-live/./node_modules/video.js/dist/video.es.js","webpack://ur-live/./node_modules/videojs-vtt.js/lib/vttregion.js","webpack://ur-live/./node_modules/m3u8-parser/es5/stream.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_objCreate","F","arguments","length","Error","ParsingError","errorData","message","code","parseTimeStamp","input","computeSeconds","h","f","match","replace","Settings","values","parseOptions","callback","keyValueDelim","groupDelim","groups","split","kv","k","v","parseCue","cue","regionList","oInput","consumeTimeStamp","ts","Errors","BadTimeStamp","consumeCueSettings","settings","id","set","region","alt","vals","vals0","integer","percent","vertical","line","lineAlign","snapToLines","size","align","position","start","left","middle","end","right","positionAlign","skipWhitespace","startTime","substr","endTime","constructor","BadSignature","dflt","defaultKey","has","a","test","parseInt","parseFloat","ESCAPE","&amp;","&lt;","&gt;","&lrm;","&rlm;","&nbsp;","TAG_NAME","b","u","ruby","rt","lang","TAG_ANNOTATION","NEEDS_PARENT","parseContent","window","nextToken","consume","result","unescape1","e","unescape","shouldAdd","current","element","localName","createElement","type","annotation","tagName","document","trim","rootDiv","tagStack","appendChild","createTextNode","pop","parentNode","node","createProcessingInstruction","className","push","strongRTLRanges","isStrongRTLChar","charCode","currentRange","determineBidi","cueDiv","nodeStack","text","childNodes","pushNodes","nextTextNode","textContent","innerText","charCodeAt","computeLinePos","track","textTrackList","mediaElement","trackList","count","StyleBox","CueStyleBox","styleOptions","isIE8","navigator","userAgent","color","backgroundColor","styles","top","bottom","display","writingMode","unicodeBidi","applyStyles","div","textAlign","font","whiteSpace","direction","stylesunicodeBidi","textPos","formatStyle","width","height","move","box","BoxPosition","obj","lh","offsetHeight","offsetWidth","offsetTop","rects","getClientRects","getBoundingClientRect","Math","max","lineHeight","undefined","moveBoxToLinePosition","styleBox","containerBox","boxPositions","findBestPosition","axis","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","boxPosition","linePos","step","round","maxPosition","initialAxis","abs","ceil","reverse","calculatedPercentage","toCSSCompatValues","WebVTT","prop","style","val","unit","toMove","overlaps","b2","boxes","container","x","min","y","intersectArea","reference","getSimpleBoxPosition","ret","StringDecoder","decode","data","decodeURIComponent","encodeURIComponent","convertCueToDOMTree","cuetext","FONT_SIZE_PERCENT","FONT_STYLE","CUE_BACKGROUND_PADDING","processCues","cues","overlay","firstChild","removeChild","paddedOverlay","shouldCompute","hasBeenReset","displayState","margin","fontSize","Parser","vttjs","decoder","state","buffer","TextDecoder","reportOrThrowError","onparsingerror","parse","collectNextLine","pos","parseRegion","xy","anchor","VTTRegion","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseTimestampMap","ontimestampmap","MPEGTS","LOCAL","parseHeader","stream","alreadyCollectedLine","VTTCue","indexOf","hasSubstring","oncue","flush","onflush","clean","sa","autoKeyword","directionSetting","","lr","rl","alignSetting","findDirectionSetting","dir","toLowerCase","findAlignSetting","extend","cobj","baseObj","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","TypeError","setting","SyntaxError","getCueAsHTML","fnToStr","Function","toString","constructorRegex","isES6ClassFn","fnStr","tryFunctionObject","toStr","fnClass","genClass","hasToStringTag","strClass","Stream","MAX_TS","RO_THRESH","handleRollover","TimestampRolloverStream","lastDTS","referenceDTS","init","type_","dts","pts","trigger","discontinuity","findBox","parseType","timescale","path","subresults","results","byteLength","subarray","slice","concat","String","fromCharCode","traks","reduce","trak","tkhd","version","index","mdhd","fragment","trafs","baseTimes","apply","map","traf","tfhd","scale","baseTime","tfdt","pow","Infinity","isFinite","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","_createClass","defineProperties","target","props","descriptor","configurable","writable","Constructor","protoProps","staticProps","_interopRequireDefault","default","_classCallCheck","instance","_aes","_aes2","_asyncStream","_asyncStream2","_pkcs7","ntoh","word","decrypt","encrypted","initVector","encrypted32","Int32Array","byteOffset","decipher","Array","decrypted","Uint8Array","decrypted32","init0","init1","init2","init3","encrypted0","encrypted1","encrypted2","encrypted3","wordIx","Decrypter","done","STEP","asyncStream_","decryptChunk_","Uint32Array","unpad","bytes","StreamTypes","parsePid","packet","pid","parsePayloadUnitStartIndicator","parseAdaptionField","offset","pmtPid","parsePat","pusi","parsePmt","programMapTable","payloadOffset","sectionLength","tableEnd","programInfoLength","parsePesType","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","parsePesTime","ptsDtsFlags","pes","parseNalUnitType","videoPacketContainsKeyFrame","nalType","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","listeners","on","listener","off","splice","callbacks","args","dispose","pipe","destination","flushSource","_extends","assign","source","_stream","_stream2","_lineStream","_lineStream2","_parseStream","_parseStream2","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","_Stream","_this","getPrototypeOf","lineStream","parseStream","uris","currentUri","currentMap","_key","noop","defaultMediaGroups","AUDIO","VIDEO","CLOSED-CAPTIONS","SUBTITLES","currentTimeline","manifest","allowCache","discontinuityStarts","segments","entry","mediaGroup","rendition","tag","allow-cache","allowed","byterange","endlist","endList","inf","mediaSequence","discontinuitySequence","duration","attributes","METHOD","URI","method","uri","IV","iv","media-sequence","number","discontinuity-sequence","playlist-type","playlistType","playlist","stream-inf","playlists","mediaGroups","media","TYPE","NAME","mediaGroupType","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","language","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","program-date-time","dateTimeString","dateTimeObject","targetduration","targetDuration","totalduration","totalDuration","cue-out","cueOut","cue-out-cont","cueOutCont","cue-in","cueIn","tagType","timeline","comment","chunk","str","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","options","playerOptions","ready","playerReadied","staticRenderFns","videojs","video_es","lib_vue_loader_options_Livevue_type_script_lang_js_","rtsp","components","videoPlayer","vue_video_player","mounted","sources","withCredentials","src","controlBar","timeDivider","durationDisplay","flash","hls","html5","poster","methods","player","tech_","xhr","beforeRequest","Livevue_type_script_lang_js_","normalizeComponent","scriptExports","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","existing","beforeCreate","component","__file","Live","__webpack_exports__","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","iterator","next","err","isArray","attributeSeparator","keyvalue","RegExp","parseAttributes","attr","exec","ParseStream","event","title","BYTERANGE","_attributes$BYTERANGE","_attributes$BYTERANGE2","RESOLUTION","resolution","BANDWIDTH","Date","substring","global","require","1","_globalWindow","_globalWindow2","findAdCue","mediaTime","adStartTime","adEndTime","updateAdCues","segment","addCue","adOffset","adTotal","_segment$cueOutCont$split$map","_segment$cueOutCont$split$map2","global/window","2","textRange","range","formatHexString","formatAsciiString","createTransferableMessage","transferable","keys","forEach","ArrayBuffer","isView","initSegmentId","initSegment","resolvedUri","join","utils","hexDump","hex","ascii","j","tagDump","textRanges","ranges","3","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","4","_aesDecrypter","_binUtils","DecrypterWorker","onmessage","postMessage","./bin-utils","aes-decrypter","5","_get","_x","_x2","_x3","_again","receiver","desc","getOwnPropertyDescriptor","_playlistLoader","_playlistLoader2","_playlistJs","_segmentLoader","_segmentLoader2","_vttSegmentLoader","_vttSegmentLoader2","_ranges","_ranges2","_videoJs","_videoJs2","_adCueTags","_adCueTags2","_syncController","_syncController2","_videojsContribMediaSourcesEs5CodecUtils","_webwackify","_webwackify2","_decrypterWorker","_decrypterWorker2","_config","_config2","_utilCodecsJs","_mediaGroups","ABORT_EARLY_BLACKLIST_SECONDS","Hls","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","resolveDecrypterWorker","resolve","mapLegacyAvcCodecs_","codecString","translateLegacyCodecs","makeMimeTypeString","codecs","filter","getContainerType","getCodecs","mediaAttributes","CODECS","parseCodecs","mimeTypesForPlaylist_","master","containerType","codecInfo","isMuxed","isMaat","audioGroup","groupId","log","warn","codecStrings","video","audio","justAudio","justVideo","bothVideoAudio","MasterPlaylistController","_videojs$EventTarget","url","tech","bandwidth","externHls","useCueTags","blacklistDuration","enableLowInitialPlaylist","hls_","mode_","useCueTags_","cueTagsTrack_","addTextTrack","inBandMetadataTrackDispatchType","requestOptions_","timeout","mediaTypes_","createMediaTypes","mediaSource","MediaSource","addEventListener","handleSourceOpen_","seekable_","createTimeRanges","hasPlayed_","syncController_","segmentMetadataTrack_","addRemoteTextTrack","kind","label","decrypter_","segmentLoaderSettings","currentTime","seekable","seeking","hasPlayed","goalBufferLength","syncController","decrypter","masterPlaylistLoader_","setupMasterPlaylistLoaderListeners_","mergeOptions","segmentMetadataTrack","loaderType","subtitleSegmentLoader_","setupSegmentLoaderListeners_","load","_this2","requestTimeout","isLowestEnabledRendition","preload","setupMediaGroups","segmentLoaders","main","requestOptions","masterPlaylistLoader","mediaTypes","blacklistCurrentPlaylist","triggerPresenceUsage_","setupSourceBuffers_","endOfStream","setupFirstPlay","updatedPlaylist","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","paused","addSeekableRange","addSeekableRange_","onDurationchange","one","error","abort","pause","bubbles","playlistOutdated","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","properties","Playlist","isAes","isFmp4","_this3","nextPlaylist","currentPlaylist","buffered","forwardBuffer","bufferLowWaterLine","onSyncInfoUpdate_","onEndOfStream","mapping","mediaSecondsLoaded","activePlaylistLoader","resetLoader","ended","setCurrentTime","_this4","_ret3","browser","IE_VERSION","readyState","autoplay","playPromise","play","then","isEndOfStream","ended_","expired","getExpiredTime","absolutePlaylistEnd","playlistEnd","SAFE_TIME_DELTA","bufferedEnd","isFinalRendition","isEnabled","excludeUntil","now","findRange","resetEverything","mainSeekable","audioSeekable","_this5","oldDuration","newDuration","setDuration","removeEventListener","_this6","terminate","group","playlistLoader","mimeTypes","mimeType","excludeIncompatibleVariants_","codecCount","variant","variantCodecs","isTypeSupported","initial","rate","EventTarget","./ad-cue-tags","./config","./decrypter-worker","./media-groups","./playlist-loader","./playlist.js","./ranges","./segment-loader","./sync-controller","./util/codecs.js","./vtt-segment-loader","videojs-contrib-media-sources/es5/codec-utils","webwackify","6","audioTrackKind_","stopLoaders","segmentLoader","mediaType","startLoaders","onGroupChanged","_settings$segmentLoaders","mainSegmentLoader","activeTrack","activeGroup","previousActiveLoader","resyncLoader","onTrackChanged","_settings$segmentLoaders2","onError","defaultTrack","tracks","trackId","enabled","setupListeners","initialize","_settings$mediaTypes$type","variantLabel","AudioTrack","_settings$mediaTypes$type2","_settings$mediaTypes$type3","variants","onAudioTrackChanged","audioTracks","remoteTextTracks","clearTracks","addTrack","7","REQUEST_ERRORS","FAILURE","TIMEOUT","ABORTED","byterangeStr","byterangeStart","byterangeEnd","segmentXhrHeaders","headers","Range","abortAll","activeXhrs","getRequestStats","request","bytesReceived","roundTripTime","getProgressStats","progressEvent","requestTime","stats","loaded","floor","handleErrors","timedout","status","aborted","handleKeyResponse","finishProcessingFn","response","errorObj","view","DataView","getUint32","handleInitSegmentResponse","handleSegmentResponse","encryptedBytes","decryptSegment","doneFn","decryptionHandler","requestId","getMostImportantError","errors","prev","waitForCompletion","endOfAllRequests","worstError","handleProgress","progressFn","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","keyRequestOptions","responseType","keyRequestCallback","keyXhr","initSegmentOptions","initSegmentRequestCallback","initSegmentXhr","segmentRequestOptions","segmentRequestCallback","segmentXhr","8","timerCancelEvents","PlaybackWatcher","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","debug","logger_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","clearTimeout","checkCurrentTime_","setTimeout","waiting_","seekTo","afterSeekableWindow_","seekableEnd","beforeSeekableWindow_","seekableStart","printableRange","livePoint","nextRange","findNextRange","videoUnderflow_","difference","skipTheGap_","gap","gapFromVideoUnderflow_","scheduledCurrentTime","TIME_FUDGE_FACTOR","gaps","findGaps","9","_resolveUrl","_resolveUrl2","_m3u8Parser","_m3u8Parser2","updateSegments","original","update","resolveSegmentUris","baseUri","updateMaster","mergedPlaylist","setupMediaPlaylists","resolveMediaGroupUris","groupKey","labelKey","mediaProperties","refreshDelay","lastSegment","delay","PlaylistLoader","_EventTarget","srcUrl","req","playlistRequestError","haveMetadata","startingState","responseText","parser","media_","mediaUpdateTimeout","stopRequest","oldRequest","onreadystatechange","mediaChange","started","location","href","./resolve-url","m3u8-parser","10","_playlist","_playlist2","safeGetComputedStyle","el","getComputedStyle","stableSort","array","sortFn","newArray","sort","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","Number","MAX_VALUE","comparePlaylistResolution","leftWidth","rightWidth","simpleSelector","playerBandwidth","playerWidth","playerHeight","sortedPlaylistReps","rep","isIncompatible","enabledPlaylistReps","isDisabled","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","lastBandwidthSelector","systemBandwidth","movingAverageBandwidthSelector","decay","average","minRebufferMaxBandwidthSelector","segmentDuration","timeUntilRebuffer","compatiblePlaylists","enabledPlaylists","bandwidthPlaylists","hasAttribute","rebufferingEstimates","syncPoint","getSyncPoint","numRequests","requestTimeEstimate","estimateSegmentRequestTime","rebufferingImpact","noRebufferingPlaylists","estimate","lowestBitrateCompatibleVariantSelector","playlistsWithVideo","./playlist","11","backwardDuration","endSequence","precise","forwardDuration","intervalDuration","backward","forward","sumDurations","startIndex","endIndex","durations","_ref","safeLiveIndex","distanceFromEnd","safeDistance","useSafeLiveEnd","createTimeRange","isWholeNumber","num","roundSignificantDigit","increment","numDecimalDigits","temp","ceilLeastSignificantDigit","floorLeastSignificantDigit","getMediaInfoForTime","numSegments","time","mediaIndex","isBlacklisted","blacklisted","disabled","NaN","currentBandwidth","12","clamp","_ref2","filterRanges","timeRanges","predicate","findSoleUncommonTimeRangesEnd","edges","overlapsCurrentEnd","span","some","bufferIntersection","bufferA","bufferB","arity","extents","calculateBufferedPercent","adjustedRange","referenceRange","referenceDuration","adjustedDuration","bufferMissingFromAdjusted","adjustedIntersection","referenceIntersection","adjustedOverlap","referenceOverlap","getSegmentBufferedPercent","startOfSegment","endOfSegment","originalSegmentRange","adjustedSegmentRange","isNaN","strArr","playbackRate","13","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","sourceObj","currentSource_","initPlugin","lastCalled","localOptions","loadedMetadataHandler","setSource","errorHandler","cleanupEvents","reinitPlugin","newOptions","reloadSourceOnError","14","enableFunction","loader","playlistUri","changePlaylistFn","enable","incompatible","currentlyEnabled","Representation","hlsHandler","fastChangeFunction","masterPlaylistController_","fastQualityChange_","renditionSelectionMixin","representations","15","_urlToolkit","_urlToolkit2","resolveUrl","baseURL","relativeURL","buildAbsoluteURL","url-toolkit","16","_x4","_x5","_x6","_sourceUpdater","_sourceUpdater2","_videojsContribMediaSourcesEs5RemoveCuesFromTrackJs","_videojsContribMediaSourcesEs5RemoveCuesFromTrackJs2","_mediaSegmentRequest","_playlistSelectors","CHECK_BUFFER_DELAY","detectEndOfStream","segmentIndex","appendedLastSegment","finite","illegalMediaSwitch","startingMedia","newSegmentMedia","containsAudio","containsVideo","safeBackBufferTrimTime","removeToTime","SegmentLoader","throughput","roundTrip","resetStats_","currentTime_","seeking_","duration_","mediaSource_","loaderType_","startingMedia_","goalBufferLength_","checkBufferTimeout_","error_","currentTimeline_","pendingSegment_","mimeType_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","syncPoint_","fetchAtBuffer_","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","abort_","monitorBuffer_","abortRequests","_error","storedMap","playlist_","setDateTimeMapping","couldBeginLoading_","init_","newPlaylist","oldPlaylist","segmentInfo","syncInfo","mediaSequenceDiff","saveExpiredSegmentInfo","_mimeType","remove","monitorBufferTick_","fillBuffer_","updating","checkBuffer_","buffered_","timestampOffset","reset","loadSegment_","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","segmentIndexArray","isSyncRequest","random","measuredBandwidth","requestTimeRemaining","switchCandidate","timeSavedBySwitching","minimumTimeSaving","simpleSegment","abortRequestEarly_","trimBackBuffer_","createSimplifiedSegmentObj_","handleProgress_","segmentRequestFinished_","processSegmentResponse_","handleSegment_","timingInfo","probeSegmentInfo","illegalMediaSwitchError","timelineMapping","mappingForTimeline","initId","appendBuffer","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","Cue","WebKitDataCue","JSON","stringify","./media-segment-request","./playlist-selectors","./source-updater","videojs-contrib-media-sources/es5/remove-cues-from-track.js","17","SourceUpdater","createSourceBuffer","sourceBuffer_","addSourceBuffer","onUpdateendCallback_","pendingCallback","pendingCallback_","runCallback_","callbacks_","timestampOffset_","processedAppend_","queueCallback_","shift","18","_muxJsLibMp4Probe","_muxJsLibMp4Probe2","_muxJsLibToolsTsInspectorJs","syncPointStrategies","run","datetimeToDisplayTime","playlistTime","getTime","playlistStart","lastDistance","distance","discontinuitySync","discontinuities","SyncController","inspectCache_","timelines","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","timescales","timeInfo","inspect","segmentStartTime","segmentEndTime","dtsTime","mappingObj","accuracy","mediaIndexDiff","mux.js/lib/mp4/probe","mux.js/lib/tools/ts-inspector.js","19","parsed","20","VTT_LINE_TERMINATORS","char","uintToString","uintArray","VTTSegmentLoader","_SegmentLoader","subtitlesTrack_","combinedByteLength","combinedSegment","_track","skipEmptySegments_","timestampOffsetForTimeline","checkTimestampOffset","empty","_ret","loadHandler","requested","parseVTTCues_","updateTimeMapping_","decodeBytesToString","timestampmap","mapData","segmentData","diff","firstStart","lastStart","21","xhrFactory","XhrFunction","reqResponse","responseTime","statusCode","originalAbort","22","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","x8","tEnc","tDec","aesTables","AES","_tables","tmp","encKey","decKey","keyLen","rcon","out","a2","c2","nInnerRounds","kIndex","table","table0","table1","table2","table3","23","AsyncStream","jobs","timeout_","processJob_","job","./stream","24","./aes","./async-stream","pkcs7","25","_decrypter","./decrypter","26","27","PADDING","plaintext","padding","28","pad","./pad.js","./unpad.js","29","padded","30","31","doccy","topLevel","minDoc","min-document","32","win","33","_parser","_parser2","LineStream","./line-stream","./parse-stream","./parser","34","nextNewline","35","36","37","38","AacStream","everything","timeStamp","setTimestamp","timestamp","parseId3TagSize","header","byteIndex","returnSize","flags","footerPresent","parseAdtsSize","lowThree","highTwo","bytesLeft","tempLength","frameSize","../utils/stream.js","39","ADTS_SAMPLING_FREQUENCIES","parseSyncSafeInteger","percentEncode","parseIso88591","parseSampleRate","parseAacTimestamp","frameStart","frame","frameHeader","owner","40","AdtsStream","frameLength","protectionSkipBytes","frameEnd","oldBuffer","sampleCount","adtsFrameDuration","frameNum","audioobjecttype","channelcount","samplerate","samplingfrequencyindex","samplesize","41","H264Stream","NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","ExpGolomb","swapBuffer","100","110","122","244","44","83","86","118","128","138","139","134","currentPts","currentDts","discardEmulationPreventionBytes","readSequenceParameterSet","skipScalingList","nalByteStream","nalUnitType","escapedRBSP","config","expGolombDecoder","deltaScale","lastScale","nextScale","readExpGolomb","newLength","newData","emulationPreventionBytesPositions","sourceIndex","profileIdc","levelIdc","profileCompatibility","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","sarRatio","aspectRatioIdc","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","readUnsignedByte","skipUnsignedExpGolomb","readUnsignedExpGolomb","skipBits","readBoolean","skipExpGolomb","readBits","../utils/exp-golomb.js","42","highPrefix","lowPrefix","zeroFill","makeTable","metaTable","part","coneOfSilence","96000","88200","64000","48000","44100","32000","24000","16000","12000","11025","8000","43","CoalesceStream","numberOfTracks","metadataStream","videoTags","audioTags","videoTrack","audioTrack","pendingCaptions","pendingMetadata","pendingTracks","processedTracks","output","frames","tags","id3","caption","timelineStartPts","captions","captionStreams","metadata","timelineStartInfo","startPts","endPts","cueTime","dispatchType","FlvTag","getFlvHeader","metadataLength","headBytes","head","setUint8","setUint32","METADATA_TAG","writeMetaDataDouble","finalize","./flv-tag.js","45","extraData","adHoc","bufferStartSize","prepareWrite","flv","minLength","widthBytes","heightBytes","videocodecidBytes","keyFrame","VIDEO_TAG","AUDIO_TAG","writeBytes","writeByte","byte","writeShort","short","setUint16","negIndex","nalUnitSize","startNalUnit","endNalUnit","nalContainer","nalStart","nalLength","setFloat64","writeMetaDataBoolean","dtsDelta","len","frameTime","isAudioFrame","isVideoFrame","isMetaData","isKeyFrame","46","Transmuxer","./flv-header","./flv-tag","./transmuxer","47","TagList","list","metaDataTag","48","VideoSegmentStream","AudioSegmentStream","collectTimelineInfo","extraDataTag","m2ts","sps","pps","oldExtraData","adtsFrames","videoKeyFrames","currentFrame","adtsFrame","lastMetaPts","writeMetaDataTags","onVideoKeyFrame","h264Frame","nalUnits","finishFrame","newMetadata","metaTag","extraTag","currentNal","packetStream","elementaryStream","videoTimestampRolloverStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","h264Stream","videoSegmentStream","audioSegmentStream","captionStream","coalesceStream","MetadataStream","TransportPacketStream","TransportParseStream","ElementaryStream","CaptionStream","resetCaptions","../codecs/adts.js","../codecs/h264","../m2ts/m2ts.js","./coalesce-stream.js","./tag-list.js","49","USER_DATA_REGISTERED_ITU_T_T35","RBSP_TRAILING_BITS","parseSei","payloadType","payloadSize","payload","parseUserData","sei","parseCaptionPackets","userData","ccData","captionPackets_","ccStreams_","Cea608Stream","cc","latestDts_","ignoreNextEqualDts_","elem","idx","presortIndex","dispatchCea608Packet","activeCea608Channel_","ccStream","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION","92","94","95","96","123","124","125","126","127","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","getCharFromCode","BOTTOM_ROW","ROWS","createDisplayBuffer","field","dataChannel","field_","dataChannel_","name_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","topRow_","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","row_","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","row","formatting_","isColorPAC","isNormalChar","content","BASE_","EXT_","CONTROL_","OFFSET_","format","popOn","baseRow","rollUp","paintOn","../utils/stream","50","m2tsStreamTypes","MP2T_PACKET_LENGTH","SYNC_BYTE","bytesInBuffer","parsePsi","packetsWaitingForPmt","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","pmt","timed-metadata","streamType","processPes_","STREAM_TYPES","h264","adts","timedMetadata","parsePes","packetLength","dataAlignmentIndicator","flushStream","forceFlush","packetData","packetFlushable","baseMediaDecodeTime","codec","PAT_PID","./caption-stream","./metadata-stream","./stream-types","./stream-types.js","./timestamp-rollover-stream","51","parseUtf8","tagParsers","TXXX","description","WXXX","PRIV","privateData","tagSize","bufferSize","console","52","53","54","55","generator","./mp4-generator","56","dinf","esds","ftyp","mdat","mfhd","minf","moof","moov","mvex","mvhd","mdia","hdlr","sdtp","stbl","stsd","trex","trun","types","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","UINT32_MAX","avc1","avcC","btrt","dref","mp4a","smhd","stco","stsc","stsz","stts","styp","vmhd","sequenceNumber","trackFragments","samples","dependsOn","isDependedOn","videoSample","audioSample","sequenceParameterSets","pictureParameterSets","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","dataOffset","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","audioTrun","videoTrun","trunHeader","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","sample","isLeading","hasRedundancy","paddingValue","isNonSyncSample","degradationPriority","fileType","movie","57","58","createDefaultSample","isLikelyAacData","collectDtsInfo","clearDtsInfo","calculateTrackBaseMediaDecodeTime","arrayEquals","sumFrameByteLengths","mp4","clock","AUDIO_PROPERTIES","VIDEO_PROPERTIES","ONE_SECOND_IN_TS","currentObj","sum","earliestAllowedDts","audioAppendStartTs","videoBaseMediaDecodeTime","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","trimAdtsFramesByEarliestDts_","prefixWithSilence_","generateSampleTable_","concatenateFrameData_","baseMediaDecodeTimeTs","silentFrame","frameDuration","audioGapDuration","audioFillFrameCount","audioFillDuration","audioTsToVideoTs","videoTsToAudioTs","minSegmentDts","minSegmentPts","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","gops","resetStream_","groupNalsIntoFrames_","groupFramesIntoGops_","getGopForFusion_","unshift","nalCount","extendFirstKeyFrame_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","concatenateNalData_","dtsDistance","nearestGopObj","currentGop","currentGopObj","halfSecond","allowableOverlap","nearestDistance","baseDataOffset","nalsByteLength","numberOfNals","totalByteLength","alignIndex","gopIndex","alignEndIndex","matchFound","trimIndex","total","alignGopsWith","newGopsToAlignWith","maxSegmentPts","maxSegmentDts","timeSinceStartOfTimeline","remux","remuxTracks","pendingBoxes","pendingBytes","emittedTracks","info","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","aacStream","headOfPipeline","setupTsPipeline","setBaseMediaDecodeTime","isAac","../aac","../data/silence","../utils/clock","./mp4-generator.js","59","probe","aac","PES_TIMESCALE","parsePsi_","parseAudioPes_","pesType","endLoop","parseVideoPes_","firstKeyFrame","adjustTimestamp_","baseTimestamp","audioBaseTimestamp","ptsTime","videoBaseTimestamp","inspectAac_","audioCount","sampleRate","audioTimescale","inspectTs_","isAacData","../aac/probe.js","../m2ts/probe.js","../m2ts/stream-types.js","../m2ts/timestamp-rollover-stream.js","60","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","seconds","61","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBytes","bits","valu","skipLeadingZeros","leadingZeroCount","clz","62","63","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","opts","alwaysNormalize","basePartsForNormalise","parseURL","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","pathParts","builtParts","params","query","baseURLPath","newPath","lastIndexOf","parts","64","deprecateOldCue","durationOfVideo","dur","addTextTrackData","sourceHandler","captionArray","metadataArray","inbandTextTracks_","videoDuration","metadataTrack_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","nextTime","65","isAudioCodec","isVideoCodec","parseContentType","parameters","parameter","pair","_name","orig","profile","avcLevel","profileHex","avcLevelHex","66","createTextTracksIfNecessary","sourceBuffer","player_","textTracks","getTrackById","67","flashConstants","TIME_BETWEEN_CHUNKS","BYTES_PER_CHUNK","68","_globalDocument","_globalDocument2","_flashSourceBuffer","_flashSourceBuffer2","_flashConstants","_flashConstants2","_codecUtils","FlashMediaSource","sourceBuffers","swfObj","getElementById","swfId","vjs_load","parsedType","vjs_endOfStream","vjs_getProperty","vjs_setProperty","./codec-utils","./flash-constants","./flash-source-buffer","global/document","69","_muxJsLibFlv","_muxJsLibFlv2","_removeCuesFromTrack","_removeCuesFromTrack2","_createTextTracksIfNecessary","_createTextTracksIfNecessary2","_addTextTrackData","_flashTransmuxerWorker","_flashTransmuxerWorker2","resolveFlashTransmuxWorker","scheduleTick","func","generateRandomString","toDecimalPlaces","places","FlashSourceBuffer","encodedHeader","chunkSize_","buffer_","bufferSize_","basePtsOffset_","audioBufferEnd_","videoBufferEnd_","btoa","safePlayerId","flashEncodedHeaderName_","flashEncodedDataName_","vjs_appendChunkReady","transmuxer_","action","receiveBuffer_","vjs_discontinuity","onHlsReset","onHlsReset_","vjs_abort","flvBytes","convertTagsToData_","processBuffer_","chunkSize","binary","b64str","segmentByteLength","videoTargetPts","firstVideoTag","firstAudioTag","currentIndex","currentTag","nextTag","filteredVideoTags","audioTargetPts","filteredAudioTags","getOrderedTags_","fudgeFactor","adjustedTime","vjs_adjustCurrentTime","./add-text-track-data","./create-text-tracks-if-necessary","./flash-transmuxer-worker","./remove-cues-from-track","mux.js/lib/flv","70","wireTransmuxerEvents","transmuxer","MessageHandlers","FlashTransmuxerWorker","messageHandlers","71","_virtualSourceBuffer","_virtualSourceBuffer2","HtmlMediaSource","nativeMediaSource_","activeSourceBuffers_","updateActiveSourceBuffers_","appendAudioInitSegment_","audioDisabled_","audioCodec_","disableCombined","disableAudioOnly","videoCodec_","onPlayerMediachange_","onHlsSegmentTimeMapping_","timeMapping_","eventName","querySelector","url_","sourcebuffer","el_","createRealSourceBuffers_","./virtual-source-buffer","72","removeCuesFromTrack","removeCue","73","_muxJsLibMp4","_muxJsLibMp42","initArray","typedArray","gopInfo","appendStart","TransmuxerWorker","mux.js/lib/mp4","74","_flashMediaSource","_flashMediaSource2","_htmlMediaSource","_htmlMediaSource2","urlCount","defaults","mediaSources","open","msObjectURL","supportsNativeMediaSources","getTech","URL","createObjectURL","objectUrlPrefix","./flash-media-source","./html-media-source","75","_transmuxerWorker","_transmuxerWorker2","resolveTransmuxWorker","makeWrappedSourceBuffer","wrapper","realBuffer_","_loop","gopsSafeToAlignWith","currentTimePts","updateGopBuffer","removeGopBuffer","updatedBuffer","VirtualSourceBuffer","pendingBuffers_","bufferUpdating_","codecs_","gopBuffer_","safeAppend_","data_","done_","appendGopInfo_","videoBuffer_","audioBuffer_","appendWindowStart","videoBuffered","audioBuffered","processPendingSegments_","codecProperty","shouldTrigger","every","sortedSegments","segmentObj","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","originalError","./transmuxer-worker","76","bundleFn","cache","webpack","webpackBootstrapFn","entryModule","bundleWithBrowserify","fn","fnModuleKey","cacheKeys","cacheKey","cacheExports","fnModuleCache","entryKey","entryCache","bundleWithWebpack","fnModuleId","sourceStrings","devMode","sKey","modulesString","fnModuleExports","fnSourceString","mappedSourceStrings","blob","Blob","webkitURL","mozURL","msURL","workerUrl","worker","Worker","objectURL","77","_xhr","_xhr2","_binUtils2","_videojsContribMediaSources","_masterPlaylistController","_renditionMixin","_renditionMixin2","_playbackWatcher","_playbackWatcher2","_reloadSourceOnError","_reloadSourceOnError2","_playlistSelectorsJs","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","INITIAL_BANDWIDTH","handleHlsMediaChange","qualityLevels","selectedIndex","selectedIndex_","handleHlsLoadedMetadata","addQualityLevel","canPlaySource","supportsNativeHls","isSupported","canPlay","canItPlay","canPlayType","Component","getComponent","HlsHandler","_Component","options_","playerId","_player","source_","ignoreNextSeekingEvent_","setOptions_","overrideNative","featuresNativeVideoTracks","featuresNativeAudioTracks","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","contains","pauseLoading","option","_src","playbackWatcher_","players","invBandwidth","invThroughput","systemBitrate","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","setupQualityLevels_","qualityLevels_","HlsSourceHandler","canHandleSource","srcObj","handleSource","mpegurlRE","flashTech","registerSourceHandler","use","registerComponent","m3u8","registerPlugin","plugin","./master-playlist-controller","./playback-watcher","./playlist-selectors.js","./reload-source-on-error","./rendition-mixin","./xhr","videojs-contrib-media-sources","arg","scrollSetting","up","findScrollSetting","isValidPercentValue","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","isFunction","string","alert","confirm","prompt","parseUTCTiming","url_toolkit__WEBPACK_IMPORTED_MODULE_0__","url_toolkit__WEBPACK_IMPORTED_MODULE_0___default","global_window__WEBPACK_IMPORTED_MODULE_1__","global_window__WEBPACK_IMPORTED_MODULE_1___default","formatAudioPlaylist","_attributes","periodIndex","contentProtection","formatVttPlaylist","_attributes2","baseUrl","sourceDuration","organizeAudioPlaylists","role","organizeVttPlaylists","formatVideoPlaylist","_ref3","_attributes3","toM3u8","dashPlaylists","_dashPlaylists$0$attr","_dashPlaylists$0$attr2","minimumUpdatePeriod","videoOnly","_ref4","contentType","audioOnly","_ref5","vttOnly","_ref6","videoPlaylists","audioPlaylists","vttPlaylists","subs","_typeof","isObject","merge","_len","objects","relativeUrl","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","startRange","endRange","getLiveRValue","NOW","clientOffset","availabilityStartTime","_attributes$timescale","_attributes$start","_attributes$minimumUp","periodStartWC","periodEndWC","periodDuration","parseByTimeline","segmentTimeline","_attributes$type","_attributes$minimumUp2","_attributes$media","_attributes$timescale2","_attributes$startNumb","startNumber","sIndex","S","repeat","segmentTime","nextS","flatten","lists","from","segmentRange","static","dynamic","_attributes$timeShift","timeShiftBufferDepth","segmentCount","availableStart","availableEnd","toSegments","_attributes$timescale3","parseByDuration","_attributes$timescale4","_segmentRange$type","identifierPattern","identifierReplacement","identifier","constructTemplateUrl","parseTemplateInfo","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","_attributes$initializ","initialization","sourceURL","mapSegment","Time","INVALID_NUMBER_OF_PERIOD","DASH_EMPTY_MANIFEST","DASH_INVALID_XML","NO_BASE_URL","MISSING_SEGMENT_INFORMATION","SEGMENT_TIME_UNSPECIFIED","UNSUPPORTED_UTC_TIMING_SCHEME","SegmentURLToSegmentObject","segmentUrl","mediaRange","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentUrlMap","segmentUrlObject","segmentTimeInfo","segmentsFromBase","_attributes$indexRang","indexRange","generateSegments","segmentAttributes","segmentsFn","template","base","_segmentAttributes","_segmentAttributes$ti","toPlaylists","findChildren","getContent","parseDuration","SECONDS_IN_YEAR","SECONDS_IN_MONTH","SECONDS_IN_DAY","SECONDS_IN_HOUR","SECONDS_IN_MIN","durationRegex","_match$slice","year","month","day","hour","minute","second","parseDate","dateRegex","parsers","mediaPresentationDuration","parsedValue","parseFn","decodeB64ToUint8Array","b64Text","decodedString","atob","keySystemsMap","urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b","urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed","urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95","urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","inheritBaseUrls","adaptationSetAttributes","adaptationSetBaseUrls","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","generateKeySystemInformation","contentProtectionNodes","acc","keySystem","schemeIdUri","psshNode","pssh","psshBuffer","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","roleAttributes","toAdaptationSets","mpdAttributes","mpdBaseUrls","period","periodAtt","adaptationSets","inheritAttributes","mpd","_options$manifestUri","manifestUri","_options$NOW","_options$clientOffset","periods","stringToMpdXml","manifestString","DOMParser","xml","parseFromString","documentElement","getElementsByTagName","parseUTCTimingScheme","UTCTimingNode","SafeParseTuple","reviver","json","g","eval","_interopDefault","ex","tsml","safeParseTuple","vtt","USER_AGENT","webkitVersionMap","appleWebkitVersion","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_OLD_ANDROID","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IS_IE8","IS_SAFARI","IS_ANY_SAFARI","TOUCH_ENABLED","isReal","maxTouchPoints","DocumentTouch","BACKGROUND_SIZE_SUPPORTED","freeze","classCallCheck","inherits","possibleConstructorReturn","taggedTemplateLiteralLoose","strings","raw","each","accum","isPlain","level","history","logByType","lvl","levels","lvlRegExp","toUpperCase","all","clear","disable","_len2","_key2","_len3","_key3","_len4","_key4","log$1","computedStyle","cs","currentStyle","_templateObject","isNonBlankString","throwIfWhitespace","classRegExp","isEl","nodeType","isInFrame","createQuerier","selector","ctx","createEl","getOwnPropertyNames","propName","setAttribute","attrName","appendContent","prependTo","child","insertBefore","hasClass","classToCheck","classList","addClass","classToAdd","removeClass","classToRemove","toggleClass","classToToggle","setAttributes","attrValue","removeAttribute","getAttributes","knownBooleans","attrVal","getAttribute","attribute","blockTextSelection","body","focus","onselectstart","unblockTextSelection","rect","findPosition","docEl","clientLeft","scrollLeft","pageXOffset","clientTop","scrollTop","pageYOffset","getPointerPosition","boxW","boxH","boxY","boxX","pageY","pageX","changedTouches","isTextNode","emptyEl","normalizeContent","insertContent","isSingleLeftClick","button","buttons","$","$$","Dom","_guid","newGUID","elData","elIdAttr","getData","hasData","removeData","_cleanUpEvents","handlers","dispatcher","detachEvent","_handleMultipleEvents","fixEvent","returnTrue","returnFalse","isPropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","clientY","which","keyCode","_supportsPassive","passiveEvents","guid","hash","handlersCopy","passive","attachEvent","removeType","elemData","ownerDocument","targetData","Events","_windowLoaded","videojs$2","autoSetup","vids","audios","divs","mediaEls","_i2","_e2","_i3","_e3","mediaEl","autoSetupTimeout","wait","vjs","createStyleElement","setTextContent","styleSheet","cssText","uid","bound","throttle","last","throttled","debounce","immediate","_later","allowedEvents_","ael","dispatchEvent","isEvented","eventBusEl_","isValidEventType","validateTarget","nodeName","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","listen","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_normalizeListenArgs2","largs","targetOrType","typeOrListener","evented","eventBusKey","StatefulMixin","setState","stateUpdates","changes","to","stateful","defaultState","handleStateChanged","toTitleCase","charAt","titleCaseEquals","str1","str2","id_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","localize","tokens","defaultValue","languages","primaryCode","primaryLang","localizedString","contentEl","contentEl_","children","getChildById","getChild","addChild","componentName","componentClassName","componentClass","ComponentClass","refNode","childFound","compEl","parentOptions","handleAdd","newChild","workingChildren","Tech","wchild","isTech","buildCSSClass","sync","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","emitTapEvents","touchStart","firstTouch","tapMovementThreshold","touchTimeThreshold","couldBeTap","touches","xdiff","ydiff","touchDistance","sqrt","noTap","touchTime","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","disposeFn","interval","intervalId","requestAnimationFrame","supportsRaf_","cancelAnimationFrame","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","playerNames","pname","Boolean","rangeCheck","fnName","maxIndex","getRange","valueIndex","rangeIndex","createTimeRangesObj","bufferedPercent","bufferedDuration","FullscreenApi","apiMap","specApi","browserApi","MediaError","defaultMessages","errorTypes","errNum","isPromise","silencePromise","trackToJson_","textTracksToJson","trackEls","trackObjs","trackEl","jsonToTextTracks","addedTrack","textTrackConverter","MODAL_CLASS_NAME","ESC","ModalDialog","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","descEl_","tabIndex","aria-describedby","aria-hidden","aria-label","previouslyActiveEl_","handleKeyPress","close","fillAlways","fill","wasPlaying_","pauseOnOpen","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","closeButton","content_","activeEl","activeElement","playerEl","handleKeyDown","focusableEls","focusableEls_","focusIndex","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","tracks_","removeTrack","rtrack","change","addtrack","removetrack","disableOthers","AudioTrackList","_TrackList","_prop","changing_","disableOthers$1","selected","VideoTrackList","TextTrackList","nonLanguageTextTrackKind","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","TextTrackMode","hidden","showing","Track","trackProps","parseUrl","addToBody","host","protocol","innerHTML","details","getAbsoluteURL","getFileExtension","splitPathRe","isCrossOrigin","winLoc","urlInfo","srcProtocol","crossOrigin","Url","parseCues","srcContent","groupCollapsed","groupEnd","loadTrack","cors","responseBody","loaded_","TextTrack","_Track","srclang","default_","tt","activeCues_","activeCues","changed","timeupdateHandler","newMode","ct","active","originalCue","originalCue_","_removeCue","cuechange","newEnabled","VideoTrack","newSelected","NONE","LOADING","LOADED","ERROR","HTMLTrackElement","NORMAL","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","createTrackHelper","names","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","removeRemoteTextTrack","cleanupAutoTextTracks","played","trackListChanges","addWebVttScript_","script","onload","onerror","remoteTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","createRemoteTextTrack","_this7","manualCleanup","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","setPoster","playsinline","setPlaysinline","registerTech","techs_","defaultTechOrder_","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","handler","sourceHandlers","can","selectSourceHandler","sh","deferrable","originalFn","sourceHandler_","nativeSourceHandler","disposeSourceHandler","middlewares","middlewareInstances","TERMINATOR","middleware","setSourceHelper","setTech","mw","get$1","reduceRight","middlewareIterator","set$1","mediate","callMethod","middlewareValue","terminated","executeRight","allowedGetters","allowedSetters","allowedMediators","mws","clearCacheForPlayer","getOrCreateFactory","mwFactory","_mws$i","mwf","mwi","lastRun","mwrest","MimetypesKind","opus","ogv","mov","m4v","mkv","mp3","oga","getMimetype","ext","mimetype","findMimetype","cache_","matchingSources","filterSource","newsrc","srcobj","fixSource","MediaLoader","techOrder","techName","loadTech_","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleFocus","handleBlur","PosterImage","_ClickableComponent","fallbackImg_","setSrc","backgroundImage","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","opacity","tryUpdateStyle","TextTrackDisplay","toggleDisplay","preselectTrack","modes","userPref","selectedLanguage","firstDesc","firstCaptions","preferredTrack","aria-atomic","clearDisplay","descriptionsTrack","captionsSubtitlesTrack","updateForTrack","textTrackSettings","overrides","getValues","textOpacity","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontFamily","fontVariant","LoadingSpinner","isAudio","playerType","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","cb","playToggle","playFocus","CloseButton","PlayToggle","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","guide","gm","gh","implementation","setFormatTime","customImplementation","resetFormatTime","formatTime","TimeDisplay","throttledUpdateContent","updateContent","plainName","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","Slider","bar","barName","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","toFixed","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","percentify","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","PlayProgressBar","rafId_","timeTooltip","MouseTimeDisplay","STEP_SECONDS","UPDATE_REFRESH_INTERVAL","SeekBar","_Slider","setEventHandlers_","updateInterval","update_","getCurrentTime_","videoWasPlaying","newTime","mouseTimeDisplay","handleAction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","FullscreenToggle","handleFullscreenChange","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","volume","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","soundOff","VolumePanel","inline","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","Menu","menuButton_","menuButton","focusedChild_","addItem","unpressButton","contentElType","append","stepChild","item","haveTitle","MenuButton","buttonClass","handleSubmenuKeyPress","menu","createMenu","buttonPressed_","items","hideThreshold_","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","TrackButton","_MenuButton","updateHandler","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","kinds","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","AudioTrackButton","PlaybackRateMenuItem","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","LOCAL_STORAGE_KEY","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","getSelectedOptionValue","setSelectedOption","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","setValues","localStorage","getItem","setItem","removeItem","ttDisplay","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unobserve","disconnect","resizeObserver","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","Element","getDescriptor","priority","getInnerHTMLDescriptor","HTMLMediaElement","firstSourceWatch","resetSourceWatch_","innerDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","getSrcDescriptor","setupSourceset","resetSourceset_","srcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$2","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","elTracks","techTracks","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","tagAttributes","techId","class","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","performance","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","mp4RE","patchCanPlayType","unpatchCanPlayType","_templateObject$1","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","getTagSettings","closest","isPosterFromTech_","queuedCallbacks_","userActive_","languagesToLower","name$$1","languages_","poster_","controls_","scrubbing_","lastPlaybackRate","defaultPlaybackRate","playerOptionsCopy","plugins","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleFullscreenChange_","handleStageClick_","changingSrc_","playWaitingForReady_","playOnLoadstart_","styleEl_","playerElIngest_","divEmbed","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","fluid","aspectRatio","links","linkEl","_dimension","privDimension","updateStyleEl_","parsedVal","fluid_","ratio","aspectRatio_","idClass","videoWidth","videoHeight","ratioParts","ratioMultiplier","width_","height_","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","loop","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","hasStarted","manualAutoplay_","previouslyMuted","promise","updateSourceCaches_","sourceElSources","sourceEls","matchingSourceEls","updateCache","queued","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userWasActive","PromiseClass","Promise","play_","_this8","isScrubbing","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fsApi","fullscreenchange","documentFullscreenChange","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","fullWindowOnEscKey","selectSource","_this9","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","foundSourceAndTech","flip","finder","sourceOrder","_this10","middlewareSource","src_","notSupportedMessage","_this11","sourceTech","currentSources","currentSource","currentType","techAutoplay","newPoster","usingNativeControls_","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","inactivityTimeout","isAudio_","_ref3$track","toJSON","createModal","_this12","modal","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","userLanguage","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createBasicPlugin","basicPluginWrapper","createPluginFactory","PluginSubClass","getEventHash","Plugin","VERSION","isBasic","deregisterPlugin","getPlugins","getPluginVersion","usingPlugin","hasPlugin","super_","extendFn","subClassMethods","HTMLVideoElement","normalizeId","getPlayer","hooks","hookFunction","PlayerComponent","hooks_","hookOnce","removeHook","getPlayers","nId","_tag","getAllPlayers","comp","writeable","addLanguage","_mergeOptions","dom","pauseOnExit","isCallable","forEachArray","forEachString","forEachObject","thisArg","customEventName","required","events","globalOptions","progressControl","fullscreenToggle","volumeMenuButton","globalEvents","reseted","beforeDestroy","$refs","$emit","__ob__","$nextTick","watch","deep","install","esModule","ref","currentScript","_config_yarn_global_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_config_yarn_global_node_modules_css_loader_index_js_ref_6_oneOf_1_1_config_yarn_global_node_modules_vue_loader_lib_loaders_stylePostLoader_js_config_yarn_global_node_modules_cache_loader_dist_cjs_js_ref_0_0_config_yarn_global_node_modules_vue_loader_lib_index_js_vue_loader_options_Live_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_config_yarn_global_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_config_yarn_global_node_modules_css_loader_index_js_ref_6_oneOf_1_1_config_yarn_global_node_modules_vue_loader_lib_loaders_stylePostLoader_js_config_yarn_global_node_modules_cache_loader_dist_cjs_js_ref_0_0_config_yarn_global_node_modules_vue_loader_lib_index_js_vue_loader_options_Live_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","parseHeaders","xtend","isEmpty","initParams","createXHR","_createXHR","called","readystatechange","loadFunc","getBody","getXml","isJson","errorFunc","evt","timeoutTimer","failureResponse","useXDR","rawRequest","getAllResponseHeaders","XDomainRequest","XMLHttpRequest","onprogress","onabort","ontimeout","username","password","setRequestHeader","beforeSend","send","responseXML","firefoxBugTakenEffect","global_window__WEBPACK_IMPORTED_MODULE_0__","global_window__WEBPACK_IMPORTED_MODULE_0___default","global_document__WEBPACK_IMPORTED_MODULE_1__","global_document__WEBPACK_IMPORTED_MODULE_1___default","tsml__WEBPACK_IMPORTED_MODULE_2__","tsml__WEBPACK_IMPORTED_MODULE_2___default","xhr__WEBPACK_IMPORTED_MODULE_3__","xhr__WEBPACK_IMPORTED_MODULE_3___default","videojs_vtt_js__WEBPACK_IMPORTED_MODULE_4__","videojs_vtt_js__WEBPACK_IMPORTED_MODULE_4___default","safe_json_parse_tuple__WEBPACK_IMPORTED_MODULE_5__","safe_json_parse_tuple__WEBPACK_IMPORTED_MODULE_5___default","url_toolkit__WEBPACK_IMPORTED_MODULE_6__","url_toolkit__WEBPACK_IMPORTED_MODULE_6___default","m3u8_parser__WEBPACK_IMPORTED_MODULE_7__","mpd_parser__WEBPACK_IMPORTED_MODULE_8__","mux_js_lib_mp4_probe__WEBPACK_IMPORTED_MODULE_9__","mux_js_lib_mp4_probe__WEBPACK_IMPORTED_MODULE_9___default","mux_js_lib_tools_ts_inspector_js__WEBPACK_IMPORTED_MODULE_10__","mux_js_lib_tools_ts_inspector_js__WEBPACK_IMPORTED_MODULE_10___default","aes_decrypter__WEBPACK_IMPORTED_MODULE_11__","overrideNativeAudioTracks","overrideNativeVideoTracks","overrideNative_","override","lowerCaseType","proxyNativeTracksForType_","handleTechDoubleClick_","catch","inAllowedEls","videojs$1","style$1","classCallCheck$1","createClass$1","get$2","get$$1","inherits$1","possibleConstructorReturn$1","slicedToArray$1","mergeOptions$1","EventTarget$1","log$2","forEachMediaGroup","xhr$$1","videojsXHR","mergeOptions$1$1","responseHeaders","timeRangesToArray","timeRangesList","TARGET","SCRIPT_TYPE","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","shimWorker","filename","forceFallback","objURL","createSourceObject","wrapTerminate","selfShim","isThisThread","testWorker","testArray","revokeObjectURL","getBlob","term","TransmuxWorker","document$$1","commonjsGlobal","window_1","mp4Generator","numSameDts_","streamTypes","_MetadataStream","timestampRolloverStream","_TransportPacketStream","_TransportParseStream","_ElementaryStream","TimestampRolloverStream$1","stream$$1","_AdtsStream","m2ts_1","_H264Stream","_NalByteStream","expGolomb","_AacStream","silence","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","ONE_SECOND_IN_TS$1","keepOriginalTimestamps","classCallCheck$$1","createClass$$1","transmuxerWorker","URL$1","EventTarget$1$1","mergeOptions$2","updateMaster$1","oldMaster","newMaster","playlistUpdate","_playlistUpdate","DashPlaylistLoader","srcUrlOrPlaylist","refreshXml_","refreshMedia_","masterXml_","clientOffset_","phonyUri","_phonyUri","date","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","utcTiming","serverTime","parseMasterXml","updatedMaster","logger","sourceBufferEmitter","createSourceBuffer_","start_","started_","Config","mapLegacyAvcCodecs","audioProfileFromDefault","audioGroupId","audioType","mimeTypesForPlaylist","duration$$1","seekable$$1","segmentInfoString","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","sourceType_","sourceType","state_","newState","set$$1","sourceBufferEmitter_","oldId","_mediaSourceInfo","timeUntilRebuffer$$1","_segment$cueOutCont$s","_segment$cueOutCont$s2","tsprobe","segmentStart","Decrypter$1","inherits$$1","possibleConstructorReturn$$1","_length","AsyncStream$$1","decrypt$$1","Decrypter$$1","decrypterWorker","_settings$segmentLoad","_settings$segmentLoad2","byGroupId","byResolvedUri","_settings$master","_settings$mediaTypes$","groupPlaylists","matchingPlaylists","_settings$mediaTypes$2","_settings$mediaTypes$3","excludeUnsupportedVariants_","configureLoaderMimeTypes_","version$1","Hls$1","simpleTypeFromSourceType","dashRE","emeKeySystems","keySystemOptions","videoPlaylist","audioPlaylist","keySystemContentTypes","audioContentType","videoContentType","setupEmeOptions","eme","sourceOptions","keySystems","supportsNativeDash","supportsTypeNatively","Component$1","vhs","dash","currentTech","playerDimensions","_videojs$mergeOptions","supportedType","canUseMsePlayback"],"mappings":"CAAA,SAAAA,EAAAC,GACA,kBAAAC,SAAA,kBAAAC,OACAA,OAAAD,QAAAD,IACA,oBAAAG,eAAAC,IACAD,UAAAH,GACA,kBAAAC,QACAA,QAAA,WAAAD,IAEAD,EAAA,WAAAC,KARA,CASC,qBAAAK,UAAAC,KAAA,WACD,mBCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAR,QAGA,IAAAC,EAAAK,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAV,YAUA,OANAW,EAAAH,GAAAI,KAAAX,EAAAD,QAAAC,IAAAD,QAAAO,GAGAN,EAAAS,GAAA,EAGAT,EAAAD,QA0DA,OArDAO,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAf,EAAAgB,EAAAC,GACAV,EAAAW,EAAAlB,EAAAgB,IACAG,OAAAC,eAAApB,EAAAgB,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAAvB,GACA,qBAAAwB,eAAAC,aACAN,OAAAC,eAAApB,EAAAwB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAApB,EAAA,cAAiD0B,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,kBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAjC,GACA,IAAAgB,EAAAhB,KAAA4B,WACA,WAA2B,OAAA5B,EAAA,YAC3B,WAAiC,OAAAA,GAEjC,OADAM,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,GAIAhC,IAAAiC,EAAA,iDChEA,IAAAC,EAAAtB,OAAAY,QAAA,WACA,SAAAW,KACA,gBAAAxB,GACA,OAAAyB,UAAAC,OACA,UAAAC,MAAA,kDAGA,OADAH,EAAAL,UAAAnB,EACA,IAAAwB,GAPA,GAeA,SAAAI,EAAAC,EAAAC,GACA3C,KAAAW,KAAA,eACAX,KAAA4C,KAAAF,EAAAE,KACA5C,KAAA2C,WAAAD,EAAAC,QAkBA,SAAAE,EAAAC,GAEA,SAAAC,EAAAC,EAAAxC,EAAA2B,EAAAc,GACA,eAAAD,GAAA,MAAAxC,IAAA,EAAA2B,IAAA,EAAAc,GAAA,IAGA,IAAAzC,EAAAsC,EAAAI,MAAA,oCACA,OAAA1C,EAIAA,EAAA,GAEAuC,EAAAvC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAA2C,QAAA,QAAA3C,EAAA,IACGA,EAAA,MAGHuC,EAAAvC,EAAA,GAAAA,EAAA,KAAAA,EAAA,IAGAuC,EAAA,EAAAvC,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAZA,KAkBA,SAAA4C,IACApD,KAAAqD,OAAAjB,EAAA,MAwDA,SAAAkB,EAAAR,EAAAS,EAAAC,EAAAC,GACA,IAAAC,EAAAD,EAAAX,EAAAa,MAAAF,IAAAX,GACA,QAAA1C,KAAAsD,EACA,qBAAAA,EAAAtD,GAAA,CAGA,IAAAwD,EAAAF,EAAAtD,GAAAuD,MAAAH,GACA,OAAAI,EAAArB,OAAA,CAGA,IAAAsB,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAL,EAAAM,EAAAC,KAIA,SAAAC,EAAAjB,EAAAkB,EAAAC,GAEA,IAAAC,EAAApB,EAEA,SAAAqB,IACA,IAAAC,EAAAvB,EAAAC,GACA,UAAAsB,EACA,UAAA3B,IAAA4B,OAAAC,aACA,wBAAAJ,GAIA,OADApB,IAAAK,QAAA,qBACAiB,EAIA,SAAAG,EAAAzB,EAAAkB,GACA,IAAAQ,EAAA,IAAApB,EAEAE,EAAAR,EAAA,SAAAe,EAAAC,GACA,OAAAD,GACA,aAEA,QAAAzD,EAAA6D,EAAA1B,OAAA,EAA2CnC,GAAA,EAAQA,IACnD,GAAA6D,EAAA7D,GAAAqE,KAAAX,EAAA,CACAU,EAAAE,IAAAb,EAAAI,EAAA7D,GAAAuE,QACA,MAGA,MACA,eACAH,EAAAI,IAAAf,EAAAC,GAAA,YACA,MACA,WACA,IAAAe,EAAAf,EAAAH,MAAA,KACAmB,EAAAD,EAAA,GACAL,EAAAO,QAAAlB,EAAAiB,GACAN,EAAAQ,QAAAnB,EAAAiB,IAAAN,EAAAE,IAAA,kBACAF,EAAAI,IAAAf,EAAAiB,GAAA,SACA,IAAAD,EAAAtC,QACAiC,EAAAI,IAAA,YAAAC,EAAA,6BAEA,MACA,eACAA,EAAAf,EAAAH,MAAA,KACAa,EAAAQ,QAAAnB,EAAAgB,EAAA,IACA,IAAAA,EAAAtC,QACAiC,EAAAI,IAAA,gBAAAC,EAAA,6BAEA,MACA,WACAL,EAAAQ,QAAAnB,EAAAC,GACA,MACA,YACAU,EAAAI,IAAAf,EAAAC,GAAA,wCACA,QAEK,UAGLE,EAAAW,OAAAH,EAAAvD,IAAA,eACA+C,EAAAiB,SAAAT,EAAAvD,IAAA,eACA+C,EAAAkB,KAAAV,EAAAvD,IAAA,eACA+C,EAAAmB,UAAAX,EAAAvD,IAAA,qBACA+C,EAAAoB,YAAAZ,EAAAvD,IAAA,kBACA+C,EAAAqB,KAAAb,EAAAvD,IAAA,YACA+C,EAAAsB,MAAAd,EAAAvD,IAAA,kBACA+C,EAAAuB,SAAAf,EAAAvD,IAAA,YACAuE,MAAA,EACAC,KAAA,EACAC,OAAA,GACAC,IAAA,IACAC,MAAA,KACK5B,EAAAsB,OACLtB,EAAA6B,cAAArB,EAAAvD,IAAA,iBACAuE,MAAA,QACAC,KAAA,QACAC,OAAA,SACAC,IAAA,MACAC,MAAA,OACK5B,EAAAsB,OAGL,SAAAQ,IACAhD,IAAAK,QAAA,WAOA,GAHA2C,IACA9B,EAAA+B,UAAA5B,IACA2B,IACA,WAAAhD,EAAAkD,OAAA,KACA,UAAAvD,IAAA4B,OAAAC,aACA,qEACAJ,GAEApB,IAAAkD,OAAA,GACAF,IACA9B,EAAAiC,QAAA9B,IAGA2B,IACAvB,EAAAzB,EAAAkB,GAzNAvB,EAAAT,UAAAI,EAAAI,MAAAR,WACAS,EAAAT,UAAAkE,YAAAzD,EAGAA,EAAA4B,QACA8B,cACAvD,KAAA,EACAD,QAAA,+BAEA2B,cACA1B,KAAA,EACAD,QAAA,0BAmCAS,EAAApB,WAEA0C,IAAA,SAAAb,EAAAC,GACA9D,KAAAiB,IAAA4C,IAAA,KAAAC,IACA9D,KAAAqD,OAAAQ,GAAAC,IAQA7C,IAAA,SAAA4C,EAAAuC,EAAAC,GACA,OAAAA,EACArG,KAAAsG,IAAAzC,GAAA7D,KAAAqD,OAAAQ,GAAAuC,EAAAC,GAEArG,KAAAsG,IAAAzC,GAAA7D,KAAAqD,OAAAQ,GAAAuC,GAGAE,IAAA,SAAAzC,GACA,OAAAA,KAAA7D,KAAAqD,QAGAuB,IAAA,SAAAf,EAAAC,EAAAyC,GACA,QAAA1E,EAAA,EAAmBA,EAAA0E,EAAAhE,SAAcV,EACjC,GAAAiC,IAAAyC,EAAA1E,GAAA,CACA7B,KAAA0E,IAAAb,EAAAC,GACA,QAKAiB,QAAA,SAAAlB,EAAAC,GACA,UAAA0C,KAAA1C,IACA9D,KAAA0E,IAAAb,EAAA4C,SAAA3C,EAAA,MAIAkB,QAAA,SAAAnB,EAAAC,GAEA,SAAAA,EAAAZ,MAAA,8BACAY,EAAA4C,WAAA5C,GACAA,GAAA,GAAAA,GAAA,QACA9D,KAAA0E,IAAAb,EAAAC,IACA,KAkIA,IAAA6C,GACAC,QAAQ,IACRC,OAAO,IACPC,OAAO,IACPC,QAAQ,IACRC,QAAQ,IACRC,SAAS,KAGTC,GACAzG,EAAA,OACAL,EAAA,IACA+G,EAAA,IACAC,EAAA,IACAC,KAAA,OACAC,GAAA,KACAxD,EAAA,OACAyD,KAAA,QAGAC,GACA1D,EAAA,QACAyD,KAAA,QAGAE,GACAH,GAAA,QAIA,SAAAI,EAAAC,EAAA7E,GACA,SAAA8E,IAEA,IAAA9E,EACA,YAIA,SAAA+E,EAAAC,GAEA,OADAhF,IAAAkD,OAAA8B,EAAAvF,QACAuF,EAGA,IAAAtH,EAAAsC,EAAAI,MAAA,uBAGA,OAAA2E,EAAArH,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAIA,SAAAuH,EAAAC,GACA,OAAArB,EAAAqB,GAEA,SAAAC,EAAA9F,GACA,MAAA3B,EAAA2B,EAAAe,MAAA,8BACAf,IAAAgB,QAAA3C,EAAA,GAAAuH,GAEA,OAAA5F,EAGA,SAAA+F,EAAAC,EAAAC,GACA,OAAAX,EAAAW,EAAAC,YACAZ,EAAAW,EAAAC,aAAAF,EAAAE,UAIA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAvB,EAAAqB,GACA,IAAAE,EACA,YAEA,IAAAL,EAAAT,EAAAe,SAAAJ,cAAAG,GACAL,EAAAC,UAAAI,EACA,IAAA9H,EAAA6G,EAAAe,GAIA,OAHA5H,GAAA6H,IACAJ,EAAAzH,GAAA6H,EAAAG,QAEAP,EAGA,IAEA9G,EAFAsH,EAAAjB,EAAAe,SAAAJ,cAAA,OACAH,EAAAS,EAEAC,KAEA,cAAAvH,EAAAsG,KACA,SAAAtG,EAAA,GA+CA6G,EAAAW,YAAAnB,EAAAe,SAAAK,eAAAd,EAAA3G,SA/CA,CACA,SAAAA,EAAA,IAEAuH,EAAAtG,QACAsG,IAAAtG,OAAA,KAAAjB,EAAA0E,OAAA,GAAA7C,QAAA,UACA0F,EAAAG,MACAb,IAAAc,YAGA,SAEA,IACAC,EADA9E,EAAAvB,EAAAvB,EAAA0E,OAAA,EAAA1E,EAAAiB,OAAA,IAEA,GAAA6B,EAAA,CAEA8E,EAAAvB,EAAAe,SAAAS,4BAAA,YAAA/E,GACA+D,EAAAW,YAAAI,GACA,SAEA,IAAA1I,EAAAc,EAAA4B,MAAA,oDAEA,IAAA1C,EACA,SAIA,GADA0I,EAAAZ,EAAA9H,EAAA,GAAAA,EAAA,KACA0I,EACA,SAIA,IAAAhB,EAAAC,EAAAe,GACA,SAGA1I,EAAA,KACA0I,EAAAE,UAAA5I,EAAA,GAAAwF,OAAA,GAAA7C,QAAA,UAIA0F,EAAAQ,KAAA7I,EAAA,IACA2H,EAAAW,YAAAI,GACAf,EAAAe,EAQA,OAAAN,EAQA,IAAAU,IAAA,gDACA,4DACA,4DACA,4DACA,4DACA,4DACA,gDACA,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,4DACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,kEAEA,SAAAC,EAAAC,GACA,QAAApJ,EAAA,EAAiBA,EAAAkJ,EAAA/G,OAA4BnC,IAAA,CAC7C,IAAAqJ,EAAAH,EAAAlJ,GACA,GAAAoJ,GAAAC,EAAA,IAAAD,GAAAC,EAAA,GACA,SAIA,SAGA,SAAAC,EAAAC,GACA,IAEAH,EAFAI,KACAC,EAAA,GAGA,IAAAF,MAAAG,WACA,YAGA,SAAAC,EAAAH,EAAAV,GACA,QAAA9I,EAAA8I,EAAAY,WAAAvH,OAAA,EAA4CnC,GAAA,EAAQA,IACpDwJ,EAAAP,KAAAH,EAAAY,WAAA1J,IAIA,SAAA4J,EAAAJ,GACA,IAAAA,MAAArH,OACA,YAGA,IAAA2G,EAAAU,EAAAZ,MACAa,EAAAX,EAAAe,aAAAf,EAAAgB,UACA,GAAAL,EAAA,CAGA,IAAArJ,EAAAqJ,EAAA3G,MAAA,cACA,OAAA1C,GACAoJ,EAAArH,OAAA,EACA/B,EAAA,IAEAqJ,EAEA,eAAAX,EAAAT,QACAuB,EAAAJ,GAEAV,EAAAY,YACAC,EAAAH,EAAAV,GACAc,EAAAJ,SAFA,EAMAG,EAAAH,EAAAD,GACA,MAAAE,EAAAG,EAAAJ,GACA,QAAAxJ,EAAA,EAAmBA,EAAAyJ,EAAAtH,OAAiBnC,IAEpC,GADAoJ,EAAAK,EAAAM,WAAA/J,GACAmJ,EAAAC,GACA,YAIA,YAGA,SAAAY,EAAApG,GACA,qBAAAA,EAAAkB,OACAlB,EAAAoB,aAAApB,EAAAkB,MAAA,GAAAlB,EAAAkB,MAAA,KACA,OAAAlB,EAAAkB,KAEA,IAAAlB,EAAAqG,QAAArG,EAAAqG,MAAAC,gBACAtG,EAAAqG,MAAAC,cAAAC,aACA,SAKA,IAHA,IAAAF,EAAArG,EAAAqG,MACAG,EAAAH,EAAAC,cACAG,EAAA,EACArK,EAAA,EAAiBA,EAAAoK,EAAAjI,QAAAiI,EAAApK,KAAAiK,EAAgDjK,IACjE,YAAAoK,EAAApK,GAAAmB,MACAkJ,IAGA,WAAAA,EAGA,SAAAC,KAoBA,SAAAC,EAAAhD,EAAA3D,EAAA4G,GACA,IAAAC,EAAA,aAAArE,KAAAsE,UAAAC,WACAC,EAAA,yBACAC,EAAA,qBAEAJ,IACAG,EAAA,qBACAC,EAAA,gBAGAP,EAAAnK,KAAAP,MACAA,KAAAgE,MAIAhE,KAAA2J,OAAAjC,EAAAC,EAAA3D,EAAA6F,MACA,IAAAqB,GACAF,QACAC,kBACA1F,SAAA,WACAE,KAAA,EACAG,MAAA,EACAuF,IAAA,EACAC,OAAA,EACAC,QAAA,UAGAR,IACAK,EAAAI,YAAA,KAAAtH,EAAAiB,SAAA,gBACA,OAAAjB,EAAAiB,SAAA,cACA,cACAiG,EAAAK,YAAA,aAEAvL,KAAAwL,YAAAN,EAAAlL,KAAA2J,QAKA3J,KAAAyL,IAAA9D,EAAAe,SAAAJ,cAAA,OACA4C,GACAQ,UAAA,WAAA1H,EAAAsB,MAAA,SAAAtB,EAAAsB,MACAqG,KAAAf,EAAAe,KACAC,WAAA,WACArG,SAAA,YAGAsF,IACAK,EAAAW,UAAAnC,EAAA1J,KAAA2J,QACAuB,EAAAI,YAAA,KAAAtH,EAAAiB,SAAA,gBACA,OAAAjB,EAAAiB,SAAA,cACA,cACA6G,kBAAA,aAGA9L,KAAAwL,YAAAN,GAEAlL,KAAAyL,IAAA3C,YAAA9I,KAAA2J,QAKA,IAAAoC,EAAA,EACA,OAAA/H,EAAA6B,eACA,YACAkG,EAAA/H,EAAAuB,SACA,MACA,aACAwG,EAAA/H,EAAAuB,SAAAvB,EAAAqB,KAAA,EACA,MACA,UACA0G,EAAA/H,EAAAuB,SAAAvB,EAAAqB,KACA,MAMA,KAAArB,EAAAiB,SACAjF,KAAAwL,aACA/F,KAAAzF,KAAAgM,YAAAD,EAAA,KACAE,MAAAjM,KAAAgM,YAAAhI,EAAAqB,KAAA,OAMArF,KAAAwL,aACAL,IAAAnL,KAAAgM,YAAAD,EAAA,KACAG,OAAAlM,KAAAgM,YAAAhI,EAAAqB,KAAA,OAIArF,KAAAmM,KAAA,SAAAC,GACApM,KAAAwL,aACAL,IAAAnL,KAAAgM,YAAAI,EAAAjB,IAAA,MACAC,OAAApL,KAAAgM,YAAAI,EAAAhB,OAAA,MACA3F,KAAAzF,KAAAgM,YAAAI,EAAA3G,KAAA,MACAG,MAAA5F,KAAAgM,YAAAI,EAAAxG,MAAA,MACAsG,OAAAlM,KAAAgM,YAAAI,EAAAF,OAAA,MACAD,MAAAjM,KAAAgM,YAAAI,EAAAH,MAAA,SAUA,SAAAI,EAAAC,GACA,IAMAC,EAAAL,EAAAD,EAAAd,EANAN,EAAA,aAAArE,KAAAsE,UAAAC,WAOA,GAAAuB,EAAAb,IAAA,CACAS,EAAAI,EAAAb,IAAAe,aACAP,EAAAK,EAAAb,IAAAgB,YACAtB,EAAAmB,EAAAb,IAAAiB,UAEA,IAAAC,KAAAL,EAAAb,IAAA3B,cAAA6C,IAAA,KACAA,EAAAC,gBAAAD,EAAAC,iBACAN,IAAAb,IAAAoB,wBAKAN,EAAAI,EAAAG,KAAAC,IAAAJ,EAAA,IAAAA,EAAA,GAAAT,QAAA,EAAAI,EAAAJ,OAAAS,EAAApK,QACA,EAGAvC,KAAAyF,KAAA6G,EAAA7G,KACAzF,KAAA4F,MAAA0G,EAAA1G,MACA5F,KAAAmL,IAAAmB,EAAAnB,OACAnL,KAAAkM,OAAAI,EAAAJ,UACAlM,KAAAoL,OAAAkB,EAAAlB,QAAAD,GAAAmB,EAAAJ,WACAlM,KAAAiM,MAAAK,EAAAL,SACAjM,KAAAgN,gBAAAC,IAAAV,IAAAD,EAAAU,WAEAnC,IAAA7K,KAAAgN,aACAhN,KAAAgN,WAAA,IAuHA,SAAAE,EAAAvF,EAAAwF,EAAAC,EAAAC,GAOA,SAAAC,EAAAnG,EAAAoG,GAKA,IAJA,IAAAC,EACAC,EAAA,IAAApB,EAAAlF,GACAuG,EAAA,EAEAtN,EAAA,EAAmBA,EAAAmN,EAAAhL,OAAiBnC,IAAA,CACpC,MAAA+G,EAAAwG,qBAAAP,EAAAG,EAAAnN,KACA+G,EAAAyG,OAAAR,IAAAjG,EAAA0G,YAAAR,GACAlG,EAAAgF,KAAAoB,EAAAnN,IAIA,GAAA+G,EAAAyG,OAAAR,GACA,OAAAjG,EAEA,IAAAjF,EAAAiF,EAAA2G,oBAAAV,GAGAM,EAAAxL,IACAsL,EAAA,IAAAnB,EAAAlF,GACAuG,EAAAxL,GAGAiF,EAAA,IAAAkF,EAAAoB,GAEA,OAAAD,GAAAC,EAGA,IAAAM,EAAA,IAAA1B,EAAAc,GACAnJ,EAAAmJ,EAAAnJ,IACAgK,EAAA5D,EAAApG,GACAuJ,KAGA,GAAAvJ,EAAAoB,YAAA,CACA,IAAAC,EACA,OAAArB,EAAAiB,UACA,OACAsI,GAAA,WACAlI,EAAA,SACA,MACA,SACAkI,GAAA,WACAlI,EAAA,QACA,MACA,SACAkI,GAAA,WACAlI,EAAA,QACA,MAGA,IAAA4I,EAAAF,EAAAf,WACAzH,EAAA0I,EAAAnB,KAAAoB,MAAAF,GACAG,EAAAf,EAAA/H,GAAA4I,EACAG,EAAAb,EAAA,GAKAT,KAAAuB,IAAA9I,GAAA4I,IACA5I,IAAA,OACAA,GAAAuH,KAAAwB,KAAAH,EAAAF,MAOAD,EAAA,IACAzI,GAAA,KAAAvB,EAAAiB,SAAAmI,EAAAlB,OAAAkB,EAAAnB,MACAsB,IAAAgB,WAKAR,EAAA5B,KAAAiC,EAAA7I,OAEG,CAEH,IAAAiJ,EAAAT,EAAAf,WAAAI,EAAAlB,OAAA,IAEA,OAAAlI,EAAAmB,WACA,aACA6I,GAAAQ,EAAA,EACA,MACA,UACAR,GAAAQ,EACA,MAIA,OAAAxK,EAAAiB,UACA,OACAkI,EAAA3B,aACAL,IAAAgC,EAAAnB,YAAAgC,EAAA,OAEA,MACA,SACAb,EAAA3B,aACA/F,KAAA0H,EAAAnB,YAAAgC,EAAA,OAEA,MACA,SACAb,EAAA3B,aACA5F,MAAAuH,EAAAnB,YAAAgC,EAAA,OAEA,MAGAT,GAAA,qBAIAQ,EAAA,IAAA1B,EAAAc,GAGA,IAAAK,EAAAF,EAAAS,EAAAR,GACAJ,EAAAhB,KAAAqB,EAAAiB,kBAAArB,IAGA,SAAAsB,KAnZAhE,EAAA1I,UAAAwJ,YAAA,SAAAN,EAAAO,GAEA,QAAAkD,KADAlD,KAAAzL,KAAAyL,IACAP,EACAA,EAAAjJ,eAAA0M,KACAlD,EAAAmD,MAAAD,GAAAzD,EAAAyD,KAKAjE,EAAA1I,UAAAgK,YAAA,SAAA6C,EAAAC,GACA,WAAAD,EAAA,EAAAA,EAAAC,GA4GAnE,EAAA3I,UAAAI,EAAAsI,EAAA1I,WACA2I,EAAA3I,UAAAkE,YAAAyE,EA6CA0B,EAAArK,UAAAmK,KAAA,SAAAoB,EAAAwB,GAEA,OADAA,OAAA9B,IAAA8B,IAAA/O,KAAAgN,WACAO,GACA,SACAvN,KAAAyF,MAAAsJ,EACA/O,KAAA4F,OAAAmJ,EACA,MACA,SACA/O,KAAAyF,MAAAsJ,EACA/O,KAAA4F,OAAAmJ,EACA,MACA,SACA/O,KAAAmL,KAAA4D,EACA/O,KAAAoL,QAAA2D,EACA,MACA,SACA/O,KAAAmL,KAAA4D,EACA/O,KAAAoL,QAAA2D,EACA,QAKA1C,EAAArK,UAAAgN,SAAA,SAAAC,GACA,OAAAjP,KAAAyF,KAAAwJ,EAAArJ,OACA5F,KAAA4F,MAAAqJ,EAAAxJ,MACAzF,KAAAmL,IAAA8D,EAAA7D,QACApL,KAAAoL,OAAA6D,EAAA9D,KAIAkB,EAAArK,UAAA6L,YAAA,SAAAqB,GACA,QAAA9O,EAAA,EAAiBA,EAAA8O,EAAA3M,OAAkBnC,IACnC,GAAAJ,KAAAgP,SAAAE,EAAA9O,IACA,SAGA,UAIAiM,EAAArK,UAAA4L,OAAA,SAAAuB,GACA,OAAAnP,KAAAmL,KAAAgE,EAAAhE,KACAnL,KAAAoL,QAAA+D,EAAA/D,QACApL,KAAAyF,MAAA0J,EAAA1J,MACAzF,KAAA4F,OAAAuJ,EAAAvJ,OAOAyG,EAAArK,UAAA2L,qBAAA,SAAAwB,EAAA5B,GACA,OAAAA,GACA,SACA,OAAAvN,KAAAyF,KAAA0J,EAAA1J,KACA,SACA,OAAAzF,KAAA4F,MAAAuJ,EAAAvJ,MACA,SACA,OAAA5F,KAAAmL,IAAAgE,EAAAhE,IACA,SACA,OAAAnL,KAAAoL,OAAA+D,EAAA/D,SAMAiB,EAAArK,UAAA8L,oBAAA,SAAAmB,GACA,IAAAG,EAAAtC,KAAAC,IAAA,EAAAD,KAAAuC,IAAArP,KAAA4F,MAAAqJ,EAAArJ,OAAAkH,KAAAC,IAAA/M,KAAAyF,KAAAwJ,EAAAxJ,OACA6J,EAAAxC,KAAAC,IAAA,EAAAD,KAAAuC,IAAArP,KAAAoL,OAAA6D,EAAA7D,QAAA0B,KAAAC,IAAA/M,KAAAmL,IAAA8D,EAAA9D,MACAoE,EAAAH,EAAAE,EACA,OAAAC,GAAAvP,KAAAkM,OAAAlM,KAAAiM,QAOAI,EAAArK,UAAAyM,kBAAA,SAAAe,GACA,OACArE,IAAAnL,KAAAmL,IAAAqE,EAAArE,IACAC,OAAAoE,EAAApE,OAAApL,KAAAoL,OACA3F,KAAAzF,KAAAyF,KAAA+J,EAAA/J,KACAG,MAAA4J,EAAA5J,MAAA5F,KAAA4F,MACAsG,OAAAlM,KAAAkM,OACAD,MAAAjM,KAAAiM,QAMAI,EAAAoD,qBAAA,SAAAnD,GACA,IAAAJ,EAAAI,EAAAb,IAAAa,EAAAb,IAAAe,aAAAF,EAAA7D,QAAA6D,EAAAE,aAAA,EACAP,EAAAK,EAAAb,IAAAa,EAAAb,IAAAgB,YAAAH,EAAA7D,QAAA6D,EAAAG,YAAA,EACAtB,EAAAmB,EAAAb,IAAAa,EAAAb,IAAAiB,UAAAJ,EAAA7D,QAAA6D,EAAAI,UAAA,EAEAJ,IAAAb,IAAAa,EAAAb,IAAAoB,wBACAP,EAAA7D,QAAA6D,EAAAO,wBAAAP,EACA,IAAAoD,GACAjK,KAAA6G,EAAA7G,KACAG,MAAA0G,EAAA1G,MACAuF,IAAAmB,EAAAnB,OACAe,OAAAI,EAAAJ,UACAd,OAAAkB,EAAAlB,QAAAD,GAAAmB,EAAAJ,WACAD,MAAAK,EAAAL,UAEA,OAAAyD,GA0IAhB,EAAAiB,cAAA,WACA,OACAC,OAAA,SAAAC,GACA,IAAAA,EACA,SAEA,qBAAAA,EACA,UAAArN,MAAA,iCAEA,OAAAsN,mBAAAC,mBAAAF,OAKAnB,EAAAsB,oBAAA,SAAArI,EAAAsI,GACA,OAAAtI,GAAAsI,EAGAvI,EAAAC,EAAAsI,GAFA,MAKA,IAAAC,EAAA,IACAC,EAAA,aACAC,EAAA,OAKA1B,EAAA2B,YAAA,SAAA1I,EAAA2I,EAAAC,GACA,IAAA5I,IAAA2I,IAAAC,EACA,YAIA,MAAAA,EAAAC,WACAD,EAAAE,YAAAF,EAAAC,YAGA,IAAAE,EAAA/I,EAAAe,SAAAJ,cAAA,OAYA,SAAAqI,EAAAL,GACA,QAAAlQ,EAAA,EAAmBA,EAAAkQ,EAAA/N,OAAiBnC,IACpC,GAAAkQ,EAAAlQ,GAAAwQ,eAAAN,EAAAlQ,GAAAyQ,aACA,SAGA,SAIA,GArBAH,EAAA9B,MAAArJ,SAAA,WACAmL,EAAA9B,MAAAnJ,KAAA,IACAiL,EAAA9B,MAAAhJ,MAAA,IACA8K,EAAA9B,MAAAzD,IAAA,IACAuF,EAAA9B,MAAAxD,OAAA,IACAsF,EAAA9B,MAAAkC,OAAAV,EACAG,EAAAzH,YAAA4H,GAeAC,EAAAL,GAAA,CAOA,IAAAjD,KACAD,EAAAf,EAAAoD,qBAAAiB,GACAK,EAAAjE,KAAAoB,MAAAd,EAAAlB,OAAAgE,EAAA,SACAtF,GACAe,KAAAoF,EAAA,MAAAZ,IAGA,WAGA,IAFA,IAAAhD,EAAAnJ,EAEA5D,EAAA,EAAmBA,EAAAkQ,EAAA/N,OAAiBnC,IACpC4D,EAAAsM,EAAAlQ,GAGA+M,EAAA,IAAAxC,EAAAhD,EAAA3D,EAAA4G,GACA8F,EAAA5H,YAAAqE,EAAA1B,KAGAyB,EAAAvF,EAAAwF,EAAAC,EAAAC,GAIArJ,EAAA6M,aAAA1D,EAAA1B,IAEA4B,EAAAhE,KAAAgD,EAAAoD,qBAAAtC,KAjBA,QAbA,QAAA/M,EAAA,EAAmBA,EAAAkQ,EAAA/N,OAAiBnC,IACpCsQ,EAAA5H,YAAAwH,EAAAlQ,GAAAyQ,eAkCAnC,EAAAsC,OAAA,SAAArJ,EAAAsJ,EAAAC,GACAA,IACAA,EAAAD,EACAA,MAEAA,IACAA,MAGAjR,KAAA2H,SACA3H,KAAAiR,QACAjR,KAAAmR,MAAA,UACAnR,KAAAoR,OAAA,GACApR,KAAAkR,WAAA,IAAAG,YAAA,QACArR,KAAAiE,eAGAyK,EAAAsC,OAAAhP,WAGAsP,mBAAA,SAAAtJ,GACA,KAAAA,aAAAvF,GAGA,MAAAuF,EAFAhI,KAAAuR,gBAAAvR,KAAAuR,eAAAvJ,IAKAwJ,MAAA,SAAA3B,GACA,IAAA9P,EAAAC,KAUA,SAAAyR,IACA,IAAAL,EAAArR,EAAAqR,OACAM,EAAA,EACA,MAAAA,EAAAN,EAAA7O,QAAA,OAAA6O,EAAAM,IAAA,OAAAN,EAAAM,KACAA,EAEA,IAAAxM,EAAAkM,EAAApL,OAAA,EAAA0L,GASA,MAPA,OAAAN,EAAAM,MACAA,EAEA,OAAAN,EAAAM,MACAA,EAEA3R,EAAAqR,SAAApL,OAAA0L,GACAxM,EAIA,SAAAyM,EAAA7O,GACA,IAAA0B,EAAA,IAAApB,EAsCA,GApCAE,EAAAR,EAAA,SAAAe,EAAAC,GACA,OAAAD,GACA,SACAW,EAAAE,IAAAb,EAAAC,GACA,MACA,YACAU,EAAAQ,QAAAnB,EAAAC,GACA,MACA,YACAU,EAAAO,QAAAlB,EAAAC,GACA,MACA,mBACA,qBACA,IAAA8N,EAAA9N,EAAAH,MAAA,KACA,OAAAiO,EAAArP,OACA,MAIA,IAAAsP,EAAA,IAAAzO,EAGA,GAFAyO,EAAA7M,QAAA,IAAA4M,EAAA,IACAC,EAAA7M,QAAA,IAAA4M,EAAA,KACAC,EAAAvL,IAAA,OAAAuL,EAAAvL,IAAA,KACA,MAEA9B,EAAAE,IAAAb,EAAA,IAAAgO,EAAA5Q,IAAA,MACAuD,EAAAE,IAAAb,EAAA,IAAAgO,EAAA5Q,IAAA,MACA,MACA,aACAuD,EAAAI,IAAAf,EAAAC,GAAA,OACA,QAEO,UAIPU,EAAA8B,IAAA,OACA,IAAA3B,EAAA,IAAA5E,EAAAkR,MAAAa,WAAA/R,EAAA4H,OAAAmK,WACAnN,EAAAsH,MAAAzH,EAAAvD,IAAA,aACA0D,EAAAoN,MAAAvN,EAAAvD,IAAA,WACA0D,EAAAqN,cAAAxN,EAAAvD,IAAA,mBACA0D,EAAAsN,cAAAzN,EAAAvD,IAAA,qBACA0D,EAAAuN,gBAAA1N,EAAAvD,IAAA,qBACA0D,EAAAwN,gBAAA3N,EAAAvD,IAAA,uBACA0D,EAAAyN,OAAA5N,EAAAvD,IAAA,aAEAlB,EAAAsS,UAAAtS,EAAAsS,SAAA1N,GAGA5E,EAAAkE,WAAAoF,MACA5E,GAAAD,EAAAvD,IAAA,MACA0D,YAQA,SAAA2N,EAAAxP,GACA,IAAA0B,EAAA,IAAApB,EAEAE,EAAAR,EAAA,SAAAe,EAAAC,GACA,OAAAD,GACA,YACAW,EAAAO,QAAAlB,EAAA,IAAAC,GACA,MACA,WACAU,EAAAE,IAAAb,EAAA,IAAAhB,EAAAiB,IACA,QAEO,cAEP/D,EAAAwS,gBAAAxS,EAAAwS,gBACAC,OAAAhO,EAAAvD,IAAA,UACAwR,MAAAjO,EAAAvD,IAAA,WAKA,SAAAyR,EAAA5P,GACAA,EAAAI,MAAA,mBAEAI,EAAAR,EAAA,SAAAe,EAAAC,GACA,OAAAD,GACA,sBACAyO,EAAAxO,GACA,QAES,KAETR,EAAAR,EAAA,SAAAe,EAAAC,GACA,OAAAD,GACA,aAEA8N,EAAA7N,GACA,QAES,KA7HT+L,IAEA9P,EAAAqR,QAAArR,EAAAmR,QAAAtB,OAAAC,GAAgD8C,QAAA,KAiIhD,IACA,IAAAzN,EACA,eAAAnF,EAAAoR,MAAA,CAEA,cAAA3K,KAAAzG,EAAAqR,QACA,OAAApR,KAGAkF,EAAAuM,IAEA,IAAAjR,EAAA0E,EAAAhC,MAAA,sBACA,IAAA1C,MAAA,GACA,UAAAiC,IAAA4B,OAAA8B,cAGApG,EAAAoR,MAAA,SAGA,IAAAyB,GAAA,EACA,MAAA7S,EAAAqR,OAAA,CAEA,cAAA5K,KAAAzG,EAAAqR,QACA,OAAApR,KASA,OANA4S,EAGAA,GAAA,EAFA1N,EAAAuM,IAKA1R,EAAAoR,OACA,aAEA,IAAA3K,KAAAtB,GACAwN,EAAAxN,GACWA,IAEXnF,EAAAoR,MAAA,MAEA,SACA,WAEAjM,IACAnF,EAAAoR,MAAA,MAEA,SACA,SAEA,oBAAA3K,KAAAtB,GAAA,CACAnF,EAAAoR,MAAA,OACA,MAGA,IAAAjM,EACA,SAKA,GAHAnF,EAAAiE,IAAA,IAAAjE,EAAAkR,MAAA4B,QAAA9S,EAAA4H,OAAAkL,QAAA,QACA9S,EAAAoR,MAAA,OAEA,IAAAjM,EAAA4N,QAAA,WACA/S,EAAAiE,IAAAS,GAAAS,EACA,SAIA,UAEA,IACAnB,EAAAmB,EAAAnF,EAAAiE,IAAAjE,EAAAkE,YACW,MAAA+D,GACXjI,EAAAuR,mBAAAtJ,GAEAjI,EAAAiE,IAAA,KACAjE,EAAAoR,MAAA,SACA,SAEApR,EAAAoR,MAAA,UACA,SACA,cACA,IAAA4B,GAAA,IAAA7N,EAAA4N,QAAA,UAKA,IAAA5N,GAAA6N,IAAAH,GAAA,IAEA7S,EAAAiT,OAAAjT,EAAAiT,MAAAjT,EAAAiE,KACAjE,EAAAiE,IAAA,KACAjE,EAAAoR,MAAA,KACA,SAEApR,EAAAiE,IAAA6F,OACA9J,EAAAiE,IAAA6F,MAAA,MAEA9J,EAAAiE,IAAA6F,MAAA3E,EACA,SACA,aAEAA,IACAnF,EAAAoR,MAAA,MAEA,WAGK,MAAAnJ,GACLjI,EAAAuR,mBAAAtJ,GAGA,YAAAjI,EAAAoR,OAAApR,EAAAiE,KAAAjE,EAAAiT,OACAjT,EAAAiT,MAAAjT,EAAAiE,KAEAjE,EAAAiE,IAAA,KAGAjE,EAAAoR,MAAA,YAAApR,EAAAoR,MAAA,qBAEA,OAAAnR,MAEAiT,MAAA,WACA,IAAAlT,EAAAC,KACA,IAWA,GATAD,EAAAqR,QAAArR,EAAAmR,QAAAtB,UAEA7P,EAAAiE,KAAA,WAAAjE,EAAAoR,SACApR,EAAAqR,QAAA,OACArR,EAAAyR,SAKA,YAAAzR,EAAAoR,MACA,UAAA1O,IAAA4B,OAAA8B,cAEK,MAAA6B,GACLjI,EAAAuR,mBAAAtJ,GAGA,OADAjI,EAAAmT,SAAAnT,EAAAmT,UACAlT,OAIAJ,EAAAD,QAAA+O,wBChzCA,SAAAyE,EAAAhR,GACA,OAAAA,EAAAgB,QAAA,gBAIAvD,EAAAD,QAAA,SAAAyT,GAIA,IAHA,IAAAjR,EAAA,GACA/B,EAAA,EAEQA,EAAAkC,UAAAC,OAAsBnC,IAC9B+B,GAAAgR,EAAAC,EAAAhT,KAAAkC,UAAAlC,EAAA,QAEA,OAAA+B,yBCIA,IAAAkR,EAAA,OACAC,GACAC,IAAA,EACAC,IAAA,EACAC,IAAA,GAEAC,GACAlO,OAAA,EACAE,QAAA,EACAC,KAAA,EACAF,MAAA,EACAG,OAAA,GAGA,SAAA+N,EAAAtS,GACA,qBAAAA,EACA,SAEA,IAAAuS,EAAAN,EAAAjS,EAAAwS,eACA,QAAAD,GAAAvS,EAAAwS,cAGA,SAAAC,EAAAzS,GACA,qBAAAA,EACA,SAEA,IAAAiE,EAAAoO,EAAArS,EAAAwS,eACA,QAAAvO,GAAAjE,EAAAwS,cAGA,SAAAE,EAAAzH,GAEA,IADA,IAAAlM,EAAA,EACQA,EAAAkC,UAAAC,OAAsBnC,IAAA,CAC9B,IAAA4T,EAAA1R,UAAAlC,GACA,QAAA8B,KAAA8R,EACA1H,EAAApK,GAAA8R,EAAA9R,GAIA,OAAAoK,EAGA,SAAAuG,EAAA9M,EAAAE,EAAA4D,GACA,IAAA7F,EAAAhE,KACA6K,EAAA,aAAArE,KAAAsE,UAAAC,WACAkJ,KAEApJ,EACA7G,EAAA0E,SAAAJ,cAAA,UAEA2L,EAAAjT,YAAA,EAWAgD,EAAA4M,cAAA,EAOA,IAAAsD,EAAA,GACAC,GAAA,EACAC,EAAArO,EACAsO,EAAApO,EACAqO,EAAAzK,EACA0K,EAAA,KACAC,EAAA,GACAC,GAAA,EACAC,EAAA,OACAC,EAAA,QACAC,EAAA,GACAC,EAAA,SACAC,EAAA,GACAC,EAAA,SAiMA,GA/LAjU,OAAAC,eAAAiD,EACA,KAAA+P,KAAmBE,GACnBhT,IAAA,WACA,OAAAiT,GAEAxP,IAAA,SAAArD,GACA6S,EAAA,GAAA7S,MAIAP,OAAAC,eAAAiD,EACA,cAAA+P,KAA4BE,GAC5BhT,IAAA,WACA,OAAAkT,GAEAzP,IAAA,SAAArD,GACA8S,IAAA9S,MAIAP,OAAAC,eAAAiD,EACA,YAAA+P,KAA0BE,GAC1BhT,IAAA,WACA,OAAAmT,GAEA1P,IAAA,SAAArD,GACA,qBAAAA,EACA,UAAA2T,UAAA,uCAEAZ,EAAA/S,EACArB,KAAA4Q,cAAA,MAIA9P,OAAAC,eAAAiD,EACA,UAAA+P,KAAwBE,GACxBhT,IAAA,WACA,OAAAoT,GAEA3P,IAAA,SAAArD,GACA,qBAAAA,EACA,UAAA2T,UAAA,qCAEAX,EAAAhT,EACArB,KAAA4Q,cAAA,MAIA9P,OAAAC,eAAAiD,EACA,OAAA+P,KAAqBE,GACrBhT,IAAA,WACA,OAAAqT,GAEA5P,IAAA,SAAArD,GACAiT,EAAA,GAAAjT,EACArB,KAAA4Q,cAAA,MAIA9P,OAAAC,eAAAiD,EACA,SAAA+P,KAAuBE,GACvBhT,IAAA,WACA,OAAAsT,GAEA7P,IAAA,SAAArD,GACAkT,EAAAlT,EACArB,KAAA4Q,cAAA,MAIA9P,OAAAC,eAAAiD,EACA,WAAA+P,KAAyBE,GACzBhT,IAAA,WACA,OAAAuT,GAEA9P,IAAA,SAAArD,GACA,IAAA4T,EAAAtB,EAAAtS,GAEA,QAAA4T,EACA,UAAAC,YAAA,+CAEAV,EAAAS,EACAjV,KAAA4Q,cAAA,MAIA9P,OAAAC,eAAAiD,EACA,cAAA+P,KAA4BE,GAC5BhT,IAAA,WACA,OAAAwT,GAEA/P,IAAA,SAAArD,GACAoT,IAAApT,EACArB,KAAA4Q,cAAA,MAIA9P,OAAAC,eAAAiD,EACA,OAAA+P,KAAqBE,GACrBhT,IAAA,WACA,OAAAyT,GAEAhQ,IAAA,SAAArD,GACA,qBAAAA,OAAAgS,EACA,UAAA6B,YAAA,sDAEAR,EAAArT,EACArB,KAAA4Q,cAAA,MAIA9P,OAAAC,eAAAiD,EACA,YAAA+P,KAA0BE,GAC1BhT,IAAA,WACA,OAAA0T,GAEAjQ,IAAA,SAAArD,GACA,IAAA4T,EAAAnB,EAAAzS,GACA,IAAA4T,EACA,UAAAC,YAAA,+CAEAP,EAAAM,EACAjV,KAAA4Q,cAAA,MAIA9P,OAAAC,eAAAiD,EACA,WAAA+P,KAAyBE,GACzBhT,IAAA,WACA,OAAA2T,GAEAlQ,IAAA,SAAArD,GACA,GAAAA,EAAA,GAAAA,EAAA,IACA,UAAAmB,MAAA,uCAEAoS,EAAAvT,EACArB,KAAA4Q,cAAA,MAIA9P,OAAAC,eAAAiD,EACA,gBAAA+P,KAA8BE,GAC9BhT,IAAA,WACA,OAAA4T,GAEAnQ,IAAA,SAAArD,GACA,IAAA4T,EAAAnB,EAAAzS,GACA,IAAA4T,EACA,UAAAC,YAAA,+CAEAL,EAAAI,EACAjV,KAAA4Q,cAAA,MAIA9P,OAAAC,eAAAiD,EACA,OAAA+P,KAAqBE,GACrBhT,IAAA,WACA,OAAA6T,GAEApQ,IAAA,SAAArD,GACA,GAAAA,EAAA,GAAAA,EAAA,IACA,UAAAmB,MAAA,mCAEAsS,EAAAzT,EACArB,KAAA4Q,cAAA,MAIA9P,OAAAC,eAAAiD,EACA,QAAA+P,KAAsBE,GACtBhT,IAAA,WACA,OAAA8T,GAEArQ,IAAA,SAAArD,GACA,IAAA4T,EAAAnB,EAAAzS,GACA,IAAA4T,EACA,UAAAC,YAAA,+CAEAH,EAAAE,EACAjV,KAAA4Q,cAAA,MASA5M,EAAA6M,kBAAA5D,EAEApC,EACA,OAAA7G,EAQA6O,EAAA7Q,UAAAmT,aAAA,WAEA,OAAAzG,OAAAsB,oBAAArI,OAAA3H,KAAA6J,OAGAjK,EAAAD,QAAAkT,uCC9SA,IAAAuC,EAAAC,SAAArT,UAAAsT,SAEAC,EAAA,cACAC,EAAA,SAAAnU,GACA,IACA,IAAAoU,EAAAL,EAAA7U,KAAAc,GACA,OAAAkU,EAAA/O,KAAAiP,GACE,MAAAzN,GACF,WAIA0N,EAAA,SAAArU,GACA,IACA,OAAAmU,EAAAnU,KACA+T,EAAA7U,KAAAc,IACA,GACE,MAAA2G,GACF,WAGA2N,EAAA7U,OAAAkB,UAAAsT,SACAM,EAAA,oBACAC,EAAA,6BACAC,EAAA,oBAAA3U,QAAA,kBAAAA,OAAAC,YAEAxB,EAAAD,QAAA,SAAA0B,GACA,IAAAA,EAAc,SACd,uBAAAA,GAAA,kBAAAA,EAAgE,SAChE,uBAAAA,MAAAW,UAAuD,SACvD,GAAA8T,EAAsB,OAAAJ,EAAArU,GACtB,GAAAmU,EAAAnU,GAA2B,SAC3B,IAAA0U,EAAAJ,EAAApV,KAAAc,GACA,OAAA0U,IAAAH,GAAAG,IAAAF,wCCtBA,IAAAG,EAAa9V,EAAQ,QAErB+V,EAAA,WAEAC,EAAA,WAEAC,EAAA,SAAA9U,EAAAmO,GACA,IAAA3D,EAAA,EAEAxK,EAAAmO,IAQA3D,GAAA,GAKA,MAAAiB,KAAAuB,IAAAmB,EAAAnO,GAAA6U,EACA7U,GAAAwK,EAAAoK,EAGA,OAAA5U,GAGA+U,EAAA,SAAA7N,GACA,IAAA8N,EAAAC,EAEAF,EAAApU,UAAAuU,KAAAhW,KAAAP,MAEAA,KAAAwW,MAAAjO,EAEAvI,KAAAqJ,KAAA,SAAAwG,GACAA,EAAAtH,OAAAvI,KAAAwW,aAIAvJ,IAAAqJ,IACAA,EAAAzG,EAAA4G,KAGA5G,EAAA4G,IAAAN,EAAAtG,EAAA4G,IAAAH,GACAzG,EAAA6G,IAAAP,EAAAtG,EAAA6G,IAAAJ,GAEAD,EAAAxG,EAAA4G,IAEAzW,KAAA2W,QAAA,OAAA9G,KAGA7P,KAAAiT,MAAA,WACAqD,EAAAD,EACArW,KAAA2W,QAAA,SAGA3W,KAAA4W,cAAA,WACAN,OAAA,EACAD,OAAA,IAKAD,EAAApU,UAAA,IAAAgU,EAEApW,EAAAD,SACAyW,0BACAD,qDCxEA,IAAAU,EAAAC,EAAAC,EAAAhR,EAGA8Q,EAAA,SAAAhH,EAAAmH,GACA,IACA5W,EAAAiF,EAAAkD,EAAA5C,EAAAsR,EADAC,KAGA,IAAAF,EAAAzU,OAEA,YAGA,IAAAnC,EAAA,EAAaA,EAAAyP,EAAAsH,YACb9R,EAAAwK,EAAAzP,IAAA,GACAiF,GAAAwK,EAAAzP,EAAA,OACAiF,GAAAwK,EAAAzP,EAAA,MACAiF,GAAAwK,EAAAzP,EAAA,GAEAmI,EAAAuO,EAAAjH,EAAAuH,SAAAhX,EAAA,EAAAA,EAAA,IAEAuF,EAAAN,EAAA,EAAAjF,EAAAiF,EAAAwK,EAAAsH,WAEA5O,IAAAyO,EAAA,KACA,IAAAA,EAAAzU,OAGA2U,EAAA7N,KAAAwG,EAAAuH,SAAAhX,EAAA,EAAAuF,KAGAsR,EAAAJ,EAAAhH,EAAAuH,SAAAhX,EAAA,EAAAuF,GAAAqR,EAAAK,MAAA,IACAJ,EAAA1U,SACA2U,IAAAI,OAAAL,MAIA7W,EAAAuF,EAIA,OAAAuR,GAQAJ,EAAA,SAAA1F,GACA,IAAAtJ,EAAA,GAKA,OAJAA,GAAAyP,OAAAC,aAAApG,EAAA,IACAtJ,GAAAyP,OAAAC,aAAApG,EAAA,IACAtJ,GAAAyP,OAAAC,aAAApG,EAAA,IACAtJ,GAAAyP,OAAAC,aAAApG,EAAA,IACAtJ,GAqBAiP,EAAA,SAAAR,GACA,IACAzO,KACA2P,EAAAZ,EAAAN,GAAA,gBAGA,OAAAkB,EAAAC,OAAA,SAAA5P,EAAA6P,GACA,IAAAC,EAAAC,EAAAC,EAAArT,EAAAsT,EAGA,OADAH,EAAAf,EAAAc,GAAA,YACAC,GAGAC,EAAAD,EAAA,GACAE,EAAA,IAAAD,EAAA,MACApT,EAAAmT,EAAAE,IAAA,GACAF,EAAAE,EAAA,OACAF,EAAAE,EAAA,MACAF,EAAAE,EAAA,GAEAC,EAAAlB,EAAAc,GAAA,mBACAI,GAGAF,EAAAE,EAAA,GACAD,EAAA,IAAAD,EAAA,MACA/P,EAAArD,GAAAsT,EAAAD,IAAA,GACAC,EAAAD,EAAA,OACAC,EAAAD,EAAA,MACAC,EAAAD,EAAA,GACAhQ,GARA,MAXA,MAoBGA,IAmBH/B,EAAA,SAAAgR,EAAAiB,GACA,IAAAC,EAAAC,EAAApQ,EA6CA,OA1CAmQ,EAAApB,EAAAmB,GAAA,gBAGAE,KAAAZ,OAAAa,SAAAF,EAAAG,IAAA,SAAAC,GACA,OAAAxB,EAAAwB,GAAA,SAAAD,IAAA,SAAAE,GACA,IAAA7T,EAAA8T,EAAAC,EA+BA,OA5BA/T,EAAA6T,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,GAEAC,EAAAxB,EAAAtS,IAAA,IAGA+T,EAAA3B,EAAAwB,GAAA,SAAAD,IAAA,SAAAK,GACA,IAAAZ,EAAA/P,EAcA,OAZA+P,EAAAY,EAAA,GACA3Q,EAAA2Q,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,GACA,IAAAZ,IACA/P,GAAAgF,KAAA4L,IAAA,MACA5Q,GAAA2Q,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,KAEA3Q,IACO,GACP0Q,KAAAG,IAGAH,EAAAD,OAKAzQ,EAAAgF,KAAAuC,IAAA8I,MAAA,KAAAD,GACAU,SAAA9Q,KAAA,GAGAlI,EAAAD,SACAmX,YACAC,YACAhR,qCCrKA,IAAA4B,EAAazH,EAAQ,QAErB+Q,EAAArR,EAAAD,SACA+O,OAAUxO,EAAQ,QAClB2S,OAAU3S,EAAQ,QAClB4R,UAAa5R,EAAQ,SAGrByH,EAAAsJ,QACAtJ,EAAA+G,OAAAuC,EAAAvC,OAEA,IAAAmK,EAAA5H,EAAA4B,OACAiG,EAAA7H,EAAAa,UACAiH,EAAApR,EAAAkL,OACAmG,EAAArR,EAAAmK,UAEAb,EAAAgI,KAAA,WACAtR,EAAAkL,OAAAgG,EACAlR,EAAAmK,UAAAgH,GAGA7H,EAAAiI,QAAA,WACAvR,EAAAkL,OAAAkG,EACApR,EAAAmK,UAAAkH,GAGArR,EAAAkL,QACA5B,EAAAgI,4CCvCAnY,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAA8X,EAAA,WAAiC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAzhB,GAEA,SAAAG,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAE7E,SAAAyN,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAE3F,IAAAiF,EAAW/Z,EAAQ,QAEnBga,EAAAL,EAAAI,GAEAE,EAAmBja,EAAQ,QAE3Bka,EAAAP,EAAAM,GAEAE,EAAana,EAAQ,QAMrBoa,EAAA,SAAAC,GACA,OAAAA,GAAA,UAAAA,IAAA,YAAAA,IAAA,EAAAA,IAAA,IAgBAC,EAAA,SAAAC,EAAA9Y,EAAA+Y,GAEA,IAAAC,EAAA,IAAAC,WAAAH,EAAArJ,OAAAqJ,EAAAI,WAAAJ,EAAAtD,YAAA,GAEA2D,EAAA,IAAAZ,EAAA,WAAAa,MAAA/Y,UAAAqV,MAAA9W,KAAAoB,IAGAqZ,EAAA,IAAAC,WAAAR,EAAAtD,YACA+D,EAAA,IAAAN,WAAAI,EAAA5J,QAIA+J,OAAAlO,EACAmO,OAAAnO,EACAoO,OAAApO,EACAqO,OAAArO,EACAsO,OAAAtO,EACAuO,OAAAvO,EACAwO,OAAAxO,EACAyO,OAAAzO,EAGA0O,OAAA1O,EAWA,IAPAkO,EAAAT,EAAA,GACAU,EAAAV,EAAA,GACAW,EAAAX,EAAA,GACAY,EAAAZ,EAAA,GAIAiB,EAAA,EAAkBA,EAAAhB,EAAApY,OAA6BoZ,GAAA,EAG/CJ,EAAAjB,EAAAK,EAAAgB,IACAH,EAAAlB,EAAAK,EAAAgB,EAAA,IACAF,EAAAnB,EAAAK,EAAAgB,EAAA,IACAD,EAAApB,EAAAK,EAAAgB,EAAA,IAGAb,EAAAN,QAAAe,EAAAC,EAAAC,EAAAC,EAAAR,EAAAS,GAIAT,EAAAS,GAAArB,EAAAY,EAAAS,GAAAR,GACAD,EAAAS,EAAA,GAAArB,EAAAY,EAAAS,EAAA,GAAAP,GACAF,EAAAS,EAAA,GAAArB,EAAAY,EAAAS,EAAA,GAAAN,GACAH,EAAAS,EAAA,GAAArB,EAAAY,EAAAS,EAAA,GAAAL,GAGAH,EAAAI,EACAH,EAAAI,EACAH,EAAAI,EACAH,EAAAI,EAGA,OAAAV,GAGArb,EAAA6a,UAaA,IAAAoB,EAAA,WACA,SAAAA,EAAAnB,EAAA9Y,EAAA+Y,EAAAmB,GACA9B,EAAA/Z,KAAA4b,GAEA,IAAA3N,EAAA2N,EAAAE,KACAnB,EAAA,IAAAC,WAAAH,EAAArJ,QACA4J,EAAA,IAAAC,WAAAR,EAAAtD,YACA/W,EAAA,EAMA,IAJAJ,KAAA+b,aAAA,IAAA3B,EAAA,WAGApa,KAAA+b,aAAA1S,KAAArJ,KAAAgc,cAAArB,EAAAvD,SAAAhX,IAAA6N,GAAAtM,EAAA+Y,EAAAM,IACA5a,EAAA6N,EAAkB7N,EAAAua,EAAApY,OAAwBnC,GAAA6N,EAC1CyM,EAAA,IAAAuB,aAAA3B,EAAAK,EAAAva,EAAA,IAAAka,EAAAK,EAAAva,EAAA,IAAAka,EAAAK,EAAAva,EAAA,IAAAka,EAAAK,EAAAva,EAAA,MACAJ,KAAA+b,aAAA1S,KAAArJ,KAAAgc,cAAArB,EAAAvD,SAAAhX,IAAA6N,GAAAtM,EAAA+Y,EAAAM,IAGAhb,KAAA+b,aAAA1S,KAAA,WAEAwS,EAAA,QAAAxB,EAAA6B,OAAAlB,MA+BA,OArBA7B,EAAAyC,IACAja,IAAA,gBAKAN,MAAA,SAAAoZ,EAAA9Y,EAAA+Y,EAAAM,GACA,kBACA,IAAAmB,EAAA3B,EAAAC,EAAA9Y,EAAA+Y,GAEAM,EAAAtW,IAAAyX,EAAA1B,EAAAI,kBAIAlZ,IAAA,OACAV,IAAA,WAEA,gBAIA2a,EAnDA,GAsDAjc,EAAAic,YACAjc,EAAA,YACAic,YACApB,gDC3KA,IAAA4B,EAAkBlc,EAAQ,QAE1Bmc,EAAA,SAAAC,GACA,IAAAC,EAAA,GAAAD,EAAA,GAGA,OAFAC,IAAA,EACAA,GAAAD,EAAA,GACAC,GAGAC,EAAA,SAAAF,GACA,YAAAA,EAAA,KAGAG,EAAA,SAAAH,GACA,IAAAI,EAAA,EASA,OAHA,GAAAJ,EAAA,YACAI,GAAAJ,EAAA,MAEAI,GAGA5F,EAAA,SAAAwF,EAAAK,GACA,IAAAJ,EAAAF,EAAAC,GACA,WAAAC,EACA,MACGA,IAAAI,EACH,MACGA,EACH,MAEA,MAGAC,EAAA,SAAAN,GACA,IAAAO,EAAAL,EAAAF,GACAI,EAAA,EAAAD,EAAAH,GAMA,OAJAO,IACAH,GAAAJ,EAAAI,GAAA,IAGA,GAAAJ,EAAAI,EAAA,QAAAJ,EAAAI,EAAA,KAGAI,EAAA,SAAAR,GACA,IAAAS,KACAF,EAAAL,EAAAF,GACAU,EAAA,EAAAP,EAAAH,GAWA,GATAO,IACAG,GAAAV,EAAAU,GAAA,GAQA,EAAAV,EAAAU,EAAA,IAIA,IAAAC,EAAAC,EAAAC,EAEAF,GAAA,GAAAX,EAAAU,EAAA,OAAAV,EAAAU,EAAA,GACAE,EAAA,EAAAD,EAAA,EAIAE,GAAA,GAAAb,EAAAU,EAAA,QAAAV,EAAAU,EAAA,IAGA,IAAAN,EAAA,GAAAS,EACA,MAAAT,EAAAQ,EAAA,CACA,IAAA9c,EAAA4c,EAAAN,EAEAK,GAAA,GAAAT,EAAAlc,EAAA,OAAAkc,EAAAlc,EAAA,IAAAkc,EAAAlc,GAIAsc,GAAA,OAAAJ,EAAAlc,EAAA,OAAAkc,EAAAlc,EAAA,IAEA,OAAA2c,IAGAK,EAAA,SAAAd,EAAAS,GACA,IAAAR,EAAAF,EAAAC,GACA/T,EAAAwU,EAAAR,GACA,OAAAhU,GACA,KAAA6T,EAAAiB,iBACA,cACA,KAAAjB,EAAAkB,iBACA,cACA,KAAAlB,EAAAmB,qBACA,uBACA,QACA,cAIAC,EAAA,SAAAlB,GACA,IAAAO,EAAAL,EAAAF,GACA,IAAAO,EACA,YAGA,IAAAH,EAAA,EAAAD,EAAAH,GAEA,GAAAI,GAAAJ,EAAAnF,WAWA,YAGA,IACAsG,EADAC,EAAA,KAuCA,OAjCAD,EAAAnB,EAAAI,EAAA,GAUA,IAAAe,IACAC,KAIAA,EAAAhH,KAAA,GAAA4F,EAAAI,EAAA,SACA,IAAAJ,EAAAI,EAAA,UACA,IAAAJ,EAAAI,EAAA,UACA,IAAAJ,EAAAI,EAAA,SACA,IAAAJ,EAAAI,EAAA,SACAgB,EAAAhH,KAAA,EACAgH,EAAAhH,MAAA,EAAA4F,EAAAI,EAAA,SACAgB,EAAAjH,IAAAiH,EAAAhH,IACA,GAAA+G,IACAC,EAAAjH,KAAA,GAAA6F,EAAAI,EAAA,UACA,IAAAJ,EAAAI,EAAA,UACA,IAAAJ,EAAAI,EAAA,UACA,IAAAJ,EAAAI,EAAA,SACA,IAAAJ,EAAAI,EAAA,SACAgB,EAAAjH,KAAA,EACAiH,EAAAjH,MAAA,EAAA6F,EAAAI,EAAA,WAGAgB,GAGAC,EAAA,SAAApV,GACA,OAAAA,GACA,OACA,kDACA,OACA,iBACA,OACA,+BACA,OACA,+BACA,OACA,mCACA,QACA,cAIAqV,EAAA,SAAAtB,GASA,IARA,IAKAuB,EALAnB,EAAA,EAAAD,EAAAH,GACAwB,EAAAxB,EAAAlF,SAAAsF,GACAqB,EAAA,EACAC,EAAA,EACAC,GAAA,EAIQD,EAAAF,EAAA3G,WAAA,EAA6C6G,IACrD,OAAAF,EAAAE,EAAA,IAEAD,EAAAC,EAAA,EACA,MAIA,MAAAD,EAAAD,EAAA3G,WAGA,OAAA2G,EAAAC,IACA,OAEA,OAAAD,EAAAC,EAAA,IACAA,GAAA,EACA,MACO,OAAAD,EAAAC,EAAA,IACPA,IACA,MAGAC,EAAA,IAAAD,EAAA,IACAF,EAAAF,EAAA,GAAAG,EAAAE,EAAA,IACA,8CAAAH,IACAI,GAAA,IAKA,GACAF,UACO,IAAAD,EAAAC,MAAAD,EAAAvb,QACPyb,EAAAD,EAAA,EACAA,GAAA,EACA,MACA,OAEA,OAAAD,EAAAC,EAAA,IACA,IAAAD,EAAAC,EAAA,IACAA,GAAA,EACA,MAGAF,EAAAF,EAAA,GAAAG,EAAAE,EAAA,IACA,8CAAAH,IACAI,GAAA,GAEAD,EAAAD,EAAA,EACAA,GAAA,EACA,MACA,QAGAA,GAAA,EACA,MAcA,OAXAD,IAAA1G,SAAA4G,GACAD,GAAAC,EACAA,EAAA,EAEAF,KAAA3G,WAAA,IACA0G,EAAAF,EAAA,GAAAG,EAAAE,EAAA,IACA,8CAAAH,IACAI,GAAA,IAIAA,GAIAre,EAAAD,SACAmX,YACA8F,WACAE,WACAN,iCACAY,eACAI,eACAI,kEClRA,IAAA5H,EAAA,WACAhW,KAAAuW,KAAA,WACA,IAAA2H,KAOAle,KAAAme,GAAA,SAAA5V,EAAA6V,GACAF,EAAA3V,KACA2V,EAAA3V,OAEA2V,EAAA3V,GAAA2V,EAAA3V,GAAA+O,OAAA8G,IAQApe,KAAAqe,IAAA,SAAA9V,EAAA6V,GACA,IAAAtG,EACA,QAAAoG,EAAA3V,KAGAuP,EAAAoG,EAAA3V,GAAAuK,QAAAsL,GACAF,EAAA3V,GAAA2V,EAAA3V,GAAA8O,QACA6G,EAAA3V,GAAA+V,OAAAxG,EAAA,GACAA,GAAA,IAOA9X,KAAA2W,QAAA,SAAApO,GACA,IAAAgW,EAAAne,EAAAmC,EAAAic,EAEA,GADAD,EAAAL,EAAA3V,GACAgW,EAOA,OAAAjc,UAAAC,OAEA,IADAA,EAAAgc,EAAAhc,OACAnC,EAAA,EAAmBA,EAAAmC,IAAYnC,EAC/Bme,EAAAne,GAAAG,KAAAP,KAAAsC,UAAA,QAEO,CAGP,IAFAkc,KACApe,EAAAkC,UAAAC,OACAnC,EAAA,EAAmBA,EAAAkC,UAAAC,SAAsBnC,EACzCoe,EAAAnV,KAAA/G,UAAAlC,IAGA,IADAmC,EAAAgc,EAAAhc,OACAnC,EAAA,EAAmBA,EAAAmC,IAAYnC,EAC/Bme,EAAAne,GAAA+X,MAAAnY,KAAAwe,KAOAxe,KAAAye,QAAA,WACAP,QAcAlI,EAAAhU,UAAA0c,KAAA,SAAAC,GASA,OARA3e,KAAAme,GAAA,gBAAAtO,GACA8O,EAAAtV,KAAAwG,KAGA7P,KAAAme,GAAA,gBAAAS,GACAD,EAAA1L,MAAA2L,KAGAD,GAOA3I,EAAAhU,UAAAqH,KAAA,SAAAwG,GACA7P,KAAA2W,QAAA,OAAA9G,IAGAmG,EAAAhU,UAAAiR,MAAA,SAAA2L,GACA5e,KAAA2W,QAAA,OAAAiI,IAGAhf,EAAAD,QAAAqW,qCC1GAlV,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAA8X,EAAA,WAAiC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAzhB,GAEA,SAAAK,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAE3F,IAAAgB,EAAA,WACA,SAAAA,IACA+D,EAAA/Z,KAAAgW,GAEAhW,KAAAke,aAuGA,OA5FA/E,EAAAnD,IACArU,IAAA,KACAN,MAAA,SAAAkH,EAAA6V,GACApe,KAAAke,UAAA3V,KACAvI,KAAAke,UAAA3V,OAEAvI,KAAAke,UAAA3V,GAAAc,KAAA+U,MAYAzc,IAAA,MACAN,MAAA,SAAAkH,EAAA6V,GACA,IAAAtG,OAAA7K,EAEA,QAAAjN,KAAAke,UAAA3V,KAGAuP,EAAA9X,KAAAke,UAAA3V,GAAAuK,QAAAsL,GACApe,KAAAke,UAAA3V,GAAA+V,OAAAxG,EAAA,GACAA,GAAA,MAUAnW,IAAA,UACAN,MAAA,SAAAkH,GACA,IAAAgW,OAAAtR,EACA7M,OAAA6M,EACA1K,OAAA0K,EACAuR,OAAAvR,EAGA,GADAsR,EAAAve,KAAAke,UAAA3V,GACAgW,EAOA,OAAAjc,UAAAC,OAEA,IADAA,EAAAgc,EAAAhc,OACAnC,EAAA,EAAmBA,EAAAmC,IAAYnC,EAC/Bme,EAAAne,GAAAG,KAAAP,KAAAsC,UAAA,SAKA,IAFAkc,EAAAzD,MAAA/Y,UAAAqV,MAAA9W,KAAA+B,UAAA,GACAC,EAAAgc,EAAAhc,OACAnC,EAAA,EAAmBA,EAAAmC,IAAYnC,EAC/Bme,EAAAne,GAAA+X,MAAAnY,KAAAwe,MASA7c,IAAA,UACAN,MAAA,WACArB,KAAAke,gBAYAvc,IAAA,OACAN,MAAA,SAAAsd,GACA3e,KAAAme,GAAA,gBAAAtO,GACA8O,EAAAtV,KAAAwG,SAKAmG,EA3GA,GA8GArW,EAAA,WAAAqW,EACApW,EAAAD,UAAA,mCC5GA,IAAAgI,EAAazH,EAAQ,QAErB+Q,EAAArR,EAAAD,SACA+O,OAAUxO,EAAQ,QAClB2S,OAAU3S,EAAQ,QAClB4R,UAAa5R,EAAQ,SAGrByH,EAAAsJ,QACAtJ,EAAA+G,OAAAuC,EAAAvC,OAEA,IAAAmK,EAAA5H,EAAA4B,OACAiG,EAAA7H,EAAAa,UACAiH,EAAApR,EAAAkL,OACAmG,EAAArR,EAAAmK,UAEAb,EAAAgI,KAAA,WACAtR,EAAAkL,OAAAgG,EACAlR,EAAAmK,UAAAgH,GAGA7H,EAAAiI,QAAA,WACAvR,EAAAkL,OAAAkG,EACApR,EAAAmK,UAAAkH,GAGArR,EAAAkL,QACA5B,EAAAgI,4CC9CAnY,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAAwd,EAAA/d,OAAAge,QAAA,SAAAzF,GAAmD,QAAAjZ,EAAA,EAAgBA,EAAAkC,UAAAC,OAAsBnC,IAAA,CAAO,IAAA2e,EAAAzc,UAAAlC,GAA2B,QAAAuB,KAAAod,EAA0Bje,OAAAkB,UAAAC,eAAA1B,KAAAwe,EAAApd,KAAyD0X,EAAA1X,GAAAod,EAAApd,IAAiC,OAAA0X,GAE/OF,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAxhB,GAEAsF,EAAc9e,EAAQ,QAEtB+e,EAAApF,EAAAmF,GAEAE,EAAkBhf,EAAQ,QAE1Bif,EAAAtF,EAAAqF,GAEAE,EAAmBlf,EAAQ,QAE3Bmf,EAAAxF,EAAAuF,GAEA,SAAAvF,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAE7E,SAAAyN,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAE3F,SAAAsK,EAAAvf,EAAAQ,GAAiD,IAAAR,EAAa,UAAAwf,eAAA,6DAAyF,OAAAhf,GAAA,kBAAAA,GAAA,oBAAAA,EAAAR,EAAAQ,EAEvJ,SAAAif,EAAAC,EAAAC,GAA0C,uBAAAA,GAAA,OAAAA,EAA+D,UAAA1K,UAAA,kEAAA0K,GAAuGD,EAAAzd,UAAAlB,OAAAY,OAAAge,KAAA1d,WAAyEkE,aAAe7E,MAAAoe,EAAAze,YAAA,EAAAyY,UAAA,EAAAD,cAAA,KAA6EkG,IAAA5e,OAAA6e,eAAA7e,OAAA6e,eAAAF,EAAAC,GAAAD,EAAAG,UAAAF,GA0BrX,IAAA1O,EAAA,SAAA6O,GAGA,SAAA7O,IACA+I,EAAA/Z,KAAAgR,GAEA,IAAA8O,EAAAR,EAAAtf,MAAAgR,EAAA4O,WAAA9e,OAAAif,eAAA/O,IAAAzQ,KAAAP,OAEA8f,EAAAE,WAAA,IAAAb,EAAA,WACAW,EAAAG,YAAA,IAAAZ,EAAA,WACAS,EAAAE,WAAAtB,KAAAoB,EAAAG,aAEA,IAAAlgB,EAAA+f,EAEAI,KACAC,KAEAC,OAAA,EAEAC,OAAA,EACAC,EAAA,aACAC,GACAC,SACAC,SACAC,qBACAC,cAGAC,EAAA,EAkRA,OA/QAd,EAAAe,UACAC,YAAA,EACAC,uBACAC,aAIAlB,EAAAG,YAAA9B,GAAA,gBAAA8C,GACA,IAAAC,OAAA,EACAC,OAAA,IAGAC,IAAA,cAGAC,cAAA,WACArhB,KAAA6gB,SAAAC,WAAAG,EAAAK,QACA,YAAAL,IACAjhB,KAAA2W,QAAA,QACAhU,QAAA,iCAEA3C,KAAA6gB,SAAAC,YAAA,IAGAS,UAAA,WACA,IAAAA,KAEA,WAAAN,IACAd,EAAAoB,YACAA,EAAAhf,OAAA0e,EAAA1e,OAEA,WAAA0e,IACAjhB,KAAA2W,QAAA,QACAhU,QAAA,8BAEAse,EAAAvE,OAAA,IAGA,WAAAuE,IACAd,EAAAoB,YACAA,EAAA7E,OAAAuE,EAAAvE,SAGA8E,QAAA,WACAxhB,KAAA6gB,SAAAY,SAAA,GAEAC,IAAA,WACA,kBAAA1hB,KAAA6gB,WACA7gB,KAAA6gB,SAAAc,cAAA,EACA3hB,KAAA2W,QAAA,QACAhU,QAAA,uCAGA,0BAAA3C,KAAA6gB,WACA7gB,KAAA6gB,SAAAe,sBAAA,EACA5hB,KAAA2W,QAAA,QACAhU,QAAA,+CAGAse,EAAAY,SAAA,IACA1B,EAAA0B,SAAAZ,EAAAY,UAGA,IAAAZ,EAAAY,WACA1B,EAAA0B,SAAA,IACA7hB,KAAA2W,QAAA,QACAhU,QAAA,qDAIA3C,KAAA6gB,SAAAG,SAAAd,GAEAve,IAAA,WACAsf,EAAAa,WAOA,SAAAb,EAAAa,WAAAC,OAIAd,EAAAa,WAAAE,KAMAf,EAAAa,WAAAC,QACA/hB,KAAA2W,QAAA,QACAhU,QAAA,qCAKA0d,GACA4B,OAAAhB,EAAAa,WAAAC,QAAA,UACAG,IAAAjB,EAAAa,WAAAE,KAGA,qBAAAf,EAAAa,WAAAK,KACA9B,EAAA+B,GAAAnB,EAAAa,WAAAK,KAlBAniB,KAAA2W,QAAA,QACAhU,QAAA,yCALA0d,EAAA,KAPArgB,KAAA2W,QAAA,QACAhU,QAAA,qDA+BA0f,iBAAA,WACAzJ,SAAAqI,EAAAqB,QAMAtiB,KAAA6gB,SAAAc,cAAAV,EAAAqB,OALAtiB,KAAA2W,QAAA,QACAhU,QAAA,oCAAAse,EAAAqB,UAMAC,yBAAA,WACA3J,SAAAqI,EAAAqB,SAMAtiB,KAAA6gB,SAAAe,sBAAAX,EAAAqB,OACA1B,EAAAK,EAAAqB,QANAtiB,KAAA2W,QAAA,QACAhU,QAAA,4CAAAse,EAAAqB,UAOAE,gBAAA,WACA,YAAAhc,KAAAya,EAAAwB,cAMAziB,KAAA6gB,SAAA4B,aAAAxB,EAAAwB,aALAziB,KAAA2W,QAAA,QACAhU,QAAA,mCAAAse,EAAAyB,YAMAtK,IAAA,WACAgI,KACAa,EAAAiB,MACA9B,EAAA8B,IAAAjB,EAAAiB,KAEAjB,EAAAM,YACAnB,EAAAmB,UAAAN,EAAAM,YAGAoB,aAAA,WACA3iB,KAAA6gB,SAAA+B,UAAA1C,EACAlgB,KAAA6gB,SAAAgC,YAAA7iB,KAAA6gB,SAAAgC,aAAAtC,EAEAU,EAAAa,YAOA3B,EAAA2B,aACA3B,EAAA2B,eAEAjD,EAAAsB,EAAA2B,WAAAb,EAAAa,aATA9hB,KAAA2W,QAAA,QACAhU,QAAA,0CAUAmgB,MAAA,WAGA,GAFA9iB,KAAA6gB,SAAAgC,YAAA7iB,KAAA6gB,SAAAgC,aAAAtC,EAEAU,EAAAa,YAAAb,EAAAa,WAAAiB,MAAA9B,EAAAa,WAAA,aAAAb,EAAAa,WAAAkB,KAAA,CAQA,IAAAC,EAAAjjB,KAAA6gB,SAAAgC,YAAA5B,EAAAa,WAAAiB,MAEAE,EAAAhC,EAAAa,WAAA,aAAAmB,EAAAhC,EAAAa,WAAA,iBACAZ,EAAA+B,EAAAhC,EAAAa,WAAA,aAGAX,GACArH,QAAA,OAAAtT,KAAAya,EAAAa,WAAAoB,UAEA/B,EAAA,WACAA,EAAAgC,YAAA,EAEAhC,EAAAgC,WAAA,OAAA3c,KAAAya,EAAAa,WAAAsB,YAEAnC,EAAAa,WAAAuB,WACAlC,EAAAmC,SAAArC,EAAAa,WAAAuB,UAEApC,EAAAa,WAAAE,MACAb,EAAAe,IAAAjB,EAAAa,WAAAE,KAEAf,EAAAa,WAAA,iBACAX,EAAAoC,WAAAtC,EAAAa,WAAA,gBAEAb,EAAAa,WAAA0B,kBACArC,EAAAsC,gBAAAxC,EAAAa,WAAA0B,iBAEAvC,EAAAa,WAAA4B,SACAvC,EAAAwC,OAAA,OAAAnd,KAAAya,EAAAa,WAAA4B,SAIAxC,EAAAD,EAAAa,WAAAkB,MAAA7B,OAtCAnhB,KAAA2W,QAAA,QACAhU,QAAA,gDAuCAiU,cAAA,WACAgK,GAAA,EACAT,EAAAvJ,eAAA,EACA5W,KAAA6gB,SAAAE,oBAAA1X,KAAA6W,EAAA3d,SAEAqhB,oBAAA,WACA5jB,KAAA6gB,SAAAgD,eAAA5C,EAAA4C,eACA7jB,KAAA6gB,SAAAiD,eAAA7C,EAAA6C,gBAEAC,eAAA,YACAnL,SAAAqI,EAAAY,WAAAZ,EAAAY,SAAA,EACA7hB,KAAA2W,QAAA,QACAhU,QAAA,qCAAAse,EAAAY,WAIA7hB,KAAA6gB,SAAAmD,eAAA/C,EAAAY,UAEAoC,cAAA,YACArL,SAAAqI,EAAAY,WAAAZ,EAAAY,SAAA,EACA7hB,KAAA2W,QAAA,QACAhU,QAAA,oCAAAse,EAAAY,WAIA7hB,KAAA6gB,SAAAqD,cAAAjD,EAAAY,UAEAsC,UAAA,WACAhE,EAAAiE,OAAAnD,EAAApR,MAEAwU,eAAA,WACAlE,EAAAmE,WAAArD,EAAApR,MAEA0U,SAAA,WACApE,EAAAqE,MAAAvD,EAAApR,QAEWoR,EAAAwD,UAAAnE,GAAA/f,KAAAR,IAEXmiB,IAAA,WACA/B,EAAA+B,IAAAjB,EAAAiB,IACAhC,EAAA7W,KAAA8W,IAGAngB,KAAA6gB,SAAAmD,gBAAA,aAAA7D,IACAngB,KAAA2W,QAAA,QACAhU,QAAA,uDAEAwd,EAAA0B,SAAA7hB,KAAA6gB,SAAAmD,gBAGA3D,IACAF,EAAAxe,IAAA0e,GAEAF,EAAAuE,SAAA9D,EAEAR,IACAD,EAAA/H,IAAAgI,GAIAD,MAEAwE,QAAA,eAGO1D,EAAA1Y,MAAAhI,KAAAR,KAGP+f,EA8BA,OA3UAN,EAAAxO,EAAA6O,GAuTA1G,EAAAnI,IACArP,IAAA,OACAN,MAAA,SAAAujB,GACA5kB,KAAAggB,WAAA3W,KAAAub,MAUAjjB,IAAA,MACAN,MAAA,WAEArB,KAAAggB,WAAA3W,KAAA,UAIA2H,EA5UA,CA6UCiO,EAAA,YAEDtf,EAAA,WAAAqR,wBClYA,SAAArI,EAAAkc,GACA,OAAAA,EAAA1hB,QAAA,iBAHAxD,EAAAC,EAAAD,QAAAgJ,EAMAhJ,EAAA8F,KAAA,SAAAof,GACA,OAAAA,EAAA1hB,QAAA,YAGAxD,EAAAiG,MAAA,SAAAif,GACA,OAAAA,EAAA1hB,QAAA,kCCZAvD,EAAAD,QAAAoU,EAEA,IAAA9R,EAAAnB,OAAAkB,UAAAC,eAEA,SAAA8R,IAGA,IAFA,IAAAsF,KAEAjZ,EAAA,EAAmBA,EAAAkC,UAAAC,OAAsBnC,IAAA,CACzC,IAAA2e,EAAAzc,UAAAlC,GAEA,QAAAuB,KAAAod,EACA9c,EAAA1B,KAAAwe,EAAApd,KACA0X,EAAA1X,GAAAod,EAAApd,IAKA,OAAA0X,6DCjBAyL,EAAA,WAA0B,IAAAC,EAAA/kB,KAAaglB,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAAA,EAAA,OAA2BE,YAAA,WAAqBF,EAAA,gBAAqBE,YAAA,kBAAAC,OAAqCC,QAAAP,EAAAQ,eAA4BpH,IAAKqH,MAAAT,EAAAU,kBAA2B,MAC/PC,yCCeA/d,OAAAge,QAAAC,EAAA,KACA1lB,EAAA,QAEA,IAAA2lB,GACAllB,KAAA,OACA2Y,OACAwM,KAAAvO,QAEAwO,YACAC,YAAAC,EAAA,gBAGAC,QATA,aAYArW,KAZA,WAaA,OACA0V,eAEArZ,OAAA,MACAia,UACAC,iBAAA,EACA7d,KAAA,wBACA8d,IAAA,+FAEAC,YACAC,aAAA,EACAC,iBAAA,GAEAC,OAAAC,KAAAN,iBAAA,IACAO,OAAAD,KAAAN,iBAAA,IACAQ,OAAA,2EAIAC,SACApB,cADA,SACAqB,GACAA,EAAAC,MAAAL,IAAAM,IAAAC,cAAA,SAAA3B,GAEA,OAAAA,MCvD0Y4B,EAAA,YCM3X,SAAAC,EACfC,EACAtC,EACAY,EACA2B,EACAC,EACAC,EACAC,EACAC,GAGA,IAqBAC,EArBApC,EAAA,oBAAA8B,EACAA,EAAA9B,QACA8B,EAiDA,GA9CAtC,IACAQ,EAAAR,SACAQ,EAAAI,kBACAJ,EAAAqC,WAAA,GAIAN,IACA/B,EAAAsC,YAAA,GAIAL,IACAjC,EAAAuC,SAAA,UAAAN,GAIAC,GACAE,EAAA,SAAAI,GAEAA,EACAA,GACA9nB,KAAA+nB,QAAA/nB,KAAA+nB,OAAAC,YACAhoB,KAAAioB,QAAAjoB,KAAAioB,OAAAF,QAAA/nB,KAAAioB,OAAAF,OAAAC,WAEAF,GAAA,qBAAAI,sBACAJ,EAAAI,qBAGAZ,GACAA,EAAA/mB,KAAAP,KAAA8nB,GAGAA,KAAAK,uBACAL,EAAAK,sBAAAC,IAAAZ,IAKAlC,EAAA+C,aAAAX,GACGJ,IACHI,EAAAD,EACA,WAAqBH,EAAA/mB,KAAAP,UAAAsoB,MAAAC,SAAAC,aACrBlB,GAGAI,EACA,GAAApC,EAAAsC,WAAA,CAGAtC,EAAAmD,cAAAf,EAEA,IAAAgB,EAAApD,EAAAR,OACAQ,EAAAR,OAAA,SAAA9hB,EAAA8kB,GAEA,OADAJ,EAAAnnB,KAAAunB,GACAY,EAAA1lB,EAAA8kB,QAEK,CAEL,IAAAa,EAAArD,EAAAsD,aACAtD,EAAAsD,aAAAD,KACArR,OAAAqR,EAAAjB,IACAA,GAIA,OACA/nB,QAAAynB,EACA9B,WClFA,IAAAuD,EAAgB1B,EACdD,EACApC,EACAY,GACF,EACA,KACA,KACA,MAIAmD,EAAAvD,QAAAwD,OAAA,WACe,IAAAC,EAAAF,UClBfG,EAAA,kDCAAloB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAA4nB,EAAA,WAAkC,SAAAC,EAAAC,EAAA/oB,GAAiC,IAAAgpB,KAAeC,GAAA,EAAeC,GAAA,EAAgBC,OAAAtc,EAAoB,IAAM,QAAAuc,EAAAC,EAAAN,EAAAhoB,OAAAuoB,cAA0CL,GAAAG,EAAAC,EAAAE,QAAA9N,MAA+BwN,GAAA,EAAkC,GAArBD,EAAA/f,KAAAmgB,EAAAnoB,OAAqBjB,GAAAgpB,EAAA7mB,SAAAnC,EAAA,MAAuC,MAAAwpB,GAAcN,GAAA,EAAWC,EAAAK,EAAY,QAAU,KAAMP,GAAAI,EAAA,WAAAA,EAAA,YAA2C,QAAU,GAAAH,EAAA,MAAAC,GAAsB,OAAAH,EAAe,gBAAAD,EAAA/oB,GAA2B,GAAA2a,MAAA8O,QAAAV,GAA0B,OAAAA,EAAc,GAAAhoB,OAAAuoB,YAAA5oB,OAAAqoB,GAA2C,OAAAD,EAAAC,EAAA/oB,GAAuC,UAAA4U,UAAA,yDAAjkB,GAEAmE,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAxhB,GAEAsF,EAAc9e,EAAQ,QAEtB+e,EAAApF,EAAAmF,GAEA,SAAAnF,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAE7E,SAAAyN,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAE3F,SAAAsK,EAAAvf,EAAAQ,GAAiD,IAAAR,EAAa,UAAAwf,eAAA,6DAAyF,OAAAhf,GAAA,kBAAAA,GAAA,oBAAAA,EAAAR,EAAAQ,EAEvJ,SAAAif,EAAAC,EAAAC,GAA0C,uBAAAA,GAAA,OAAAA,EAA+D,UAAA1K,UAAA,kEAAA0K,GAAuGD,EAAAzd,UAAAlB,OAAAY,OAAAge,KAAA1d,WAAyEkE,aAAe7E,MAAAoe,EAAAze,YAAA,EAAAyY,UAAA,EAAAD,cAAA,KAA6EkG,IAAA5e,OAAA6e,eAAA7e,OAAA6e,eAAAF,EAAAC,GAAAD,EAAAG,UAAAF,GAYrX,IAAAoK,EAAA,WACA,IAAAnoB,EAAA,QACAN,EAAA,gBACA0oB,EAAA,MAAApoB,EAAA,QAAAN,EAAA,IAEA,WAAA2oB,OAAA,WAAAD,EAAA,MAQAE,EAAA,SAAAnI,GAEA,IAAAuD,EAAAvD,EAAAne,MAAAmmB,KACAhiB,KACA1H,EAAAilB,EAAA9iB,OACA2nB,OAAA,EAEA,MAAA9pB,IAEA,KAAAilB,EAAAjlB,KAKA8pB,EAAA,eAAAC,KAAA9E,EAAAjlB,IAAAiX,MAAA,GAEA6S,EAAA,GAAAA,EAAA,GAAA/mB,QAAA,iBACA+mB,EAAA,GAAAA,EAAA,GAAA/mB,QAAA,iBACA+mB,EAAA,GAAAA,EAAA,GAAA/mB,QAAA,wBACA2E,EAAAoiB,EAAA,IAAAA,EAAA,IAEA,OAAApiB,GA4BAsiB,EAAA,SAAAvK,GAGA,SAAAuK,IAGA,OAFArQ,EAAA/Z,KAAAoqB,GAEA9K,EAAAtf,MAAAoqB,EAAAxK,WAAA9e,OAAAif,eAAAqK,IAAA7pB,KAAAP,OA4VA,OAjWAwf,EAAA4K,EAAAvK,GAeA1G,EAAAiR,IACAzoB,IAAA,OACAN,MAAA,SAAA6D,GACA,IAAAhC,OAAA,EACAmnB,OAAA,EAIA,GADAnlB,IAAA/B,QAAA,iCACA,IAAA+B,EAAA3C,OAMA,SAAA2C,EAAA,GASA,OAAAA,EAAA4N,QAAA,QAcA,GAJA5N,IAAA/B,QAAA,SAGAD,EAAA,WAAAinB,KAAAjlB,GACAhC,EACAlD,KAAA2W,QAAA,QACApO,KAAA,MACAkc,QAAA,YAHA,CAQA,GADAvhB,EAAA,gCAAAinB,KAAAjlB,GACAhC,EAYA,OAXAmnB,GACA9hB,KAAA,MACAkc,QAAA,OAEAvhB,EAAA,KACAmnB,EAAAxI,SAAAnb,WAAAxD,EAAA,KAEAA,EAAA,KACAmnB,EAAAC,MAAApnB,EAAA,SAEAlD,KAAA2W,QAAA,OAAA0T,GAIA,GADAnnB,EAAA,qCAAAinB,KAAAjlB,GACAhC,EASA,OARAmnB,GACA9hB,KAAA,MACAkc,QAAA,kBAEAvhB,EAAA,KACAmnB,EAAAxI,SAAApb,SAAAvD,EAAA,aAEAlD,KAAA2W,QAAA,OAAA0T,GAIA,GADAnnB,EAAA,mCAAAinB,KAAAjlB,GACAhC,EASA,OARAmnB,GACA9hB,KAAA,MACAkc,QAAA,iBAEAvhB,EAAA,KACAmnB,EAAAxI,SAAApb,SAAAvD,EAAA,aAEAlD,KAAA2W,QAAA,OAAA0T,GAIA,GADAnnB,EAAA,8BAAAinB,KAAAjlB,GACAhC,EASA,OARAmnB,GACA9hB,KAAA,MACAkc,QAAA,WAEAvhB,EAAA,KACAmnB,EAAAxS,QAAApR,SAAAvD,EAAA,aAEAlD,KAAA2W,QAAA,OAAA0T,GAIA,GADAnnB,EAAA,wCAAAinB,KAAAjlB,GACAhC,EASA,OARAmnB,GACA9hB,KAAA,MACAkc,QAAA,kBAEAvhB,EAAA,KACAmnB,EAAA/H,OAAA7b,SAAAvD,EAAA,aAEAlD,KAAA2W,QAAA,OAAA0T,GAIA,GADAnnB,EAAA,gDAAAinB,KAAAjlB,GACAhC,EASA,OARAmnB,GACA9hB,KAAA,MACAkc,QAAA,0BAEAvhB,EAAA,KACAmnB,EAAA/H,OAAA7b,SAAAvD,EAAA,aAEAlD,KAAA2W,QAAA,OAAA0T,GAIA,GADAnnB,EAAA,gCAAAinB,KAAAjlB,GACAhC,EASA,OARAmnB,GACA9hB,KAAA,MACAkc,QAAA,iBAEAvhB,EAAA,KACAmnB,EAAA5H,aAAAvf,EAAA,SAEAlD,KAAA2W,QAAA,OAAA0T,GAIA,GADAnnB,EAAA,4CAAAinB,KAAAjlB,GACAhC,EAYA,OAXAmnB,GACA9hB,KAAA,MACAkc,QAAA,aAEAvhB,EAAA,KACAmnB,EAAA9nB,OAAAkE,SAAAvD,EAAA,QAEAA,EAAA,KACAmnB,EAAA3N,OAAAjW,SAAAvD,EAAA,aAEAlD,KAAA2W,QAAA,OAAA0T,GAIA,GADAnnB,EAAA,iCAAAinB,KAAAjlB,GACAhC,EASA,OARAmnB,GACA9hB,KAAA,MACAkc,QAAA,eAEAvhB,EAAA,KACAmnB,EAAA/I,SAAA,KAAA9a,KAAAtD,EAAA,UAEAlD,KAAA2W,QAAA,OAAA0T,GAIA,GADAnnB,EAAA,qBAAAinB,KAAAjlB,GACAhC,EAAA,CAMA,GALAmnB,GACA9hB,KAAA,MACAkc,QAAA,OAGAvhB,EAAA,IACA,IAAA4e,EAAAmI,EAAA/mB,EAAA,IAKA,GAHA4e,EAAAE,MACAqI,EAAAnI,IAAAJ,EAAAE,KAEAF,EAAAyI,UAAA,CACA,IAAAC,EAAA1I,EAAAyI,UAAA5mB,MAAA,KACA8mB,EAAAxB,EAAAuB,EAAA,GACAjoB,EAAAkoB,EAAA,GACA/N,EAAA+N,EAAA,GAEAJ,EAAA9I,aACAhf,IACA8nB,EAAA9I,UAAAhf,OAAAkE,SAAAlE,EAAA,KAEAma,IACA2N,EAAA9I,UAAA7E,OAAAjW,SAAAiW,EAAA,MAKA1c,KAAA2W,QAAA,OAAA0T,QAIA,GADAnnB,EAAA,4BAAAinB,KAAAjlB,GACAhC,EAAA,CAKA,GAJAmnB,GACA9hB,KAAA,MACAkc,QAAA,cAEAvhB,EAAA,IAGA,GAFAmnB,EAAAvI,WAAAmI,EAAA/mB,EAAA,IAEAmnB,EAAAvI,WAAA4I,WAAA,CACA,IAAA/mB,EAAA0mB,EAAAvI,WAAA4I,WAAA/mB,MAAA,KACAgnB,KAEAhnB,EAAA,KACAgnB,EAAA1e,MAAAxF,SAAA9C,EAAA,QAEAA,EAAA,KACAgnB,EAAAze,OAAAzF,SAAA9C,EAAA,QAEA0mB,EAAAvI,WAAA4I,WAAAC,EAEAN,EAAAvI,WAAA8I,YACAP,EAAAvI,WAAA8I,UAAAnkB,SAAA4jB,EAAAvI,WAAA8I,UAAA,KAEAP,EAAAvI,WAAA,gBACAuI,EAAAvI,WAAA,cAAArb,SAAA4jB,EAAAvI,WAAA,mBAGA9hB,KAAA2W,QAAA,OAAA0T,OA3BA,CA+BA,GADAnnB,EAAA,uBAAAinB,KAAAjlB,GACAhC,EASA,OARAmnB,GACA9hB,KAAA,MACAkc,QAAA,SAEAvhB,EAAA,KACAmnB,EAAAvI,WAAAmI,EAAA/mB,EAAA,UAEAlD,KAAA2W,QAAA,OAAA0T,GAIA,GADAnnB,EAAA,kBAAAinB,KAAAjlB,GACAhC,EACAlD,KAAA2W,QAAA,QACApO,KAAA,MACAkc,QAAA,iBAKA,GADAvhB,EAAA,wBAAAinB,KAAAjlB,GACAhC,EACAlD,KAAA2W,QAAA,QACApO,KAAA,MACAkc,QAAA,sBAHA,CAQA,GADAvhB,EAAA,mCAAAinB,KAAAjlB,GACAhC,EAUA,OATAmnB,GACA9hB,KAAA,MACAkc,QAAA,qBAEAvhB,EAAA,KACAmnB,EAAAxG,eAAA3gB,EAAA,GACAmnB,EAAAvG,eAAA,IAAA+G,KAAA3nB,EAAA,UAEAlD,KAAA2W,QAAA,OAAA0T,GAIA,GADAnnB,EAAA,qBAAAinB,KAAAjlB,GACAhC,EAsBA,OArBAmnB,GACA9hB,KAAA,MACAkc,QAAA,OAEAvhB,EAAA,KACAmnB,EAAAvI,WAAAmI,EAAA/mB,EAAA,IAEAmnB,EAAAvI,WAAAK,KACA,OAAAkI,EAAAvI,WAAAK,GAAA2I,UAAA,KAAAjX,gBACAwW,EAAAvI,WAAAK,GAAAkI,EAAAvI,WAAAK,GAAA2I,UAAA,IAGAT,EAAAvI,WAAAK,GAAAkI,EAAAvI,WAAAK,GAAAjf,MAAA,SACAmnB,EAAAvI,WAAAK,GAAA,GAAA1b,SAAA4jB,EAAAvI,WAAAK,GAAA,OACAkI,EAAAvI,WAAAK,GAAA,GAAA1b,SAAA4jB,EAAAvI,WAAAK,GAAA,OACAkI,EAAAvI,WAAAK,GAAA,GAAA1b,SAAA4jB,EAAAvI,WAAAK,GAAA,OACAkI,EAAAvI,WAAAK,GAAA,GAAA1b,SAAA4jB,EAAAvI,WAAAK,GAAA,OACAkI,EAAAvI,WAAAK,GAAA,IAAAlG,YAAAoO,EAAAvI,WAAAK,WAGAniB,KAAA2W,QAAA,OAAA0T,GAIA,GADAnnB,EAAA,+BAAAinB,KAAAjlB,GACAhC,EAWA,OAVAmnB,GACA9hB,KAAA,MACAkc,QAAA,gBAEAvhB,EAAA,GACAmnB,EAAAxa,KAAA3M,EAAA,GAEAmnB,EAAAxa,KAAA,QAEA7P,KAAA2W,QAAA,OAAA0T,GAIA,GADAnnB,EAAA,0BAAAinB,KAAAjlB,GACAhC,EAWA,OAVAmnB,GACA9hB,KAAA,MACAkc,QAAA,WAEAvhB,EAAA,GACAmnB,EAAAxa,KAAA3M,EAAA,GAEAmnB,EAAAxa,KAAA,QAEA7P,KAAA2W,QAAA,OAAA0T,GAIA,GADAnnB,EAAA,yBAAAinB,KAAAjlB,GACAhC,EAWA,OAVAmnB,GACA9hB,KAAA,MACAkc,QAAA,UAEAvhB,EAAA,GACAmnB,EAAAxa,KAAA3M,EAAA,GAEAmnB,EAAAxa,KAAA,QAEA7P,KAAA2W,QAAA,OAAA0T,GAKArqB,KAAA2W,QAAA,QACApO,KAAA,MACAsH,KAAA3K,EAAAmS,MAAA,YArTArX,KAAA2W,QAAA,QACApO,KAAA,UACAsB,KAAA3E,EAAAmS,MAAA,UAXArX,KAAA2W,QAAA,QACApO,KAAA,MACA2Z,IAAAhd,QAiUAklB,EAlWA,CAmWCnL,EAAA,YAEDtf,EAAA,WAAAyqB,2BCncA,SAAAW,GAAA,IAAAC;;;;;;;CAMA,SAAA/nB,GAAwErD,EAAAD,QAAAsD,KAAxE,CAA2U,WAAa,IAAApD,EAA0B,gBAAAmI,EAAA1G,EAAAO,EAAAX,GAA0B,SAAAiB,EAAAtB,EAAAuG,GAAgB,IAAAvF,EAAAhB,GAAA,CAAU,IAAAS,EAAAT,GAAA,CAAU,IAAA0F,EAAA,mBAAAykB,KAA0C,IAAA5jB,GAAAb,EAAA,OAAgBykB,EAACnqB,GAAA,GAAO,GAAAT,EAAA,OAAAA,EAAAS,GAAA,GAAoB,IAAAoC,EAAA,IAAAT,MAAA,uBAAA3B,EAAA,KAA8C,MAAAoC,EAAAL,KAAA,mBAAAK,EAAkC,IAAA5C,EAAAwB,EAAAhB,IAAYlB,YAAY2B,EAAAT,GAAA,GAAAN,KAAAF,EAAAV,QAAA,SAAAqI,GAAmC,IAAAnG,EAAAP,EAAAT,GAAA,GAAAmH,GAAiB,OAAA7F,EAAAN,GAAAmG,IAAgB3H,IAAAV,QAAAqI,EAAA1G,EAAAO,EAAAX,GAAsB,OAAAW,EAAAhB,GAAAlB,QAA8D,IAA1C,IAAAS,EAAA,mBAAA4qB,KAA0CnqB,EAAA,EAAYA,EAAAK,EAAAqB,OAAW1B,IAAAsB,EAAAjB,EAAAL,IAAY,OAAAsB,EAAvb,EAAmc8oB,GAAA,SAAAD,EAAAprB,EAAAD,GAIrzB,aAEAmB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAA4nB,EAAA,WAAmC,SAAAC,EAAAC,EAAA/oB,GAAiC,IAAAgpB,KAAeC,GAAA,EAAeC,GAAA,EAAgBC,OAAAtc,EAAoB,IAAM,QAAAuc,EAAAC,EAAAN,EAAAhoB,OAAAuoB,cAA0CL,GAAAG,EAAAC,EAAAE,QAAA9N,MAA+BwN,GAAA,EAAkC,GAArBD,EAAA/f,KAAAmgB,EAAAnoB,OAAqBjB,GAAAgpB,EAAA7mB,SAAAnC,EAAA,MAAuC,MAAAwpB,GAAcN,GAAA,EAAWC,EAAAK,EAAY,QAAU,KAAMP,GAAAI,EAAA,WAAAA,EAAA,YAA2C,QAAU,GAAAH,EAAA,MAAAC,GAAsB,OAAAH,EAAe,gBAAAD,EAAA/oB,GAA2B,GAAA2a,MAAA8O,QAAAV,GAA0B,OAAAA,EAAc,GAAAhoB,OAAAuoB,YAAA5oB,OAAAqoB,GAA2C,OAAAD,EAAAC,EAAA/oB,GAAuC,UAAA4U,UAAA,yDAAlkB,GAEA,SAAA6E,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAE7E,IAAA4e,EAAAF,EAAA,iBAEAG,EAAAtR,EAAAqR,GAKAE,EAAA,SAAA/gB,EAAAghB,GAGA,IAFA,IAAA/a,EAAAjG,EAAAiG,KAEAlQ,EAAA,EAAiBA,EAAAkQ,EAAA/N,OAAiBnC,IAAA,CAClC,IAAA4D,EAAAsM,EAAAlQ,GAEA,GAAAirB,GAAArnB,EAAAsnB,aAAAD,GAAArnB,EAAAunB,UACA,OAAAvnB,EAGA,aAGAwnB,EAAA,SAAA1I,EAAAzY,GACA,IAAAqS,EAAApa,UAAAC,QAAA,QAAA0K,IAAA3K,UAAA,KAAAA,UAAA,GAEA,GAAAwgB,EAAA9B,SAOA,IAHA,IAAAqK,EAAA3O,EACA1Y,OAAAiJ,EAEA7M,EAAA,EAAiBA,EAAA0iB,EAAA9B,SAAAze,OAA2BnC,IAAA,CAC5C,IAAAqrB,EAAA3I,EAAA9B,SAAA5gB,GAUA,GARA4D,IAKAA,EAAAonB,EAAA/gB,EAAAghB,EAAAI,EAAA5J,SAAA,IAGA7d,EAAA,CACA,aAAAynB,EAAA,CAEAznB,EAAAiC,QAAAolB,EACArnB,EAAAunB,UAAAF,EACAA,GAAAI,EAAA5J,SACA7d,EAAA,KACA,SAGA,GAAAqnB,EAAArnB,EAAAiC,QAAA,CAEAolB,GAAAI,EAAA5J,SACA,SAIA7d,EAAAiC,SAAAwlB,EAAA5J,cAWA,GATA,WAAA4J,IACAznB,EAAA,IAAAmnB,EAAA,WAAAtY,OAAAwY,IAAAI,EAAA5J,SAAA4J,EAAArH,QACApgB,EAAAsnB,YAAAD,EAGArnB,EAAAunB,UAAAF,EAAA3kB,WAAA+kB,EAAArH,QACA/Z,EAAAqhB,OAAA1nB,IAGA,eAAAynB,EAAA,CAEA,IAAAE,OAAA1e,EACA2e,OAAA3e,EAKA4e,EAAAJ,EAAAnH,WAAA3gB,MAAA,KAAAyU,IAAA1R,YAEAolB,EAAA7C,EAAA4C,EAAA,GAEAF,EAAAG,EAAA,GACAF,EAAAE,EAAA,GAEA9nB,EAAA,IAAAmnB,EAAA,WAAAtY,OAAAwY,IAAAI,EAAA5J,SAAA,IACA7d,EAAAsnB,YAAAD,EAAAM,EACA3nB,EAAAunB,UAAAvnB,EAAAsnB,YAAAM,EACAvhB,EAAAqhB,OAAA1nB,GAGAqnB,GAAAI,EAAA5J,WAIAliB,EAAA,YACA6rB,eACAJ,aAEAxrB,EAAAD,UAAA,aACGosB,gBAAA,KAAmBC,GAAA,SAAAhB,EAAAprB,EAAAD,GAWtB,aAEAmB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAEA,IAAA4qB,EAAA,SAAAC,EAAA9rB,GACA,OAAA8rB,EAAA1mB,MAAApF,GAAA,IAAA8rB,EAAAvmB,IAAAvF,IASA+rB,EAAA,SAAAnkB,EAAA5H,GACA,IAAAiB,EAAA2G,EAAAsN,SAAA,IAEA,WAAAwV,UAAA,IAAAzpB,EAAAkB,QAAAlB,GAAAjB,EAAA,WAEAgsB,EAAA,SAAApkB,GACA,OAAAA,GAAA,IAAAA,EAAA,IACAuP,OAAAC,aAAAxP,GAEA,KAaAqkB,EAAA,SAAA1pB,GACA,IAAA2pB,KAgBA,OAdAxrB,OAAAyrB,KAAA5pB,GAAA6pB,QAAA,SAAA7qB,GACA,IAAAN,EAAAsB,EAAAhB,GAEA8qB,YAAAC,OAAArrB,GACAirB,EAAA3qB,IACAwa,MAAA9a,EAAA+P,OACAyJ,WAAAxZ,EAAAwZ,WACA1D,WAAA9V,EAAA8V,YAGAmV,EAAA3qB,GAAAN,IAIAirB,GAOAK,EAAA,SAAAC,GACA,IAAArL,EAAAqL,EAAArL,YACAhf,OAAAoW,IACA+D,OAAA,GAGA,OAAA6E,EAAAhf,OAAAgf,EAAA7E,OAAAkQ,EAAAC,aAAAC,KAAA,MAMAC,GACAC,QAAA,SAAAnd,GAOA,IANA,IAAAsM,EAAApB,MAAA/Y,UAAAqV,MAAA9W,KAAAsP,GACA5B,EAAA,GACAnG,EAAA,GACAmlB,OAAAhgB,EACAigB,OAAAjgB,EAEAkgB,EAAA,EAAmBA,EAAAhR,EAAA5Z,OAAA0L,EAAyBkf,IAC5CF,EAAA9Q,EAAA9E,MAAA8V,EAAAlf,EAAAkf,EAAAlf,KAAAmK,IAAA+T,GAAAW,KAAA,IACAI,EAAA/Q,EAAA9E,MAAA8V,EAAAlf,EAAAkf,EAAAlf,KAAAmK,IAAAgU,GAAAU,KAAA,IACAhlB,GAAAmlB,EAAA,IAAAC,EAAA,KAEA,OAAAplB,GAEAslB,QAAA,SAAAhM,GACA,OAAA2L,EAAAC,QAAA5L,EAAAjF,QAEAkR,WAAA,SAAAC,GACA,IAAAxlB,EAAA,GACA1H,OAAA6M,EAEA,IAAA7M,EAAA,EAAeA,EAAAktB,EAAA/qB,OAAmBnC,IAClC0H,GAAAmkB,EAAAqB,EAAAltB,GAAA,IAEA,OAAA0H,GAEAukB,4BACAM,iBAGAhtB,EAAA,WAAAotB,EACAntB,EAAAD,UAAA,gBACI4tB,GAAA,SAAAvC,EAAAprB,EAAAD,GACJ,aAEAmB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAEA1B,EAAA,YACA6tB,mBAAA,GACAC,uBAAA,GACAC,wBAAA,EAGAC,mBAAA,IAEAC,sBAAA,EACAC,0BAAA,GACAC,2BAAA,GAEAluB,EAAAD,UAAA,gBACIouB,GAAA,SAAA/C,EAAAprB,EAAAD,GACJ,aAMA,SAAAka,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAJ7ExL,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAKA,IAAA6pB,EAAAF,EAAA,iBAEAG,EAAAtR,EAAAqR,GAEA8C,EAAAhD,EAAA,iBAEAiD,EAAAjD,EAAA,eAUAkD,EAAA,SAAAnuB,GACAA,EAAAouB,UAAA,SAAA9D,GACA,IAAAxa,EAAAwa,EAAAxa,KACA4K,EAAA,IAAAQ,WAAApL,EAAA4K,UAAA0B,MAAAtM,EAAA4K,UAAAI,WAAAhL,EAAA4K,UAAAtD,YACAxV,EAAA,IAAAsa,YAAApM,EAAAlO,IAAAwa,MAAAtM,EAAAlO,IAAAkZ,WAAAhL,EAAAlO,IAAAwV,WAAA,GACAiL,EAAA,IAAAnG,YAAApM,EAAAuS,GAAAjG,MAAAtM,EAAAuS,GAAAvH,WAAAhL,EAAAuS,GAAAjL,WAAA,GAGA,IAAA6W,EAAApS,UAAAnB,EAAA9Y,EAAAygB,EAAA,SAAAwH,EAAAzN,GACAgP,EAAA,WAAAiD,aAAA,EAAAH,EAAA5B,4BACAtN,OAAAlP,EAAAkP,OACA/D,UAAAmB,KACOA,EAAA/K,aAMPzR,EAAA,oBAAAI,GACA,WAAAmuB,EAAAnuB,IAGAH,EAAAD,UAAA,aACG0uB,cAAA,EAAAC,gBAAA,GAAAvC,gBAAA,KAAsDwC,GAAA,SAAAvD,EAAAprB,EAAAD,IACzD,SAAAorB,GAIA,aAEAjqB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAA8X,EAAA,WAAiC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAzhB,GAEA8U,EAAA,SAAAC,EAAAC,EAAAC,GAAuC,IAAAC,GAAA,EAAmB,MAAAA,EAAA,CAA4B,IAAA9sB,EAAA2sB,EAAA1sB,EAAA2sB,EAAAG,EAAAF,EAAiDC,GAAA,EAAgB,OAAA9sB,MAAAuT,SAAArT,WAAkD,IAAA8sB,EAAAhuB,OAAAiuB,yBAAAjtB,EAAAC,GAA8D,QAAAkL,IAAA6hB,EAAA,CAAuO,aAAAA,EAA4B,OAAAA,EAAAztB,MAA4B,IAAAT,EAAAkuB,EAAA7tB,IAAuB,QAAAgM,IAAArM,EAA4B,OAAoB,OAAAA,EAAAL,KAAAsuB,GAA5U,IAAA5G,EAAAnnB,OAAAif,eAAAje,GAA4C,UAAAmmB,EAAuB,OAA2BwG,EAAAxG,EAAayG,EAAA3sB,EAAgB4sB,EAAAE,EAAgBD,GAAA,EAAeE,EAAA7G,OAAAhb,IAE3b,SAAA4M,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAE7E,SAAAyN,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAE3F,SAAAwK,EAAAC,EAAAC,GAA0C,uBAAAA,GAAA,OAAAA,EAA+D,UAAA1K,UAAA,kEAAA0K,GAAuGD,EAAAzd,UAAAlB,OAAAY,OAAAge,KAAA1d,WAAyEkE,aAAe7E,MAAAoe,EAAAze,YAAA,EAAAyY,UAAA,EAAAD,cAAA,KAA6EkG,IAAA5e,OAAA6e,eAAA7e,OAAA6e,eAAAF,EAAAC,GAAAD,EAAAG,UAAAF,GAErX,IAAAsP,EAAAhE,EAAA,qBAEAiE,EAAApV,EAAAmV,GAEAE,EAAAlE,EAAA,iBAEAmE,EAAAnE,EAAA,oBAEAoE,EAAAvV,EAAAsV,GAEAE,EAAArE,EAAA,wBAEAsE,EAAAzV,EAAAwV,GAEAE,EAAAvE,EAAA,YAEAwE,EAAA3V,EAAA0V,GAEAE,EAAA,qBAAA9nB,cAAA,gCAAAojB,IAAA,gBAEA2E,EAAA7V,EAAA4V,GAEAE,EAAA3E,EAAA,iBAEA4E,EAAA/V,EAAA8V,GAEAE,EAAA7E,EAAA,qBAEA8E,EAAAjW,EAAAgW,GAEAE,EAAA/E,EAAA,iDAEAgF,EAAAhF,EAAA,cAEAiF,EAAApW,EAAAmW,GAEAE,EAAAlF,EAAA,sBAEAmF,EAAAtW,EAAAqW,GAEAE,EAAApF,EAAA,YAEAqF,EAAAxW,EAAAuW,GAEAE,EAAAtF,EAAA,oBAEAuF,EAAAvF,EAAA,kBAEAwF,EAAA,IAEAC,OAAAxjB,EAGAyjB,GACAC,WAAA,OACAC,yBAAA,UAEAC,aAAA,KAKAC,GAAA,uIACAC,EAAA,SAAAC,GACA,OAAAhxB,KAAAixB,oBAAAD,GAAAhxB,KAAAkxB,mBAAAF,IAGAG,EAAA,WACA,IAAArpB,OAAAmF,EAEA,IACAnF,EAAAkjB,EAAAoG,QAAA,sBACG,MAAAppB,IAIH,OAAAF,GAYAupB,EAAA,SAAAC,GACA,OAAAA,EAAAnuB,QAAA,+BAAAD,GACA,SAAA6sB,EAAAwB,wBAAAruB,IAAA,MAIAvD,EAAA0xB,sBAQA,IAAAG,EAAA,SAAAjpB,EAAA4G,EAAAsiB,GAIA,OAAAlpB,EAAA,IAAA4G,EAAA,aAAoCsiB,EAAAC,OAAA,SAAAjxB,GACpC,QAAAA,IACGqsB,KAAA,WAQH6E,EAAA,SAAA7O,GAKA,OAAAA,EAAA9B,UAAA8B,EAAA9B,SAAAze,QAAAugB,EAAA9B,SAAA,GAAA5I,IACA,MAEA,QASAwZ,EAAA,SAAA9O,GAGA,IAAA+O,EAAA/O,EAAAhB,eAEA,OAAA+P,EAAAC,QACA,EAAAxB,EAAAyB,aAAAF,EAAAC,QAEApB,GAiBAsB,EAAA,SAAAC,EAAAnP,GACA,IAAAoP,EAAAP,EAAA7O,GACAqP,EAAAP,EAAA9O,GACA+O,EAAA/O,EAAAhB,eAEAsQ,GAAA,EACAC,GAAA,EAEA,IAAAvP,EAEA,SAGA,GAAAmP,EAAApP,YAAArC,OAAAqR,EAAArR,MAAA,CACA,IAAA8R,EAAAL,EAAApP,YAAArC,MAAAqR,EAAArR,OAGA,GAAA8R,EAKA,QAAAC,KAJAF,GAAA,EAEAD,GAAA,EAEAE,EACA,IAAAA,EAAAC,GAAArQ,IAAA,CACAkQ,GAAA,EACA,OAQAC,IAAAF,EAAAtB,eACAnB,EAAA,WAAA8C,IAAAC,KAAA,+HACAN,EAAAtB,aAAAH,EAAAG,cAIA,IAAA6B,KAEAP,EAAAxB,aACA+B,EAAAC,MAAA,GAAAR,EAAAxB,WAAAwB,EAAAvB,0BAGAuB,EAAAtB,eACA6B,EAAAE,MAAA,WAAAT,EAAAtB,cAKA,IAAAgC,EAAArB,EAAA,QAAAU,GAAAQ,EAAAE,QACAE,EAAAtB,EAAA,QAAAU,GAAAQ,EAAAC,QACAI,EAAAvB,EAAA,QAAAU,GAAAQ,EAAAC,MAAAD,EAAAE,QAEA,OAAAP,GACAD,GAAAM,EAAAC,OACAG,EAAAD,IAKAE,EAAAF,GAKAH,EAAAC,OAMAI,IALAF,IAQAlzB,EAAAqyB,wBAWA,IAAAgB,EAAA,SAAAC,GAGA,SAAAD,EAAA1N,GACA,IAAAxF,EAAA9f,KAEA+Z,EAAA/Z,KAAAgzB,GAEAxE,EAAA1tB,OAAAif,eAAAiT,EAAAhxB,WAAA,cAAAhC,MAAAO,KAAAP,MAEA,IAAAkzB,EAAA5N,EAAA4N,IACA9M,EAAAd,EAAAc,gBACA7kB,EAAA+jB,EAAA/jB,KACA4xB,EAAA7N,EAAA6N,KACAC,EAAA9N,EAAA8N,UACAC,EAAA/N,EAAA+N,UACAC,EAAAhO,EAAAgO,WACAC,EAAAjO,EAAAiO,kBACAC,EAAAlO,EAAAkO,yBAEA,IAAAN,EACA,UAAA1wB,MAAA,wCAGAiuB,EAAA4C,EAEArzB,KAAAomB,kBACApmB,KAAA+mB,MAAAoM,EACAnzB,KAAAyzB,KAAAN,EAAAzM,IACA1mB,KAAA0zB,MAAAnyB,EACAvB,KAAA2zB,YAAAL,EACAtzB,KAAAuzB,oBACAvzB,KAAAwzB,2BACAxzB,KAAA2zB,cACA3zB,KAAA4zB,cAAA5zB,KAAA+mB,MAAA8M,aAAA,sBACA7zB,KAAA4zB,cAAAE,gCAAA,IAGA9zB,KAAA+zB,iBACA3N,gBAAApmB,KAAAomB,gBACA4N,QAAA,MAGAh0B,KAAAi0B,aAAA,EAAA1D,EAAA2D,oBAEAl0B,KAAAm0B,YAAA,IAAAzE,EAAA,WAAA0E,aAA6D7yB,SAG7DvB,KAAAm0B,YAAAE,iBAAA,aAAAr0B,KAAAs0B,kBAAA1yB,KAAA5B,OAEAA,KAAAu0B,UAAA7E,EAAA,WAAA8E,mBACAx0B,KAAAy0B,WAAA,WACA,UAGAz0B,KAAA00B,gBAAA,IAAA5E,EAAA,WAAAxK,GACAtlB,KAAA20B,sBAAAxB,EAAAyB,oBACAC,KAAA,WACAC,MAAA,qBACK,GAAAzqB,MAELrK,KAAA+0B,YAAA,EAAA9E,EAAA,YAAAE,EAAA,WAAAgB,KAEA,IAAA6D,GACAtO,IAAA1mB,KAAAyzB,KACAU,YAAAn0B,KAAAm0B,YACAc,YAAAj1B,KAAA+mB,MAAAkO,YAAArzB,KAAA5B,KAAA+mB,OACAmO,SAAA,WACA,OAAApV,EAAAoV,YAEAC,QAAA,WACA,OAAArV,EAAAiH,MAAAoO,WAEAtT,SAAA,WACA,OAAA/B,EAAAqU,YAAAtS,UAEAuT,UAAA,WACA,OAAAtV,EAAA2U,cAEAY,iBAAA,WACA,OAAAvV,EAAAuV,oBAEAjC,YACAkC,eAAAt1B,KAAA00B,gBACAa,UAAAv1B,KAAA+0B,YAIA/0B,KAAAw1B,sBAAA,IAAAvG,EAAA,WAAAiE,EAAAlzB,KAAAyzB,KAAAzzB,KAAAomB,iBACApmB,KAAAy1B,sCAIAz1B,KAAAkxB,mBAAA,IAAA9B,EAAA,WAAAM,EAAA,WAAAgG,aAAAV,GACAW,qBAAA31B,KAAA20B,sBACAiB,WAAA,SACKtQ,GAGLtlB,KAAAixB,oBAAA,IAAA7B,EAAA,WAAAM,EAAA,WAAAgG,aAAAV,GACAY,WAAA,UACKtQ,GAELtlB,KAAA61B,uBAAA,IAAAvG,EAAA,WAAAI,EAAA,WAAAgG,aAAAV,GACAY,WAAA,QACKtQ,GAELtlB,KAAA81B,+BAGAhF,EAAAtE,QAAA,SAAAwE,GACAlR,EAAAkR,EAAA,KAAAD,EAAAnvB,KAAAke,EAAAkR,KAGAhxB,KAAAw1B,sBAAAO,OAm9BA,OApkCAvW,EAAAwT,EAAAC,GA2HA9Z,EAAA6Z,IACArxB,IAAA,sCACAN,MAAA,WACA,IAAA20B,EAAAh2B,KAEAA,KAAAw1B,sBAAArX,GAAA,4BACA,IAAA2E,EAAAkT,EAAAR,sBAAA1S,QACAmT,EAAA,IAAAD,EAAAR,sBAAAxR,eAAA,KAIA,EAAAkL,EAAAgH,0BAAAF,EAAAR,sBAAAvD,OAAA+D,EAAAR,sBAAA1S,SACAkT,EAAAjC,gBAAAC,QAAA,EAEAgC,EAAAjC,gBAAAC,QAAAiC,EAKAnT,EAAArB,SAAA,SAAAuU,EAAAjP,MAAAoP,YACAH,EAAA9E,mBAAAxO,SAAAI,EAAAkT,EAAAjC,iBACAiC,EAAA9E,mBAAA6E,SAGA,EAAAxF,EAAA6F,mBACAC,gBACA7V,MAAAwV,EAAA/E,oBACAtQ,UAAAqV,EAAAH,uBACAS,KAAAN,EAAA9E,oBAEAiC,KAAA6C,EAAAjP,MACAwP,eAAAP,EAAAjC,gBACAyC,qBAAAR,EAAAR,sBACAj0B,KAAAy0B,EAAAtC,MACAhN,IAAAsP,EAAAvC,KACAxB,OAAA+D,EAAA/D,SACAwE,WAAAT,EAAA/B,YACAyC,yBAAAV,EAAAU,yBAAA90B,KAAAo0B,KAGAA,EAAAW,sBAAAX,EAAA/D,SAAAnP,GAEA,IACAkT,EAAAY,sBACS,MAAA5uB,GAET,OADA0nB,EAAA,WAAA8C,IAAAC,KAAA,iCAAAzqB,GACAguB,EAAA7B,YAAA0C,YAAA,UAEAb,EAAAc,iBAEAd,EAAArf,QAAA,0BAGA3W,KAAAw1B,sBAAArX,GAAA,4BACA,IAAA4Y,EAAAf,EAAAR,sBAAA1S,QAEA,IAAAiU,EAAA,CACA,IAAAC,OAAA/pB,EAYA,OAVA+oB,EAAAxC,2BACAwD,EAAAhB,EAAAiB,yBAGAD,IACAA,EAAAhB,EAAAkB,kBAGAlB,EAAAmB,cAAAH,OACAhB,EAAAR,sBAAA1S,MAAAkT,EAAAmB,eAIAnB,EAAArC,aACAqC,EAAAoB,cAAAL,GAOAf,EAAA9E,mBAAAxO,SAAAqU,EAAAf,EAAAjC,iBACAiC,EAAAqB,iBAKArB,EAAAjP,MAAAuQ,UACAtB,EAAA9E,mBAAA6E,OAGAgB,EAAAtV,SACA,WACA,IAAA8V,EAAA,WACA,IAAArC,EAAAc,EAAAd,WAEA,IAAAA,EAAA3yB,QACAyzB,EAAA7B,YAAAqD,kBAAAtC,EAAA1vB,MAAA,GAAA0vB,EAAAvvB,IAAA,KAIAqwB,EAAAnU,aAAAlJ,IACA,WACA,IAAA8e,EAAA,SAAAA,IACAzB,EAAAnU,aAAAlJ,IACA4e,IAEAvB,EAAAjP,MAAA2Q,IAAA,iBAAAD,IAIAzB,EAAAjP,MAAA2Q,IAAA,iBAAAD,GATA,GAYAF,IAtBA,KA4BAv3B,KAAAw1B,sBAAArX,GAAA,mBACA6X,EAAAU,yBAAAV,EAAAR,sBAAAmC,SAGA33B,KAAAw1B,sBAAArX,GAAA,2BACA6X,EAAA9E,mBAAA0G,QACA5B,EAAA9E,mBAAA2G,UAGA73B,KAAAw1B,sBAAArX,GAAA,yBACA,IAAA2E,EAAAkT,EAAAR,sBAAA1S,QACAmT,EAAA,IAAAD,EAAAR,sBAAAxR,eAAA,KAIA,EAAAkL,EAAAgH,0BAAAF,EAAAR,sBAAAvD,OAAA+D,EAAAR,sBAAA1S,SACAkT,EAAAjC,gBAAAC,QAAA,EAEAgC,EAAAjC,gBAAAC,QAAAiC,EAOAD,EAAA9E,mBAAAxO,SAAAI,EAAAkT,EAAAjC,iBACAiC,EAAA9E,mBAAA6E,OAEAC,EAAAjP,MAAApQ,SACApO,KAAA,cACAuvB,SAAA,MAIA93B,KAAAw1B,sBAAArX,GAAA,+BACA,IAAA4Y,EAAAf,EAAAR,sBAAA1S,QACAiV,EAAA/B,EAAAgC,oBAAAjB,GAEAgB,IAKA/B,EAAAU,0BACA/zB,QAAA,iCAGAqzB,EAAAjP,MAAApQ,QAAA,oBAIA3W,KAAAw1B,sBAAArX,GAAA,+BACA6X,EAAAjP,MAAApQ,SAA8BpO,KAAA,QAAA5H,KAAA,6BAE9BX,KAAAw1B,sBAAArX,GAAA,8BACA6X,EAAAjP,MAAApQ,SAA8BpO,KAAA,QAAA5H,KAAA,+BAU9BgB,IAAA,wBACAN,MAAA,SAAA4wB,EAAAnP,GACA,IAAAD,EAAAoP,EAAApP,gBACAoV,GAAA,EACAC,EAAAp3B,OAAAyrB,KAAA1J,EAAArC,OAEA,QAAAU,KAAA2B,EAAArC,MACA,QAAAsU,KAAAjS,EAAArC,MAAAU,GAAA,CACA,IAAAiX,EAAAtV,EAAArC,MAAAU,GAAA4T,GAEAqD,EAAAjW,MACA+V,GAAA,GAKAA,GACAj4B,KAAA+mB,MAAApQ,SAA4BpO,KAAA,QAAA5H,KAAA,gBAG5BG,OAAAyrB,KAAA1J,EAAAlC,WAAApe,QACAvC,KAAA+mB,MAAApQ,SAA4BpO,KAAA,QAAA5H,KAAA,eAG5B8vB,EAAA2H,SAAAC,MAAAvV,IACA9iB,KAAA+mB,MAAApQ,SAA4BpO,KAAA,QAAA5H,KAAA,YAG5B8vB,EAAA2H,SAAAE,OAAAxV,IACA9iB,KAAA+mB,MAAApQ,SAA4BpO,KAAA,QAAA5H,KAAA,aAG5Bu3B,EAAA31B,QAAAzB,OAAAyrB,KAAA1J,EAAArC,MAAA0X,EAAA,KAAA31B,OAAA,GACAvC,KAAA+mB,MAAApQ,SAA4BpO,KAAA,QAAA5H,KAAA,wBAG5BX,KAAA2zB,aACA3zB,KAAA+mB,MAAApQ,SAA4BpO,KAAA,QAAA5H,KAAA,6BAW5BgB,IAAA,+BACAN,MAAA,WACA,IAAAk3B,EAAAv4B,KAEAA,KAAAkxB,mBAAA/S,GAAA,6BACA,IAAAqa,EAAAD,EAAArB,iBACAuB,EAAAF,EAAA/C,sBAAA1S,QACA4V,EAAAH,EAAAxR,MAAA2R,WACAC,EAAAD,EAAAn2B,OAAAm2B,EAAA/yB,IAAA+yB,EAAAn2B,OAAA,GAAAg2B,EAAAxR,MAAAkO,cAAA,EAEA2D,EAAAL,EAAAK,uBAMAH,EAAAhX,SAGA8W,EAAA1W,WAAAwO,EAAA,WAAAxC,2BAEA2K,EAAA1W,WAAA8I,UAAA6N,EAAA3W,WAAA8I,WAGA+N,GAAAC,IACAL,EAAA/C,sBAAA1S,MAAA0V,GAGAD,EAAAxR,MAAApQ,QAAA,qBAEA3W,KAAAkxB,mBAAA/S,GAAA,sBACAoa,EAAA5hB,QAAA,cAGA3W,KAAAkxB,mBAAA/S,GAAA,mBACAoa,EAAA7B,yBAAA6B,EAAArH,mBAAAyG,WAGA33B,KAAAkxB,mBAAA/S,GAAA,4BACAoa,EAAAM,sBAGA74B,KAAAkxB,mBAAA/S,GAAA,6BACAoa,EAAAxR,MAAApQ,SAA8BpO,KAAA,QAAA5H,KAAA,2BAE9BX,KAAAixB,oBAAA9S,GAAA,4BACAoa,EAAAM,sBAGA74B,KAAAkxB,mBAAA/S,GAAA,mBACAoa,EAAAO,kBAGA94B,KAAAkxB,mBAAA/S,GAAA,wBACAoa,EAAA7B,0BACA/zB,QAAA,mGACS6tB,KAGTxwB,KAAAkxB,mBAAA/S,GAAA,6BAGAoa,EAAAxR,MAAApQ,QAAA,eAGA3W,KAAAkxB,mBAAA/S,GAAA,8BAAAkM,GAGAkO,EAAAxR,MAAApQ,SACApO,KAAA,2BACAwwB,QAAA1O,EAAA0O,YAIA/4B,KAAAixB,oBAAA9S,GAAA,mBACAoa,EAAAO,qBAIAn3B,IAAA,sBACAN,MAAA,WACA,OAAAyL,KAAAC,IAAA/M,KAAAixB,oBAAA+H,mBAAAh5B,KAAAkxB,mBAAA8H,uBAOAr3B,IAAA,OACAN,MAAA,WACArB,KAAAkxB,mBAAA6E,OACA/1B,KAAAi0B,YAAAzT,MAAAyY,sBACAj5B,KAAAixB,oBAAA8E,OAEA/1B,KAAAi0B,YAAAtT,UAAAsY,sBACAj5B,KAAA61B,uBAAAE,UAaAp0B,IAAA,qBACAN,MAAA,WACA,IAAAyhB,EAAA9iB,KAAAk3B,iBAEApU,IAAA9iB,KAAAw1B,sBAAA1S,UACA9iB,KAAAw1B,sBAAA1S,SAEA9iB,KAAAkxB,mBAAAgI,kBASAv3B,IAAA,OACAN,MAAA,WACA,IAAArB,KAAA82B,iBAAA,CAIA92B,KAAA+mB,MAAAoS,SACAn5B,KAAA+mB,MAAAqS,eAAA,GAGAp5B,KAAAy0B,cACAz0B,KAAA+1B,OAGA,IAAAb,EAAAl1B,KAAA+mB,MAAAmO,WAIA,OAAAl1B,KAAA+mB,MAAAlF,aAAAlJ,KACA3Y,KAAA+mB,MAAAkO,cAAAC,EAAA1vB,MAAA,GACAxF,KAAA+mB,MAAAqS,eAAAlE,EAAAvvB,IAAAuvB,EAAA3yB,OAAA,SAFA,MAYAZ,IAAA,iBACAN,MAAA,WACA,IAAAg4B,EAAAr5B,KAEA8iB,EAAA9iB,KAAAw1B,sBAAA1S,QAOA,IAAAA,GAAA9iB,KAAA+mB,MAAAuQ,UAAAt3B,KAAAy0B,aACA,SAIA,IAAA3R,EAAArB,QAAA,CACA,IAAA6X,EAAA,WACA,IAAApE,EAAAmE,EAAAnE,WAEA,OAAAA,EAAA3yB,OAQAmtB,EAAA,WAAA6J,QAAAC,YAAA,UAAAH,EAAA3F,OAAA,IAAA2F,EAAAtS,MAAA0S,cAGAJ,EAAAtS,MAAA2Q,IAAA,4BACA2B,EAAA1iB,QAAA,aACA0iB,EAAAtS,MAAAqS,eAAAlE,EAAAvvB,IAAA,IACA0zB,EAAA5E,WAAA,WACA,aAKA3wB,GAAA,KAKAu1B,EAAA1iB,QAAA,kBAEA0iB,EAAAtS,MAAAqS,eAAAlE,EAAAvvB,IAAA,MAvBA7B,GAAA,GAPA,GAiCA,qBAAAw1B,EAAA,OAAAA,EAAAx1B,EAQA,OALA9D,KAAAy0B,WAAA,WACA,UAGAz0B,KAAA+1B,QACA,KASAp0B,IAAA,oBACAN,MAAA,WAIA,IACArB,KAAA42B,sBACO,MAAA5uB,GAEP,OADA0nB,EAAA,WAAA8C,IAAAC,KAAA,kCAAAzqB,GACAhI,KAAAm0B,YAAA0C,YAAA,UAMA,GAAA72B,KAAA+mB,MAAA2S,WAAA,CACA,IAAAC,EAAA35B,KAAA+mB,MAAA6S,OAIA,qBAAAD,GAAA,oBAAAA,EAAAE,MACAF,EAAAE,KAAA,cAAA7xB,MAIAhI,KAAA2W,QAAA,iBAYAhV,IAAA,gBACAN,MAAA,WACA,IAAAy4B,EAAA95B,KAAAkxB,mBAAA6I,OAEA/5B,KAAAi0B,YAAAzT,MAAAyY,uBAGAa,KAAA95B,KAAAixB,oBAAA8I,QAGAD,GACA95B,KAAAm0B,YAAA0C,iBAUAl1B,IAAA,sBACAN,MAAA,SAAAqhB,GACA,IAAAwS,EAAAl1B,KAAAk1B,WAEA,IAAAA,EAAA3yB,OAEA,SAGA,IAAAy3B,EAAAh6B,KAAA00B,gBAAAuF,eAAAvX,EAAA1iB,KAAAm0B,YAAAtS,UAEA,UAAAmY,EACA,SAKA,IAAAE,EAAAzJ,EAAA2H,SAAA+B,YAAAzX,EAAAsX,GACA/E,EAAAj1B,KAAA+mB,MAAAkO,cACAyD,EAAA14B,KAAA+mB,MAAA2R,WAEA,IAAAA,EAAAn2B,OAEA,OAAA23B,EAAAjF,GAAAzF,EAAA,WAAA4K,gBAEA,IAAAC,EAAA3B,EAAA/yB,IAAA+yB,EAAAn2B,OAAA,GAIA,OAAA83B,EAAApF,GAAAzF,EAAA,WAAA4K,iBAAAF,EAAAG,GAAA7K,EAAA,WAAA4K,mBAcAz4B,IAAA,2BACAN,MAAA,SAAAs2B,EAAApE,QACAtmB,IAAA0qB,UAEA,IAAAc,OAAAxrB,EACAurB,OAAAvrB,EAYA,GANAwrB,EAAAd,EAAAjV,UAAA1iB,KAAAw1B,sBAAA1S,QAEAyQ,KAAAoE,EAAApE,mBAAAvzB,KAAAuzB,mBAIAkF,EAAA,CACAz4B,KAAA23B,QAEA,IACA,OAAA33B,KAAAm0B,YAAA0C,YAAA,WACS,MAAA7uB,GACT,OAAAhI,KAAA2W,QAAA,UAIA,IAAA2jB,EAAA,IAAAt6B,KAAAw1B,sBAAAvD,OAAArP,UAAA8O,OAAAxC,EAAAqL,WAAAh4B,OAEA,OAAA+3B,GAEA5K,EAAA,WAAA8C,IAAAC,KAAA,mGAEAzyB,KAAA+mB,MAAApQ,QAAA,iBACA3W,KAAAw1B,sBAAAO,KAAAuE,KAGA7B,EAAA+B,aAAA3P,KAAA4P,MAAA,IAAAlH,EACAvzB,KAAA+mB,MAAApQ,QAAA,qBACA3W,KAAA+mB,MAAApQ,SAA0BpO,KAAA,QAAA5H,KAAA,8BAG1B63B,EAAAx4B,KAAAk3B,iBACAxH,EAAA,WAAA8C,IAAAC,KAAA,sDAAAkF,EAAAh1B,QAAA,IAAAg1B,EAAAh1B,QAAA,uCAEA3C,KAAAw1B,sBAAA1S,MAAA0V,OAOA72B,IAAA,eACAN,MAAA,WACArB,KAAAkxB,mBAAA2G,QACA73B,KAAAi0B,YAAAzT,MAAAyY,sBACAj5B,KAAAixB,oBAAA4G,QAEA73B,KAAAi0B,YAAAtT,UAAAsY,sBACAj5B,KAAA61B,uBAAAgC,WAWAl2B,IAAA,iBACAN,MAAA,SAAA4zB,GACA,IAAAyD,EAAAlJ,EAAA,WAAAkL,UAAA16B,KAAA+mB,MAAA2R,WAAAzD,GAEA,OAAAj1B,KAAAw1B,uBAAAx1B,KAAAw1B,sBAAA1S,SAOA9iB,KAAAw1B,sBAAA1S,QAAA9B,SAOA0X,KAAAn2B,QAAA,UAAAvC,KAAA0zB,MACAuB,GAKAj1B,KAAAkxB,mBAAAyJ,kBACA36B,KAAAkxB,mBAAA0G,QACA53B,KAAAi0B,YAAAzT,MAAAyY,uBACAj5B,KAAAixB,oBAAA0J,kBACA36B,KAAAixB,oBAAA2G,SAEA53B,KAAAi0B,YAAAtT,UAAAsY,uBACAj5B,KAAA61B,uBAAA8E,kBACA36B,KAAA61B,uBAAA+B,cAIA53B,KAAA+1B,QA9BA,KAuCAp0B,IAAA,WACAN,MAAA,WACA,OAAArB,KAAAw1B,sBAIAx1B,KAAAm0B,YACAn0B,KAAAm0B,YAAAtS,SAGA4O,EAAA2H,SAAAvW,SAAA7hB,KAAAw1B,sBAAA1S,SAPA,KAgBAnhB,IAAA,WACAN,MAAA,WACA,OAAArB,KAAAu0B,aAGA5yB,IAAA,oBACAN,MAAA,WACA,IAAAu5B,OAAA3tB,EACA4tB,OAAA5tB,EAEA,GAAAjN,KAAAw1B,sBAAA,CAIA,IAAA1S,EAAA9iB,KAAAw1B,sBAAA1S,QAEA,GAAAA,EAAA,CAIA,IAAAkX,EAAAh6B,KAAA00B,gBAAAuF,eAAAnX,EAAA9iB,KAAAm0B,YAAAtS,UAEA,UAAAmY,IAKAY,EAAAnK,EAAA2H,SAAAlD,SAAApS,EAAAkX,GAEA,IAAAY,EAAAr4B,QAAA,CAIA,GAAAvC,KAAAi0B,YAAAzT,MAAAyY,qBAAA,CAIA,GAHAnW,EAAA9iB,KAAAi0B,YAAAzT,MAAAyY,qBAAAnW,QACAkX,EAAAh6B,KAAA00B,gBAAAuF,eAAAnX,EAAA9iB,KAAAm0B,YAAAtS,UAEA,OAAAmY,EACA,OAKA,GAFAa,EAAApK,EAAA2H,SAAAlD,SAAApS,EAAAkX,GAEA,IAAAa,EAAAt4B,OACA,OAIAs4B,EAIOA,EAAAr1B,MAAA,GAAAo1B,EAAAj1B,IAAA,IAAAi1B,EAAAp1B,MAAA,GAAAq1B,EAAAl1B,IAAA,GAEP3F,KAAAu0B,UAAAqG,EAEA56B,KAAAu0B,UAAA7E,EAAA,WAAA8E,mBAAAqG,EAAAr1B,MAAA,GAAAo1B,EAAAp1B,MAAA,GAAAq1B,EAAAr1B,MAAA,GAAAo1B,EAAAp1B,MAAA,GAAAq1B,EAAAl1B,IAAA,GAAAi1B,EAAAj1B,IAAA,GAAAk1B,EAAAl1B,IAAA,GAAAi1B,EAAAj1B,IAAA,MALA3F,KAAAu0B,UAAAqG,EAQA56B,KAAA+mB,MAAApQ,QAAA,yBAOAhV,IAAA,iBACAN,MAAA,WACA,IAAAy5B,EAAA96B,KAEA+6B,EAAA/6B,KAAAm0B,YAAAtS,SACAmZ,EAAAvK,EAAA2H,SAAAvW,SAAA7hB,KAAAw1B,sBAAA1S,SACA4V,EAAA14B,KAAA+mB,MAAA2R,WACAuC,EAAA,SAAAA,IACAH,EAAA3G,YAAAtS,SAAAmZ,EACAF,EAAA/T,MAAApQ,QAAA,kBAEAmkB,EAAA3G,YAAA+G,oBAAA,aAAAD,IAGAvC,EAAAn2B,OAAA,IACAy4B,EAAAluB,KAAAC,IAAAiuB,EAAAtC,EAAA/yB,IAAA+yB,EAAAn2B,OAAA,KAIAw4B,IAAAC,IAEA,SAAAh7B,KAAAm0B,YAAAsF,WACAz5B,KAAAm0B,YAAAE,iBAAA,aAAA4G,GAEAA,QAUAt5B,IAAA,UACAN,MAAA,WACA,IAAA85B,EAAAn7B,KAEAA,KAAA+0B,WAAAqG,YACAp7B,KAAAw1B,sBAAA/W,UACAze,KAAAkxB,mBAAAzS,WAEA,qBAAA+N,QAAA,SAAAjkB,GACA,IAAA7E,EAAAy3B,EAAAlH,YAAA1rB,GAAA7E,OAEA,QAAAe,KAAAf,EACAA,EAAAe,GAAA+nB,QAAA,SAAA6O,GACAA,EAAAC,gBACAD,EAAAC,eAAA7c,cAMAze,KAAAixB,oBAAAxS,UACAze,KAAA61B,uBAAApX,aASA9c,IAAA,SACAN,MAAA,WACA,OAAArB,KAAAw1B,sBAAAvD,UASAtwB,IAAA,QACAN,MAAA,WAEA,OAAArB,KAAAw1B,sBAAA1S,SAAA9iB,KAAAm3B,iBASAx1B,IAAA,sBACAN,MAAA,WACA,IAAAyhB,EAAA9iB,KAAAw1B,sBAAA1S,QACAyY,OAAAtuB,EAIA,GAAA6V,GAAA,SAAA9iB,KAAAm0B,YAAAsF,WAAA,CAKA,GADA8B,EAAAvJ,EAAAhyB,KAAAw1B,sBAAAvD,OAAAnP,GACAyY,EAAAh5B,OAAA,EAEA,OADAvC,KAAA23B,MAAA,mEAAA7U,EAAA+J,YACA7sB,KAAAm0B,YAAA0C,YAAA,UAEA72B,KAAAkxB,mBAAAsK,SAAAD,EAAA,IACAA,EAAA,IACAv7B,KAAAixB,oBAAAuK,SAAAD,EAAA,IAKAv7B,KAAAy7B,6BAAA3Y,OAkBAnhB,IAAA,+BACAN,MAAA,SAAAyhB,GACA,IAAAmP,EAAAjyB,KAAAw1B,sBAAAvD,OACAyJ,EAAA,EACA/K,EAAA,KACAc,OAAAxkB,EAEA6V,EAAAhB,WAAAgQ,SACAL,GAAA,EAAAnB,EAAAyB,aAAAjP,EAAAhB,WAAAgQ,QACAnB,EAAAc,EAAAd,WACA+K,EAAAjK,EAAAiK,YAEAzJ,EAAArP,UAAA4J,QAAA,SAAAmP,GACA,IAAAC,GACAF,WAAA,EACA/K,WAAA,MAGA,GAAAgL,EAAA7Z,WAAAgQ,OAAA,CACA,IAAAR,EAAAqK,EAAA7Z,WAAAgQ,OAEA8J,GAAA,EAAAtL,EAAAyB,aAAAT,GAEA3pB,OAAAysB,aAAAzsB,OAAAysB,YAAAyH,kBAAAl0B,OAAAysB,YAAAyH,gBAAA,sBAAyHxK,EAAAC,GAAA,OACzHqK,EAAAnB,aAAA7hB,KAMAijB,EAAAF,iBACAC,EAAAnB,aAAA7hB,KAKAijB,EAAAjL,iBACAgL,EAAAnB,aAAA7hB,UAKAhX,IAAA,gBACAN,MAAA,SAAAyhB,GACA,IAAApG,EAAA,EACAwY,EAAAl1B,KAAAk1B,WAEAA,EAAA3yB,SACAma,EAAAwY,EAAA1vB,MAAA,IAGAoqB,EAAA,WAAApE,aAAA1I,EAAA9iB,KAAA4zB,cAAAlX,MASA/a,IAAA,mBACAN,MAAA,WACA,IAAA4zB,EAAAj1B,KAAA+mB,MAAAkO,cACA6G,EAAAzL,EAAA,WAAA7C,mBACAuO,EAAA1L,EAAA,WAAA3C,wBACA3gB,EAAAD,KAAAC,IAAA+uB,EAAAzL,EAAA,WAAA5C,wBAEA,OAAA3gB,KAAAuC,IAAAysB,EAAA7G,EAAA8G,EAAAhvB,MASApL,IAAA,qBACAN,MAAA,WACA,IAAA4zB,EAAAj1B,KAAA+mB,MAAAkO,cACA6G,EAAAzL,EAAA,WAAAzC,sBACAmO,EAAA1L,EAAA,WAAAvC,2BACA/gB,EAAAD,KAAAC,IAAA+uB,EAAAzL,EAAA,WAAAxC,2BAEA,OAAA/gB,KAAAuC,IAAAysB,EAAA7G,EAAA8G,EAAAhvB,OAIAimB,EArkCA,CAskCCtD,EAAA,WAAAsM,aAEDr8B,EAAAqzB,6BACCzyB,KAAAP,KAAA,qBAAA+qB,IAAA,qBAAAhrB,UAAA,qBAAA4H,oBACEs0B,gBAAA,EAAAC,WAAA,EAAAC,qBAAA,EAAAC,iBAAA,EAAAC,oBAAA,EAAAC,gBAAA,GAAAC,WAAA,GAAAC,mBAAA,GAAAC,oBAAA,GAAAC,mBAAA,GAAAC,uBAAA,GAAAC,gDAAA,GAAAC,WAAA,KAAgSC,GAAA,SAAA9R,EAAAprB,EAAAD,IACnS,SAAAorB,GACA,aAMA,SAAAlR,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAJ7ExL,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAKA,IAAAouB,EAAA,qBAAA9nB,cAAA,gCAAAojB,IAAA,gBAEA2E,EAAA7V,EAAA4V,GAEAT,EAAAhE,EAAA,qBAEAiE,EAAApV,EAAAmV,GAEA1O,EAAA,aAOAyc,EAAA,SAAA5E,GACA,IAAAtD,EAAAsD,EAAA,gCAMA,OAJAA,EAAA1U,iBAAA0U,EAAA1U,gBAAA3Q,QAAA,6CACA+hB,EAAA,aAGAA,GAYAmI,EAAA,SAAAC,EAAAC,GACAD,EAAArF,QACAqF,EAAApF,QAEAqF,KAAAjE,uBACAiE,EAAAjE,qBAAApB,QACAqF,EAAAjE,qBAAA,OAIAt5B,EAAAq9B,cAUA,IAAAG,EAAA,SAAA7B,EAAA4B,GAGAA,EAAAjE,qBAAAqC,EACAA,EAAAvF,QAGAp2B,EAAAw9B,eAgBA,IAAAC,EAAA,SAAA70B,EAAA/D,GACA,kBACA,IAAA64B,EAAA74B,EAAA6xB,eACA4G,EAAAI,EAAA90B,GACA+0B,EAAAD,EAAA/G,KACA4G,EAAA14B,EAAAiyB,WAAAluB,GAEAg1B,EAAAL,EAAAK,cACAC,EAAAN,EAAAM,YAAAD,GACAE,EAAAP,EAAAjE,qBAEA+D,EAAAC,EAAAC,GAEAM,IAKAA,EAAAlC,gBAYA2B,EAAAS,eAEAP,EAAAK,EAAAlC,eAAA4B,IAbAO,GAKAH,EAAA3C,qBAYAh7B,EAAAy9B,iBAeA,IAAAO,EAAA,SAAAp1B,EAAA/D,GACA,kBACA,IAAAo5B,EAAAp5B,EAAA6xB,eACA4G,EAAAW,EAAAr1B,GACA+0B,EAAAM,EAAAtH,KACA4G,EAAA14B,EAAAiyB,WAAAluB,GAEAg1B,EAAAL,EAAAK,cACAC,EAAAN,EAAAM,YAAAD,GACAE,EAAAP,EAAAjE,qBAEA+D,EAAAC,EAAAC,GAEAM,IAKAA,EAAAlC,eAQAmC,IAAAD,EAAAlC,gBAQA2B,EAAA5yB,OAEA4yB,EAAA5yB,MAAAkzB,GAIAN,EAAAtC,kBAEAwC,EAAAK,EAAAlC,eAAA4B,IAZAC,EAAAK,EAAAlC,eAAA4B,GARAI,EAAA3C,qBAwBAh7B,EAAAg+B,iBACA,IAAAE,GAcArd,MAAA,SAAAjY,EAAA/D,GACA,kBACA,IAAAy4B,EAAAz4B,EAAA6xB,eAAA9tB,GACA20B,EAAA14B,EAAAiyB,WAAAluB,GACAmuB,EAAAlyB,EAAAkyB,yBAEAsG,EAAAC,EAAAC,GAGA,IAAAK,EAAAL,EAAAK,cACAC,EAAAN,EAAAM,cACA/4B,GAAA+4B,EAAA9L,OAAA,SAAA2J,GACA,OAAAA,EAAA,aACO,IAAAmC,EAAA,IAAA/4B,GACPq5B,EAAAZ,EAAAa,OAAAt5B,GAEA,GAAA84B,IAAAO,EAAA,CAWA,QAAAE,KAFAtO,EAAA,WAAA8C,IAAAC,KAAA,oFAEAyK,EAAAa,OACAb,EAAAa,OAAAC,GAAAC,QAAAf,EAAAa,OAAAC,KAAAF,EAGAZ,EAAAS,sBAZAjH,GACA/zB,QAAA,2DA0BAge,UAAA,SAAApY,EAAA/D,GACA,kBACA,IAAAy4B,EAAAz4B,EAAA6xB,eAAA9tB,GACA20B,EAAA14B,EAAAiyB,WAAAluB,GAEAmnB,EAAA,WAAA8C,IAAAC,KAAA,4EAEAuK,EAAAC,EAAAC,GAEA,IAAA7yB,EAAA6yB,EAAAK,cAEAlzB,IACAA,EAAA9I,KAAA,YAGA27B,EAAAS,oBAKAh+B,EAAAk+B,UACA,IAAAK,GAYA1d,MAAA,SAAAjY,EAAA+yB,EAAA92B,GACA,GAAA82B,EAAA,CAKA,IAAAnI,EAAA3uB,EAAA2uB,KACAoD,EAAA/xB,EAAA+xB,eACA0G,EAAAz4B,EAAA6xB,eAAA9tB,GAEA+yB,EAAAnd,GAAA,4BACA,IAAA2E,EAAAwY,EAAAxY,QAEAma,EAAAva,SAAAI,EAAAyT,KAIApD,EAAAmE,UAAAxU,EAAArB,SAAA,SAAA0R,EAAAgD,YACA8G,EAAAlH,SAIAuF,EAAAnd,GAAA,4BACA8e,EAAAva,SAAA4Y,EAAAxY,QAAAyT,GAGApD,EAAAmE,UACA2F,EAAAlH,SAIAuF,EAAAnd,GAAA,QAAA0f,EAAAt1B,KAAA/D,MAaAmc,UAAA,SAAApY,EAAA+yB,EAAA92B,GACA,IAAA2uB,EAAA3uB,EAAA2uB,KACAoD,EAAA/xB,EAAA+xB,eACA0G,EAAAz4B,EAAA6xB,eAAA9tB,GACA20B,EAAA14B,EAAAiyB,WAAAluB,GAEA+yB,EAAAnd,GAAA,4BACA,IAAA2E,EAAAwY,EAAAxY,QAEAma,EAAAva,SAAAI,EAAAyT,GACA0G,EAAA5yB,MAAA6yB,EAAAK,iBAIApK,EAAAmE,UAAAxU,EAAArB,SAAA,SAAA0R,EAAAgD,YACA8G,EAAAlH,SAIAuF,EAAAnd,GAAA,4BACA8e,EAAAva,SAAA4Y,EAAAxY,QAAAyT,GAGApD,EAAAmE,UACA2F,EAAAlH,SAIAuF,EAAAnd,GAAA,QAAA0f,EAAAt1B,KAAA/D,MAIA7E,EAAAu+B,iBACA,IAAAC,GAUA3d,MAAA,SAAAjY,EAAA/D,GACA,IAAAjD,EAAAiD,EAAAjD,KACAmlB,EAAAliB,EAAAkiB,IACAuW,EAAAz4B,EAAA6xB,eAAA9tB,GACA6d,EAAA5hB,EAAA+xB,eAAAnQ,gBACAvD,EAAAre,EAAAytB,OAAApP,YACAub,EAAA55B,EAAAiyB,WAAAluB,GACA7E,EAAA06B,EAAA16B,OACAq6B,EAAAK,EAAAL,OASA,QAAAxL,KAJA1P,EAAAta,IAAA,IAAAzH,OAAAyrB,KAAA1J,EAAAta,IAAAhG,QAAA,UAAAhB,IACAshB,EAAAta,IAA2B+tB,MAAQxc,SAAaA,SAAA,MAGhD+I,EAAAta,GAKA,QAAA81B,KAJA36B,EAAA6uB,KACA7uB,EAAA6uB,OAGA1P,EAAAta,GAAAgqB,GAAA,CACA,IAAA4F,EAAAtV,EAAAta,GAAAgqB,GAAA8L,GACA/C,OAAAruB,EAgBA,GAbAquB,EADAnD,EAAAtL,YACA,IAAAoC,EAAA,WAAAkJ,EAAAtL,YAAAnG,EAAAN,GAIA,KAGA+R,EAAAzI,EAAA,WAAAgG,cAAwDjxB,GAAA45B,EAAA/C,kBAAmDnD,GAE3G+F,EAAA31B,KAAA4vB,EAAAmD,eAAA92B,GAEAd,EAAA6uB,GAAAlpB,KAAA8uB,GAEA,qBAAA4F,EAAAM,GAAA,CACA,IAAAh0B,EAAA,IAAAqlB,EAAA,WAAA4O,YACA75B,GAAA45B,EACAxJ,KAAAkI,EAAA5E,GACA8F,SAAA,EACA3a,SAAA6U,EAAA7U,SACAxJ,QAAAqe,EAAA,WACArD,MAAAuJ,IAGAN,EAAAM,GAAAh0B,GAMA4yB,EAAA9e,GAAA,QAAA0f,EAAAt1B,KAAA/D,KAWAmc,UAAA,SAAApY,EAAA/D,GACA,IAAA2uB,EAAA3uB,EAAA2uB,KACAzM,EAAAliB,EAAAkiB,IACAuW,EAAAz4B,EAAA6xB,eAAA9tB,GACA6d,EAAA5hB,EAAA+xB,eAAAnQ,gBACAvD,EAAAre,EAAAytB,OAAApP,YACA0b,EAAA/5B,EAAAiyB,WAAAluB,GACA7E,EAAA66B,EAAA76B,OACAq6B,EAAAQ,EAAAR,OAEA,QAAAxL,KAAA1P,EAAAta,GAKA,QAAA81B,KAJA36B,EAAA6uB,KACA7uB,EAAA6uB,OAGA1P,EAAAta,GAAAgqB,GACA,IAAA1P,EAAAta,GAAAgqB,GAAA8L,GAAA1a,OAAA,CAYA,IAAAwU,EAAAtV,EAAAta,GAAAgqB,GAAA8L,GAWA,GATAlG,EAAAzI,EAAA,WAAAgG,cACAjxB,GAAA45B,EACA/C,eAAA,IAAArM,EAAA,WAAAkJ,EAAAtL,YAAAnG,EAAAN,IACS+R,GAET+F,EAAA31B,KAAA4vB,EAAAmD,eAAA92B,GAEAd,EAAA6uB,GAAAlpB,KAAA8uB,GAEA,qBAAA4F,EAAAM,GAAA,CACA,IAAAh0B,EAAA8oB,EAAAyB,oBACAnwB,GAAA45B,EACAxJ,KAAA,YACAoJ,SAAA,EACA3a,SAAA6U,EAAA7U,SACAwR,MAAAuJ,IACW,GAAAh0B,MAEX0zB,EAAAM,GAAAh0B,GAMA4yB,EAAA9e,GAAA,QAAA0f,EAAAt1B,KAAA/D,KAWAkc,kBAAA,SAAAnY,EAAA/D,GACA,IAAA2uB,EAAA3uB,EAAA2uB,KACAtQ,EAAAre,EAAAytB,OAAApP,YACA2b,EAAAh6B,EAAAiyB,WAAAluB,GACA7E,EAAA86B,EAAA96B,OACAq6B,EAAAS,EAAAT,OAEA,QAAAxL,KAAA1P,EAAAta,GAKA,QAAA81B,KAJA36B,EAAA6uB,KACA7uB,EAAA6uB,OAGA1P,EAAAta,GAAAgqB,GAAA,CACA,IAAA4F,EAAAtV,EAAAta,GAAAgqB,GAAA8L,GAIA,GAAAlG,EAAA5U,WAAArgB,MAAA,UAMAQ,EAAA6uB,GAAAlpB,KAAAqmB,EAAA,WAAAgG,cAAgEjxB,GAAA45B,GAAmBlG,IAEnF,qBAAA4F,EAAAM,IAAA,CACA,IAAAh0B,EAAA8oB,EAAAyB,oBACAnwB,GAAA0zB,EAAA5U,WACAsR,KAAA,WACAoJ,SAAA,EACA3a,SAAA6U,EAAA7U,SACAwR,MAAAuJ,IACW,GAAAh0B,MAEX0zB,EAAAM,GAAAh0B,MAOA1K,EAAAw+B,aAeA,IAAAX,EAAA,SAAAj1B,EAAA/D,GACA,gBAAA6F,GACA,IAAAmsB,EAAAhyB,EAAAgyB,qBACA9yB,EAAAc,EAAAiyB,WAAAluB,GAAA7E,OAEAof,EAAA0T,EAAA1T,QAEA,IAAAA,EACA,YAGA,IAAA2b,EAAA,KAQA,OANA3b,EAAAhB,WAAAvZ,KACAk2B,EAAA/6B,EAAAof,EAAAhB,WAAAvZ,KAGAk2B,KAAA/6B,EAAA4yB,KAEA,qBAAAjsB,EACAo0B,EAGA,OAAAp0B,EAGA,KAGAo0B,EAAA/M,OAAA,SAAApY,GACA,OAAAA,EAAA7U,KAAA4F,EAAA5F,KACK,WAIL9E,EAAA69B,cACA,IAAAD,GAaA/c,MAAA,SAAAjY,EAAA/D,GACA,kBACA,IAAAu5B,EAAAv5B,EAAAiyB,WAAAluB,GAAAw1B,OAEA,QAAAt5B,KAAAs5B,EACA,GAAAA,EAAAt5B,GAAAw5B,QACA,OAAAF,EAAAt5B,GAIA,cAeAkc,UAAA,SAAApY,EAAA/D,GACA,kBACA,IAAAu5B,EAAAv5B,EAAAiyB,WAAAluB,GAAAw1B,OAEA,QAAAt5B,KAAAs5B,EACA,eAAAA,EAAAt5B,GAAAlD,KACA,OAAAw8B,EAAAt5B,GAIA,eAKA9E,EAAA49B,cA+BA,IAAAnH,EAAA,SAAA5xB,IACA,uCAAAgoB,QAAA,SAAAjkB,GACA41B,EAAA51B,KAAA/D,KAGA,IAAAiyB,EAAAjyB,EAAAiyB,WACAD,EAAAhyB,EAAAgyB,qBACArD,EAAA3uB,EAAA2uB,KACAzM,EAAAliB,EAAAkiB,KAGA,qBAAA8F,QAAA,SAAAjkB,GACAkuB,EAAAluB,GAAAi1B,cAAAj1B,EAAA/D,GACAiyB,EAAAluB,GAAAg1B,cAAAh1B,KAAA/D,GACAiyB,EAAAluB,GAAA60B,iBAAA70B,EAAA/D,GACAiyB,EAAAluB,GAAAo1B,iBAAAp1B,EAAA/D,KAKA,IAAA8tB,EAAAmE,EAAAjW,MAAAgd,cACAjL,GAAAD,EAAAZ,OAAA,SAAA2J,GACA,OAAAA,EAAA,aACG,IAAA/I,EAAA,IAAA7tB,GAEHgyB,EAAAjW,MAAAud,OAAAxL,GAAA0L,SAAA,EACAxH,EAAAjW,MAAAmd,iBAEAnH,EAAArY,GAAA,0BACA,qBAAAqO,QAAA,SAAAjkB,GACA,OAAAkuB,EAAAluB,GAAA60B,qBAKA,IAAAsB,EAAA,WACAjI,EAAAjW,MAAAmd,iBACAxK,EAAAxc,SAAkBpO,KAAA,QAAA5H,KAAA,sBAclB,QAAA8D,KAXA0uB,EAAAwL,cAAAtK,iBAAA,SAAAqK,GACAvL,EAAAyL,mBAAAvK,iBAAA,SAAAoC,EAAA9V,UAAAgd,gBAEAjX,EAAAvI,GAAA,qBACAgV,EAAAwL,cAAAzD,oBAAA,SAAAwD,GACAvL,EAAAyL,mBAAA1D,oBAAA,SAAAzE,EAAA9V,UAAAgd,kBAIAxK,EAAA0L,YAAA,SAEApI,EAAAjW,MAAAud,OACA5K,EAAAwL,cAAAG,SAAArI,EAAAjW,MAAAud,OAAAt5B,KAIA9E,EAAAy2B,mBASA,IAAAlC,EAAA,WACA,IAAAuC,KAcA,OAZA,uCAAAjK,QAAA,SAAAjkB,GACAkuB,EAAAluB,IACA7E,UACAq6B,UACA9E,qBAAA,KACAuE,YAAAld,EACAid,YAAAjd,EACA8c,eAAA9c,EACAqd,eAAArd,KAIAmW,GAEA92B,EAAAu0B,qBACC3zB,KAAAP,KAAA,qBAAA+qB,IAAA,qBAAAhrB,UAAA,qBAAA4H,oBACE00B,oBAAA,IAAsB0C,GAAA,SAAA/T,EAAAprB,EAAAD,IACzB,SAAAorB,GACA,aAMA,SAAAlR,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAJ7ExL,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAKA,IAAAouB,EAAA,qBAAA9nB,cAAA,gCAAAojB,IAAA,gBAEA2E,EAAA7V,EAAA4V,GAEAxB,EAAAjD,EAAA,eAEAgU,GACAC,QAAA,EACAC,SAAA,IACAC,SAAA,KAGAx/B,EAAAq/B,iBAQA,IAAAI,EAAA,SAAA7d,GACA,IAAA8d,OAAApyB,EACAqyB,OAAAryB,EAMA,OAFAqyB,EAAA/d,EAAA7E,OAAA6E,EAAAhf,OAAA,EACA88B,EAAA9d,EAAA7E,OACA,SAAA2iB,EAAA,IAAAC,GASAC,EAAA,SAAA9T,GACA,IAAA+T,KAKA,OAHA/T,EAAAlK,YACAie,EAAAC,MAAAL,EAAA3T,EAAAlK,YAEAie,GAQAE,EAAA,SAAAC,GACAA,EAAAnT,QAAA,SAAAxF,GACAA,EAAA4Q,WASAgI,EAAA,SAAAC,GACA,OACAzM,UAAAyM,EAAAzM,UACA0M,cAAAD,EAAAC,eAAA,EACAC,cAAAF,EAAAE,eAAA,IAUAC,EAAA,SAAAC,GACA,IAAAJ,EAAAI,EAAA5mB,OACA0mB,EAAAlV,KAAA4P,MAAAoF,EAAAK,YACAC,GACA/M,UAAAza,IACAmnB,cAAA,EACAC,iBAAA,GASA,OANAI,EAAAL,cAAAG,EAAAG,OAIAD,EAAA/M,UAAAtmB,KAAAuzB,MAAAF,EAAAL,cAAAK,EAAAJ,cAAA,OAEAI,GAUAG,EAAA,SAAA3I,EAAAkI,GACA,OAAAA,EAAAU,UAEAC,OAAAX,EAAAW,OACA79B,QAAA,iCAAAk9B,EAAA3d,IACAtf,KAAAo8B,EAAAE,QACAlY,IAAA6Y,GAIAA,EAAAY,SAEAD,OAAAX,EAAAW,OACA79B,QAAA,+BAAAk9B,EAAA3d,IACAtf,KAAAo8B,EAAAG,QACAnY,IAAA6Y,GAIAlI,GAEA6I,OAAAX,EAAAW,OACA79B,QAAA,+BAAAk9B,EAAA3d,IACAtf,KAAAo8B,EAAAC,QACAjY,IAAA6Y,GAIA,MAYAa,EAAA,SAAAjV,EAAAkV,GACA,gBAAAhJ,EAAAkI,GACA,IAAAe,EAAAf,EAAAe,SACAC,EAAAP,EAAA3I,EAAAkI,GAEA,GAAAgB,EACA,OAAAF,EAAAE,EAAApV,GAGA,QAAAmV,EAAAzpB,WACA,OAAAwpB,GACAH,OAAAX,EAAAW,OACA79B,QAAA,2BAAAk9B,EAAA3d,IACAtf,KAAAo8B,EAAAC,QACAjY,IAAA6Y,GACOpU,GAGP,IAAAqV,EAAA,IAAAC,SAAAH,GAGA,OADAnV,EAAA9pB,IAAAwa,MAAA,IAAAF,aAAA6kB,EAAAE,UAAA,GAAAF,EAAAE,UAAA,GAAAF,EAAAE,UAAA,GAAAF,EAAAE,UAAA,MACAL,EAAA,KAAAlV,KAYAwV,EAAA,SAAAxV,EAAAkV,GACA,gBAAAhJ,EAAAkI,GACA,IAAAe,EAAAf,EAAAe,SACAC,EAAAP,EAAA3I,EAAAkI,GAEA,OAAAgB,EACAF,EAAAE,EAAApV,GAIA,IAAAmV,EAAAzpB,WACAwpB,GACAH,OAAAX,EAAAW,OACA79B,QAAA,qCAAAk9B,EAAA3d,IACAtf,KAAAo8B,EAAAC,QACAjY,IAAA6Y,GACOpU,IAGPA,EAAArT,IAAA+D,MAAA,IAAAlB,WAAA4kB,EAAAe,UACAD,EAAA,KAAAlV,MAcAyV,EAAA,SAAAzV,EAAAkV,GACA,gBAAAhJ,EAAAkI,GACA,IAAAe,EAAAf,EAAAe,SACAC,EAAAP,EAAA3I,EAAAkI,GAEA,OAAAgB,EACAF,EAAAE,EAAApV,GAIA,IAAAmV,EAAAzpB,WACAwpB,GACAH,OAAAX,EAAAW,OACA79B,QAAA,qCAAAk9B,EAAA3d,IACAtf,KAAAo8B,EAAAC,QACAjY,IAAA6Y,GACOpU,IAGPA,EAAA0U,MAAAP,EAAAC,GAEApU,EAAA9pB,IACA8pB,EAAA0V,eAAA,IAAAlmB,WAAA4kB,EAAAe,UAEAnV,EAAAtP,MAAA,IAAAlB,WAAA4kB,EAAAe,UAGAD,EAAA,KAAAlV,MAYA2V,EAAA,SAAA7L,EAAA9J,EAAA4V,GACA,IAAAC,EAAA,SAAAA,EAAAjX,GACA,GAAAA,EAAAxa,KAAAkP,SAAA0M,EAAA8V,UAAA,CACAhM,EAAA2F,oBAAA,UAAAoG,GACA,IAAAtmB,EAAAqP,EAAAxa,KAAAmL,UAGA,OADAyQ,EAAAtP,MAAA,IAAAlB,WAAAD,EAAAmB,MAAAnB,EAAAH,WAAAG,EAAA7D,YACAkqB,EAAA,KAAA5V,KAIA8J,EAAAlB,iBAAA,UAAAiN,GAIA/L,EAAAnH,aAAA,EAAAH,EAAA5B,4BACAtN,OAAA0M,EAAA8V,UACA9mB,UAAAgR,EAAA0V,eACAx/B,IAAA8pB,EAAA9pB,IAAAwa,MACAiG,GAAAqJ,EAAA9pB,IAAAygB,MACGqJ,EAAA0V,eAAA/vB,OAAAqa,EAAA9pB,IAAAwa,MAAA/K,UASHowB,EAAA,SAAAC,GACA,OAAAA,EAAA/pB,OAAA,SAAAgqB,EAAA9X,GACA,OAAAA,EAAAhnB,KAAA8+B,EAAA9+B,KAAAgnB,EAAA8X,KAeAC,EAAA,SAAAhC,EAAApK,EAAA8L,GACA,IAAAI,KACAh3B,EAAA,EAEA,gBAAAktB,EAAAlM,GAQA,GAPAkM,IAEA+H,EAAAC,GACA8B,EAAAp4B,KAAAsuB,IAEAltB,GAAA,EAEAA,IAAAk1B,EAAAp9B,OAAA,CAIA,GAFAkpB,EAAAmW,iBAAA/W,KAAA4P,MAEAgH,EAAAl/B,OAAA,GACA,IAAAs/B,EAAAL,EAAAC,GAEA,OAAAJ,EAAAQ,EAAApW,GAEA,OAAAA,EAAA0V,eACAC,EAAA7L,EAAA9J,EAAA4V,GAGAA,EAAA,KAAA5V,MAeAqW,EAAA,SAAArW,EAAAsW,GACA,gBAAA1X,GAQA,OAPAoB,EAAA0U,MAAAzQ,EAAA,WAAAgG,aAAAjK,EAAA0U,MAAAH,EAAA3V,KAGAoB,EAAA0U,MAAA6B,sBAAAvW,EAAA0U,MAAAL,gBACArU,EAAA0U,MAAA6B,qBAAAnX,KAAA4P,OAGAsH,EAAA1X,EAAAoB,KAoDAwW,EAAA,SAAAjb,EAAAkb,EAAAC,EAAA1W,EAAAsW,EAAAV,GACA,IAAA1B,KACAgB,EAAAgB,EAAAhC,EAAAwC,EAAAd,GAGA,GAAA5V,EAAA9pB,IAAA,CACA,IAAAygC,EAAA1S,EAAA,WAAAgG,aAAAwM,GACAhgB,IAAAuJ,EAAA9pB,IAAAkrB,YACAwV,aAAA,gBAEAC,EAAA5B,EAAAjV,EAAAkV,GACA4B,EAAAvb,EAAAob,EAAAE,GAEA3C,EAAAt2B,KAAAk5B,GAIA,GAAA9W,EAAArT,MAAAqT,EAAArT,IAAA+D,MAAA,CACA,IAAAqmB,EAAA9S,EAAA,WAAAgG,aAAAwM,GACAhgB,IAAAuJ,EAAArT,IAAAyU,YACAwV,aAAA,cACA7C,QAAAD,EAAA9T,EAAArT,OAEAqqB,EAAAxB,EAAAxV,EAAAkV,GACA+B,EAAA1b,EAAAwb,EAAAC,GAEA9C,EAAAt2B,KAAAq5B,GAGA,IAAAC,EAAAjT,EAAA,WAAAgG,aAAAwM,GACAhgB,IAAAuJ,EAAAoB,YACAwV,aAAA,cACA7C,QAAAD,EAAA9T,KAEAmX,EAAA1B,EAAAzV,EAAAkV,GACAkC,EAAA7b,EAAA2b,EAAAC,GAKA,OAHAC,EAAAxO,iBAAA,WAAAyN,EAAArW,EAAAsW,IACApC,EAAAt2B,KAAAw5B,GAEA,WACA,OAAAnD,EAAAC,KAGAhgC,EAAAsiC,wBACC1hC,KAAAP,KAAA,qBAAA+qB,IAAA,qBAAAhrB,UAAA,qBAAA4H,oBACE0mB,cAAA,IAAgByU,GAAA,SAAA9X,EAAAprB,EAAAD,IACnB,SAAAorB,GAWA,aAEAjqB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAA8X,EAAA,WAAiC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAzhB,GAEA,SAAAG,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAE7E,SAAAyN,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAE3F,IAAAkW,EAAAF,EAAA,iBAEAG,EAAAtR,EAAAqR,GAEAqE,EAAAvE,EAAA,YAEAwE,EAAA3V,EAAA0V,GAEAE,EAAA,qBAAA9nB,cAAA,gCAAAojB,IAAA,gBAEA2E,EAAA7V,EAAA4V,GAGAsT,GAAA,8CAMAC,EAAA,WAOA,SAAAA,EAAA1d,GACA,IAAAxF,EAAA9f,KAEA+Z,EAAA/Z,KAAAgjC,GAEAhjC,KAAA+mB,MAAAzB,EAAA6N,KACAnzB,KAAAk1B,SAAA5P,EAAA4P,SAEAl1B,KAAAijC,mBAAA,EACAjjC,KAAAkjC,iBAAA,KACAljC,KAAAmjC,OAAA,KACAnjC,KAAAojC,yBAAA,KAEA9d,EAAA+d,QACArjC,KAAAsjC,QAAA5T,EAAA,WAAA8C,IAAA5wB,KAAA8tB,EAAA,mCAEA1vB,KAAAsjC,QAAA,cAEA,IAAAC,EAAA,WACA,OAAAzjB,EAAA0jB,uBAEAC,EAAA,WACA,OAAA3jB,EAAA4jB,gBAEAC,EAAA,WACA,OAAA7jB,EAAA8jB,gBAEAC,EAAA,WACA,OAAA/jB,EAAAgkB,kBAGA9jC,KAAA+mB,MAAA5I,GAAA,kBAAA0lB,GACA7jC,KAAA+mB,MAAA5I,GAAA,UAAAslB,GACAzjC,KAAA+mB,MAAA5I,GAAA4kB,EAAAY,GACA3jC,KAAA+mB,MAAA5I,GAAA,UAAAolB,GAGAvjC,KAAAye,QAAA,WACAqB,EAAAwjB,QAAA,WACAxjB,EAAAiH,MAAA1I,IAAA,kBAAAwlB,GACA/jB,EAAAiH,MAAA1I,IAAA,UAAAolB,GACA3jB,EAAAiH,MAAA1I,IAAA0kB,EAAAY,GACA7jB,EAAAiH,MAAA1I,IAAA,UAAAklB,GACAzjB,EAAAsjB,0BACAjY,EAAA,WAAA4Y,aAAAjkB,EAAAsjB,0BAEAtjB,EAAA8jB,gBA+VA,OArVAzqB,EAAA6pB,IACArhC,IAAA,sBACAN,MAAA,WACArB,KAAAgkC,oBAEAhkC,KAAAojC,0BACAjY,EAAA,WAAA4Y,aAAA/jC,KAAAojC,0BAIApjC,KAAAojC,yBAAAjY,EAAA,WAAA8Y,WAAAjkC,KAAAwjC,oBAAA5hC,KAAA5B,MAAA,QAWA2B,IAAA,oBACAN,MAAA,WACA,GAAArB,KAAA+mB,MAAAoO,WAAAn1B,KAAA8jC,iBAGA,OAFA9jC,KAAAijC,mBAAA,OACAjjC,KAAAkjC,iBAAAljC,KAAA+mB,MAAAkO,eAIA,IAAAj1B,KAAA+mB,MAAAuQ,WAAAt3B,KAAA+mB,MAAAoO,UAAA,CAIA,IAAAF,EAAAj1B,KAAA+mB,MAAAkO,cACAyD,EAAA14B,KAAA+mB,MAAA2R,WAEA,GAAA14B,KAAAkjC,mBAAAjO,KAAAyD,EAAAn2B,QAAA0yB,EAAAzF,EAAA,WAAA4K,iBAAA1B,EAAA/yB,IAAA+yB,EAAAn2B,OAAA,IAQA,OAAAvC,KAAA0jC,eAGA1jC,KAAAijC,oBAAA,GAAAhO,IAAAj1B,KAAAkjC,kBACAljC,KAAAijC,qBACAjjC,KAAAkkC,YACOjP,IAAAj1B,KAAAkjC,iBACPljC,KAAAijC,sBAEAjjC,KAAAijC,mBAAA,EACAjjC,KAAAkjC,iBAAAjO,OAWAtzB,IAAA,eACAN,MAAA,WACArB,KAAAijC,mBAAA,EAEAjjC,KAAAmjC,SACAnjC,KAAAsjC,QAAA,gBACAS,aAAA/jC,KAAAmjC,SAGAnjC,KAAAmjC,OAAA,QAUAxhC,IAAA,iBACAN,MAAA,WACA,IAAA8zB,EAAAn1B,KAAA+mB,MAAAoO,UACAD,EAAAl1B,KAAAk1B,WACAD,EAAAj1B,KAAA+mB,MAAAkO,cACAkP,OAAAl3B,EAEA,GAAAkoB,GAAAn1B,KAAAokC,qBAAAlP,EAAAD,GAAA,CACA,IAAAoP,EAAAnP,EAAAvvB,IAAAuvB,EAAA3yB,OAAA,GAGA4hC,EAAAE,EAGA,GAAAlP,GAAAn1B,KAAAskC,sBAAApP,EAAAD,GAAA,CACA,IAAAsP,EAAArP,EAAA1vB,MAAA,GAIA2+B,EAAAI,EAAA/U,EAAA,WAAA4K,gBAGA,2BAAA+J,IACAnkC,KAAAsjC,QAAA,8CAAArO,EAAA,wBAAAzF,EAAA,WAAAgV,eAAAtP,GAAA,gBAAAiP,EAAA,KAEAnkC,KAAA+mB,MAAAqS,eAAA+K,IACA,MAYAxiC,IAAA,WACAN,MAAA,WACA,IAAArB,KAAA0jC,eAAA,CAKA,IAAAzO,EAAAj1B,KAAA+mB,MAAAkO,cACAyD,EAAA14B,KAAA+mB,MAAA2R,WACAjvB,EAAA+lB,EAAA,WAAAkL,UAAAhC,EAAAzD,GAUA,OAAAxrB,EAAAlH,QAAA0yB,EAAA,GAAAxrB,EAAA9D,IAAA,IACA3F,KAAA4jC,eACA5jC,KAAA+mB,MAAAqS,eAAAnE,GAEAj1B,KAAAsjC,QAAA,cAAArO,EAAA,oCAAAxrB,EAAAjE,MAAA,UAAAiE,EAAA9D,IAAA,4EAGA3F,KAAA+mB,MAAApQ,SAA4BpO,KAAA,QAAA5H,KAAA,8BAP5B,MAqBAgB,IAAA,eACAN,MAAA,WACA,IAAA6zB,EAAAl1B,KAAAk1B,WACAD,EAAAj1B,KAAA+mB,MAAAkO,cAEA,GAAAj1B,KAAA+mB,MAAAoO,WAAAn1B,KAAA8jC,iBAEA,SAGA,GAAA9jC,KAAA+mB,MAAAoO,WAAA,OAAAn1B,KAAAmjC,OAEA,SAGA,GAAAnjC,KAAAskC,sBAAApP,EAAAD,GAAA,CACA,IAAAwP,EAAAvP,EAAAvvB,IAAAuvB,EAAA3yB,OAAA,GAQA,OANAvC,KAAAsjC,QAAA,mCAAArO,EAAA,0CAAAwP,GACAzkC,KAAA4jC,eACA5jC,KAAA+mB,MAAAqS,eAAAqL,GAGAzkC,KAAA+mB,MAAApQ,SAA4BpO,KAAA,QAAA5H,KAAA,qBAC5B,EAGA,IAAA+3B,EAAA14B,KAAA+mB,MAAA2R,WACAgM,EAAAlV,EAAA,WAAAmV,cAAAjM,EAAAzD,GAEA,GAAAj1B,KAAA4kC,gBAAAF,EAAAhM,EAAAzD,GAUA,OALAj1B,KAAA4jC,eACA5jC,KAAA+mB,MAAAqS,eAAAnE,GAGAj1B,KAAA+mB,MAAApQ,SAA4BpO,KAAA,QAAA5H,KAAA,yBAC5B,EAIA,GAAA+jC,EAAAniC,OAAA,GACA,IAAAsiC,EAAAH,EAAAl/B,MAAA,GAAAyvB,EAKA,OAHAj1B,KAAAsjC,QAAA,cAAArO,EAAA,uBAAA4P,EAAA,gBAAAH,EAAAl/B,MAAA,IAEAxF,KAAAmjC,OAAAc,WAAAjkC,KAAA8kC,YAAAljC,KAAA5B,MAAA,IAAA6kC,EAAA5P,IACA,EAIA,YAGAtzB,IAAA,uBACAN,MAAA,SAAA6zB,EAAAD,GACA,QAAAC,EAAA3yB,QAKA0yB,EAAAC,EAAAvvB,IAAAuvB,EAAA3yB,OAAA,GAAAitB,EAAA,WAAA4K,mBAOAz4B,IAAA,wBACAN,MAAA,SAAA6zB,EAAAD,GACA,SAAAC,EAAA3yB,QAEA2yB,EAAA1vB,MAAA,MAAAyvB,EAAAC,EAAA1vB,MAAA,GAAAgqB,EAAA,WAAA4K,oBAOAz4B,IAAA,kBACAN,MAAA,SAAAqjC,EAAAhM,EAAAzD,GACA,OAAAyP,EAAAniC,OAAA,CAGA,IAAAwiC,EAAA/kC,KAAAglC,uBAAAtM,EAAAzD,GAEA,GAAA8P,EAGA,OAFA/kC,KAAAsjC,QAAA,mCAAAyB,EAAAv/B,MAAA,OAAAu/B,EAAAp/B,IAAA,6BAAAsvB,IAEA,EAIA,YAUAtzB,IAAA,cACAN,MAAA,SAAA4jC,GACA,IAAAvM,EAAA14B,KAAA+mB,MAAA2R,WACAzD,EAAAj1B,KAAA+mB,MAAAkO,cACAyP,EAAAlV,EAAA,WAAAmV,cAAAjM,EAAAzD,GAEAj1B,KAAA4jC,eAEA,IAAAc,EAAAniC,QAAA0yB,IAAAgQ,IAIAjlC,KAAAsjC,QAAA,8BAAArO,EAAA,yBAAAgQ,EAAA,mBAAAP,EAAAl/B,MAAA,IAGAxF,KAAA+mB,MAAAqS,eAAAsL,EAAAl/B,MAAA,GAAAgqB,EAAA,WAAA0V,mBAEAllC,KAAA+mB,MAAApQ,SAA0BpO,KAAA,QAAA5H,KAAA,qBAG1BgB,IAAA,yBACAN,MAAA,SAAAq3B,EAAAzD,GAyBA,IAFA,IAAAkQ,EAAA3V,EAAA,WAAA4V,SAAA1M,GAEAt4B,EAAA,EAAqBA,EAAA+kC,EAAA5iC,OAAiBnC,IAAA,CACtC,IAAAoF,EAAA2/B,EAAA3/B,MAAApF,GACAuF,EAAAw/B,EAAAx/B,IAAAvF,GAGA,GAAA60B,EAAAzvB,EAAA,GAAAyvB,EAAAzvB,EAAA,EACA,OACAA,QACAG,OAKA,eAUAhE,IAAA,UACAN,MAAA,gBAGA2hC,EApZA,GAuZArjC,EAAA,WAAAqjC,EACApjC,EAAAD,UAAA,aACCY,KAAAP,KAAA,qBAAA+qB,IAAA,qBAAAhrB,UAAA,qBAAA4H,oBACE40B,WAAA,GAAAxQ,gBAAA,KAAiCsZ,GAAA,SAAAra,EAAAprB,EAAAD,IACpC,SAAAorB,GAQA,aAEAjqB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAA8X,EAAA,WAAiC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAzhB,GAEA8U,EAAA,SAAAC,EAAAC,EAAAC,GAAuC,IAAAC,GAAA,EAAmB,MAAAA,EAAA,CAA4B,IAAA9sB,EAAA2sB,EAAA1sB,EAAA2sB,EAAAG,EAAAF,EAAiDC,GAAA,EAAgB,OAAA9sB,MAAAuT,SAAArT,WAAkD,IAAA8sB,EAAAhuB,OAAAiuB,yBAAAjtB,EAAAC,GAA8D,QAAAkL,IAAA6hB,EAAA,CAAuO,aAAAA,EAA4B,OAAAA,EAAAztB,MAA4B,IAAAT,EAAAkuB,EAAA7tB,IAAuB,QAAAgM,IAAArM,EAA4B,OAAoB,OAAAA,EAAAL,KAAAsuB,GAA5U,IAAA5G,EAAAnnB,OAAAif,eAAAje,GAA4C,UAAAmmB,EAAuB,OAA2BwG,EAAAxG,EAAayG,EAAA3sB,EAAgB4sB,EAAAE,EAAgBD,GAAA,EAAeE,EAAA7G,OAAAhb,IAE3b,SAAA4M,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAE7E,SAAAyN,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAE3F,SAAAwK,EAAAC,EAAAC,GAA0C,uBAAAA,GAAA,OAAAA,EAA+D,UAAA1K,UAAA,kEAAA0K,GAAuGD,EAAAzd,UAAAlB,OAAAY,OAAAge,KAAA1d,WAAyEkE,aAAe7E,MAAAoe,EAAAze,YAAA,EAAAyY,UAAA,EAAAD,cAAA,KAA6EkG,IAAA5e,OAAA6e,eAAA7e,OAAA6e,eAAAF,EAAAC,GAAAD,EAAAG,UAAAF,GAErX,IAAA4lB,EAAAta,EAAA,iBAEAua,EAAA1rB,EAAAyrB,GAEA7V,EAAA,qBAAA9nB,cAAA,gCAAAojB,IAAA,gBAEAya,EAAAxa,EAAA,eAEAya,EAAA5rB,EAAA2rB,GAEAta,EAAAF,EAAA,iBAEAG,EAAAtR,EAAAqR,GAiBAwa,EAAA,SAAAC,EAAAC,EAAAlpB,GACA,IAAA5U,EAAA89B,EAAAvuB,QAEAqF,KAAA,EAGA,IAFA,IAAAna,EAAAuK,KAAAuC,IAAAs2B,EAAApjC,OAAAqjC,EAAArjC,OAAAma,GAEAtc,EAAAsc,EAAsBtc,EAAAmC,EAAYnC,IAClC0H,EAAA1H,EAAAsc,IAAA,EAAA+S,EAAAiG,cAAAiQ,EAAAvlC,GAAA0H,EAAA1H,EAAAsc,IAEA,OAAA5U,GAGAnI,EAAA+lC,iBACA,IAAAG,EAAA,SAAApa,EAAAqa,GACAra,EAAAoB,cACApB,EAAAoB,aAAA,EAAA0Y,EAAA,YAAAO,EAAAra,EAAAvJ,MAEAuJ,EAAA9pB,MAAA8pB,EAAA9pB,IAAAkrB,cACApB,EAAA9pB,IAAAkrB,aAAA,EAAA0Y,EAAA,YAAAO,EAAAra,EAAA9pB,IAAAugB,MAEAuJ,EAAArT,MAAAqT,EAAArT,IAAAyU,cACApB,EAAArT,IAAAyU,aAAA,EAAA0Y,EAAA,YAAAO,EAAAra,EAAArT,IAAA8J,OAIAviB,EAAAkmC,qBAaA,IAAAE,EAAA,SAAA9T,EAAAnP,GACA,IAAAhb,GAAA,EAAA2nB,EAAAiG,cAAAzD,MACAvP,EAAA5a,EAAA8a,UAAA8O,OAAA,SAAAxvB,GACA,OAAAA,EAAAggB,MAAAY,EAAAZ,MACG,GAEH,IAAAQ,EACA,YAKA,GAAAA,EAAA1B,UAAA8B,EAAA9B,UAAA0B,EAAA1B,SAAAze,SAAAugB,EAAA9B,SAAAze,QAAAmgB,EAAAf,gBAAAmB,EAAAnB,cACA,YAGA,IAAAqkB,GAAA,EAAAvW,EAAAiG,cAAAhT,EAAAI,GAGAJ,EAAA1B,WACAglB,EAAAhlB,SAAA0kB,EAAAhjB,EAAA1B,SAAA8B,EAAA9B,SAAA8B,EAAAnB,cAAAe,EAAAf,gBAIAqkB,EAAAhlB,SAAAwL,QAAA,SAAAf,GACAoa,EAAApa,EAAAua,EAAAnZ,eAMA,QAAAzsB,EAAA,EAAiBA,EAAA0H,EAAA8a,UAAArgB,OAA6BnC,IAC9C0H,EAAA8a,UAAAxiB,GAAA8hB,MAAAY,EAAAZ,MACApa,EAAA8a,UAAAxiB,GAAA4lC,GAKA,OAFAl+B,EAAA8a,UAAAE,EAAAZ,KAAA8jB,EAEAl+B,GAGAnI,EAAAomC,eACA,IAAAE,EAAA,SAAAhU,GAEA,IAAA7xB,EAAA6xB,EAAArP,UAAArgB,OAEA,MAAAnC,IAAA,CACA,IAAAsiB,EAAAuP,EAAArP,UAAAxiB,GAEA6xB,EAAArP,UAAAF,EAAAR,KAAAQ,EACAA,EAAAmK,aAAA,EAAA0Y,EAAA,YAAAtT,EAAA/P,IAAAQ,EAAAR,KAEAQ,EAAAZ,aAMAY,EAAAZ,cAEA2N,EAAA+C,IAAAC,KAAA,yEAKA9yB,EAAAsmC,sBACA,IAAAC,EAAA,SAAAjU,IACA,qBAAAzF,QAAA,SAAA0Q,GACA,QAAAiJ,KAAAlU,EAAApP,YAAAqa,GACA,QAAAkJ,KAAAnU,EAAApP,YAAAqa,GAAAiJ,GAAA,CACA,IAAAE,EAAApU,EAAApP,YAAAqa,GAAAiJ,GAAAC,GAEAC,EAAAnkB,MACAmkB,EAAAxZ,aAAA,EAAA0Y,EAAA,YAAAtT,EAAA/P,IAAAmkB,EAAAnkB,UAOAviB,EAAAumC,wBAWA,IAAAI,EAAA,SAAAxjB,EAAA8iB,GACA,IAAAW,EAAAzjB,EAAA9B,SAAA8B,EAAA9B,SAAAze,OAAA,GACAikC,OAAAv5B,EASA,OANAu5B,EADAZ,GAAAW,KAAA1kB,SACA,IAAA0kB,EAAA1kB,SAIA,KAAAiB,EAAAkB,gBAAA,IAEAwiB,GAGA7mC,EAAA2mC,eAWA,IAAAG,EAAA,SAAAC,GAGA,SAAAD,EAAAE,EAAAjgB,EAAAN,GACA,IAAAtG,EAAA9f,KAUA,GARA+Z,EAAA/Z,KAAAymC,GAEAjY,EAAA1tB,OAAAif,eAAA0mB,EAAAzkC,WAAA,cAAAhC,MAAAO,KAAAP,MAEAA,KAAA2mC,SACA3mC,KAAAyzB,KAAA/M,EACA1mB,KAAAomB,mBAEApmB,KAAA2mC,OACA,UAAAnkC,MAAA,wCAIAxC,KAAAmR,MAAA,eAGAnR,KAAAme,GAAA,gCACA,kBAAA2B,EAAA3O,QAKA2O,EAAA3O,MAAA,wBAEA2O,EAAA+f,QAAA/f,EAAA2T,KAAAzM,KACA9E,KAAA,EAAAqjB,EAAA,YAAAzlB,EAAAmS,OAAA/P,IAAApC,EAAAgD,QAAAZ,KACAkE,gBAAAtG,EAAAsG,iBACO,SAAAuR,EAAAiP,GAEP,GAAA9mB,EAAA+f,QAIA,OAAAlI,EACA7X,EAAA+mB,qBAAA/mB,EAAA+f,QAAA/f,EAAAgD,QAAAZ,IAAA,sBAGApC,EAAAgnB,aAAAhnB,EAAA+f,QAAA/f,EAAAgD,QAAAZ,UAyVA,OAnYA1C,EAAAinB,EAAAC,GA+CAvtB,EAAAstB,IACA9kC,IAAA,uBACAN,MAAA,SAAA2lB,EAAAkM,EAAA6T,GAEA/mC,KAAA6/B,QAAA,KAEAkH,IACA/mC,KAAAmR,MAAA41B,GAGA/mC,KAAA23B,OACAjV,SAAA1iB,KAAAiyB,OAAArP,UAAAsQ,GACAsN,OAAAxZ,EAAAwZ,OACA79B,QAAA,sCAAAuwB,EACA8T,aAAAhgB,EAAAggB,aACApkC,KAAAokB,EAAAwZ,QAAA,SAGAxgC,KAAA2W,QAAA,YAMAhV,IAAA,eACAN,MAAA,SAAA2lB,EAAAkM,GACA,IAAA8C,EAAAh2B,KAGAA,KAAA6/B,QAAA,KACA7/B,KAAAmR,MAAA,gBAEA,IAAA81B,EAAA,IAAAxB,EAAA,WAAAz0B,OAEAi2B,EAAA59B,KAAA2d,EAAAggB,cACAC,EAAAthC,MACAshC,EAAApmB,SAAAqB,IAAAgR,EAGA+T,EAAApmB,SAAAiB,WAAAmlB,EAAApmB,SAAAiB,eAGA,IAAA8jB,EAAAG,EAAA/lC,KAAAiyB,OAAAgV,EAAApmB,UAEA7gB,KAAAgkB,eAAAijB,EAAApmB,SAAAmD,eAEA4hB,GACA5lC,KAAAiyB,OAAA2T,EACA5lC,KAAAknC,OAAAlnC,KAAAiyB,OAAArP,UAAAqkB,EAAApmB,SAAAqB,MAEAliB,KAAA2W,QAAA,qBAIA3W,KAAA8iB,QAAArB,UACA0J,EAAA,WAAA4Y,aAAA/jC,KAAAmnC,oBACAnnC,KAAAmnC,mBAAAhc,EAAA,WAAA8Y,WAAA,WACAjO,EAAArf,QAAA,uBACS2vB,EAAAtmC,KAAA8iB,UAAA8iB,KAGT5lC,KAAA2W,QAAA,qBAOAhV,IAAA,UACAN,MAAA,WACArB,KAAAonC,cACAjc,EAAA,WAAA4Y,aAAA/jC,KAAAmnC,uBAGAxlC,IAAA,cACAN,MAAA,WACA,GAAArB,KAAA6/B,QAAA,CACA,IAAAwH,EAAArnC,KAAA6/B,QAEA7/B,KAAA6/B,QAAA,KACAwH,EAAAC,mBAAA,KACAD,EAAAzP,YAiBAj2B,IAAA,QACAN,MAAA,SAAAqhB,GACA,IAAA6V,EAAAv4B,KAGA,IAAA0iB,EACA,OAAA1iB,KAAAknC,OAIA,oBAAAlnC,KAAAmR,MACA,UAAA3O,MAAA,qCAAAxC,KAAAmR,OAGA,IAAA41B,EAAA/mC,KAAAmR,MAIA,qBAAAuR,EAAA,CACA,IAAA1iB,KAAAiyB,OAAArP,UAAAF,GACA,UAAAlgB,MAAA,yBAAAkgB,GAEAA,EAAA1iB,KAAAiyB,OAAArP,UAAAF,GAGA,IAAA6kB,GAAAvnC,KAAAknC,QAAAxkB,EAAAR,MAAAliB,KAAAknC,OAAAhlB,IAGA,GAAAliB,KAAAiyB,OAAArP,UAAAF,EAAAR,KAAAT,QAeA,OAbAzhB,KAAA6/B,UACA7/B,KAAA6/B,QAAAyH,mBAAA,KACAtnC,KAAA6/B,QAAAjI,QACA53B,KAAA6/B,QAAA,MAEA7/B,KAAAmR,MAAA,gBACAnR,KAAAknC,OAAAxkB,OAGA6kB,IACAvnC,KAAA2W,QAAA,iBACA3W,KAAA2W,QAAA,iBAMA,GAAA4wB,EAAA,CAOA,GAHAvnC,KAAAmR,MAAA,kBAGAnR,KAAA6/B,QAAA,CACA,MAAA0F,EAAA,YAAAvlC,KAAAiyB,OAAA/P,IAAAQ,EAAAR,OAAAliB,KAAA6/B,QAAA3M,IAGA,OAEAlzB,KAAA6/B,QAAAyH,mBAAA,KACAtnC,KAAA6/B,QAAAjI,QACA53B,KAAA6/B,QAAA,KAIA7/B,KAAAknC,QACAlnC,KAAA2W,QAAA,iBAGA3W,KAAA6/B,QAAA7/B,KAAAyzB,KAAAzM,KACA9E,KAAA,EAAAqjB,EAAA,YAAAvlC,KAAAiyB,OAAA/P,IAAAQ,EAAAR,KACAkE,gBAAApmB,KAAAomB,iBACO,SAAAuR,EAAAiP,GAEP,GAAArO,EAAAsH,QAAA,CAIA,GAAAlI,EACA,OAAAY,EAAAsO,qBAAAtO,EAAAsH,QAAAnd,EAAAR,IAAA6kB,GAGAxO,EAAAuO,aAAAF,EAAAlkB,EAAAR,KAGA,gBAAA6kB,EACAxO,EAAA5hB,QAAA,kBAEA4hB,EAAA5hB,QAAA,sBASAhV,IAAA,QACAN,MAAA,WACArB,KAAAonC,cACAjc,EAAA,WAAA4Y,aAAA/jC,KAAAmnC,oBACA,iBAAAnnC,KAAAmR,QAGAnR,KAAAwnC,SAAA,GAGA,oBAAAxnC,KAAAmR,MAIAnR,KAAAknC,OACAlnC,KAAAmR,MAAA,gBAEAnR,KAAAmR,MAAA,cAEO,0BAAAnR,KAAAmR,QACPnR,KAAAmR,MAAA,oBAQAxP,IAAA,OACAN,MAAA,SAAAi5B,GACA,IAAAjB,EAAAr5B,KAEAmrB,EAAA,WAAA4Y,aAAA/jC,KAAAmnC,oBAEA,IAAArkB,EAAA9iB,KAAA8iB,QAEA,GAAAwX,EAAA,CACA,IAAAkM,EAAA1jB,IAAAkB,eAAA,UAEAhkB,KAAAmnC,mBAAAhc,EAAA,WAAA8Y,WAAA,WACA,OAAA5K,EAAAtD,QACSyQ,QAITxmC,KAAAwnC,QAKA1kB,MAAArB,QACAzhB,KAAA2W,QAAA,sBAEA3W,KAAA2W,QAAA,kBAPA3W,KAAAwF,WAeA7D,IAAA,QACAN,MAAA,WACA,IAAAy5B,EAAA96B,KAEAA,KAAAwnC,SAAA,EAGAxnC,KAAA6/B,QAAA7/B,KAAAyzB,KAAAzM,KACA9E,IAAAliB,KAAA2mC,OACAvgB,gBAAApmB,KAAAomB,iBACO,SAAAuR,EAAAiP,GAEP,GAAA9L,EAAA+E,QAAA,CAOA,GAFA/E,EAAA+E,QAAA,KAEAlI,EAWA,OAVAmD,EAAAnD,OACA6I,OAAAoG,EAAApG,OACA79B,QAAA,sCAAAm4B,EAAA6L,OACAK,aAAAJ,EAAAI,aAEApkC,KAAA,GAEA,iBAAAk4B,EAAA3pB,QACA2pB,EAAA0M,SAAA,GAEA1M,EAAAnkB,QAAA,SAGA,IAAAswB,EAAA,IAAAxB,EAAA,WAAAz0B,OAUA,OARAi2B,EAAA59B,KAAAu9B,EAAAI,cACAC,EAAAthC,MAEAm1B,EAAA3pB,MAAA,cAEA81B,EAAApmB,SAAAqB,IAAA4Y,EAAA6L,OAGAM,EAAApmB,SAAA+B,WACAkY,EAAA7I,OAAAgV,EAAApmB,SAEAolB,EAAAnL,EAAA7I,QACAiU,EAAApL,EAAA7I,QAEA6I,EAAAnkB,QAAA,uBACAmkB,EAAA+E,SAGA/E,EAAAhY,MAAAmkB,EAAApmB,SAAA+B,UAAA,OAOAkY,EAAA7I,QACApP,aACArC,SACAC,SACAC,qBACAC,cAEAuB,IAAAiJ,EAAA,WAAAsc,SAAAC,KACA9kB,YACAV,IAAA4Y,EAAA6L,UAGA7L,EAAA7I,OAAArP,UAAAkY,EAAA6L,QAAA7L,EAAA7I,OAAArP,UAAA,GACAkY,EAAA7I,OAAArP,UAAA,GAAAiK,YAAAiO,EAAA6L,OAGA7L,EAAA7I,OAAArP,UAAA,GAAAd,WAAAgZ,EAAA7I,OAAArP,UAAA,GAAAd,eACAgZ,EAAAgM,aAAAF,EAAA9L,EAAA6L,QACA7L,EAAAnkB,QAAA,0BAKA8vB,EApYA,CAqYChX,EAAAuM,aAEDr8B,EAAA,WAAA8mC,IACClmC,KAAAP,KAAA,qBAAA+qB,IAAA,qBAAAhrB,UAAA,qBAAA4H,oBACEggC,gBAAA,GAAA5b,gBAAA,GAAA6b,cAAA,KAAuDC,IAAA,SAAA7c,EAAAprB,EAAAD,GAC1D,aAMA,SAAAka,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAJ7ExL,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAKA,IAAA+uB,EAAApF,EAAA,YAEAqF,EAAAxW,EAAAuW,GAEA0X,EAAA9c,EAAA,cAEA+c,EAAAluB,EAAAiuB,GAEAxX,EAAAtF,EAAA,oBAcAgd,EAAA,SAAAC,EAAAlmC,GACA,IAAA+F,OAAAmF,EAEA,OAAAg7B,GAIAngC,EAAAH,OAAAugC,iBAAAD,GACAngC,EAIAA,EAAA/F,GAHA,IALA,IAkBAomC,EAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAF,EAAA/wB,QAEA+wB,EAAAG,KAAA,SAAA9iC,EAAAG,GACA,IAAA4iC,EAAAH,EAAA5iC,EAAAG,GAEA,WAAA4iC,EACAF,EAAAx1B,QAAArN,GAAA6iC,EAAAx1B,QAAAlN,GAEA4iC,KAcAC,EAAA,SAAAhjC,EAAAG,GACA,IAAA8iC,OAAAz7B,EACA07B,OAAA17B,EAWA,OATAxH,EAAAqc,WAAA8I,YACA8d,EAAAjjC,EAAAqc,WAAA8I,WAEA8d,KAAA/gC,OAAAihC,OAAAC,UACAjjC,EAAAkc,WAAA8I,YACA+d,EAAA/iC,EAAAkc,WAAA8I,WAEA+d,KAAAhhC,OAAAihC,OAAAC,UAEAH,EAAAC,GAGAhpC,EAAA8oC,2BAUA,IAAAK,EAAA,SAAArjC,EAAAG,GACA,IAAAmjC,OAAA97B,EACA+7B,OAAA/7B,EAgBA,OAdAxH,EAAAqc,WAAA4I,YAAAjlB,EAAAqc,WAAA4I,WAAAze,QACA88B,EAAAtjC,EAAAqc,WAAA4I,WAAAze,OAGA88B,KAAAphC,OAAAihC,OAAAC,UAEAjjC,EAAAkc,WAAA4I,YAAA9kB,EAAAkc,WAAA4I,WAAAze,QACA+8B,EAAApjC,EAAAkc,WAAA4I,WAAAze,OAGA+8B,KAAArhC,OAAAihC,OAAAC,UAIAE,IAAAC,GAAAvjC,EAAAqc,WAAA8I,WAAAhlB,EAAAkc,WAAA8I,UACAnlB,EAAAqc,WAAA8I,UAAAhlB,EAAAkc,WAAA8I,UAEAme,EAAAC,GAGArpC,EAAAmpC,4BAgBA,IAAAG,EAAA,SAAAhX,EAAAiX,EAAAC,EAAAC,GAEA,IAAAC,EAAApX,EAAArP,UAAAxK,IAAA,SAAAsK,GACA,IAAAzW,OAAAgB,EACAf,OAAAe,EACAmmB,OAAAnmB,EAQA,OANAhB,EAAAyW,EAAAZ,WAAA4I,YAAAhI,EAAAZ,WAAA4I,WAAAze,MACAC,EAAAwW,EAAAZ,WAAA4I,YAAAhI,EAAAZ,WAAA4I,WAAAxe,OACAknB,EAAA1Q,EAAAZ,WAAA8I,UAEAwI,KAAAzrB,OAAAihC,OAAAC,WAGAzV,YACAnnB,QACAC,SACAwW,cAIAylB,EAAAkB,EAAA,SAAA5jC,EAAAG,GACA,OAAAH,EAAA2tB,UAAAxtB,EAAAwtB,YAKAiW,IAAA3X,OAAA,SAAA4X,GACA,OAAAvB,EAAA,WAAAwB,eAAAD,EAAA5mB,YAKA,IAAA8mB,EAAAH,EAAA3X,OAAA,SAAA4X,GACA,OAAAvB,EAAA,WAAAxN,UAAA+O,EAAA5mB,YAGA8mB,EAAAjnC,SAIAinC,EAAAH,EAAA3X,OAAA,SAAA4X,GACA,OAAAvB,EAAA,WAAA0B,WAAAH,EAAA5mB,aAMA,IAAAgnB,EAAAF,EAAA9X,OAAA,SAAA4X,GACA,OAAAA,EAAAlW,UAAA/C,EAAA,WAAA1C,mBAAAub,IAGAS,EAAAD,IAAAnnC,OAAA,GAIAqnC,EAAAF,EAAAhY,OAAA,SAAA4X,GACA,OAAAA,EAAAlW,YAAAuW,EAAAvW,YACG,GAGHyW,EAAAH,EAAAhY,OAAA,SAAA4X,GACA,OAAAA,EAAAr9B,OAAAq9B,EAAAp9B,SAIAi8B,EAAA0B,EAAA,SAAApkC,EAAAG,GACA,OAAAH,EAAAwG,MAAArG,EAAAqG,QAIA,IAAA69B,EAAAD,EAAAnY,OAAA,SAAA4X,GACA,OAAAA,EAAAr9B,QAAAk9B,GAAAG,EAAAp9B,SAAAk9B,IAGAO,EAAAG,IAAAvnC,OAAA,GAEA,IAAAwnC,EAAAD,EAAApY,OAAA,SAAA4X,GACA,OAAAA,EAAAlW,YAAAuW,EAAAvW,YACG,GAEH4W,OAAA/8B,EACAg9B,OAAAh9B,EACAi9B,OAAAj9B,EAIA88B,IACAC,EAAAH,EAAAnY,OAAA,SAAA4X,GACA,OAAAA,EAAAr9B,MAAAk9B,GAAAG,EAAAp9B,OAAAk9B,IAIAa,EAAAD,EAAAtY,OAAA,SAAA4X,GACA,OAAAA,EAAAr9B,QAAA+9B,EAAA,GAAA/9B,OAAAq9B,EAAAp9B,SAAA89B,EAAA,GAAA99B,SAKAy9B,EAAAM,IAAA1nC,OAAA,GACA2nC,EAAAD,EAAAvY,OAAA,SAAA4X,GACA,OAAAA,EAAAlW,YAAAuW,EAAAvW,YACK,IAIL,IAAA+W,EAAAD,GAAAH,GAAAH,GAAAJ,EAAA,IAAAH,EAAA,GAEA,OAAAc,IAAAznB,SAAA,MAGA/iB,EAAAspC,iBAaA,IAAAmB,EAAA,WACA,OAAAnB,EAAAjpC,KAAA4iB,UAAAqP,OAAAjyB,KAAAqqC,gBAAA5jC,SAAAuhC,EAAAhoC,KAAA+mB,MAAAkhB,KAAA,aAAAxhC,SAAAuhC,EAAAhoC,KAAA+mB,MAAAkhB,KAAA,gBAGAtoC,EAAAyqC,wBAeA,IAAAE,EAAA,SAAAC,GACA,IAAAC,GAAA,EAEA,GAAAD,EAAA,GAAAA,EAAA,EACA,UAAA/nC,MAAA,2DAGA,kBAMA,OALAgoC,EAAA,IACAA,EAAAxqC,KAAAqqC,iBAGAG,EAAAD,EAAAvqC,KAAAqqC,iBAAA,EAAAE,GAAAC,EACAvB,EAAAjpC,KAAA4iB,UAAAqP,OAAAuY,EAAA/jC,SAAAuhC,EAAAhoC,KAAA+mB,MAAAkhB,KAAA,aAAAxhC,SAAAuhC,EAAAhoC,KAAA+mB,MAAAkhB,KAAA,iBAIAtoC,EAAA2qC,iCA6BA,IAAAG,EAAA,SAAAjmC,GACA,IAAAytB,EAAAztB,EAAAytB,OACAgD,EAAAzwB,EAAAywB,YACA7B,EAAA5uB,EAAA4uB,UACAvR,EAAArd,EAAAqd,SACA6oB,EAAAlmC,EAAAkmC,gBACAC,EAAAnmC,EAAAmmC,kBACA/pB,EAAApc,EAAAoc,gBACA0U,EAAA9wB,EAAA8wB,eAIAsV,EAAA3Y,EAAArP,UAAA8O,OAAA,SAAAhP,GACA,OAAAqlB,EAAA,WAAAwB,eAAA7mB,KAKAmoB,EAAAD,EAAAlZ,OAAAqW,EAAA,WAAAxN,WAEAsQ,EAAAtoC,SAIAsoC,EAAAD,EAAAlZ,OAAA,SAAAhP,GACA,OAAAqlB,EAAA,WAAA0B,WAAA/mB,MAIA,IAAAooB,EAAAD,EAAAnZ,OAAAqW,EAAA,WAAAgD,aAAAnpC,KAAA,mBAEAopC,EAAAF,EAAA1yB,IAAA,SAAAsK,GACA,IAAAuoB,EAAA3V,EAAA4V,aAAAxoB,EAAAb,EAAAjB,EAAAqU,GAGAkW,EAAAF,EAAA,IACAG,EAAArD,EAAA,WAAAsD,2BAAAX,EAAAtX,EAAA1Q,GACA4oB,EAAAF,EAAAD,EAAAR,EAEA,OACAjoB,WACA4oB,uBAIAC,EAAAP,EAAAtZ,OAAA,SAAA8Z,GACA,OAAAA,EAAAF,mBAAA,IAQA,OAJAnD,EAAAoD,EAAA,SAAAhlC,EAAAY,GACA,OAAAshC,EAAAthC,EAAAub,SAAAnc,EAAAmc,YAGA6oB,EAAAhpC,OACAgpC,EAAA,IAGApD,EAAA6C,EAAA,SAAAzkC,EAAAY,GACA,OAAAZ,EAAA+kC,kBAAAnkC,EAAAmkC,oBAGAN,EAAA,WAGArrC,EAAA8qC,kCAYA,IAAAgB,EAAA,WAGA,IAAA7oB,EAAA5iB,KAAA4iB,UAAAqP,OAAArP,UAAA8O,OAAAqW,EAAA,WAAAxN,WAGA4N,EAAAvlB,EAAA,SAAArc,EAAAY,GACA,OAAAshC,EAAAliC,EAAAY,KAQA,IAAAukC,EAAA9oB,EAAA8O,OAAA,SAAAhP,GACA,SAAA4N,EAAAyB,aAAArP,EAAAZ,WAAAgQ,QAAAnB,aAGA,OAAA+a,EAAA,UAEA/rC,EAAA8rC,2CACGvP,WAAA,EAAAyP,aAAA,GAAAjP,mBAAA,KAAmDkP,IAAA,SAAA5gB,EAAAprB,EAAAD,IACtD,SAAAorB,GAMA,aAMA,SAAAlR,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAJ7ExL,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAKA,IAAAouB,EAAA,qBAAA9nB,cAAA,gCAAAojB,IAAA,gBAEAG,EAAAF,EAAA,iBAEAG,EAAAtR,EAAAqR,GAUA2gB,EAAA,SAAAnpB,EAAAopB,GACA,IAAAhkC,EAAA,EACA1H,EAAA0rC,EAAAppB,EAAAf,cAGA8J,EAAA/I,EAAA1B,SAAA5gB,GAIA,GAAAqrB,EAAA,CACA,wBAAAA,EAAAjmB,MACA,OAAcsC,OAAA2jB,EAAAjmB,MAAAumC,SAAA,GAEd,wBAAAtgB,EAAA9lB,IACA,OACAmC,OAAA2jB,EAAA9lB,IAAA8lB,EAAA5J,SACAkqB,SAAA,GAIA,MAAA3rC,IAAA,CAEA,GADAqrB,EAAA/I,EAAA1B,SAAA5gB,GACA,qBAAAqrB,EAAA9lB,IACA,OAAcmC,SAAA2jB,EAAA9lB,IAAAomC,SAAA,GAKd,GAFAjkC,GAAA2jB,EAAA5J,SAEA,qBAAA4J,EAAAjmB,MACA,OAAcsC,SAAA2jB,EAAAjmB,MAAAumC,SAAA,GAGd,OAAUjkC,SAAAikC,SAAA,IAUVC,EAAA,SAAAtpB,EAAAopB,GAOA,IANA,IAAAhkC,EAAA,EACA2jB,OAAAxe,EACA7M,EAAA0rC,EAAAppB,EAAAf,cAIQvhB,EAAAsiB,EAAA1B,SAAAze,OAA8BnC,IAAA,CAEtC,GADAqrB,EAAA/I,EAAA1B,SAAA5gB,GACA,qBAAAqrB,EAAAjmB,MACA,OACAsC,OAAA2jB,EAAAjmB,MAAAsC,EACAikC,SAAA,GAMA,GAFAjkC,GAAA2jB,EAAA5J,SAEA,qBAAA4J,EAAA9lB,IACA,OACAmC,OAAA2jB,EAAA9lB,IAAAmC,EACAikC,SAAA,GAKA,OAAUjkC,QAAA,EAAAikC,SAAA,IAgBVE,EAAA,SAAAvpB,EAAAopB,EAAA9R,GACA,IAAAkS,OAAAj/B,EACAk/B,OAAAl/B,EAMA,MAJA,qBAAA6+B,IACAA,EAAAppB,EAAAf,cAAAe,EAAA1B,SAAAze,QAGAupC,EAAAppB,EAAAf,cACA,GAIAuqB,EAAAL,EAAAnpB,EAAAopB,GACAI,EAAAH,QAIAG,EAAApkC,QAKAqkC,EAAAH,EAAAtpB,EAAAopB,GACAK,EAAAJ,QAGAI,EAAArkC,OAIAokC,EAAApkC,OAAAkyB,KAkBAnY,EAAA,SAAAa,EAAAopB,EAAA9R,GACA,IAAAtX,EACA,SASA,GANA,kBAAAsX,IACAA,EAAA,GAKA,qBAAA8R,EAAA,CAEA,GAAAppB,EAAAwB,cACA,OAAAxB,EAAAwB,cAIA,IAAAxB,EAAAjB,QACA,OAAA0J,EAAA,WAAAxS,SAKA,OAAAszB,EAAAvpB,EAAAopB,EAAA9R,IAGAr6B,EAAAkiB,WAYA,IAAAuqB,EAAA,SAAA1pB,EAAA2pB,EAAAC,GACA,IAAAC,EAAA,EAEA,GAAAF,EAAAC,EAAA,CACA,IAAAE,GAAAF,EAAAD,GACAA,EAAAG,EAAA,GACAF,EAAAE,EAAA,GAGA,GAAAH,EAAA,GACA,QAAAjsC,EAAAisC,EAA4BjsC,EAAA0M,KAAAuC,IAAA,EAAAi9B,GAA2BlsC,IACvDmsC,GAAA7pB,EAAAsB,eAEAqoB,EAAA,EAGA,IAAAjsC,EAAAisC,EAA0BjsC,EAAAksC,EAAclsC,IACxCmsC,GAAA7pB,EAAA1B,SAAA5gB,GAAAyhB,SAGA,OAAA0qB,GAGA5sC,EAAAysC,eAaA,IAAAK,EAAA,SAAA/pB,GACA,IAAAA,EAAA1B,SAAAze,OACA,SAGA,IAAAnC,EAAAsiB,EAAA1B,SAAAze,OAAA,EACAmqC,EAAAhqB,EAAA1B,SAAA5gB,GAAAyhB,UAAAa,EAAAsB,eACA2oB,EAAAD,EAAA,EAAAhqB,EAAAsB,eAEA,MAAA5jB,IAGA,GAFAssC,GAAAhqB,EAAA1B,SAAA5gB,GAAAyhB,SAEA6qB,GAAAC,EACA,MAIA,OAAA7/B,KAAAC,IAAA,EAAA3M,IAGAT,EAAA8sC,gBAcA,IAAAtS,EAAA,SAAAzX,EAAAsX,EAAA4S,GACA,IAAAlqB,MAAA1B,SACA,YAEA,GAAA0B,EAAAjB,QACA,OAAAI,EAAAa,GAGA,UAAAsX,EACA,YAGAA,KAAA,EAEA,IAAA8R,EAAAc,EAAAH,EAAA/pB,KAAA1B,SAAAze,OAEA,OAAA0pC,EAAAvpB,IAAAf,cAAAmqB,EAAA9R,IAGAr6B,EAAAw6B,cAgBA,IAAAjF,EAAA,SAAAxS,EAAAsX,GACA,IAAA4S,GAAA,EACArI,EAAAvK,GAAA,EACAqK,EAAAlK,EAAAzX,EAAAsX,EAAA4S,GAEA,cAAAvI,GACA,EAAA5U,EAAAod,oBAEA,EAAApd,EAAAod,iBAAAtI,EAAAF,IAGA1kC,EAAAu1B,WACA,IAAA4X,EAAA,SAAAC,GACA,OAAAA,EAAAjgC,KAAAuzB,MAAA0M,KAAA,GAGAC,EAAA,SAAAC,EAAAF,GAEA,GAAAD,EAAAC,GACA,OAAAA,EAAA,GAAAE,EAKA,IAFA,IAAAC,EAAAH,EAAAz3B,WAAA3R,MAAA,QAAApB,OAEAnC,EAAA,EAAiBA,GAAA8sC,EAAuB9sC,IAAA,CACxC,IAAAmY,EAAAzL,KAAA4L,IAAA,GAAAtY,GACA+sC,EAAAJ,EAAAx0B,EAEA,GAAAu0B,EAAAK,IAAA/sC,IAAA8sC,EACA,OAAAC,EAAAF,GAAA10B,IAKA60B,EAAAJ,EAAAprC,KAAA,QACAyrC,EAAAL,EAAAprC,KAAA,SAaA0rC,EAAA,SAAA5qB,EAAAuS,EAAAoX,EAAAtmC,GACA,IAAA3F,OAAA6M,EACAwe,OAAAxe,EACAsgC,EAAA7qB,EAAA1B,SAAAze,OAEAirC,EAAAvY,EAAAlvB,EAEA,GAAAynC,EAAA,GAGA,GAAAnB,EAAA,EACA,IAAAjsC,EAAAisC,EAAA,EAA8BjsC,GAAA,EAAQA,IAGtC,GAFAqrB,EAAA/I,EAAA1B,SAAA5gB,GACAotC,GAAAH,EAAA5hB,EAAA5J,UACA2rB,EAAA,EACA,OACAC,WAAArtC,EACA2F,YAAAqmC,EAAA1pB,EAAA2pB,EAAAjsC,IAOA,OACAqtC,WAAA,EACA1nC,UAAAkvB,GAOA,GAAAoX,EAAA,GACA,IAAAjsC,EAAAisC,EAAwBjsC,EAAA,EAAOA,IAE/B,GADAotC,GAAA9qB,EAAAsB,eACAwpB,EAAA,EACA,OACAC,WAAA,EACA1nC,UAAAkvB,GAIAoX,EAAA,EAKA,IAAAjsC,EAAAisC,EAAsBjsC,EAAAmtC,EAAiBntC,IAGvC,GAFAqrB,EAAA/I,EAAA1B,SAAA5gB,GACAotC,GAAAJ,EAAA3hB,EAAA5J,UACA2rB,EAAA,EACA,OACAC,WAAArtC,EACA2F,YAAAqmC,EAAA1pB,EAAA2pB,EAAAjsC,IAMA,OACAqtC,WAAAF,EAAA,EACAxnC,UAAAkvB,IAIAt1B,EAAA2tC,sBAQA,IAAAI,EAAA,SAAAhrB,GACA,OAAAA,EAAA8X,cAAA9X,EAAA8X,aAAA3P,KAAA4P,OAGA96B,EAAA+tC,gBASA,IAAAnE,EAAA,SAAA7mB,GACA,OAAAA,EAAA8X,cAAA9X,EAAA8X,eAAA7hB,KAGAhZ,EAAA4pC,iBAQA,IAAAhP,EAAA,SAAA7X,GACA,IAAAirB,EAAAD,EAAAhrB,GAEA,OAAAA,EAAAkrB,WAAAD,GAGAhuC,EAAA46B,YAQA,IAAAkP,EAAA,SAAA/mB,GACA,OAAAA,EAAAkrB,UAGAjuC,EAAA8pC,aAMA,IAAApR,EAAA,SAAAvV,GACA,QAAA1iB,EAAA,EAAiBA,EAAA0iB,EAAA9B,SAAAze,OAA2BnC,IAC5C,GAAA0iB,EAAA9B,SAAA5gB,GAAAuB,IACA,SAGA,UAGAhC,EAAA04B,QAMA,IAAAC,EAAA,SAAAxV,GACA,QAAA1iB,EAAA,EAAiBA,EAAA0iB,EAAA9B,SAAAze,OAA2BnC,IAC5C,GAAA0iB,EAAA9B,SAAA5gB,GAAAgY,IACA,SAGA,UAGAzY,EAAA24B,SAYA,IAAAyS,EAAA,SAAA7gB,EAAAxH,GACA,OAAAA,EAAAZ,YAAAY,EAAAZ,WAAAoI,IAGAvqB,EAAAorC,eAiBA,IAAAM,EAAA,SAAAX,EAAAtX,EAAA1Q,GACA,IAAAod,EAAAx9B,UAAAC,QAAA,QAAA0K,IAAA3K,UAAA,KAAAA,UAAA,GAEA,IAAAyoC,EAAA,YAAAroB,GACA,OAAAmrB,IAGA,IAAAxoC,EAAAqlC,EAAAhoB,EAAAZ,WAAA8I,UAEA,OAAAvlB,EAAA,EAAAy6B,GAAA1M,GAGAzzB,EAAA0rC,6BAMA,IAAAnV,EAAA,SAAAjE,EAAAnP,GACA,OAAAmP,EAAArP,UAAArgB,OACA,SAGA,IAAAurC,EAAAhrB,EAAAhB,WAAA8I,WAAAge,OAAAC,UAEA,OAMG,IANH5W,EAAArP,UAAA8O,OAAA,SAAAhP,GACA,QAAA6X,EAAA7X,KAIAA,EAAAZ,WAAA8I,WAAA,GAAAkjB,IACGvrC,QAGH5C,EAAAu2B,2BAEAv2B,EAAA,YACAkiB,WACAqT,WACAuX,gBACAa,sBACA/S,YACAkP,aACAiE,gBACAnE,iBACApP,cACA9B,QACAC,SACAyS,eACAM,6BACAnV,8BAEC31B,KAAAP,KAAA,qBAAA+qB,IAAA,qBAAAhrB,UAAA,qBAAA4H,oBACEokB,gBAAA,KAAmBgiB,IAAA,SAAA/iB,EAAAprB,EAAAD,IACtB,SAAAorB,GAQA,aAEAjqB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAA4nB,EAAA,WAAmC,SAAAC,EAAAC,EAAA/oB,GAAiC,IAAAgpB,KAAeC,GAAA,EAAeC,GAAA,EAAgBC,OAAAtc,EAAoB,IAAM,QAAAuc,EAAAC,EAAAN,EAAAhoB,OAAAuoB,cAA0CL,GAAAG,EAAAC,EAAAE,QAAA9N,MAA+BwN,GAAA,EAAkC,GAArBD,EAAA/f,KAAAmgB,EAAAnoB,OAAqBjB,GAAAgpB,EAAA7mB,SAAAnC,EAAA,MAAuC,MAAAwpB,GAAcN,GAAA,EAAWC,EAAAK,EAAY,QAAU,KAAMP,GAAAI,EAAA,WAAAA,EAAA,YAA2C,QAAU,GAAAH,EAAA,MAAAC,GAAsB,OAAAH,EAAe,gBAAAD,EAAA/oB,GAA2B,GAAA2a,MAAA8O,QAAAV,GAA0B,OAAAA,EAAc,GAAAhoB,OAAAuoB,YAAA5oB,OAAAqoB,GAA2C,OAAAD,EAAAC,EAAA/oB,GAAuC,UAAA4U,UAAA,yDAAlkB,GAEA,SAAA6E,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAE7E,IAAAmjB,EAAA,qBAAA9nB,cAAA,gCAAAojB,IAAA,gBAEA2E,EAAA7V,EAAA4V,GAGAyV,EAAA,KAMA9K,EAAA,EAAA8K,EASA8I,EAAA,SAAAjB,EAAAP,GACA,IAAAyB,EAAAhlB,EAAAujB,EAAA,GAEAhnC,EAAAyoC,EAAA,GACAtoC,EAAAsoC,EAAA,GAEA,OAAAnhC,KAAAuC,IAAAvC,KAAAC,IAAAvH,EAAAunC,GAAApnC,IAEAuoC,EAAA,SAAAC,EAAAC,GACA,IAAAl3B,KACA9W,OAAA6M,EAEA,GAAAkhC,KAAA5rC,OAEA,IAAAnC,EAAA,EAAeA,EAAA+tC,EAAA5rC,OAAuBnC,IACtCguC,EAAAD,EAAA3oC,MAAApF,GAAA+tC,EAAAxoC,IAAAvF,KACA8W,EAAA7N,MAAA8kC,EAAA3oC,MAAApF,GAAA+tC,EAAAxoC,IAAAvF,KAKA,OAAAsvB,EAAA,WAAA8E,iBAAAtd,IAUAwjB,EAAA,SAAAhC,EAAA8U,GACA,OAAAU,EAAAxV,EAAA,SAAAlzB,EAAAG,GACA,OAAAH,EAAA0/B,GAAAsI,GAAA7nC,EAAAu/B,GAAAsI,KAUA7I,EAAA,SAAAwJ,EAAAX,GACA,OAAAU,EAAAC,EAAA,SAAA3oC,GACA,OAAAA,EAAA0/B,GAAAsI,KASApI,EAAA,SAAA1M,GACA,GAAAA,EAAAn2B,OAAA,EACA,OAAAmtB,EAAA,WAAA8E,mBAKA,IAFA,IAAAlH,KAEAltB,EAAA,EAAiBA,EAAAs4B,EAAAn2B,OAAqBnC,IAAA,CACtC,IAAAoF,EAAAkzB,EAAA/yB,IAAAvF,EAAA,GACAuF,EAAA+yB,EAAAlzB,MAAApF,GAEAktB,EAAAjkB,MAAA7D,EAAAG,IAGA,OAAA+pB,EAAA,WAAA8E,iBAAAlH,IAYA+gB,EAAA,SAAA1I,EAAAC,GACA,IAAAxlC,OAAA6M,EACAzH,OAAAyH,EACAtH,OAAAsH,EACAnF,KACAwmC,KAOAC,EAAA,SAAAC,GACA,OAAAA,EAAA,IAAA7oC,GAAA6oC,EAAA,IAAA7oC,GAGA,GAAAggC,EAEA,IAAAvlC,EAAA,EAAeA,EAAAulC,EAAApjC,OAAqBnC,IACpCoF,EAAAmgC,EAAAngC,MAAApF,GACAuF,EAAAggC,EAAAhgC,IAAAvF,GAEAkuC,EAAAjlC,MAAA7D,EAAAG,IAIA,GAAAigC,EAGA,IAAAxlC,EAAA,EAAeA,EAAAwlC,EAAArjC,OAAmBnC,IAClCoF,EAAAogC,EAAApgC,MAAApF,GACAuF,EAAAigC,EAAAjgC,IAAAvF,GAEAkuC,EAAAG,KAAAF,IAKAzmC,EAAAuB,KAAA1D,GAMA,WAAAmC,EAAAvF,OACA,KAGAuF,EAAA,IASA4mC,EAAA,SAAAC,EAAAC,GACA,IAAAppC,EAAA,KACAG,EAAA,KACAkpC,EAAA,EACAC,KACAxhB,KAEA,IAAAqhB,MAAApsC,SAAAqsC,MAAArsC,OACA,OAAAmtB,EAAA,WAAAmd,kBAKA,IAAApiC,EAAAkkC,EAAApsC,OAGA,MAAAkI,IACAqkC,EAAAzlC,MAAkBmkC,KAAAmB,EAAAnpC,MAAAiF,GAAAlC,KAAA,UAClBumC,EAAAzlC,MAAkBmkC,KAAAmB,EAAAhpC,IAAA8E,GAAAlC,KAAA,QAElBkC,EAAAmkC,EAAArsC,OACA,MAAAkI,IACAqkC,EAAAzlC,MAAkBmkC,KAAAoB,EAAAppC,MAAAiF,GAAAlC,KAAA,UAClBumC,EAAAzlC,MAAkBmkC,KAAAoB,EAAAjpC,IAAA8E,GAAAlC,KAAA,QASlB,IANAumC,EAAAvG,KAAA,SAAAhiC,EAAAY,GACA,OAAAZ,EAAAinC,KAAArmC,EAAAqmC,OAKA/iC,EAAA,EAAiBA,EAAAqkC,EAAAvsC,OAAwBkI,IACzC,UAAAqkC,EAAArkC,GAAAlC,MACAsmC,IAIA,IAAAA,IACArpC,EAAAspC,EAAArkC,GAAA+iC,OAEK,QAAAsB,EAAArkC,GAAAlC,OACLsmC,IAIA,IAAAA,IACAlpC,EAAAmpC,EAAArkC,GAAA+iC,OAKA,OAAAhoC,GAAA,OAAAG,IACA2nB,EAAAjkB,MAAA7D,EAAAG,IACAH,EAAA,KACAG,EAAA,MAIA,OAAA+pB,EAAA,WAAA8E,iBAAAlH,IAeAyhB,EAAA,SAAAC,EAAAC,EAAAha,EAAAyD,GACA,IAAAwW,EAAAD,EAAAtpC,IAAA,GAAAspC,EAAAzpC,MAAA,GACA2pC,EAAAH,EAAArpC,IAAA,GAAAqpC,EAAAxpC,MAAA,GACA4pC,EAAAF,EAAAC,EACAE,EAAAX,EAAAM,EAAAtW,GACA4W,EAAAZ,EAAAO,EAAAvW,GACA6W,EAAA,EACAC,EAAA,EAEA/kC,EAAA4kC,EAAA9sC,OAEA,MAAAkI,IACA8kC,GAAAF,EAAA1pC,IAAA8E,GAAA4kC,EAAA7pC,MAAAiF,GAMA4kC,EAAA7pC,MAAAiF,KAAAwqB,IACAsa,GAAAH,GAIA3kC,EAAA6kC,EAAA/sC,OAEA,MAAAkI,IACA+kC,GAAAF,EAAA3pC,IAAA8E,GAAA6kC,EAAA9pC,MAAAiF,GAKA,OAAAqC,KAAAC,IAAAwiC,EAAAC,GAAAN,EAAA,KAeAO,EAAA,SAAAC,EAAAhF,EAAAzV,EAAAyD,GACA,IAAAiX,EAAAD,EAAAhF,EAGAkF,EAAAlgB,EAAA,WAAA8E,mBAAAkb,EAAAC,KAQAE,EAAAngB,EAAA,WAAA8E,mBAAAwZ,EAAA0B,GAAAza,EAAA0a,SAIA,GAAAE,EAAArqC,MAAA,KAAAqqC,EAAAlqC,IAAA,GACA,SAGA,IAAAX,EAAA+pC,EAAAc,EAAAD,EAAA3a,EAAAyD,GAIA,OAAAoX,MAAA9qC,QAAA2T,KAAA3T,KAAA2T,IACA,EAGA3T,GASAw/B,EAAA,SAAAtY,GACA,IAAA6jB,KAEA,IAAA7jB,MAAA3pB,OACA,SAGA,QAAAnC,EAAA,EAAiBA,EAAA8rB,EAAA3pB,OAAkBnC,IACnC2vC,EAAA1mC,KAAA6iB,EAAA1mB,MAAApF,GAAA,OAAA8rB,EAAAvmB,IAAAvF,IAGA,OAAA2vC,EAAAjjB,KAAA,OAiBA6d,EAAA,SAAAjS,EAAAzD,GACA,IAAA+a,EAAA1tC,UAAAC,QAAA,QAAA0K,IAAA3K,UAAA,KAAAA,UAAA,GAEA+3B,EAAA3B,EAAAn2B,OAAAm2B,EAAA/yB,IAAA+yB,EAAAn2B,OAAA,KAEA,OAAA83B,EAAApF,GAAA+a,GAGArwC,EAAA,YACA+6B,YACAiK,gBACAS,WACAiJ,gCACAoB,4BACAvK,oBACA9K,kBACAoK,iBACAmG,qBAEA/qC,EAAAD,UAAA,aACCY,KAAAP,KAAA,qBAAA+qB,IAAA,qBAAAhrB,UAAA,qBAAA4H,uBACGsoC,IAAA,SAAAjlB,EAAAprB,EAAAD,IACJ,SAAAorB,GACA,aAMA,SAAAlR,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAJ7ExL,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAKA,IAAAouB,EAAA,qBAAA9nB,cAAA,gCAAAojB,IAAA,gBAEA2E,EAAA7V,EAAA4V,GAEAygB,GACAC,cAAA,GACAC,UAAA,SAAAzmB,GACA,IAAAwJ,EAAAnzB,KAAAmzB,MAA0Bkd,0BAAA,IAC1BC,EAAAnd,EAAAod,eAEA,OAAA5mB,EAAA2mB,KAWAE,EAAA,SAAAA,EAAA1pB,EAAAxB,GACA,IAAAmrB,EAAA,EACAtM,EAAA,EACAuM,EAAAhhB,EAAA,WAAAgG,aAAAwa,EAAA5qB,GAEAwB,EAAAtB,MAAA,WACAsB,EAAAnQ,SAAoBpO,KAAA,QAAA5H,KAAA,mCASpB,IAAAgwC,EAAA,WACAxM,GACArd,EAAAmO,YAAAkP,IAUAyM,EAAA,SAAAN,GACA,OAAAA,QAAArjC,IAAAqjC,IAGAnM,EAAArd,EAAAjF,aAAAlJ,KAAAmO,EAAAmO,eAAA,EAEAnO,EAAA4Q,IAAA,iBAAAiZ,GAEA7pB,EAAAT,IAAAiqB,GACAxpB,EAAAnQ,SAAoBpO,KAAA,QAAA5H,KAAA,qBACpBmmB,EAAA8S,SASAiX,EAAA,WAGA,GAAAhmB,KAAA4P,MAAAgW,EAAA,IAAAC,EAAAP,cACArpB,EAAAnQ,SAAsBpO,KAAA,QAAA5H,KAAA,kCADtB,CAKA,GAAA+vC,EAAAN,WAAA,oBAAAM,EAAAN,UAMA,OAFAK,EAAA5lB,KAAA4P,MAEAiW,EAAAN,UAAA7vC,KAAAumB,EAAA8pB,GALAlhB,EAAA,WAAA8C,IAAAmF,MAAA,2EAaAmZ,EAAA,SAAAA,IACAhqB,EAAAzI,IAAA,iBAAAsyB,GACA7pB,EAAAzI,IAAA,QAAAwyB,GACA/pB,EAAAzI,IAAA,UAAAyyB,IASAC,EAAA,SAAAC,GACAF,IACAN,EAAA1pB,EAAAkqB,IAGAlqB,EAAA3I,GAAA,QAAA0yB,GACA/pB,EAAA3I,GAAA,UAAA2yB,GAIAhqB,EAAAmqB,oBAAAF,GASAE,EAAA,SAAA3rB,GACAkrB,EAAAxwC,KAAAslB,IAGA3lB,EAAA,WAAAsxC,EACArxC,EAAAD,UAAA,aACCY,KAAAP,KAAA,qBAAA+qB,IAAA,qBAAAhrB,UAAA,qBAAA4H,uBACGupC,IAAA,SAAAlmB,EAAAprB,EAAAD,GACJ,aAMA,SAAAoa,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAJ3FlU,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAKA,IAAA6tB,EAAAlE,EAAA,iBAcAmmB,EAAA,SAAAC,EAAAC,EAAAC,GACA,gBAAAC,GACA,IAAA7uB,EAAA0uB,EAAAnf,OAAArP,UAAAyuB,GACAG,GAAA,EAAAtiB,EAAAqa,gBAAA7mB,GACA+uB,GAAA,EAAAviB,EAAAqL,WAAA7X,GAEA,2BAAA6uB,EACAE,GAGAF,SACA7uB,EAAAkrB,SAEAlrB,EAAAkrB,UAAA,EAGA2D,IAAAE,GAAAD,IAEAF,IACAC,EACAH,EAAAz6B,QAAA,oBAEAy6B,EAAAz6B,QAAA,sBAGA46B,KAYAG,EAAA,SAAAA,EAAAC,EAAAjvB,EAAAje,GACAsV,EAAA/Z,KAAA0xC,GAGA,IAAAE,EAAAD,EAAAE,0BAAAC,mBAAAlwC,KAAA+vC,EAAAE,2BAGA,GAAAnvB,EAAAZ,WAAA4I,WAAA,CACA,IAAAC,EAAAjI,EAAAZ,WAAA4I,WAEA1qB,KAAAiM,MAAA0e,EAAA1e,MACAjM,KAAAkM,OAAAye,EAAAze,OAGAlM,KAAAozB,UAAA1Q,EAAAZ,WAAA8I,UAIA5qB,KAAAyE,KAIAzE,KAAAi+B,QAAAkT,EAAAQ,EAAA/uB,UAAAF,EAAAR,IAAA0vB,IAWAG,EAAA,SAAAJ,GACA,IAAA/uB,EAAA+uB,EAAA/uB,UAGA+uB,EAAAK,gBAAA,WACA,OAAApvB,EAAAqP,OAAArP,UAAA8O,OAAA,SAAA5O,GACA,UAAAoM,EAAAqa,gBAAAzmB,KACK1K,IAAA,SAAApQ,EAAA5H,GACL,WAAAsxC,EAAAC,EAAA3pC,IAAAka,SAKAviB,EAAA,WAAAoyC,EACAnyC,EAAAD,UAAA,aACG28B,gBAAA,KAAmB2V,IAAA,SAAAjnB,EAAAprB,EAAAD,GAKtB,aAMA,SAAAka,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAJ7ExL,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAKA,IAAA6wC,EAAAlnB,EAAA,eAEAmnB,EAAAt4B,EAAAq4B,GAEAhnB,EAAAF,EAAA,iBAEAG,EAAAtR,EAAAqR,GAEAknB,EAAA,SAAAC,EAAAC,GAEA,kBAAA9rC,KAAA8rC,GACAA,GAIA,QAAA9rC,KAAA6rC,KACAA,EAAAF,EAAA,WAAAI,iBAAApnB,EAAA,WAAAsc,SAAAC,KAAA2K,IAGAF,EAAA,WAAAI,iBAAAF,EAAAC,KAGA3yC,EAAA,WAAAyyC,EACAxyC,EAAAD,UAAA,aACGosB,gBAAA,GAAAymB,cAAA,KAAoCC,IAAA,SAAAznB,EAAAprB,EAAAD,IACvC,SAAAorB,GAIA,aAEAjqB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAA8X,EAAA,WAAiC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAzhB,GAEA8U,EAAA,SAAAkkB,EAAAC,EAAAC,GAAwC,IAAAhkB,GAAA,EAAmB,MAAAA,EAAA,CAA4B,IAAA9sB,EAAA4wC,EAAA3wC,EAAA4wC,EAAA9jB,EAAA+jB,EAAkDhkB,GAAA,EAAgB,OAAA9sB,MAAAuT,SAAArT,WAAkD,IAAA8sB,EAAAhuB,OAAAiuB,yBAAAjtB,EAAAC,GAA8D,QAAAkL,IAAA6hB,EAAA,CAAwO,aAAAA,EAA4B,OAAAA,EAAAztB,MAA4B,IAAAT,EAAAkuB,EAAA7tB,IAAuB,QAAAgM,IAAArM,EAA4B,OAAoB,OAAAA,EAAAL,KAAAsuB,GAA7U,IAAA5G,EAAAnnB,OAAAif,eAAAje,GAA4C,UAAAmmB,EAAuB,OAA2ByqB,EAAAzqB,EAAc0qB,EAAA5wC,EAAgB6wC,EAAA/jB,EAAgBD,GAAA,EAAeE,EAAA7G,OAAAhb,IAE9b,SAAA4M,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAE7E,SAAAyN,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAE3F,SAAAwK,EAAAC,EAAAC,GAA0C,uBAAAA,GAAA,OAAAA,EAA+D,UAAA1K,UAAA,kEAAA0K,GAAuGD,EAAAzd,UAAAlB,OAAAY,OAAAge,KAAA1d,WAAyEkE,aAAe7E,MAAAoe,EAAAze,YAAA,EAAAyY,UAAA,EAAAD,cAAA,KAA6EkG,IAAA5e,OAAA6e,eAAA7e,OAAA6e,eAAAF,EAAAC,GAAAD,EAAAG,UAAAF,GAErX,IAAAooB,EAAA9c,EAAA,cAEA+c,EAAAluB,EAAAiuB,GAEArY,EAAA,qBAAA9nB,cAAA,gCAAAojB,IAAA,gBAEA2E,EAAA7V,EAAA4V,GAEAojB,EAAA7nB,EAAA,oBAEA8nB,EAAAj5B,EAAAg5B,GAEAziB,EAAApF,EAAA,YAEAqF,EAAAxW,EAAAuW,GAEAlF,EAAAF,EAAA,iBAEAG,EAAAtR,EAAAqR,GAEA6nB,EAAA/nB,EAAA,+DAEAgoB,EAAAn5B,EAAAk5B,GAEA9kB,EAAAjD,EAAA,eAEAioB,EAAAjoB,EAAA,2BAEAuE,EAAAvE,EAAA,YAEAkoB,EAAAloB,EAAA,wBAGAmoB,EAAA,IAYAC,EAAA,SAAA1wB,EAAAyR,EAAAkf,GACA,IAAA3wB,IAAAyR,EACA,SAGA,IAAAnT,EAAA0B,EAAA1B,SAIAsyB,EAAAD,IAAAryB,EAAAze,OAKA,OAAAmgB,EAAAjB,SAAA,SAAA0S,EAAAsF,YAAA6Z,GAGAC,EAAA,SAAAxG,GACA,wBAAAA,GAAAn0B,SAAAm0B,IAGAyG,EAAA,SAAA5d,EAAA6d,EAAAC,GAGA,eAAA9d,GAAA6d,GAAAC,EAIAA,EAAAC,eAAAD,EAAAE,cAIAH,EAAAG,gBAAAF,EAAAE,cACA,6LAGAH,EAAAG,eAAAF,EAAAE,cACA,kMAGA,KAXA,4CAJA,MAkBAj0C,EAAA6zC,qBAcA,IAAAK,EAAA,SAAA3e,EAAAD,EAAAjR,GACA,IAAA8vB,OAAA7mC,EAaA,OATA6mC,EAFA5e,EAAA3yB,QAAA2yB,EAAA1vB,MAAA,MAAA0vB,EAAA1vB,MAAA,GAAAyvB,EAEAC,EAAA1vB,MAAA,GAGAyvB,EAAA,GAMAnoB,KAAAuC,IAAAykC,EAAA7e,EAAAjR,IAGArkB,EAAAk0C,yBASA,IAAAE,EAAA,SAAA9gB,GAGA,SAAA8gB,EAAAvvC,GACA,IAAAsb,EAAA9f,KAEAslB,EAAAhjB,UAAAC,QAAA,QAAA0K,IAAA3K,UAAA,MAA0EA,UAAA,GAM1E,GAJAyX,EAAA/Z,KAAA+zC,GAEAvlB,EAAA1tB,OAAAif,eAAAg0B,EAAA/xC,WAAA,cAAAhC,MAAAO,KAAAP,OAEAwE,EACA,UAAAwQ,UAAA,wCAEA,uBAAAxQ,EAAAywB,YACA,UAAAjgB,UAAA,mCAEA,IAAAxQ,EAAA2vB,YACA,UAAAnf,UAAA,4BAGAhV,KAAAmR,MAAA,OACAnR,KAAAozB,UAAA5uB,EAAA4uB,UACApzB,KAAAg0C,YAAuBjY,KAAA,EAAAtxB,MAAA,GACvBzK,KAAAi0C,UAAApG,IACA7tC,KAAAk0C,cACAl0C,KAAAytC,WAAA,KAGAztC,KAAAy0B,WAAAjwB,EAAA4wB,UACAp1B,KAAAm0C,aAAA3vC,EAAAywB,YACAj1B,KAAAu0B,UAAA/vB,EAAA0wB,SACAl1B,KAAAo0C,SAAA5vC,EAAA2wB,QACAn1B,KAAAq0C,UAAA7vC,EAAAqd,SACA7hB,KAAAs0C,aAAA9vC,EAAA2vB,YACAn0B,KAAAyzB,KAAAjvB,EAAAkiB,IACA1mB,KAAAu0C,YAAA/vC,EAAAoxB,WACA51B,KAAAw0C,oBAAA,EACAx0C,KAAA20B,sBAAAnwB,EAAAmxB,qBACA31B,KAAAy0C,kBAAAjwC,EAAA6wB,iBAGAr1B,KAAA00C,oBAAA,KACA10C,KAAA20C,YAAA,EACA30C,KAAA40C,kBAAA,EACA50C,KAAA60C,gBAAA,KACA70C,KAAA80C,UAAA,KACA90C,KAAA+0C,eAAA,KACA/0C,KAAAg1C,YAAA,KAGAh1C,KAAAi1C,qBAAA,KACAj1C,KAAAk1C,iBAEAl1C,KAAA+0B,WAAAvwB,EAAA+wB,UAKAv1B,KAAA00B,gBAAAlwB,EAAA8wB,eACAt1B,KAAAm1C,YACA9B,aAAA,EACA7F,KAAA,GAGAxtC,KAAA00B,gBAAAvW,GAAA,4BACA,OAAA2B,EAAAnJ,QAAA,oBAGA3W,KAAAs0C,aAAAjgB,iBAAA,wBACA,OAAAvU,EAAAia,QAAA,IAIA/5B,KAAAo1C,gBAAA,EAEA9vB,EAAA+d,QACArjC,KAAAsjC,QAAA5T,EAAA,WAAA8C,IAAA5wB,KAAA8tB,EAAA,4BAAA1vB,KAAAu0C,YAAA,OAspCA,OAnuCA/0B,EAAAu0B,EAAA9gB,GAuFA9Z,EAAA46B,IACApyC,IAAA,cACAN,MAAA,WACArB,KAAAq1C,sBAAA,EACAr1C,KAAAs1C,cAAA,EACAt1C,KAAAu1C,qBAAA,EACAv1C,KAAAw1C,sBAAA,EACAx1C,KAAAy1C,qBAAA,EACAz1C,KAAA01C,sBAAA,EACA11C,KAAAg5B,mBAAA,KAOAr3B,IAAA,UACAN,MAAA,WACArB,KAAAmR,MAAA,WACAnR,KAAA63B,QACA73B,KAAA21C,SACA31C,KAAA+0C,gBACA/0C,KAAA+0C,eAAAt2B,UAEAze,KAAAk0C,iBAQAvyC,IAAA,QACAN,MAAA,WACA,YAAArB,KAAAmR,OAOAnR,KAAA21C,SAMA31C,KAAAmR,MAAA,QAIAnR,KAAAs3B,UACAt3B,KAAA41C,kBAjBA51C,KAAA60C,kBACA70C,KAAA60C,gBAAA,SA0BAlzC,IAAA,SACAN,MAAA,WACArB,KAAA60C,iBACA70C,KAAA60C,gBAAAgB,gBAIA71C,KAAA60C,gBAAA,QAUAlzC,IAAA,QACAN,MAAA,SAAAy0C,GAMA,MALA,qBAAAA,IACA91C,KAAA20C,OAAAmB,GAGA91C,KAAA60C,gBAAA,KACA70C,KAAA20C,UAGAhzC,IAAA,cACAN,MAAA,WACArB,KAAA+5B,QAAA,EACA/5B,KAAA63B,QACA73B,KAAA2W,QAAA,YAUAhV,IAAA,YACAN,MAAA,WACA,OAAArB,KAAA+0C,eAIA/0C,KAAA+0C,eAAArc,WAHAhJ,EAAA,WAAA8E,sBAiBA7yB,IAAA,cACAN,MAAA,SAAA+W,GACA,IAAA1T,IAAApC,UAAAC,QAAA,QAAA0K,IAAA3K,UAAA,KAAAA,UAAA,GAEA,IAAA8V,EACA,YAGA,IAAA3T,GAAA,EAAAwpB,EAAAtB,eAAAvU,GACA29B,EAAA/1C,KAAAk1C,cAAAzwC,GAUA,OARAC,IAAAqxC,GAAA39B,EAAA+D,QACAnc,KAAAk1C,cAAAzwC,GAAAsxC,GACAlpB,YAAAzU,EAAAyU,YACAtL,UAAAnJ,EAAAmJ,UACApF,MAAA/D,EAAA+D,QAIA45B,GAAA39B,KAUAzW,IAAA,qBACAN,MAAA,WACA,OAAArB,KAAAg2C,YAIAh2C,KAAA+0C,gBAAA/0C,KAAA80C,WAAA,SAAA90C,KAAAmR,SAAAnR,KAAAs3B,YAOA31B,IAAA,OACAN,MAAA,WAMA,GAJArB,KAAA41C,iBAIA51C,KAAAg2C,UAAA,CAQA,GAHAh2C,KAAA00B,gBAAAuhB,mBAAAj2C,KAAAg2C,WAGA,SAAAh2C,KAAAmR,OAAAnR,KAAAk2C,qBACA,OAAAl2C,KAAAm2C,SAKAn2C,KAAAk2C,sBAAA,UAAAl2C,KAAAmR,OAAA,SAAAnR,KAAAmR,QAIAnR,KAAAmR,MAAA,aAWAxP,IAAA,QACAN,MAAA,WAIA,OAHArB,KAAAmR,MAAA,QACAnR,KAAA+0C,eAAA,IAAAjC,EAAA,WAAA9yC,KAAAs0C,aAAAt0C,KAAA80C,WACA90C,KAAA26B,kBACA36B,KAAA41C,oBASAj0C,IAAA,WACAN,MAAA,SAAA+0C,GACA,IAAA9wB,EAAAhjB,UAAAC,QAAA,QAAA0K,IAAA3K,UAAA,MAA4EA,UAAA,GAE5E,GAAA8zC,EAAA,CAIA,IAAAC,EAAAr2C,KAAAg2C,UACAM,EAAAt2C,KAAA60C,gBAqBA,GAnBA70C,KAAAg2C,UAAAI,EACAp2C,KAAAg1C,YAAA1vB,EAKAtlB,KAAAy0B,eACA2hB,EAAAG,UACA50B,cAAAy0B,EAAAz0B,cACA6rB,KAAA,IAMAxtC,KAAA2W,QAAA,kBAIA,SAAA3W,KAAAmR,OAAAnR,KAAAk2C,qBACA,OAAAl2C,KAAAm2C,QAGA,GAAAE,KAAAn0B,MAAAk0B,EAAAl0B,IAAA,CAaA,IAAAs0B,EAAAJ,EAAAz0B,cAAA00B,EAAA10B,cAEA3hB,KAAAsjC,QAAA,oBAAAkT,GAKA,OAAAx2C,KAAAytC,aACAztC,KAAAytC,YAAA+I,GAMAF,IACAA,EAAA7I,YAAA+I,EAKAF,EAAA7I,YAAA,IACA6I,EAAA7qB,QAAA2qB,EAAAp1B,SAAAs1B,EAAA7I,cAIAztC,KAAA00B,gBAAA+hB,uBAAAJ,EAAAD,QArCA,OAAAp2C,KAAAytC,YAGAztC,KAAA09B,mBA4CA/7B,IAAA,QACAN,MAAA,WACArB,KAAA00C,sBACAvpB,EAAA,WAAA4Y,aAAA/jC,KAAA00C,qBAEA10C,KAAA00C,oBAAA,SAUA/yC,IAAA,SACAN,MAAA,WACA,cAAArB,KAAA00C,uBAUA/yC,IAAA,WACAN,MAAA,SAAAq1C,GACA12C,KAAA80C,YAIA90C,KAAA80C,UAAA4B,EAGA,SAAA12C,KAAAmR,OAAAnR,KAAAk2C,sBACAl2C,KAAAm2C,YAQAx0C,IAAA,kBACAN,MAAA,WACArB,KAAA+5B,QAAA,EACA/5B,KAAAk5B,cACAl5B,KAAA22C,OAAA,EAAA32C,KAAAq0C,aACAr0C,KAAA2W,QAAA,sBAUAhV,IAAA,cACAN,MAAA,WACArB,KAAAo1C,gBAAA,EACAp1C,KAAA09B,kBAQA/7B,IAAA,eACAN,MAAA,WACArB,KAAAytC,WAAA,KACAztC,KAAAm1C,WAAA,KACAn1C,KAAA43B,WASAj2B,IAAA,SACAN,MAAA,SAAAmE,EAAAG,GACA3F,KAAA+0C,gBACA/0C,KAAA+0C,eAAA4B,OAAAnxC,EAAAG,IAEA,EAAAqtC,EAAA,YAAAxtC,EAAAG,EAAA3F,KAAA20B,0BASAhzB,IAAA,iBACAN,MAAA,WACArB,KAAA00C,qBACAvpB,EAAA,WAAA4Y,aAAA/jC,KAAA00C,qBAGA10C,KAAA00C,oBAAAvpB,EAAA,WAAA8Y,WAAAjkC,KAAA42C,mBAAAh1C,KAAA5B,MAAA,MAUA2B,IAAA,qBACAN,MAAA,WACA,UAAArB,KAAAmR,OACAnR,KAAA62C,cAGA72C,KAAA00C,qBACAvpB,EAAA,WAAA4Y,aAAA/jC,KAAA00C,qBAGA10C,KAAA00C,oBAAAvpB,EAAA,WAAA8Y,WAAAjkC,KAAA42C,mBAAAh1C,KAAA5B,MAAAmzC,MAaAxxC,IAAA,cACAN,MAAA,WACA,IAAArB,KAAA+0C,eAAA+B,WAAA,CAIA92C,KAAAm1C,aACAn1C,KAAAm1C,WAAAn1C,KAAA00B,gBAAAwW,aAAAlrC,KAAAg2C,UAAAh2C,KAAAq0C,YAAAr0C,KAAA40C,iBAAA50C,KAAAm0C,iBAIA,IAAAmC,EAAAt2C,KAAA+2C,aAAA/2C,KAAAg3C,YAAAh3C,KAAAg2C,UAAAh2C,KAAAytC,WAAAztC,KAAAy0B,aAAAz0B,KAAAm0C,eAAAn0C,KAAAm1C,YAEA,GAAAmB,EAAA,CAIA,IAAAxc,EAAAsZ,EAAApzC,KAAAg2C,UAAAh2C,KAAAs0C,aAAAgC,EAAA7I,YAEA3T,EACA95B,KAAA62B,eAIAyf,EAAA7I,aAAAztC,KAAAg2C,UAAAh1B,SAAAze,OAAA,aAAAvC,KAAAs0C,aAAA7a,YAAAz5B,KAAAo0C,eAUAkC,EAAA5xB,WAAA1kB,KAAA40C,kBAAA,OAAA0B,EAAA5G,gBAAA4G,EAAA5G,eAAA1vC,KAAA+0C,eAAAkC,qBACAj3C,KAAA00B,gBAAAwiB,QACAZ,EAAAW,gBAAAX,EAAA5G,gBAGA1vC,KAAAm3C,aAAAb,SAgBA30C,IAAA,eACAN,MAAA,SAAAq3B,EAAAhW,EAAA+qB,EAAArY,EAAAH,EAAAgW,GACA,IAAAmM,EAAA,EACA1H,OAAAziC,EAEAyrB,EAAAn2B,SACA60C,EAAA1e,EAAA/yB,IAAA+yB,EAAAn2B,OAAA,IAGA,IAAA80C,EAAAvqC,KAAAC,IAAA,EAAAqqC,EAAAniB,GAEA,IAAAvS,EAAA1B,SAAAze,OACA,YAKA,GAAA80C,GAAAr3C,KAAAy0C,oBACA,YAKA,IAAArf,GAAAiiB,GAAA,EACA,YASA,GANAr3C,KAAAsjC,QAAA,6BAAAmK,EAAA,aAAArY,EAAA,eAAAH,EAAA,aAAAgW,EAAA,iBAAAjrC,KAAAo1C,eAAA,gBAAAiC,GAMA,OAAApM,EAGA,OAFAwC,EAAAztC,KAAAs3C,yBAAA50B,GACA1iB,KAAAsjC,QAAA,wBAAAmK,GACAztC,KAAAu3C,qBAAA70B,EAAA+qB,EAAA,SAIA,UAAAA,EAAA,CACAztC,KAAAsjC,QAAA,4BAAAmK,EAAA,GACA,IAAAhiB,EAAA/I,EAAA1B,SAAAysB,GAOA,OAJAiC,EADAjkB,KAAA9lB,IACA8lB,EAAA9lB,IAEAyxC,EAEAp3C,KAAAu3C,qBAAA70B,EAAA+qB,EAAA,EAAAiC,GAAA,GAMA,GAAA1vC,KAAAo1C,eAAA,CAEA,IAAAoC,EAAAzP,EAAA,WAAAuF,oBAAA5qB,EAAA00B,EAAAnM,EAAAoI,aAAApI,EAAAuC,MAEAC,EAAA+J,EAAA/J,WACAiC,EAAA8H,EAAAzxC,cACO,CAEPyxC,EAAAzP,EAAA,WAAAuF,oBAAA5qB,EAAAuS,EAAAgW,EAAAoI,aAAApI,EAAAuC,MAEAC,EAAA+J,EAAA/J,WACAiC,EAAA8H,EAAAzxC,UAIA,OAFA/F,KAAAsjC,QAAA,qCAAAmK,EAAA,kBAAAiC,GAEA1vC,KAAAu3C,qBAAA70B,EAAA+qB,EAAAiC,GAAA,MAaA/tC,IAAA,2BACAN,MAAA,SAAAqhB,GACA,IAAAsT,EAAAh2B,KAEA,QAAAA,KAAA40C,iBACA,SAGA,IAAA6C,EAAA/0B,EAAA1B,SAAA5I,IAAA,SAAAjW,EAAA/B,GACA,OACAskB,SAAAviB,EAAAuiB,SACA2uB,aAAAjzC,KAEOsxB,OAAA,SAAAvvB,GACP,OAAAA,EAAAuiB,WAAAsR,EAAA4e,mBAGA,OAAA6C,EAAAl1C,OACAk1C,EAAA3qC,KAAAuC,IAAAooC,EAAAl1C,OAAA,MAAA8wC,aAGAvmC,KAAAC,IAAA2V,EAAA1B,SAAAze,OAAA,QAGAZ,IAAA,uBACAN,MAAA,SAAAqhB,EAAA+qB,EAAAiC,EAAAgI,GACA,GAAAjK,EAAA,GAAAA,GAAA/qB,EAAA1B,SAAAze,OACA,YAGA,IAAAkpB,EAAA/I,EAAA1B,SAAAysB,GAEA,OACAlM,UAAA,kBAAAz0B,KAAA6qC,SAEAz1B,IAAAuJ,EAAAoB,YAEA4gB,aAGAiK,gBACAhI,iBAEAhtB,WAEAvG,MAAA,KAEAglB,eAAA,KAGA8V,gBAAA,KAEAvyB,SAAA+G,EAAA/G,SAEA7C,SAAA4J,EAAA5J,SAEA4J,cAeA9pB,IAAA,qBACAN,MAAA,SAAA8+B,GACA,GAAAngC,KAAAyzB,KAAA1M,MAAAuQ,WAIAt3B,KAAAg1C,YAAAhhB,UAEAh0B,KAAAg2C,UAAAl0B,WAAA8I,UACA,SAMA,GAAAC,KAAA4P,OAAA0F,EAAA6B,sBAAAnX,KAAA4P,OAAA,IACA,SAGA,IAAAxF,EAAAj1B,KAAAm0C,eACAyD,EAAAzX,EAAA/M,UACAsX,EAAA1qC,KAAA60C,gBAAAhzB,SAEAg2B,EAAA9P,EAAA,WAAAsD,2BAAAX,EAAAkN,EAAA53C,KAAAg2C,UAAA7V,EAAAL,eAKA6K,GAAA,EAAApb,EAAAob,mBAAA3qC,KAAAg3C,YAAA/hB,EAAAj1B,KAAAyzB,KAAA1M,MAAAipB,gBAAA,EAIA,GAAA6H,GAAAlN,EACA,SAGA,IAAAmN,GAAA,EAAA5E,EAAAzI,kCACAxY,OAAAjyB,KAAAyzB,KAAA7Q,UAAAqP,OACAgD,cACA7B,UAAAwkB,EACA/1B,SAAA7hB,KAAAq0C,YACA3J,kBACAC,oBACA/pB,gBAAA5gB,KAAA40C,iBACAtf,eAAAt1B,KAAA00B,kBAGA,GAAAojB,EAAA,CAIA,IAAAxM,EAAAuM,EAAAlN,EAEAoN,EAAAzM,EAAAwM,EAAAxM,kBAEA0M,EAAA,GASA,OAJArN,GAAApb,EAAA2V,oBACA8S,EAAA,IAGAF,EAAAp1B,UAAAo1B,EAAAp1B,SAAAR,MAAAliB,KAAAg2C,UAAA9zB,KAAA61B,EAAAC,GACA,GAMAh4C,KAAAozB,UAAA0kB,EAAAp1B,SAAAZ,WAAA8I,UAAAyF,EAAA,WAAA1C,mBAAA,EACA3tB,KAAA43B,QACA53B,KAAA2W,QAAA,eACA,OAaAhV,IAAA,kBACAN,MAAA,SAAAgpB,EAAA4tB,GACAj4C,KAAA60C,iBAAAoD,EAAA1W,YAAAvhC,KAAA60C,gBAAAtT,YAAAvhC,KAAAk4C,mBAAAD,EAAA9X,QAIAngC,KAAA2W,QAAA,eASAhV,IAAA,eACAN,MAAA,SAAAi1C,GACAt2C,KAAAmR,MAAA,UACAnR,KAAA60C,gBAAAyB,EACAt2C,KAAAm4C,gBAAA7B,GAEAA,EAAAT,eAAA,EAAA5C,EAAAhR,qBAAAjiC,KAAAyzB,KAAAzM,IAAAhnB,KAAAg1C,YAAAh1C,KAAA+0B,WAAA/0B,KAAAo4C,4BAAA9B,GAEAt2C,KAAAq4C,gBAAAz2C,KAAA5B,WAAAs4C,wBAAA12C,KAAA5B,UAYA2B,IAAA,kBACAN,MAAA,SAAAi1C,GACA,IAAAxC,EAAAD,EAAA7zC,KAAAu0B,YAAAv0B,KAAAm0C,eAAAn0C,KAAAg2C,UAAAhyB,gBAAA,IAQA8vB,EAAA,GACA9zC,KAAA22C,OAAA,EAAA7C,MAcAnyC,IAAA,8BACAN,MAAA,SAAAi1C,GACA,IAAA7qB,EAAA6qB,EAAA7qB,QACAwsB,GACAprB,YAAApB,EAAAoB,YACAtL,UAAAkK,EAAAlK,UACAggB,UAAA+U,EAAA/U,WAGA,GAAA9V,EAAA9pB,IAAA,CAGA,IAAAygB,EAAAqJ,EAAA9pB,IAAAygB,IAAA,IAAAnG,aAAA,MAAAq6B,EAAA7I,WAAA6I,EAAA5zB,SAAAf,gBAEAs2B,EAAAt2C,KACAkrB,YAAApB,EAAA9pB,IAAAkrB,YACAzK,MAQA,OAJAqJ,EAAArT,MACA6/B,EAAA7/B,IAAApY,KAAA4sB,YAAAnB,EAAArT,MAGA6/B,KAUAt2C,IAAA,0BACAN,MAAA,SAAAs2B,EAAAsgB,GAWA,GARAj4C,KAAAs1C,eAAA,EAEA2C,EAAA9X,QACAngC,KAAAq1C,uBAAA4C,EAAA9X,MAAAL,cACA9/B,KAAA01C,uBAAAuC,EAAA9X,MAAAJ,eAIA//B,KAAA60C,iBASA,GAAAoD,EAAA1W,YAAAvhC,KAAA60C,gBAAAtT,UAAA,CAKA,GAAA5J,EAOA,OANA33B,KAAA60C,gBAAA,KACA70C,KAAAmR,MAAA,QAKAwmB,EAAA/0B,OAAAqwC,EAAAjU,eAAAG,aACAn/B,KAAAu1C,sBAAA,IAIAv1C,KAAA63B,QAKAF,EAAA/0B,OAAAqwC,EAAAjU,eAAAE,SACAl/B,KAAAw1C,uBAAA,EACAx1C,KAAAozB,UAAA,EACApzB,KAAAi0C,UAAApG,SACA7tC,KAAA2W,QAAA,qBAMA3W,KAAAy1C,sBAAA,EACAz1C,KAAA23B,cACA33B,KAAA2W,QAAA,WAMA3W,KAAAozB,UAAA6kB,EAAA9X,MAAA/M,UACApzB,KAAAi0C,UAAAgE,EAAA9X,MAAAJ,cAIAkY,EAAA7/B,MACA6/B,EAAA7/B,IAAApY,KAAA4sB,YAAAqrB,EAAA7/B,KAAA,IAGApY,KAAAu4C,wBAAAN,SAzDAj4C,KAAAu1C,sBAAA,KAmEA5zC,IAAA,0BACAN,MAAA,SAAA42C,GACA,IAAA3B,EAAAt2C,KAAA60C,gBAEAyB,EAAAn6B,MAAA87B,EAAA97B,MACA87B,EAAA7/B,MACAk+B,EAAA7qB,QAAArT,IAAA+D,MAAA87B,EAAA7/B,IAAA+D,OAGAm6B,EAAA1U,iBAAAqW,EAAArW,iBACA5hC,KAAAw4C,oBASA72C,IAAA,iBACAN,MAAA,WACA,IAAAk3B,EAAAv4B,KAEA,GAAAA,KAAA60C,gBAAA,CAKA,IAAAyB,EAAAt2C,KAAA60C,gBACAppB,EAAA6qB,EAAA7qB,QACAgtB,EAAAz4C,KAAA00B,gBAAAgkB,iBAAApC,GAKA,qBAAAt2C,KAAAw0C,gBAAAiE,IAGAA,EAAA9E,eAAA8E,EAAA7E,iBACA5zC,KAAAw0C,gBACAb,cAAA8E,EAAA9E,cACAC,cAAA6E,EAAA7E,gBAIA,IAAA+E,EAAAnF,EAAAxzC,KAAAu0C,YAAAv0C,KAAAw0C,eAAAiE,GAEA,GAAAE,EAMA,OALA34C,KAAA23B,OACAh1B,QAAAg2C,EACAplB,kBAAA5a,WAEA3Y,KAAA2W,QAAA,SAIA,GAAA2/B,EAAAoB,cAIA,OAHA13C,KAAA2W,QAAA,kBACA3W,KAAA60C,gBAAA,UACA70C,KAAAmR,MAAA,SAIA,OAAAmlC,EAAAW,iBAAAX,EAAAW,kBAAAj3C,KAAA+0C,eAAAkC,oBACAj3C,KAAA+0C,eAAAkC,gBAAAX,EAAAW,iBAEAj3C,KAAA2W,QAAA,oBAGA,IAAAiiC,EAAA54C,KAAA00B,gBAAAmkB,mBAAAvC,EAAA5xB,UAEA,OAAAk0B,GACA54C,KAAA2W,SACApO,KAAA,qBACAwwB,QAAA6f,IAIA54C,KAAAmR,MAAA,YAIAsa,EAAArT,KACA,WACA,IAAA0gC,GAAA,EAAA7qB,EAAAtB,eAAAlB,EAAArT,KAEA,IAAAmgB,EAAA0c,sBAAA1c,EAAA0c,uBAAA6D,EAAA,CACA,IAAAlsB,EAAA2L,EAAA3L,YAAAnB,EAAArT,KAEAmgB,EAAAwc,eAAAgE,aAAAnsB,EAAAzQ,MAAA,WACAoc,EAAA0c,qBAAA6D,KAPA,GAaAxC,EAAAn/B,WAAAm/B,EAAAn6B,MAAAhF,WACA,kBAAAsU,EAAAjmB,OAAA,kBAAAimB,EAAA9lB,IACA3F,KAAAg5B,oBAAAvN,EAAA9lB,IAAA8lB,EAAAjmB,MAEAxF,KAAAg5B,oBAAAvN,EAAA5J,SAGA7hB,KAAA+0C,eAAAgE,aAAAzC,EAAAn6B,MAAAnc,KAAAg5C,iBAAAp3C,KAAA5B,YA/EAA,KAAAmR,MAAA,WA0FAxP,IAAA,mBACAN,MAAA,WAGA,GAFArB,KAAAsjC,QAAA,kCAAAtjC,KAAA60C,kBAEA70C,KAAA60C,gBAKA,OAJA70C,KAAAmR,MAAA,aACAnR,KAAAs3B,UACAt3B,KAAA41C,kBAKA,IAAAU,EAAAt2C,KAAA60C,gBACAppB,EAAA6qB,EAAA7qB,QACAwtB,EAAA,OAAAj5C,KAAAytC,WAsBA,GApBAztC,KAAA60C,gBAAA,KACA70C,KAAAk5C,kBAAA5C,GACAt2C,KAAAm5C,uBAAA7C,GAEAt2C,KAAAmR,MAAA,QAEAnR,KAAAytC,WAAA6I,EAAA7I,WACAztC,KAAAo1C,gBAAA,EACAp1C,KAAA40C,iBAAA0B,EAAA5xB,SAMA1kB,KAAA2W,QAAA,kBAMA8U,EAAA9lB,KAAA3F,KAAAm0C,eAAA1oB,EAAA9lB,IAAA,EAAA2wC,EAAA5zB,SAAAsB,eACAhkB,KAAA26B,sBADA,CAOAse,GACAj5C,KAAA2W,QAAA,mBAEA3W,KAAA2W,QAAA,YAKA,IAAAmjB,EAAAsZ,EAAAkD,EAAA5zB,SAAA1iB,KAAAs0C,aAAAgC,EAAA7I,WAAA,GAEA3T,GACA95B,KAAA62B,cAGA72B,KAAAs3B,UACAt3B,KAAA41C,qBAcAj0C,IAAA,oBACAN,MAAA,SAAAi1C,GACA,IAAAva,EAAA/7B,KAAAg0C,WAAAjY,KAGAqd,EAAAvuB,KAAA4P,MAAA6b,EAAA1U,iBAAA,EAEAyX,EAAAvsC,KAAAuzB,MAAAiW,EAAAn/B,WAAAiiC,EAAA,OAIAp5C,KAAAg0C,WAAAjY,OAAAsd,EAAAtd,KAAA/7B,KAAAg0C,WAAAvpC,SAUA9I,IAAA,UACAN,MAAA,eAYAM,IAAA,yBACAN,MAAA,SAAAi1C,GACA,GAAAt2C,KAAA20B,sBAAA,CAIA,IAAAlJ,EAAA6qB,EAAA7qB,QACAjmB,EAAAimB,EAAAjmB,MACAG,EAAA8lB,EAAA9lB,IAGA,GAAA4tC,EAAA/tC,IAAA+tC,EAAA5tC,GAAA,EAIA,EAAAqtC,EAAA,YAAAxtC,EAAAG,EAAA3F,KAAA20B,uBAEA,IAAA2kB,EAAAnuB,EAAA,WAAAouB,eAAApuB,EAAA,WAAAtY,OACAxR,GACA+xB,UAAAkjB,EAAA5zB,SAAAZ,WAAA8I,UACAD,WAAA2rB,EAAA5zB,SAAAZ,WAAA4I,WACA+G,OAAA6kB,EAAA5zB,SAAAZ,WAAAgQ,OACA3a,WAAAm/B,EAAAn/B,WACA+K,IAAAo0B,EAAAp0B,IACAwC,SAAA4xB,EAAA5xB,SACAhC,SAAA4zB,EAAA5zB,SAAAR,IACA1c,QACAG,OAEAkK,EAAA2pC,KAAAC,UAAAp4C,GACA2C,EAAA,IAAAs1C,EAAA9zC,EAAAG,EAAAkK,GAIA7L,EAAA3C,QAEArB,KAAA20B,sBAAAjJ,OAAA1nB,SAIA+vC,EApuCA,CAquCCrkB,EAAA,WAAAsM,aAEDr8B,EAAA,WAAAo0C,IACCxzC,KAAAP,KAAA,qBAAA+qB,IAAA,qBAAAhrB,UAAA,qBAAA4H,oBACE0mB,cAAA,EAAA6N,WAAA,EAAAwd,0BAAA,EAAA/N,aAAA,GAAAgO,uBAAA,GAAApd,WAAA,GAAAqd,mBAAA,GAAA7tB,gBAAA,GAAA8tB,8DAAA,KAA2NC,IAAA,SAAA9uB,EAAAprB,EAAAD,IAC9N,SAAAorB,GAIA,aAEAjqB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAA8X,EAAA,WAAiC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAzhB,GAEA,SAAAG,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAE7E,SAAAyN,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAE3F,IAAAya,EAAA,qBAAA9nB,cAAA,gCAAAojB,IAAA,gBAEA2E,EAAA7V,EAAA4V,GAEAnP,EAAA,aAeAy5B,EAAA,WACA,SAAAA,EAAA5lB,EAAAqH,GACA,IAAA1b,EAAA9f,KAEA+Z,EAAA/Z,KAAA+5C,GAEA,IAAAC,EAAA,WACAl6B,EAAAm6B,cAAA9lB,EAAA+lB,gBAAA1e,GAIA1b,EAAAq6B,qBAAA,WACA,IAAAC,EAAAt6B,EAAAu6B,iBAEAv6B,EAAAu6B,iBAAA,KAEAD,GACAA,IAGAt6B,EAAAw6B,gBAGAx6B,EAAAm6B,cAAA5lB,iBAAA,YAAAvU,EAAAq6B,sBAEAr6B,EAAAw6B,gBAGAt6C,KAAAu6C,cACAv6C,KAAAq6C,iBAAA,KACAr6C,KAAAw6C,iBAAA,EACAx6C,KAAAm0B,cACAn0B,KAAAy6C,kBAAA,EAEA,WAAAtmB,EAAAsF,WACAtF,EAAAE,iBAAA,aAAA2lB,GAEAA,IA8IA,OAnIA7gC,EAAA4gC,IACAp4C,IAAA,QACAN,MAAA,SAAAwa,GACA,IAAAma,EAAAh2B,KAEAA,KAAAy6C,kBACAz6C,KAAA06C,eAAA,WACA1kB,EAAAikB,cAAAriB,SACS/b,MAYTla,IAAA,eACAN,MAAA,SAAA8a,EAAAN,GACA,IAAA0c,EAAAv4B,KAEAA,KAAAy6C,kBAAA,EACAz6C,KAAA06C,eAAA,WACAniB,EAAA0hB,cAAAlB,aAAA58B,IACON,MASPla,IAAA,WACAN,MAAA,WACA,OAAArB,KAAAi6C,cAGAj6C,KAAAi6C,cAAAvhB,SAFAhJ,EAAA,WAAA8E,sBAaA7yB,IAAA,SACAN,MAAA,SAAAmE,EAAAG,GACA,IAAA0zB,EAAAr5B,KAEAA,KAAAy6C,kBACAz6C,KAAA06C,eAAA,WACArhB,EAAA4gB,cAAAtD,OAAAnxC,EAAAG,IACS2a,MAUT3e,IAAA,WACAN,MAAA,WACA,OAAArB,KAAAi6C,eAAAj6C,KAAAi6C,cAAAnD,UAAA92C,KAAAq6C,oBASA14C,IAAA,kBACAN,MAAA,SAAAqb,GACA,IAAAoe,EAAA96B,KAQA,MANA,qBAAA0c,IACA1c,KAAA06C,eAAA,WACA5f,EAAAmf,cAAAhD,gBAAAv6B,IAEA1c,KAAAw6C,iBAAA99B,GAEA1c,KAAAw6C,oBAOA74C,IAAA,iBACAN,MAAA,SAAAkC,EAAAsY,GACA7b,KAAAu6C,WAAAlxC,MAAA9F,EAAA3B,KAAA5B,MAAA6b,IACA7b,KAAAs6C,kBAOA34C,IAAA,eACAN,MAAA,WACA,IAAAkd,OAAAtR,GAEAjN,KAAA82C,YAAA92C,KAAAu6C,WAAAh4C,SACAgc,EAAAve,KAAAu6C,WAAAI,QACA36C,KAAAq6C,iBAAA97B,EAAA,GACAA,EAAA,SAQA5c,IAAA,UACAN,MAAA,WACArB,KAAAi6C,cAAA/e,oBAAA,YAAAl7B,KAAAm6C,sBACAn6C,KAAAi6C,eAAA,SAAAj6C,KAAAm0B,YAAAsF,YACAz5B,KAAAi6C,cAAAriB,YAKAmiB,EAnLA,GAsLAp6C,EAAA,WAAAo6C,EACAn6C,EAAAD,UAAA,aACCY,KAAAP,KAAA,qBAAA+qB,IAAA,qBAAAhrB,UAAA,qBAAA4H,uBACGizC,IAAA,SAAA5vB,EAAAprB,EAAAD,IACJ,SAAAorB,GAKA,aAEAjqB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAA8X,EAAA,WAAiC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAzhB,GAEA8U,EAAA,SAAAE,EAAAC,EAAA+jB,GAAwC,IAAA9jB,GAAA,EAAmB,MAAAA,EAAA,CAA4B,IAAA9sB,EAAA4sB,EAAA3sB,EAAA4sB,EAAAE,EAAA6jB,EAAkD9jB,GAAA,EAAgB,OAAA9sB,MAAAuT,SAAArT,WAAkD,IAAA8sB,EAAAhuB,OAAAiuB,yBAAAjtB,EAAAC,GAA8D,QAAAkL,IAAA6hB,EAAA,CAAwO,aAAAA,EAA4B,OAAAA,EAAAztB,MAA4B,IAAAT,EAAAkuB,EAAA7tB,IAAuB,QAAAgM,IAAArM,EAA4B,OAAoB,OAAAA,EAAAL,KAAAsuB,GAA7U,IAAA5G,EAAAnnB,OAAAif,eAAAje,GAA4C,UAAAmmB,EAAuB,OAA2ByG,EAAAzG,EAAc0G,EAAA5sB,EAAgB2wC,EAAA7jB,EAAgBD,GAAA,EAAeE,EAAA7G,OAAAhb,IAE9b,SAAA4M,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAE7E,SAAAyN,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAE3F,SAAAwK,EAAAC,EAAAC,GAA0C,uBAAAA,GAAA,OAAAA,EAA+D,UAAA1K,UAAA,kEAAA0K,GAAuGD,EAAAzd,UAAAlB,OAAAY,OAAAge,KAAA1d,WAAyEkE,aAAe7E,MAAAoe,EAAAze,YAAA,EAAAyY,UAAA,EAAAD,cAAA,KAA6EkG,IAAA5e,OAAA6e,eAAA7e,OAAA6e,eAAAF,EAAAC,GAAAD,EAAAG,UAAAF,GAErX,IAAAm7B,EAAA7vB,EAAA,wBAEA8vB,EAAAjhC,EAAAghC,GAEAE,EAAA/vB,EAAA,oCAEA8c,EAAA9c,EAAA,cAEAyE,EAAA,qBAAA9nB,cAAA,gCAAAojB,IAAA,gBAEA2E,EAAA7V,EAAA4V,GAEAurB,IAIAr6C,KAAA,MACAs6C,IAAA,SAAA3lB,EAAA5S,EAAAb,EAAAjB,EAAAqU,GACA,GAAApT,IAAAlJ,IAAA,CACA,IAAAsyB,GACAuC,KAAA,EACA6F,aAAA,GAGA,OAAApI,EAEA,eAKAtqC,KAAA,kBACAs6C,IAAA,SAAA3lB,EAAA5S,EAAAb,EAAAjB,EAAAqU,GACA,GAAAK,EAAA4lB,uBAAAx4B,EAAAoB,eAAA,CACA,IAAAq3B,EAAAz4B,EAAAoB,eAAAs3B,UAAA,IACAC,EAAAF,EAAA7lB,EAAA4lB,sBACAjQ,GACAuC,KAAA6N,EACAhI,aAAA,GAGA,OAAApI,EAEA,eAMAtqC,KAAA,UACAs6C,IAAA,SAAA3lB,EAAA5S,EAAAb,EAAAjB,EAAAqU,GACA,IAAAjU,EAAA0B,EAAA1B,aACAiqB,EAAA,KACAqQ,EAAA,KAEArmB,KAAA,EAEA,QAAA70B,EAAA,EAAmBA,EAAA4gB,EAAAze,OAAqBnC,IAAA,CACxC,IAAAqrB,EAAAzK,EAAA5gB,GAEA,GAAAqrB,EAAA/G,WAAA9D,GAAA,qBAAA6K,EAAAjmB,MAAA,CACA,IAAA+1C,EAAAzuC,KAAAuB,IAAA4mB,EAAAxJ,EAAAjmB,OAIA,UAAA81C,KAAAC,EACA,QAGAtQ,GAAA,OAAAqQ,MAAAC,KACAD,EAAAC,EACAtQ,GACAuC,KAAA/hB,EAAAjmB,MACA6tC,aAAAjzC,KAKA,OAAA6qC,KAMAtqC,KAAA,gBACAs6C,IAAA,SAAA3lB,EAAA5S,EAAAb,EAAAjB,EAAAqU,GACA,IAAAgW,EAAA,KAIA,GAFAhW,KAAA,EAEAvS,EAAA3B,qBAAA2B,EAAA3B,oBAAAxe,OAGA,IAFA,IAAA+4C,EAAA,KAEAl7C,EAAA,EAAqBA,EAAAsiB,EAAA3B,oBAAAxe,OAAyCnC,IAAA,CAC9D,IAAAizC,EAAA3wB,EAAA3B,oBAAA3gB,GACAwW,EAAA8L,EAAAd,sBAAAxhB,EAAA,EACAo7C,EAAAlmB,EAAAmmB,gBAAA7kC,GAEA,GAAA4kC,EAAA,CACA,IAAAD,EAAAzuC,KAAAuB,IAAA4mB,EAAAumB,EAAAhO,MAIA,UAAA8N,KAAAC,EACA,QAGAtQ,GAAA,OAAAqQ,MAAAC,KACAD,EAAAC,EACAtQ,GACAuC,KAAAgO,EAAAhO,KACA6F,kBAMA,OAAApI,KAMAtqC,KAAA,WACAs6C,IAAA,SAAA3lB,EAAA5S,EAAAb,EAAAjB,EAAAqU,GACA,GAAAvS,EAAA6zB,SAAA,CACA,IAAAtL,GACAuC,KAAA9qB,EAAA6zB,SAAA/I,KACA6F,aAAA3wB,EAAA6zB,SAAA50B,cAAAe,EAAAf,eAGA,OAAAspB,EAEA,eAIAtrC,EAAAq7C,sBAEA,IAAAU,EAAA,SAAAzoB,GAGA,SAAAyoB,IACA,IAAAp2B,EAAAhjB,UAAAC,QAAA,QAAA0K,IAAA3K,UAAA,MAA0EA,UAAA,GAE1EyX,EAAA/Z,KAAA07C,GAEAltB,EAAA1tB,OAAAif,eAAA27B,EAAA15C,WAAA,cAAAhC,MAAAO,KAAAP,MAGAA,KAAA27C,mBAAA1uC,EAGAjN,KAAA47C,aACA57C,KAAAy7C,mBACAz7C,KAAAk7C,sBAAA,KAEA51B,EAAA+d,QACArjC,KAAAsjC,QAAA5T,EAAA,WAAA8C,IAAA5wB,KAAA8tB,EAAA,kCAuaA,OAzbAlQ,EAAAk8B,EAAAzoB,GAsCA9Z,EAAAuiC,IACA/5C,IAAA,eACAN,MAAA,SAAAqhB,EAAAb,EAAAjB,EAAAqU,GACA,IAAA4mB,EAAA77C,KAAA87C,eAAAp5B,EAAAb,EAAAjB,EAAAqU,GAEA,OAAA4mB,EAAAt5C,OAUAvC,KAAA+7C,iBAAAF,GAAgDl6C,IAAA,OAAAN,MAAA4zB,IANhD,QAqBAtzB,IAAA,iBACAN,MAAA,SAAAqhB,EAAAb,GACA,IAAAa,MAAA1B,SACA,YAGA,IAAA66B,EAAA77C,KAAA87C,eAAAp5B,EAAAb,EAAAa,EAAAd,sBAAA,GAGA,IAAAi6B,EAAAt5C,OACA,YAGA,IAAA0oC,EAAAjrC,KAAA+7C,iBAAAF,GACAl6C,IAAA,eACAN,MAAA,IASA,OAJA4pC,EAAAoI,aAAA,IACApI,EAAAuC,OAAA,GAGA1gC,KAAAuB,IAAA48B,EAAAuC,MAAA,EAAA1F,EAAAsE,cAAA1pB,EAAAuoB,EAAAoI,aAAA,OAkBA1xC,IAAA,iBACAN,MAAA,SAAAqhB,EAAAb,EAAAjB,EAAAqU,GAIA,IAHA,IAAA4mB,KAGAz7C,EAAA,EAAqBA,EAAA46C,EAAAz4C,OAAgCnC,IAAA,CACrD,IAAA47C,EAAAhB,EAAA56C,GACA6qC,EAAA+Q,EAAAf,IAAAj7C,KAAA0iB,EAAAb,EAAAjB,EAAAqU,GAEAgW,IACAA,EAAA+Q,WAAAr7C,KACAk7C,EAAAxyC,MACA2yC,WAAAr7C,KACAsqC,cAEAjrC,KAAAsjC,QAAA,wBAAA0Y,EAAAr7C,KAAA,KAAAsqC,IAIA,OAAA4Q,KAmBAl6C,IAAA,mBACAN,MAAA,SAAAw6C,EAAAxiC,GAKA,IAJA,IAAA4iC,EAAAJ,EAAA,GAAA5Q,UACAiR,EAAApvC,KAAAuB,IAAAwtC,EAAA,GAAA5Q,UAAA5xB,EAAA1X,KAAA0X,EAAAhY,OACA86C,EAAAN,EAAA,GAAAG,SAEA57C,EAAA,EAAqBA,EAAAy7C,EAAAt5C,OAAuBnC,IAAA,CAC5C,IAAAg8C,EAAAtvC,KAAAuB,IAAAwtC,EAAAz7C,GAAA6qC,UAAA5xB,EAAA1X,KAAA0X,EAAAhY,OAEA+6C,EAAAF,IACAA,EAAAE,EACAH,EAAAJ,EAAAz7C,GAAA6qC,UACAkR,EAAAN,EAAAz7C,GAAA47C,UAKA,OADAh8C,KAAAsjC,QAAA,4BAAA6Y,EAAA,aAAAF,GACAA,KAYAt6C,IAAA,yBACAN,MAAA,SAAAg1C,EAAAD,GAKA,IAJA,IAAAI,EAAAJ,EAAAz0B,cAAA00B,EAAA10B,cAIAvhB,EAAAo2C,EAAA,EAAyCp2C,GAAA,EAAQA,IAAA,CACjD,IAAAi8C,EAAAhG,EAAAr1B,SAAA5gB,GAEA,GAAAi8C,GAAA,qBAAAA,EAAA72C,MAAA,CACA4wC,EAAAG,UACA50B,cAAA00B,EAAA10B,cAAAvhB,EACAotC,KAAA6O,EAAA72C,OAEAxF,KAAAsjC,QAAA,iBAAA8S,EAAAG,UACAv2C,KAAA2W,QAAA,kBACA,WAYAhV,IAAA,qBACAN,MAAA,SAAAqhB,GACA,IAAA1iB,KAAAk7C,uBAAAx4B,EAAAoB,eAAA,CACA,IAAAw4B,EAAA55B,EAAAoB,eAAAs3B,UAAA,IAEAp7C,KAAAk7C,uBAAAoB,MASA36C,IAAA,QACAN,MAAA,WACArB,KAAA27C,mBAAA1uC,KAYAtL,IAAA,mBACAN,MAAA,SAAAi1C,GACA,IAAA7qB,EAAA6qB,EAAA7qB,QACA/I,EAAA4zB,EAAA5zB,SACA+1B,OAAAxrC,EAuBA,OApBAwrC,EADAhtB,EAAArT,IACApY,KAAAu8C,iBAAAjG,GAEAt2C,KAAAw8C,gBAAAlG,GAGAmC,GACAz4C,KAAAy8C,6BAAAnG,EAAAmC,KACAz4C,KAAA08C,2BAAApG,GAIA5zB,EAAA6zB,WACA7zB,EAAA6zB,UACA50B,cAAAe,EAAAf,cAAA20B,EAAA7I,WACAD,KAAA/hB,EAAAjmB,SAMAizC,KAYA92C,IAAA,mBACAN,MAAA,SAAAi1C,GACA,IAAA7qB,EAAA6qB,EAAA7qB,QACAkxB,EAAA7B,EAAA,WAAA/jC,UAAA0U,EAAArT,IAAA+D,OACApW,EAAA+0C,EAAA,WAAA/0C,UAAA42C,EAAArG,EAAAn6B,OAMA,OAJA,OAAAm6B,EAAAW,kBACAX,EAAAW,iBAAAlxC,IAIAP,MAAAO,EACAJ,IAAAI,EAAA0lB,EAAA5J,aAaAlgB,IAAA,kBACAN,MAAA,SAAAi1C,GACA,IAAAsG,GAAA,EAAA7B,EAAA8B,SAAAvG,EAAAn6B,MAAAnc,KAAA27C,eACAmB,OAAA7vC,EACA8vC,OAAA9vC,EAEA,OAAA2vC,GAIAA,EAAAjqB,OAAA,IAAAiqB,EAAAjqB,MAAApwB,QACAvC,KAAA27C,cAAAiB,EAAAjqB,MAAA,GAAAlc,IACAqmC,EAAAF,EAAAjqB,MAAA,GAAAqqB,QACAD,EAAAH,EAAAjqB,MAAA,GAAAqqB,SACOJ,EAAAhqB,OAAA,IAAAgqB,EAAAhqB,MAAArwB,SACPvC,KAAA27C,cAAAiB,EAAAhqB,MAAA,GAAAnc,IACAqmC,EAAAF,EAAAhqB,MAAA,GAAAoqB,QACAD,EAAAH,EAAAhqB,MAAA,GAAAoqB,UAIAx3C,MAAAs3C,EACAn3C,IAAAo3C,EACAnJ,cAAAgJ,EAAAjqB,OAAA,IAAAiqB,EAAAjqB,MAAApwB,OACAoxC,cAAAiJ,EAAAhqB,OAAA,IAAAgqB,EAAAhqB,MAAArwB,SAjBA,QAqBAZ,IAAA,6BACAN,MAAA,SAAAqjB,GACA,2BAAA1kB,KAAA47C,UAAAl3B,GACA,KAEA1kB,KAAA47C,UAAAl3B,GAAA8oB,QAGA7rC,IAAA,qBACAN,MAAA,SAAAqjB,GACA,2BAAA1kB,KAAA47C,UAAAl3B,GACA,KAEA1kB,KAAA47C,UAAAl3B,GAAAqU,WAgBAp3B,IAAA,+BACAN,MAAA,SAAAi1C,EAAAmC,GACA,IAAAhtB,EAAA6qB,EAAA7qB,QACAwxB,EAAAj9C,KAAA47C,UAAAtF,EAAA5xB,UAEA,UAAA4xB,EAAAW,gBACAj3C,KAAAsjC,QAAA,OAAAgT,EAAAW,iBAEAgG,GACAzP,KAAA8I,EAAA5G,eACA3W,QAAAud,EAAA5G,eAAA+I,EAAAjzC,OAEAxF,KAAA47C,UAAAtF,EAAA5xB,UAAAu4B,EACAj9C,KAAA2W,QAAA,mBAEA8U,EAAAjmB,MAAA8wC,EAAA5G,eACAjkB,EAAA9lB,IAAA8yC,EAAA9yC,IAAAs3C,EAAAlkB,YACO,KAAAkkB,EAIP,SAHAxxB,EAAAjmB,MAAAizC,EAAAjzC,MAAAy3C,EAAAlkB,QACAtN,EAAA9lB,IAAA8yC,EAAA9yC,IAAAs3C,EAAAlkB,QAKA,YAYAp3B,IAAA,6BACAN,MAAA,SAAAi1C,GACA,IAAA5zB,EAAA4zB,EAAA5zB,SACA+I,EAAA6qB,EAAA7qB,QAKA,GAAAA,EAAA7U,cACA5W,KAAAy7C,gBAAAhwB,EAAA/G,WACA8oB,KAAA/hB,EAAAjmB,MACA03C,SAAA,QAEO,GAAAx6B,EAAA3B,oBAAAxe,OAGP,QAAAnC,EAAA,EAAuBA,EAAAsiB,EAAA3B,oBAAAxe,OAAyCnC,IAAA,CAChE,IAAAizC,EAAA3wB,EAAA3B,oBAAA3gB,GACAwW,EAAA8L,EAAAd,sBAAAxhB,EAAA,EACA+8C,EAAA9J,EAAAiD,EAAA7I,WACAyP,EAAApwC,KAAAuB,IAAA8uC,GAEA,IAAAn9C,KAAAy7C,gBAAA7kC,IAAA5W,KAAAy7C,gBAAA7kC,GAAAsmC,WAAA,CACA,IAAA1P,OAAAvgC,EAGAugC,EADA2P,EAAA,EACA1xB,EAAAjmB,OAAA,EAAAsiC,EAAAsE,cAAA1pB,EAAA4zB,EAAA7I,WAAA4F,GAEA5nB,EAAA9lB,KAAA,EAAAmiC,EAAAsE,cAAA1pB,EAAA4zB,EAAA7I,WAAA,EAAA4F,GAGArzC,KAAAy7C,gBAAA7kC,IACA42B,OACA0P,iBAcAv7C,IAAA,UACAN,MAAA,gBAGAq6C,EA1bA,CA2bChsB,EAAA,WAAAsM,aAEDr8B,EAAA,WAAA+7C,IACCn7C,KAAAP,KAAA,qBAAA+qB,IAAA,qBAAAhrB,UAAA,qBAAA4H,oBACEgkC,aAAA,GAAAyR,uBAAA,GAAAC,mCAAA,KAAgFC,IAAA,SAAAtyB,EAAAprB,EAAAD,GAYnF,aAEAmB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAEA,IAAA0wB,EAAA,WACA,IAAAN,EAAAnvB,UAAAC,QAAA,QAAA0K,IAAA3K,UAAA,MAAAA,UAAA,GAEAwF,GACA4zB,WAAA,GAEA6hB,OAAAtwC,EAgBA,OAdAnF,EAAA4zB,WAAAjK,EAAA9tB,MAAA,KAAApB,OACAuF,EAAA4zB,WAAA5zB,EAAA4zB,YAAA,EAGA6hB,EAAA,2BAAApzB,KAAAsH,GACA8rB,IACAz1C,EAAA6oB,WAAA4sB,EAAA,GACAz1C,EAAA8oB,yBAAA2sB,EAAA,IAIAz1C,EAAA+oB,aAAA,8CAAA1G,KAAAsH,GACA3pB,EAAA+oB,aAAA/oB,EAAA+oB,cAAA/oB,EAAA+oB,aAAA,GAEA/oB,GAEAnI,EAAAoyB,mBACIyrB,IAAA,SAAAxyB,EAAAprB,EAAAD,IACJ,SAAAorB,GAIA,aAEAjqB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAA8X,EAAA,WAAiC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAzhB,GAEA8U,EAAA,SAAAG,EAAA+jB,EAAAC,GAAwC,IAAA/jB,GAAA,EAAmB,MAAAA,EAAA,CAA4B,IAAA9sB,EAAA6sB,EAAA5sB,EAAA2wC,EAAA7jB,EAAA8jB,EAAkD/jB,GAAA,EAAgB,OAAA9sB,MAAAuT,SAAArT,WAAkD,IAAA8sB,EAAAhuB,OAAAiuB,yBAAAjtB,EAAAC,GAA8D,QAAAkL,IAAA6hB,EAAA,CAAwO,aAAAA,EAA4B,OAAAA,EAAAztB,MAA4B,IAAAT,EAAAkuB,EAAA7tB,IAAuB,QAAAgM,IAAArM,EAA4B,OAAoB,OAAAA,EAAAL,KAAAsuB,GAA7U,IAAA5G,EAAAnnB,OAAAif,eAAAje,GAA4C,UAAAmmB,EAAuB,OAA2B0G,EAAA1G,EAAcyqB,EAAA3wC,EAAgB4wC,EAAA9jB,EAAgBD,GAAA,EAAeE,EAAA7G,OAAAhb,IAE9b,SAAA4M,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAE7E,SAAAyN,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAE3F,SAAAwK,EAAAC,EAAAC,GAA0C,uBAAAA,GAAA,OAAAA,EAA+D,UAAA1K,UAAA,kEAAA0K,GAAuGD,EAAAzd,UAAAlB,OAAAY,OAAAge,KAAA1d,WAAyEkE,aAAe7E,MAAAoe,EAAAze,YAAA,EAAAyY,UAAA,EAAAD,cAAA,KAA6EkG,IAAA5e,OAAA6e,eAAA7e,OAAA6e,eAAAF,EAAAC,GAAAD,EAAAG,UAAAF,GAErX,IAAAyP,EAAAnE,EAAA,oBAEAoE,EAAAvV,EAAAsV,GAEAM,EAAA,qBAAA9nB,cAAA,gCAAAojB,IAAA,gBAEA2E,EAAA7V,EAAA4V,GAEAvE,EAAAF,EAAA,iBAEAG,EAAAtR,EAAAqR,GAEA6nB,EAAA/nB,EAAA,+DAEAgoB,EAAAn5B,EAAAk5B,GAEA9kB,EAAAjD,EAAA,eAEAyyB,EAAA,IAAAxiC,WAAA,OAAAtX,MAAA,IAAAyU,IAAA,SAAAslC,GACA,OAAAA,EAAAvzC,WAAA,MAGAwzC,EAAA,SAAAC,GACA,OAAArmC,OAAAC,aAAAW,MAAA,KAAAylC,IAWAC,EAAA,SAAAC,GAGA,SAAAD,EAAAr5C,GACA,IAAA8gB,EAAAhjB,UAAAC,QAAA,QAAA0K,IAAA3K,UAAA,MAA0EA,UAAA,GAE1EyX,EAAA/Z,KAAA69C,GAEArvB,EAAA1tB,OAAAif,eAAA89B,EAAA77C,WAAA,cAAAhC,MAAAO,KAAAP,KAAAwE,EAAA8gB,GAIAtlB,KAAAs0C,aAAA,KAEAt0C,KAAA+9C,gBAAA,KAqYA,OAlZAv+B,EAAAq+B,EAAAC,GAuBA3kC,EAAA0kC,IACAl8C,IAAA,YACAN,MAAA,WACA,IAAArB,KAAA+9C,kBAAA/9C,KAAA+9C,gBAAAztC,KAAA/N,OACA,OAAAmtB,EAAA,WAAA8E,mBAGA,IAAAlkB,EAAAtQ,KAAA+9C,gBAAAztC,KACA9K,EAAA8K,EAAA,GAAAvK,UACAJ,EAAA2K,IAAA/N,OAAA,GAAAwD,UAEA,OAAA2pB,EAAA,WAAA8E,mBAAAhvB,EAAAG,QAcAhE,IAAA,cACAN,MAAA,SAAA+W,GACA,IAAA1T,IAAApC,UAAAC,QAAA,QAAA0K,IAAA3K,UAAA,KAAAA,UAAA,GAEA,IAAA8V,EACA,YAGA,IAAA3T,GAAA,EAAAwpB,EAAAtB,eAAAvU,GACA29B,EAAA/1C,KAAAk1C,cAAAzwC,GAEA,GAAAC,IAAAqxC,GAAA39B,EAAA+D,MAAA,CAKA,IAAA6hC,EAAAP,EAAAtmC,WAAAiB,EAAA+D,MAAAhF,WACA8mC,EAAA,IAAAhjC,WAAA+iC,GAEAC,EAAAv5C,IAAA0T,EAAA+D,OACA8hC,EAAAv5C,IAAA+4C,EAAArlC,EAAA+D,MAAAhF,YAEAnX,KAAAk1C,cAAAzwC,GAAAsxC,GACAlpB,YAAAzU,EAAAyU,YACAtL,UAAAnJ,EAAAmJ,UACApF,MAAA8hC,GAIA,OAAAlI,GAAA39B,KAUAzW,IAAA,qBACAN,MAAA,WACA,OAAArB,KAAAg2C,WAAAh2C,KAAA+9C,kBAAA/9C,KAAAs3B,YAWA31B,IAAA,QACAN,MAAA,WAGA,OAFArB,KAAAmR,MAAA,QACAnR,KAAA26B,kBACA36B,KAAA41C,oBAYAj0C,IAAA,QACAN,MAAA,SAAA68C,GACA,2BAAAA,EACAl+C,KAAA+9C,iBAGA/9C,KAAA+9C,gBAAAG,EAIA,SAAAl+C,KAAAmR,OAAAnR,KAAAk2C,sBACAl2C,KAAAm2C,QAGAn2C,KAAA+9C,oBASAp8C,IAAA,SACAN,MAAA,SAAAmE,EAAAG,IACA,EAAAqtC,EAAA,YAAAxtC,EAAAG,EAAA3F,KAAA+9C,oBAaAp8C,IAAA,cACAN,MAAA,WACA,IAAAye,EAAA9f,KAEAA,KAAAm1C,aACAn1C,KAAAm1C,WAAAn1C,KAAA00B,gBAAAwW,aAAAlrC,KAAAg2C,UAAAh2C,KAAAq0C,YAAAr0C,KAAA40C,iBAAA50C,KAAAm0C,iBAIA,IAAAmC,EAAAt2C,KAAA+2C,aAAA/2C,KAAAg3C,YAAAh3C,KAAAg2C,UAAAh2C,KAAAytC,WAAAztC,KAAAy0B,aAAAz0B,KAAAm0C,eAAAn0C,KAAAm1C,YAIA,GAFAmB,EAAAt2C,KAAAm+C,mBAAA7H,GAEAA,EAAA,CAIA,UAAAt2C,KAAA00B,gBAAA0pB,2BAAA9H,EAAA5xB,UAAA,CAGA,IAAA25B,EAAA,WACAv+B,EAAA3O,MAAA,QACA2O,EAAAwX,UAEAxX,EAAA81B,kBAMA,OAFA51C,KAAA00B,gBAAAgD,IAAA,kBAAA2mB,QACAr+C,KAAAmR,MAAA,uBAIAnR,KAAAm3C,aAAAb,OAcA30C,IAAA,qBACAN,MAAA,SAAAi1C,GACA,MAAAA,KAAA7qB,QAAA6yB,MACAhI,EAAAt2C,KAAAu3C,qBAAAjB,EAAA5zB,SAAA4zB,EAAA7I,WAAA,EAAA6I,EAAA5G,eAAA4G,EAAAz0B,SAAAy0B,EAAAoB,eAEA,OAAApB,KASA30C,IAAA,iBACAN,MAAA,WACA,IAAA20B,EAAAh2B,KAEA,GAAAA,KAAA60C,iBAAA70C,KAAA+9C,gBAAA,CAKA/9C,KAAAmR,MAAA,YAEA,IAAAmlC,EAAAt2C,KAAA60C,gBACAppB,EAAA6qB,EAAA7qB,QAGA,uBAAAN,EAAA,WAAAzc,QAAA1O,KAAA+9C,iBAAA/9C,KAAA+9C,gBAAAh3B,MAAA,CACA,IAAAw3B,EAAA,WAEA,IAAAC,EAAA,WACAxoB,EAAAwiB,kBAeA,OAZAxiB,EAAA7kB,MAAA,mBACA6kB,EAAA+nB,gBAAAh3B,MAAA2Q,IAAA,cAAA8mB,GACAxoB,EAAA+nB,gBAAAh3B,MAAA2Q,IAAA,wBACA1B,EAAA+nB,gBAAAh3B,MAAA1I,IAAA,cAAAmgC,GACAxoB,EAAA2B,OACAh1B,QAAA,yBAEAqzB,EAAA7kB,MAAA,QACA6kB,EAAA6B,QACA7B,EAAArf,QAAA,YAIA7S,OAAAmJ,GAnBA,GAuBA,qBAAAsxC,EAAA,OAAAA,EAAAz6C,EAGA2nB,EAAAgzB,WAAA,EAEA,IACAz+C,KAAA0+C,cAAApI,GACO,MAAAtuC,GAMP,OALAhI,KAAA23B,OACAh1B,QAAAqF,EAAArF,UAEA3C,KAAAmR,MAAA,QACAnR,KAAA63B,QACA73B,KAAA2W,QAAA,SAKA,GAFA3W,KAAA2+C,mBAAArI,EAAAt2C,KAAA00B,gBAAAknB,UAAAtF,EAAA5xB,UAAA1kB,KAAAg2C,WAEAM,EAAAoB,cAIA,OAHA13C,KAAA2W,QAAA,kBACA3W,KAAA60C,gBAAA,UACA70C,KAAAmR,MAAA,SAIAmlC,EAAAn/B,WAAAm/B,EAAAn6B,MAAAhF,WAEAnX,KAAAg5B,oBAAAvN,EAAA5J,SAEAy0B,EAAAhmC,KAAA/N,QAEAvC,KAAA22C,OAAAL,EAAAhmC,KAAA,GAAArK,QAAAqwC,EAAAhmC,KAAAgmC,EAAAhmC,KAAA/N,OAAA,GAAA0D,SAGAqwC,EAAAhmC,KAAAkc,QAAA,SAAAxoB,GACAgyB,EAAA+nB,gBAAAryB,OAAA1nB,KAGAhE,KAAAg5C,wBAxEAh5C,KAAAmR,MAAA,WAmFAxP,IAAA,gBACAN,MAAA,SAAAi1C,GACA,IAAAplC,OAAAjE,EACA2xC,GAAA,EAEA,oBAAAzzB,EAAA,WAAA9Z,YACAH,EAAA,IAAAia,EAAA,WAAA9Z,YAAA,SAEAH,EAAAia,EAAA,WAAAzc,OAAAiB,gBACAivC,GAAA,GAGA,IAAA3X,EAAA,IAAA9b,EAAA,WAAAzc,OAAAsC,OAAAma,EAAA,WAAAA,EAAA,WAAAla,MAAAC,GAaA,GAXAolC,EAAAhmC,QACAgmC,EAAAuI,cAAkCrsC,OAAA,EAAAC,MAAA,GAElCw0B,EAAAj0B,MAAAsjC,EAAAhmC,KAAAjH,KAAAzH,KAAA00C,EAAAhmC,MACA22B,EAAA10B,eAAA,SAAA6F,GACA,OAAAk+B,EAAAuI,aAAAzmC,GAEA6uB,EAAA11B,eAAA,SAAAomB,GACAjI,EAAA,WAAA8C,IAAAC,KAAA,wCAAAkF,EAAAh1B,UAGA2zC,EAAA7qB,QAAArT,IAAA,CACA,IAAA0mC,EAAAxI,EAAA7qB,QAAArT,IAAA+D,MAEAyiC,IACAE,EAAAnB,EAAAmB,IAGA7X,EAAAz1B,MAAAstC,GAGA,IAAAC,EAAAzI,EAAAn6B,MAEAyiC,IACAG,EAAApB,EAAAoB,IAGA9X,EAAAz1B,MAAAutC,GACA9X,EAAAh0B,WAiBAtR,IAAA,qBACAN,MAAA,SAAAi1C,EAAA2G,EAAAv6B,GACA,IAAA+I,EAAA6qB,EAAA7qB,QAEA,GAAAwxB,EAOA,GAAA3G,EAAAhmC,KAAA/N,OAAA,CAQA,IAAAs8C,EAAAvI,EAAAuI,aACAG,EAAAH,EAAArsC,OAAA,IAAAqsC,EAAApsC,MAAAwqC,EAAAlkB,QAQA,GANAud,EAAAhmC,KAAAkc,QAAA,SAAAxoB,GAEAA,EAAA+B,WAAAi5C,EACAh7C,EAAAiC,SAAA+4C,KAGAt8B,EAAA6zB,SAAA,CACA,IAAA0I,EAAA3I,EAAAhmC,KAAA,GAAAvK,UACAm5C,EAAA5I,EAAAhmC,KAAAgmC,EAAAhmC,KAAA/N,OAAA,GAAAwD,UAEA2c,EAAA6zB,UACA50B,cAAAe,EAAAf,cAAA20B,EAAA7I,WACAD,KAAA1gC,KAAAuC,IAAA4vC,EAAAC,EAAAzzB,EAAA5J,iBAnBA4J,EAAA6yB,OAAA,MAyBAT,EAnZA,CAoZCzuB,EAAA,YAEDzvB,EAAA,WAAAk+C,EACAj+C,EAAAD,UAAA,aACCY,KAAAP,KAAA,qBAAA+qB,IAAA,qBAAAhrB,UAAA,qBAAA4H,oBACE0mB,cAAA,EAAAmO,mBAAA,GAAAzQ,gBAAA,GAAA8tB,8DAAA,KAA0HsF,IAAA,SAAAn0B,EAAAprB,EAAAD,IAC7H,SAAAorB,GAYA,aAMA,SAAAlR,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAJ7ExL,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAKA,IAAAouB,EAAA,qBAAA9nB,cAAA,gCAAAojB,IAAA,gBAEA2E,EAAA7V,EAAA4V,GAEA2vB,EAAA,WACA,IAAAp4B,EAAA,SAAAq4B,EAAA/5B,EAAA/hB,GAEA+hB,GAAA,EAAAmK,EAAAiG,eACA1B,QAAA,MACK1O,GAIL,IAAA2B,EAAAo4B,EAAAp4B,eAAAyI,EAAA,WAAAe,IAAAzJ,IAAAC,cAEA,GAAAA,GAAA,oBAAAA,EAAA,CACA,IAAA+pB,EAAA/pB,EAAA3B,GAEA0rB,IACA1rB,EAAA0rB,GAIA,IAAAnR,GAAA,EAAApQ,EAAAzI,KAAA1B,EAAA,SAAAqS,EAAAiJ,GACA,IAAA0e,EAAAzf,EAAAe,UAEAjJ,GAAA2nB,IACAzf,EAAA0f,aAAA10B,KAAA4P,MACAoF,EAAAE,cAAAF,EAAA0f,aAAA1f,EAAAK,YACAL,EAAAC,cAAAwf,EAAAnoC,YAAAmoC,EAAA/8C,OACAs9B,EAAAzM,YACAyM,EAAAzM,UAAAtmB,KAAAuzB,MAAAR,EAAAC,cAAAD,EAAAE,cAAA,SAOApI,GAAA,cAAAA,EAAA/0B,OACAi9B,EAAAU,UAAA,GAMA5I,GAAAkI,EAAAY,SAAA,MAAAG,EAAA4e,YAAA,MAAA5e,EAAA4e,YAAA,IAAA5e,EAAA4e,aACA7nB,EAAA,IAAAn1B,MAAA,mCAAAq9B,IAAAyf,GAAAzf,EAAAmH,iBAGAzjC,EAAAo0B,EAAAkI,KAEA4f,EAAA5f,EAAAjI,MAQA,OANAiI,EAAAjI,MAAA,WAEA,OADAiI,EAAAY,SAAA,EACAgf,EAAAtnC,MAAA0nB,EAAAv9B,YAEAu9B,EAAA3d,IAAAoD,EAAApD,IACA2d,EAAAK,YAAArV,KAAA4P,MACAoF,GAGA,OAAA7Y,GAGArnB,EAAA,WAAAy/C,EACAx/C,EAAAD,UAAA,aACCY,KAAAP,KAAA,qBAAA+qB,IAAA,qBAAAhrB,UAAA,qBAAA4H,uBACG+3C,IAAA,SAAA10B,EAAAprB,EAAAD,GA6CJ,aAEAmB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAA8X,EAAA,WAAiC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAzhB,GAEA,SAAAK,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAE3F,IAAA2qC,EAAA,WACA,IAAAC,sCACAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAF,EAAA,GACAG,EAAAF,EAAA,GACA1/C,OAAA6M,EACAmC,OAAAnC,EACAgzC,OAAAhzC,EACAvM,KACAw/C,KACAC,OAAAlzC,EACAmzC,OAAAnzC,EACAozC,OAAApzC,EACA9K,OAAA8K,EACAqzC,OAAArzC,EACAszC,OAAAtzC,EAGA,IAAA7M,EAAA,EAAaA,EAAA,IAASA,IACtB8/C,GAAAx/C,EAAAN,MAAA,OAAAA,GAAA,IAAAA,KAGA,IAAAgP,EAAA6wC,EAAA,GAAoBF,EAAA3wC,GAAUA,GAAA+wC,GAAA,EAAAF,EAAAC,EAAAD,IAAA,EAY9B,IAVA99C,EAAA89C,KAAA,EAAAA,GAAA,EAAAA,GAAA,EAAAA,GAAA,EACA99C,KAAA,MAAAA,EAAA,GACA49C,EAAA3wC,GAAAjN,EACA69C,EAAA79C,GAAAiN,EAGAixC,EAAA3/C,EAAA0/C,EAAA1/C,EAAAy/C,EAAAz/C,EAAA0O,KACAmxC,EAAA,SAAAF,EAAA,MAAAD,EAAA,IAAAD,EAAA,SAAA/wC,EACAkxC,EAAA,IAAA5/C,EAAAyB,GAAA,SAAAA,EAEA/B,EAAA,EAAeA,EAAA,EAAOA,IACtBy/C,EAAAz/C,GAAAgP,GAAAkxC,KAAA,GAAAA,IAAA,EACAR,EAAA1/C,GAAA+B,GAAAo+C,KAAA,GAAAA,IAAA,EAKA,IAAAngD,EAAA,EAAaA,EAAA,EAAOA,IACpBy/C,EAAAz/C,GAAAy/C,EAAAz/C,GAAAiX,MAAA,GACAyoC,EAAA1/C,GAAA0/C,EAAA1/C,GAAAiX,MAAA,GAEA,OAAAuoC,GAEAY,EAAA,KAUAC,EAAA,WACA,SAAAA,EAAA9+C,GACAoY,EAAA/Z,KAAAygD,GAgBAD,IACAA,EAAAb,KAGA3/C,KAAA0gD,UAAAF,EAAA,MAAAnpC,QAAAmpC,EAAA,MAAAnpC,QAAAmpC,EAAA,MAAAnpC,QAAAmpC,EAAA,MAAAnpC,QAAAmpC,EAAA,MAAAnpC,UAAAmpC,EAAA,MAAAnpC,QAAAmpC,EAAA,MAAAnpC,QAAAmpC,EAAA,MAAAnpC,QAAAmpC,EAAA,MAAAnpC,QAAAmpC,EAAA,MAAAnpC,UACA,IAAAjX,OAAA6M,EACAkgB,OAAAlgB,EACA0zC,OAAA1zC,EACA2zC,OAAA3zC,EACA4zC,OAAA5zC,EACA8yC,EAAA//C,KAAA0gD,QAAA,MACAZ,EAAA9/C,KAAA0gD,QAAA,GACAI,EAAAn/C,EAAAY,OACAw+C,EAAA,EAEA,OAAAD,GAAA,IAAAA,GAAA,IAAAA,EACA,UAAAt+C,MAAA,wBAQA,IALAo+C,EAAAj/C,EAAA0V,MAAA,GACAwpC,KACA7gD,KAAAqgB,MAAAugC,EAAAC,GAGAzgD,EAAA0gD,EAAoB1gD,EAAA,EAAA0gD,EAAA,GAAqB1gD,IACzCugD,EAAAC,EAAAxgD,EAAA,IAGAA,EAAA0gD,IAAA,OAAAA,GAAA1gD,EAAA0gD,IAAA,KACAH,EAAAZ,EAAAY,IAAA,QAAAZ,EAAAY,GAAA,YAAAZ,EAAAY,GAAA,UAAAZ,EAAA,IAAAY,GAGAvgD,EAAA0gD,IAAA,IACAH,KAAA,EAAAA,IAAA,GAAAI,GAAA,GACAA,KAAA,OAAAA,GAAA,KAIAH,EAAAxgD,GAAAwgD,EAAAxgD,EAAA0gD,GAAAH,EAIA,IAAAxzB,EAAA,EAAe/sB,EAAG+sB,IAAA/sB,IAClBugD,EAAAC,EAAA,EAAAzzB,EAAA/sB,IAAA,GAEAygD,EAAA1zB,GADA/sB,GAAA,GAAA+sB,EAAA,EACAwzB,EAEAb,EAAA,GAAAC,EAAAY,IAAA,KAAAb,EAAA,GAAAC,EAAAY,GAAA,SAAAb,EAAA,GAAAC,EAAAY,GAAA,QAAAb,EAAA,GAAAC,EAAA,IAAAY,IA+DA,OA5CAxnC,EAAAsnC,IACA9+C,IAAA,UACAN,MAAA,SAAAka,EAAAC,EAAAC,EAAAC,EAAAslC,EAAAtkC,GACA,IAAA/a,EAAA3B,KAAAqgB,KAAA,GAEA9Z,EAAAgV,EAAA5Z,EAAA,GACAwF,EAAAuU,EAAA/Z,EAAA,GACAlB,EAAAgb,EAAA9Z,EAAA,GACAjB,EAAA8a,EAAA7Z,EAAA,GACAs/C,OAAAh0C,EACAgC,OAAAhC,EACAi0C,OAAAj0C,EAGAk0C,EAAAx/C,EAAAY,OAAA,IACAnC,OAAA6M,EACAm0C,EAAA,EACAC,EAAArhD,KAAA0gD,QAAA,GAGAY,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAtB,EAAAsB,EAAA,GAGA,IAAAjhD,EAAA,EAAiBA,EAAA+gD,EAAkB/gD,IACnC6gD,EAAAK,EAAA/6C,IAAA,IAAAg7C,EAAAp6C,GAAA,QAAAq6C,EAAA/gD,GAAA,OAAAghD,EAAA,IAAA/gD,GAAAiB,EAAAy/C,GACAnyC,EAAAqyC,EAAAn6C,IAAA,IAAAo6C,EAAA9gD,GAAA,QAAA+gD,EAAA9gD,GAAA,OAAA+gD,EAAA,IAAAl7C,GAAA5E,EAAAy/C,EAAA,GACAF,EAAAI,EAAA7gD,IAAA,IAAA8gD,EAAA7gD,GAAA,QAAA8gD,EAAAj7C,GAAA,OAAAk7C,EAAA,IAAAt6C,GAAAxF,EAAAy/C,EAAA,GACA1gD,EAAA4gD,EAAA5gD,IAAA,IAAA6gD,EAAAh7C,GAAA,QAAAi7C,EAAAr6C,GAAA,OAAAs6C,EAAA,IAAAhhD,GAAAkB,EAAAy/C,EAAA,GACAA,GAAA,EACA76C,EAAA06C,EAAe95C,EAAA8H,EAAOxO,EAAAygD,EAItB,IAAA9gD,EAAA,EAAiBA,EAAA,EAAOA,IACxB4gD,GAAA,GAAA5gD,GAAAsc,GAAAqjC,EAAAx5C,IAAA,QAAAw5C,EAAA54C,GAAA,YAAA44C,EAAAt/C,GAAA,UAAAs/C,EAAA,IAAAr/C,GAAAiB,EAAAy/C,KACAH,EAAA16C,EAAeA,EAAAY,EAAMA,EAAA1G,EAAMA,EAAAC,EAAMA,EAAAugD,MAKjCR,EAhIA,GAmIA9gD,EAAA,WAAA8gD,EACA7gD,EAAAD,UAAA,gBACI+hD,IAAA,SAAA12B,EAAAprB,EAAAD,GAIJ,aAEAmB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAA8X,EAAA,WAAiC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAzhB,GAEA8U,EAAA,SAAAC,EAAAC,EAAAC,GAAuC,IAAAC,GAAA,EAAmB,MAAAA,EAAA,CAA4B,IAAA9sB,EAAA2sB,EAAA1sB,EAAA2sB,EAAAG,EAAAF,EAAiDC,GAAA,EAAgB,OAAA9sB,MAAAuT,SAAArT,WAAkD,IAAA8sB,EAAAhuB,OAAAiuB,yBAAAjtB,EAAAC,GAA8D,QAAAkL,IAAA6hB,EAAA,CAAuO,aAAAA,EAA4B,OAAAA,EAAAztB,MAA4B,IAAAT,EAAAkuB,EAAA7tB,IAAuB,QAAAgM,IAAArM,EAA4B,OAAoB,OAAAA,EAAAL,KAAAsuB,GAA5U,IAAA5G,EAAAnnB,OAAAif,eAAAje,GAA4C,UAAAmmB,EAAuB,OAA2BwG,EAAAxG,EAAayG,EAAA3sB,EAAgB4sB,EAAAE,EAAgBD,GAAA,EAAeE,EAAA7G,OAAAhb,IAE3b,SAAA4M,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAE7E,SAAAyN,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAE3F,SAAAwK,EAAAC,EAAAC,GAA0C,uBAAAA,GAAA,OAAAA,EAA+D,UAAA1K,UAAA,kEAAA0K,GAAuGD,EAAAzd,UAAAlB,OAAAY,OAAAge,KAAA1d,WAAyEkE,aAAe7E,MAAAoe,EAAAze,YAAA,EAAAyY,UAAA,EAAAD,cAAA,KAA6EkG,IAAA5e,OAAA6e,eAAA7e,OAAA6e,eAAAF,EAAAC,GAAAD,EAAAG,UAAAF,GAErX,IAAAV,EAAAgM,EAAA,YAEA/L,EAAApF,EAAAmF,GAUA2iC,EAAA,SAAA9hC,GAGA,SAAA8hC,IACA5nC,EAAA/Z,KAAA2hD,GAEAnzB,EAAA1tB,OAAAif,eAAA4hC,EAAA3/C,WAAA,cAAAhC,MAAAO,KAAAP,KAAAif,EAAA,YACAjf,KAAA4hD,QACA5hD,KAAAwmC,MAAA,EACAxmC,KAAA6hD,SAAA,KAmCA,OA3CAriC,EAAAmiC,EAAA9hC,GAiBA1G,EAAAwoC,IACAhgD,IAAA,cACAN,MAAA,WACArB,KAAA4hD,KAAAjH,OAAA36C,GACAA,KAAA4hD,KAAAr/C,OACAvC,KAAA6hD,SAAA5d,WAAAjkC,KAAA8hD,YAAAlgD,KAAA5B,WAAAwmC,OAEAxmC,KAAA6hD,SAAA,QAUAlgD,IAAA,OACAN,MAAA,SAAA0gD,GACA/hD,KAAA4hD,KAAAv4C,KAAA04C,GACA/hD,KAAA6hD,WACA7hD,KAAA6hD,SAAA5d,WAAAjkC,KAAA8hD,YAAAlgD,KAAA5B,WAAAwmC,YAKAmb,EA5CA,CA6CC1iC,EAAA,YAEDtf,EAAA,WAAAgiD,EACA/hD,EAAAD,UAAA,aACGqiD,WAAA,KAAcC,IAAA,SAAAj3B,EAAAprB,EAAAD,GAQjB,aAEAmB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAA8X,EAAA,WAAiC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAzhB,GAEA,SAAAG,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAE7E,SAAAyN,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAE3F,IAAAiF,EAAA+Q,EAAA,SAEA9Q,EAAAL,EAAAI,GAEAE,EAAA6Q,EAAA,kBAEA5Q,EAAAP,EAAAM,GAEAE,EAAA2Q,EAAA,SAMA1Q,EAAA,SAAAC,GACA,OAAAA,GAAA,UAAAA,IAAA,YAAAA,IAAA,EAAAA,IAAA,IAgBAC,EAAA,SAAAC,EAAA9Y,EAAA+Y,GAEA,IAAAC,EAAA,IAAAC,WAAAH,EAAArJ,OAAAqJ,EAAAI,WAAAJ,EAAAtD,YAAA,GAEA2D,EAAA,IAAAZ,EAAA,WAAAa,MAAA/Y,UAAAqV,MAAA9W,KAAAoB,IAGAqZ,EAAA,IAAAC,WAAAR,EAAAtD,YACA+D,EAAA,IAAAN,WAAAI,EAAA5J,QAIA+J,OAAAlO,EACAmO,OAAAnO,EACAoO,OAAApO,EACAqO,OAAArO,EACAsO,OAAAtO,EACAuO,OAAAvO,EACAwO,OAAAxO,EACAyO,OAAAzO,EAGA0O,OAAA1O,EAWA,IAPAkO,EAAAT,EAAA,GACAU,EAAAV,EAAA,GACAW,EAAAX,EAAA,GACAY,EAAAZ,EAAA,GAIAiB,EAAA,EAAkBA,EAAAhB,EAAApY,OAA6BoZ,GAAA,EAG/CJ,EAAAjB,EAAAK,EAAAgB,IACAH,EAAAlB,EAAAK,EAAAgB,EAAA,IACAF,EAAAnB,EAAAK,EAAAgB,EAAA,IACAD,EAAApB,EAAAK,EAAAgB,EAAA,IAGAb,EAAAN,QAAAe,EAAAC,EAAAC,EAAAC,EAAAR,EAAAS,GAIAT,EAAAS,GAAArB,EAAAY,EAAAS,GAAAR,GACAD,EAAAS,EAAA,GAAArB,EAAAY,EAAAS,EAAA,GAAAP,GACAF,EAAAS,EAAA,GAAArB,EAAAY,EAAAS,EAAA,GAAAN,GACAH,EAAAS,EAAA,GAAArB,EAAAY,EAAAS,EAAA,GAAAL,GAGAH,EAAAI,EACAH,EAAAI,EACAH,EAAAI,EACAH,EAAAI,EAGA,OAAAV,GAGArb,EAAA6a,UAaA,IAAAoB,EAAA,WACA,SAAAA,EAAAnB,EAAA9Y,EAAA+Y,EAAAmB,GACA9B,EAAA/Z,KAAA4b,GAEA,IAAA3N,EAAA2N,EAAAE,KACAnB,EAAA,IAAAC,WAAAH,EAAArJ,QACA4J,EAAA,IAAAC,WAAAR,EAAAtD,YACA/W,EAAA,EAMA,IAJAJ,KAAA+b,aAAA,IAAA3B,EAAA,WAGApa,KAAA+b,aAAA1S,KAAArJ,KAAAgc,cAAArB,EAAAvD,SAAAhX,IAAA6N,GAAAtM,EAAA+Y,EAAAM,IACA5a,EAAA6N,EAAkB7N,EAAAua,EAAApY,OAAwBnC,GAAA6N,EAC1CyM,EAAA,IAAAuB,aAAA3B,EAAAK,EAAAva,EAAA,IAAAka,EAAAK,EAAAva,EAAA,IAAAka,EAAAK,EAAAva,EAAA,IAAAka,EAAAK,EAAAva,EAAA,MACAJ,KAAA+b,aAAA1S,KAAArJ,KAAAgc,cAAArB,EAAAvD,SAAAhX,IAAA6N,GAAAtM,EAAA+Y,EAAAM,IAGAhb,KAAA+b,aAAA1S,KAAA,WAEAwS,EAAA,QAAAxB,EAAA6B,OAAAlB,MA+BA,OArBA7B,EAAAyC,IACAja,IAAA,gBAKAN,MAAA,SAAAoZ,EAAA9Y,EAAA+Y,EAAAM,GACA,kBACA,IAAAmB,EAAA3B,EAAAC,EAAA9Y,EAAA+Y,GAEAM,EAAAtW,IAAAyX,EAAA1B,EAAAI,kBAIAlZ,IAAA,OACAV,IAAA,WAEA,gBAIA2a,EAnDA,GAsDAjc,EAAAic,YACAjc,EAAA,YACAic,YACApB,aAEG0nC,QAAA,GAAAC,iBAAA,GAAAC,MAAA,KAA0CC,IAAA,SAAAr3B,EAAAprB,EAAAD,GAW7C,aAMA,SAAAka,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAJ7ExL,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAKA,IAAAihD,EAAAt3B,EAAA,eAEA7Q,EAAA6Q,EAAA,kBAEA5Q,EAAAP,EAAAM,GAEAxa,EAAA,YACA6a,QAAA8nC,EAAA9nC,QACAoB,UAAA0mC,EAAA1mC,UACA+lC,YAAAvnC,EAAA,YAEAxa,EAAAD,UAAA,aACGwiD,iBAAA,GAAAI,cAAA,KAAqCC,IAAA,SAAAx3B,EAAAprB,EAAAD,GASxC,aAEAmB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAA8X,EAAA,WAAiC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAzhB,GAEA,SAAAK,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAE3F,IAAAgB,EAAA,WACA,SAAAA,IACA+D,EAAA/Z,KAAAgW,GAEAhW,KAAAke,aAuGA,OA5FA/E,EAAAnD,IACArU,IAAA,KACAN,MAAA,SAAAkH,EAAA6V,GACApe,KAAAke,UAAA3V,KACAvI,KAAAke,UAAA3V,OAEAvI,KAAAke,UAAA3V,GAAAc,KAAA+U,MAYAzc,IAAA,MACAN,MAAA,SAAAkH,EAAA6V,GACA,IAAAtG,OAAA7K,EAEA,QAAAjN,KAAAke,UAAA3V,KAGAuP,EAAA9X,KAAAke,UAAA3V,GAAAuK,QAAAsL,GACApe,KAAAke,UAAA3V,GAAA+V,OAAAxG,EAAA,GACAA,GAAA,MAUAnW,IAAA,UACAN,MAAA,SAAAkH,GACA,IAAAgW,OAAAtR,EACA7M,OAAA6M,EACA1K,OAAA0K,EACAuR,OAAAvR,EAGA,GADAsR,EAAAve,KAAAke,UAAA3V,GACAgW,EAOA,OAAAjc,UAAAC,OAEA,IADAA,EAAAgc,EAAAhc,OACAnC,EAAA,EAAmBA,EAAAmC,IAAYnC,EAC/Bme,EAAAne,GAAAG,KAAAP,KAAAsC,UAAA,SAKA,IAFAkc,EAAAzD,MAAA/Y,UAAAqV,MAAA9W,KAAA+B,UAAA,GACAC,EAAAgc,EAAAhc,OACAnC,EAAA,EAAmBA,EAAAmC,IAAYnC,EAC/Bme,EAAAne,GAAA+X,MAAAnY,KAAAwe,MASA7c,IAAA,UACAN,MAAA,WACArB,KAAAke,gBAYAvc,IAAA,OACAN,MAAA,SAAAsd,GACA3e,KAAAme,GAAA,gBAAAtO,GACA8O,EAAAtV,KAAAwG,SAKAmG,EA3GA,GA8GArW,EAAA,WAAAqW,EACApW,EAAAD,UAAA,gBACI8iD,IAAA,SAAAz3B,EAAAprB,EAAAD,GASJ,aAEA,IAAA+iD,EAQA9iD,EAAAD,QAAA,SAAAgjD,GACA,IAAAC,EAAAF,EAAAC,EAAAxrC,WAAA,OACArP,EAAA,IAAAmT,WAAA0nC,EAAAxrC,WAAAyrC,EAAArgD,QAGA,OAFAuF,EAAApD,IAAAi+C,GACA76C,EAAApD,IAAAk+C,EAAAD,EAAAxrC,YACArP,GAIA46C,IACA,YACA,YACA,YACA,cAEA,YACA,YACA,YACA,WAEA,YACA,YACA,YACA,QAEA,YACA,YACA,YACA,KAEA,YACA,YACA,cAEA,YACA,YACA,WAEA,YACA,YACA,QAEA,QACA,QACA,IAEA,QACA,UAEA,QACA,QAEA,QACA,MAEA,QACA,IAEA,UAEA,QAEA,MAEA,SAGIG,IAAA,SAAA73B,EAAAprB,EAAAD,GASJ,aAEAA,EAAAmjD,IAAA93B,EAAA,YACArrB,EAAAuc,MAAA8O,EAAA,gBAEG+3B,WAAA,GAAAC,aAAA,KAA8BC,IAAA,SAAAj4B,EAAAprB,EAAAD,GASjC,aAQAC,EAAAD,QAAA,SAAAujD,GACA,OAAAA,EAAA9rC,SAAA,EAAA8rC,EAAA/rC,WAAA+rC,IAAA/rC,WAAA,UAGIgsC,IAAA,SAAAn4B,EAAAprB,EAAAD,SAEAyjD,IAAA,SAAAp4B,EAAAprB,EAAAD,IACJ,SAAAorB,GACA,IAIAs4B,EAJAC,EAAA,qBAAAv4B,IACA,qBAAApjB,iBACA47C,EAAAv4B,EAAA,gBAIA,qBAAAtiB,SACA26C,EAAA36C,UAEA26C,EAAAC,EAAA,6BAEAD,IACAA,EAAAC,EAAA,6BAAAC,IAIA3jD,EAAAD,QAAA0jD,IAEC9iD,KAAAP,KAAA,qBAAA+qB,IAAA,qBAAAhrB,UAAA,qBAAA4H,oBACE67C,eAAA,KAAkBC,IAAA,SAAAz4B,EAAAprB,EAAAD,IACrB,SAAAorB,GACA,IAAA24B,EAGAA,EADA,qBAAA/7C,OACAA,OACC,qBAAAojB,EACDA,EACC,qBAAAhrB,KACDA,QAKAH,EAAAD,QAAA+jD,IAECnjD,KAAAP,KAAA,qBAAA+qB,IAAA,qBAAAhrB,UAAA,qBAAA4H,uBACGg8C,IAAA,SAAA34B,EAAAprB,EAAAD,GACJ,aAEA,IAAAuf,EAAA8L,EAAA,iBAEA7L,EAAAtF,EAAAqF,GAEAE,EAAA4L,EAAA,kBAEA3L,EAAAxF,EAAAuF,GAEAwkC,EAAA54B,EAAA,YAEA64B,EAAAhqC,EAAA+pC,GAEA,SAAA/pC,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAE7E1M,EAAAD,SACAmkD,WAAA3kC,EAAA,WACAiL,YAAA/K,EAAA,WACArO,OAAA6yC,EAAA,cAUGE,gBAAA,GAAAC,iBAAA,GAAAC,WAAA,KAAqDC,IAAA,SAAAl5B,EAAAprB,EAAAD,GACxD,aAEAmB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAA8X,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAxhB,GAEAsF,EAAAgM,EAAA,YAEA/L,EAAApF,EAAAmF,GAEA,SAAAnF,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAE7E,SAAAyN,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAE3F,SAAAsK,EAAAvf,EAAAQ,GAAiD,IAAAR,EAAa,UAAAwf,eAAA,6DAAyF,OAAAhf,GAAA,kBAAAA,GAAA,oBAAAA,EAAAR,EAAAQ,EAEvJ,SAAAif,EAAAC,EAAAC,GAA0C,uBAAAA,GAAA,OAAAA,EAA+D,UAAA1K,UAAA,kEAAA0K,GAAuGD,EAAAzd,UAAAlB,OAAAY,OAAAge,KAAA1d,WAAyEkE,aAAe7E,MAAAoe,EAAAze,YAAA,EAAAyY,UAAA,EAAAD,cAAA,KAA6EkG,IAAA5e,OAAA6e,eAAA7e,OAAA6e,eAAAF,EAAAC,GAAAD,EAAAG,UAAAF,GAYrX,IAAAokC,EAAA,SAAAjkC,GAGA,SAAAikC,IACA/pC,EAAA/Z,KAAA8jD,GAEA,IAAAhkC,EAAAR,EAAAtf,MAAA8jD,EAAAlkC,WAAA9e,OAAAif,eAAA+jC,IAAAvjD,KAAAP,OAGA,OADA8f,EAAA1O,OAAA,GACA0O,EAyBA,OAjCAN,EAAAskC,EAAAjkC,GAkBA1G,EAAA2qC,IACAniD,IAAA,OACAN,MAAA,SAAAwO,GACA,IAAAs0C,OAAA,EAKA,IAHAnkD,KAAAoR,QAAAvB,EACAs0C,EAAAnkD,KAAAoR,OAAA0B,QAAA,MAEYqxC,GAAA,EAAkBA,EAAAnkD,KAAAoR,OAAA0B,QAAA,MAC9B9S,KAAA2W,QAAA,OAAA3W,KAAAoR,OAAA0Z,UAAA,EAAAq5B,IACAnkD,KAAAoR,OAAApR,KAAAoR,OAAA0Z,UAAAq5B,EAAA,OAKAL,EAlCA,CAmCC7kC,EAAA,YAEDtf,EAAA,WAAAmkD,IACG9B,WAAA,KAAcoC,IAAA,SAAAp5B,EAAAprB,EAAAD,GACjB,aAEAmB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAA4nB,EAAA,WAAkC,SAAAC,EAAAC,EAAA/oB,GAAiC,IAAAgpB,KAAeC,GAAA,EAAeC,GAAA,EAAgBC,OAAAtc,EAAoB,IAAM,QAAAuc,EAAAC,EAAAN,EAAAhoB,OAAAuoB,cAA0CL,GAAAG,EAAAC,EAAAE,QAAA9N,MAA+BwN,GAAA,EAAkC,GAArBD,EAAA/f,KAAAmgB,EAAAnoB,OAAqBjB,GAAAgpB,EAAA7mB,SAAAnC,EAAA,MAAuC,MAAAwpB,GAAcN,GAAA,EAAWC,EAAAK,EAAY,QAAU,KAAMP,GAAAI,EAAA,WAAAA,EAAA,YAA2C,QAAU,GAAAH,EAAA,MAAAC,GAAsB,OAAAH,EAAe,gBAAAD,EAAA/oB,GAA2B,GAAA2a,MAAA8O,QAAAV,GAA0B,OAAAA,EAAc,GAAAhoB,OAAAuoB,YAAA5oB,OAAAqoB,GAA2C,OAAAD,EAAAC,EAAA/oB,GAAuC,UAAA4U,UAAA,yDAAjkB,GAEAmE,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAxhB,GAEAsF,EAAAgM,EAAA,YAEA/L,EAAApF,EAAAmF,GAEA,SAAAnF,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAE7E,SAAAyN,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAE3F,SAAAsK,EAAAvf,EAAAQ,GAAiD,IAAAR,EAAa,UAAAwf,eAAA,6DAAyF,OAAAhf,GAAA,kBAAAA,GAAA,oBAAAA,EAAAR,EAAAQ,EAEvJ,SAAAif,EAAAC,EAAAC,GAA0C,uBAAAA,GAAA,OAAAA,EAA+D,UAAA1K,UAAA,kEAAA0K,GAAuGD,EAAAzd,UAAAlB,OAAAY,OAAAge,KAAA1d,WAAyEkE,aAAe7E,MAAAoe,EAAAze,YAAA,EAAAyY,UAAA,EAAAD,cAAA,KAA6EkG,IAAA5e,OAAA6e,eAAA7e,OAAA6e,eAAAF,EAAAC,GAAAD,EAAAG,UAAAF,GAYrX,IAAAoK,EAAA,WACA,IAAAnoB,EAAA,QACAN,EAAA,gBACA0oB,EAAA,MAAApoB,EAAA,QAAAN,EAAA,IAEA,WAAA2oB,OAAA,WAAAD,EAAA,MAQAE,EAAA,SAAAnI,GAEA,IAAAuD,EAAAvD,EAAAne,MAAAmmB,KACAhiB,KACA1H,EAAAilB,EAAA9iB,OACA2nB,OAAA,EAEA,MAAA9pB,IAEA,KAAAilB,EAAAjlB,KAKA8pB,EAAA,eAAAC,KAAA9E,EAAAjlB,IAAAiX,MAAA,GAEA6S,EAAA,GAAAA,EAAA,GAAA/mB,QAAA,iBACA+mB,EAAA,GAAAA,EAAA,GAAA/mB,QAAA,iBACA+mB,EAAA,GAAAA,EAAA,GAAA/mB,QAAA,wBACA2E,EAAAoiB,EAAA,IAAAA,EAAA,IAEA,OAAApiB,GA4BAsiB,EAAA,SAAAvK,GAGA,SAAAuK,IAGA,OAFArQ,EAAA/Z,KAAAoqB,GAEA9K,EAAAtf,MAAAoqB,EAAAxK,WAAA9e,OAAAif,eAAAqK,IAAA7pB,KAAAP,OA4VA,OAjWAwf,EAAA4K,EAAAvK,GAeA1G,EAAAiR,IACAzoB,IAAA,OACAN,MAAA,SAAA6D,GACA,IAAAhC,OAAA,EACAmnB,OAAA,EAIA,GADAnlB,IAAA/B,QAAA,iCACA,IAAA+B,EAAA3C,OAMA,SAAA2C,EAAA,GASA,OAAAA,EAAA4N,QAAA,QAcA,GAJA5N,IAAA/B,QAAA,SAGAD,EAAA,WAAAinB,KAAAjlB,GACAhC,EACAlD,KAAA2W,QAAA,QACApO,KAAA,MACAkc,QAAA,YAHA,CAQA,GADAvhB,EAAA,gCAAAinB,KAAAjlB,GACAhC,EAYA,OAXAmnB,GACA9hB,KAAA,MACAkc,QAAA,OAEAvhB,EAAA,KACAmnB,EAAAxI,SAAAnb,WAAAxD,EAAA,KAEAA,EAAA,KACAmnB,EAAAC,MAAApnB,EAAA,SAEAlD,KAAA2W,QAAA,OAAA0T,GAIA,GADAnnB,EAAA,qCAAAinB,KAAAjlB,GACAhC,EASA,OARAmnB,GACA9hB,KAAA,MACAkc,QAAA,kBAEAvhB,EAAA,KACAmnB,EAAAxI,SAAApb,SAAAvD,EAAA,aAEAlD,KAAA2W,QAAA,OAAA0T,GAIA,GADAnnB,EAAA,mCAAAinB,KAAAjlB,GACAhC,EASA,OARAmnB,GACA9hB,KAAA,MACAkc,QAAA,iBAEAvhB,EAAA,KACAmnB,EAAAxI,SAAApb,SAAAvD,EAAA,aAEAlD,KAAA2W,QAAA,OAAA0T,GAIA,GADAnnB,EAAA,8BAAAinB,KAAAjlB,GACAhC,EASA,OARAmnB,GACA9hB,KAAA,MACAkc,QAAA,WAEAvhB,EAAA,KACAmnB,EAAAxS,QAAApR,SAAAvD,EAAA,aAEAlD,KAAA2W,QAAA,OAAA0T,GAIA,GADAnnB,EAAA,wCAAAinB,KAAAjlB,GACAhC,EASA,OARAmnB,GACA9hB,KAAA,MACAkc,QAAA,kBAEAvhB,EAAA,KACAmnB,EAAA/H,OAAA7b,SAAAvD,EAAA,aAEAlD,KAAA2W,QAAA,OAAA0T,GAIA,GADAnnB,EAAA,gDAAAinB,KAAAjlB,GACAhC,EASA,OARAmnB,GACA9hB,KAAA,MACAkc,QAAA,0BAEAvhB,EAAA,KACAmnB,EAAA/H,OAAA7b,SAAAvD,EAAA,aAEAlD,KAAA2W,QAAA,OAAA0T,GAIA,GADAnnB,EAAA,gCAAAinB,KAAAjlB,GACAhC,EASA,OARAmnB,GACA9hB,KAAA,MACAkc,QAAA,iBAEAvhB,EAAA,KACAmnB,EAAA5H,aAAAvf,EAAA,SAEAlD,KAAA2W,QAAA,OAAA0T,GAIA,GADAnnB,EAAA,4CAAAinB,KAAAjlB,GACAhC,EAYA,OAXAmnB,GACA9hB,KAAA,MACAkc,QAAA,aAEAvhB,EAAA,KACAmnB,EAAA9nB,OAAAkE,SAAAvD,EAAA,QAEAA,EAAA,KACAmnB,EAAA3N,OAAAjW,SAAAvD,EAAA,aAEAlD,KAAA2W,QAAA,OAAA0T,GAIA,GADAnnB,EAAA,iCAAAinB,KAAAjlB,GACAhC,EASA,OARAmnB,GACA9hB,KAAA,MACAkc,QAAA,eAEAvhB,EAAA,KACAmnB,EAAA/I,SAAA,KAAA9a,KAAAtD,EAAA,UAEAlD,KAAA2W,QAAA,OAAA0T,GAIA,GADAnnB,EAAA,qBAAAinB,KAAAjlB,GACAhC,EAAA,CAMA,GALAmnB,GACA9hB,KAAA,MACAkc,QAAA,OAGAvhB,EAAA,IACA,IAAA4e,EAAAmI,EAAA/mB,EAAA,IAKA,GAHA4e,EAAAE,MACAqI,EAAAnI,IAAAJ,EAAAE,KAEAF,EAAAyI,UAAA,CACA,IAAAC,EAAA1I,EAAAyI,UAAA5mB,MAAA,KACA8mB,EAAAxB,EAAAuB,EAAA,GACAjoB,EAAAkoB,EAAA,GACA/N,EAAA+N,EAAA,GAEAJ,EAAA9I,aACAhf,IACA8nB,EAAA9I,UAAAhf,OAAAkE,SAAAlE,EAAA,KAEAma,IACA2N,EAAA9I,UAAA7E,OAAAjW,SAAAiW,EAAA,MAKA1c,KAAA2W,QAAA,OAAA0T,QAIA,GADAnnB,EAAA,4BAAAinB,KAAAjlB,GACAhC,EAAA,CAKA,GAJAmnB,GACA9hB,KAAA,MACAkc,QAAA,cAEAvhB,EAAA,IAGA,GAFAmnB,EAAAvI,WAAAmI,EAAA/mB,EAAA,IAEAmnB,EAAAvI,WAAA4I,WAAA,CACA,IAAA/mB,EAAA0mB,EAAAvI,WAAA4I,WAAA/mB,MAAA,KACAgnB,KAEAhnB,EAAA,KACAgnB,EAAA1e,MAAAxF,SAAA9C,EAAA,QAEAA,EAAA,KACAgnB,EAAAze,OAAAzF,SAAA9C,EAAA,QAEA0mB,EAAAvI,WAAA4I,WAAAC,EAEAN,EAAAvI,WAAA8I,YACAP,EAAAvI,WAAA8I,UAAAnkB,SAAA4jB,EAAAvI,WAAA8I,UAAA,KAEAP,EAAAvI,WAAA,gBACAuI,EAAAvI,WAAA,cAAArb,SAAA4jB,EAAAvI,WAAA,mBAGA9hB,KAAA2W,QAAA,OAAA0T,OA3BA,CA+BA,GADAnnB,EAAA,uBAAAinB,KAAAjlB,GACAhC,EASA,OARAmnB,GACA9hB,KAAA,MACAkc,QAAA,SAEAvhB,EAAA,KACAmnB,EAAAvI,WAAAmI,EAAA/mB,EAAA,UAEAlD,KAAA2W,QAAA,OAAA0T,GAIA,GADAnnB,EAAA,kBAAAinB,KAAAjlB,GACAhC,EACAlD,KAAA2W,QAAA,QACApO,KAAA,MACAkc,QAAA,iBAKA,GADAvhB,EAAA,wBAAAinB,KAAAjlB,GACAhC,EACAlD,KAAA2W,QAAA,QACApO,KAAA,MACAkc,QAAA,sBAHA,CAQA,GADAvhB,EAAA,mCAAAinB,KAAAjlB,GACAhC,EAUA,OATAmnB,GACA9hB,KAAA,MACAkc,QAAA,qBAEAvhB,EAAA,KACAmnB,EAAAxG,eAAA3gB,EAAA,GACAmnB,EAAAvG,eAAA,IAAA+G,KAAA3nB,EAAA,UAEAlD,KAAA2W,QAAA,OAAA0T,GAIA,GADAnnB,EAAA,qBAAAinB,KAAAjlB,GACAhC,EAsBA,OArBAmnB,GACA9hB,KAAA,MACAkc,QAAA,OAEAvhB,EAAA,KACAmnB,EAAAvI,WAAAmI,EAAA/mB,EAAA,IAEAmnB,EAAAvI,WAAAK,KACA,OAAAkI,EAAAvI,WAAAK,GAAA2I,UAAA,KAAAjX,gBACAwW,EAAAvI,WAAAK,GAAAkI,EAAAvI,WAAAK,GAAA2I,UAAA,IAGAT,EAAAvI,WAAAK,GAAAkI,EAAAvI,WAAAK,GAAAjf,MAAA,SACAmnB,EAAAvI,WAAAK,GAAA,GAAA1b,SAAA4jB,EAAAvI,WAAAK,GAAA,OACAkI,EAAAvI,WAAAK,GAAA,GAAA1b,SAAA4jB,EAAAvI,WAAAK,GAAA,OACAkI,EAAAvI,WAAAK,GAAA,GAAA1b,SAAA4jB,EAAAvI,WAAAK,GAAA,OACAkI,EAAAvI,WAAAK,GAAA,GAAA1b,SAAA4jB,EAAAvI,WAAAK,GAAA,OACAkI,EAAAvI,WAAAK,GAAA,IAAAlG,YAAAoO,EAAAvI,WAAAK,WAGAniB,KAAA2W,QAAA,OAAA0T,GAIA,GADAnnB,EAAA,+BAAAinB,KAAAjlB,GACAhC,EAWA,OAVAmnB,GACA9hB,KAAA,MACAkc,QAAA,gBAEAvhB,EAAA,GACAmnB,EAAAxa,KAAA3M,EAAA,GAEAmnB,EAAAxa,KAAA,QAEA7P,KAAA2W,QAAA,OAAA0T,GAIA,GADAnnB,EAAA,0BAAAinB,KAAAjlB,GACAhC,EAWA,OAVAmnB,GACA9hB,KAAA,MACAkc,QAAA,WAEAvhB,EAAA,GACAmnB,EAAAxa,KAAA3M,EAAA,GAEAmnB,EAAAxa,KAAA,QAEA7P,KAAA2W,QAAA,OAAA0T,GAIA,GADAnnB,EAAA,yBAAAinB,KAAAjlB,GACAhC,EAWA,OAVAmnB,GACA9hB,KAAA,MACAkc,QAAA,UAEAvhB,EAAA,GACAmnB,EAAAxa,KAAA3M,EAAA,GAEAmnB,EAAAxa,KAAA,QAEA7P,KAAA2W,QAAA,OAAA0T,GAKArqB,KAAA2W,QAAA,QACApO,KAAA,MACAsH,KAAA3K,EAAAmS,MAAA,YArTArX,KAAA2W,QAAA,QACApO,KAAA,UACAsB,KAAA3E,EAAAmS,MAAA,UAXArX,KAAA2W,QAAA,QACApO,KAAA,MACA2Z,IAAAhd,QAiUAklB,EAlWA,CAmWCnL,EAAA,YAEDtf,EAAA,WAAAyqB,IACG43B,WAAA,KAAcqC,IAAA,SAAAr5B,EAAAprB,EAAAD,GACjB,aAEAmB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAAwd,EAAA/d,OAAAge,QAAA,SAAAzF,GAAmD,QAAAjZ,EAAA,EAAgBA,EAAAkC,UAAAC,OAAsBnC,IAAA,CAAO,IAAA2e,EAAAzc,UAAAlC,GAA2B,QAAAuB,KAAAod,EAA0Bje,OAAAkB,UAAAC,eAAA1B,KAAAwe,EAAApd,KAAyD0X,EAAA1X,GAAAod,EAAApd,IAAiC,OAAA0X,GAE/OF,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAxhB,GAEAsF,EAAAgM,EAAA,YAEA/L,EAAApF,EAAAmF,GAEAE,EAAA8L,EAAA,iBAEA7L,EAAAtF,EAAAqF,GAEAE,EAAA4L,EAAA,kBAEA3L,EAAAxF,EAAAuF,GAEA,SAAAvF,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAE7E,SAAAyN,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAE3F,SAAAsK,EAAAvf,EAAAQ,GAAiD,IAAAR,EAAa,UAAAwf,eAAA,6DAAyF,OAAAhf,GAAA,kBAAAA,GAAA,oBAAAA,EAAAR,EAAAQ,EAEvJ,SAAAif,EAAAC,EAAAC,GAA0C,uBAAAA,GAAA,OAAAA,EAA+D,UAAA1K,UAAA,kEAAA0K,GAAuGD,EAAAzd,UAAAlB,OAAAY,OAAAge,KAAA1d,WAAyEkE,aAAe7E,MAAAoe,EAAAze,YAAA,EAAAyY,UAAA,EAAAD,cAAA,KAA6EkG,IAAA5e,OAAA6e,eAAA7e,OAAA6e,eAAAF,EAAAC,GAAAD,EAAAG,UAAAF,GA0BrX,IAAA1O,EAAA,SAAA6O,GAGA,SAAA7O,IACA+I,EAAA/Z,KAAAgR,GAEA,IAAA8O,EAAAR,EAAAtf,MAAAgR,EAAA4O,WAAA9e,OAAAif,eAAA/O,IAAAzQ,KAAAP,OAEA8f,EAAAE,WAAA,IAAAb,EAAA,WACAW,EAAAG,YAAA,IAAAZ,EAAA,WACAS,EAAAE,WAAAtB,KAAAoB,EAAAG,aAEA,IAAAlgB,EAAA+f,EAEAI,KACAC,KAEAC,OAAA,EAEAC,OAAA,EACAC,EAAA,aACAC,GACAC,SACAC,SACAC,qBACAC,cAGAC,EAAA,EAkRA,OA/QAd,EAAAe,UACAC,YAAA,EACAC,uBACAC,aAIAlB,EAAAG,YAAA9B,GAAA,gBAAA8C,GACA,IAAAC,OAAA,EACAC,OAAA,IAGAC,IAAA,cAGAC,cAAA,WACArhB,KAAA6gB,SAAAC,WAAAG,EAAAK,QACA,YAAAL,IACAjhB,KAAA2W,QAAA,QACAhU,QAAA,iCAEA3C,KAAA6gB,SAAAC,YAAA,IAGAS,UAAA,WACA,IAAAA,KAEA,WAAAN,IACAd,EAAAoB,YACAA,EAAAhf,OAAA0e,EAAA1e,OAEA,WAAA0e,IACAjhB,KAAA2W,QAAA,QACAhU,QAAA,8BAEAse,EAAAvE,OAAA,IAGA,WAAAuE,IACAd,EAAAoB,YACAA,EAAA7E,OAAAuE,EAAAvE,SAGA8E,QAAA,WACAxhB,KAAA6gB,SAAAY,SAAA,GAEAC,IAAA,WACA,kBAAA1hB,KAAA6gB,WACA7gB,KAAA6gB,SAAAc,cAAA,EACA3hB,KAAA2W,QAAA,QACAhU,QAAA,uCAGA,0BAAA3C,KAAA6gB,WACA7gB,KAAA6gB,SAAAe,sBAAA,EACA5hB,KAAA2W,QAAA,QACAhU,QAAA,+CAGAse,EAAAY,SAAA,IACA1B,EAAA0B,SAAAZ,EAAAY,UAGA,IAAAZ,EAAAY,WACA1B,EAAA0B,SAAA,IACA7hB,KAAA2W,QAAA,QACAhU,QAAA,qDAIA3C,KAAA6gB,SAAAG,SAAAd,GAEAve,IAAA,WACAsf,EAAAa,WAOA,SAAAb,EAAAa,WAAAC,OAIAd,EAAAa,WAAAE,KAMAf,EAAAa,WAAAC,QACA/hB,KAAA2W,QAAA,QACAhU,QAAA,qCAKA0d,GACA4B,OAAAhB,EAAAa,WAAAC,QAAA,UACAG,IAAAjB,EAAAa,WAAAE,KAGA,qBAAAf,EAAAa,WAAAK,KACA9B,EAAA+B,GAAAnB,EAAAa,WAAAK,KAlBAniB,KAAA2W,QAAA,QACAhU,QAAA,yCALA0d,EAAA,KAPArgB,KAAA2W,QAAA,QACAhU,QAAA,qDA+BA0f,iBAAA,WACAzJ,SAAAqI,EAAAqB,QAMAtiB,KAAA6gB,SAAAc,cAAAV,EAAAqB,OALAtiB,KAAA2W,QAAA,QACAhU,QAAA,oCAAAse,EAAAqB,UAMAC,yBAAA,WACA3J,SAAAqI,EAAAqB,SAMAtiB,KAAA6gB,SAAAe,sBAAAX,EAAAqB,OACA1B,EAAAK,EAAAqB,QANAtiB,KAAA2W,QAAA,QACAhU,QAAA,4CAAAse,EAAAqB,UAOAE,gBAAA,WACA,YAAAhc,KAAAya,EAAAwB,cAMAziB,KAAA6gB,SAAA4B,aAAAxB,EAAAwB,aALAziB,KAAA2W,QAAA,QACAhU,QAAA,mCAAAse,EAAAyB,YAMAtK,IAAA,WACAgI,KACAa,EAAAiB,MACA9B,EAAA8B,IAAAjB,EAAAiB,KAEAjB,EAAAM,YACAnB,EAAAmB,UAAAN,EAAAM,YAGAoB,aAAA,WACA3iB,KAAA6gB,SAAA+B,UAAA1C,EACAlgB,KAAA6gB,SAAAgC,YAAA7iB,KAAA6gB,SAAAgC,aAAAtC,EAEAU,EAAAa,YAOA3B,EAAA2B,aACA3B,EAAA2B,eAEAjD,EAAAsB,EAAA2B,WAAAb,EAAAa,aATA9hB,KAAA2W,QAAA,QACAhU,QAAA,0CAUAmgB,MAAA,WAGA,GAFA9iB,KAAA6gB,SAAAgC,YAAA7iB,KAAA6gB,SAAAgC,aAAAtC,EAEAU,EAAAa,YAAAb,EAAAa,WAAAiB,MAAA9B,EAAAa,WAAA,aAAAb,EAAAa,WAAAkB,KAAA,CAQA,IAAAC,EAAAjjB,KAAA6gB,SAAAgC,YAAA5B,EAAAa,WAAAiB,MAEAE,EAAAhC,EAAAa,WAAA,aAAAmB,EAAAhC,EAAAa,WAAA,iBACAZ,EAAA+B,EAAAhC,EAAAa,WAAA,aAGAX,GACArH,QAAA,OAAAtT,KAAAya,EAAAa,WAAAoB,UAEA/B,EAAA,WACAA,EAAAgC,YAAA,EAEAhC,EAAAgC,WAAA,OAAA3c,KAAAya,EAAAa,WAAAsB,YAEAnC,EAAAa,WAAAuB,WACAlC,EAAAmC,SAAArC,EAAAa,WAAAuB,UAEApC,EAAAa,WAAAE,MACAb,EAAAe,IAAAjB,EAAAa,WAAAE,KAEAf,EAAAa,WAAA,iBACAX,EAAAoC,WAAAtC,EAAAa,WAAA,gBAEAb,EAAAa,WAAA0B,kBACArC,EAAAsC,gBAAAxC,EAAAa,WAAA0B,iBAEAvC,EAAAa,WAAA4B,SACAvC,EAAAwC,OAAA,OAAAnd,KAAAya,EAAAa,WAAA4B,SAIAxC,EAAAD,EAAAa,WAAAkB,MAAA7B,OAtCAnhB,KAAA2W,QAAA,QACAhU,QAAA,gDAuCAiU,cAAA,WACAgK,GAAA,EACAT,EAAAvJ,eAAA,EACA5W,KAAA6gB,SAAAE,oBAAA1X,KAAA6W,EAAA3d,SAEAqhB,oBAAA,WACA5jB,KAAA6gB,SAAAgD,eAAA5C,EAAA4C,eACA7jB,KAAA6gB,SAAAiD,eAAA7C,EAAA6C,gBAEAC,eAAA,YACAnL,SAAAqI,EAAAY,WAAAZ,EAAAY,SAAA,EACA7hB,KAAA2W,QAAA,QACAhU,QAAA,qCAAAse,EAAAY,WAIA7hB,KAAA6gB,SAAAmD,eAAA/C,EAAAY,UAEAoC,cAAA,YACArL,SAAAqI,EAAAY,WAAAZ,EAAAY,SAAA,EACA7hB,KAAA2W,QAAA,QACAhU,QAAA,oCAAAse,EAAAY,WAIA7hB,KAAA6gB,SAAAqD,cAAAjD,EAAAY,UAEAsC,UAAA,WACAhE,EAAAiE,OAAAnD,EAAApR,MAEAwU,eAAA,WACAlE,EAAAmE,WAAArD,EAAApR,MAEA0U,SAAA,WACApE,EAAAqE,MAAAvD,EAAApR,QAEWoR,EAAAwD,UAAAnE,GAAA/f,KAAAR,IAEXmiB,IAAA,WACA/B,EAAA+B,IAAAjB,EAAAiB,IACAhC,EAAA7W,KAAA8W,IAGAngB,KAAA6gB,SAAAmD,gBAAA,aAAA7D,IACAngB,KAAA2W,QAAA,QACAhU,QAAA,uDAEAwd,EAAA0B,SAAA7hB,KAAA6gB,SAAAmD,gBAGA3D,IACAF,EAAAxe,IAAA0e,GAEAF,EAAAuE,SAAA9D,EAEAR,IACAD,EAAA/H,IAAAgI,GAIAD,MAEAwE,QAAA,eAGO1D,EAAA1Y,MAAAhI,KAAAR,KAGP+f,EA8BA,OA3UAN,EAAAxO,EAAA6O,GAuTA1G,EAAAnI,IACArP,IAAA,OACAN,MAAA,SAAAujB,GACA5kB,KAAAggB,WAAA3W,KAAAub,MAUAjjB,IAAA,MACAN,MAAA,WAEArB,KAAAggB,WAAA3W,KAAA,UAIA2H,EA5UA,CA6UCiO,EAAA,YAEDtf,EAAA,WAAAqR,IACG+yC,gBAAA,GAAAC,iBAAA,GAAAhC,WAAA,KAAqDsC,IAAA,SAAAt5B,EAAAprB,EAAAD,GACxD,aAEAmB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAA8X,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAxhB,GAEA,SAAAK,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAU3F,IAAAgB,EAAA,WACA,SAAAA,IACA+D,EAAA/Z,KAAAgW,GAEAhW,KAAAke,aA0GA,OA9FA/E,EAAAnD,IACArU,IAAA,KACAN,MAAA,SAAAkH,EAAA6V,GACApe,KAAAke,UAAA3V,KACAvI,KAAAke,UAAA3V,OAEAvI,KAAAke,UAAA3V,GAAAc,KAAA+U,MAaAzc,IAAA,MACAN,MAAA,SAAAkH,EAAA6V,GACA,IAAApe,KAAAke,UAAA3V,GACA,SAGA,IAAAuP,EAAA9X,KAAAke,UAAA3V,GAAAuK,QAAAsL,GAGA,OADApe,KAAAke,UAAA3V,GAAA+V,OAAAxG,EAAA,GACAA,GAAA,KAWAnW,IAAA,UACAN,MAAA,SAAAkH,GACA,IAAAgW,EAAAve,KAAAke,UAAA3V,GACAnI,OAAA,EACAmC,OAAA,EACAic,OAAA,EAEA,GAAAD,EAOA,OAAAjc,UAAAC,OAEA,IADAA,EAAAgc,EAAAhc,OACAnC,EAAA,EAAmBA,EAAAmC,IAAYnC,EAC/Bme,EAAAne,GAAAG,KAAAP,KAAAsC,UAAA,SAKA,IAFAkc,EAAAzD,MAAA/Y,UAAAqV,MAAA9W,KAAA+B,UAAA,GACAC,EAAAgc,EAAAhc,OACAnC,EAAA,EAAmBA,EAAAmC,IAAYnC,EAC/Bme,EAAAne,GAAA+X,MAAAnY,KAAAwe,MAUA7c,IAAA,UACAN,MAAA,WACArB,KAAAke,gBAYAvc,IAAA,OACAN,MAAA,SAAAsd,GACA3e,KAAAme,GAAA,gBAAAtO,GACA8O,EAAAtV,KAAAwG,SAKAmG,EA9GA,GAiHArW,EAAA,WAAAqW,OACIuuC,IAAA,SAAAv5B,EAAAprB,EAAAD,GAWJ,aACA,IAGA6kD,EAHAxuC,EAAAgV,EAAA,sBASAw5B,EAAA,WACA,IACAC,EAAA,IAAAxpC,WACAypC,EAAA,EAEAF,EAAAxiD,UAAAuU,KAAAhW,KAAAP,MAEAA,KAAA2kD,aAAA,SAAAC,GACAF,EAAAE,GAGA5kD,KAAA6kD,gBAAA,SAAAC,EAAAC,GACA,IACAC,EAAAF,EAAAC,EAAA,OACAD,EAAAC,EAAA,OACAD,EAAAC,EAAA,MACAD,EAAAC,EAAA,GACAE,EAAAH,EAAAC,EAAA,GACAG,GAAA,GAAAD,IAAA,EAEA,OAAAC,EACAF,EAAA,GAEAA,EAAA,IAGAhlD,KAAAmlD,cAAA,SAAAL,EAAAC,GACA,IACAK,GAAA,IAAAN,EAAAC,EAAA,OACAr/C,EAAAo/C,EAAAC,EAAA,MACAM,EAAA,KAAAP,EAAAC,EAAA,GAEA,OAAAM,EAAA3/C,EAAA0/C,GAGAplD,KAAAqJ,KAAA,SAAA8S,GACA,IAGAmpC,EACA1gC,EACAtI,EACAipC,EALAC,EAAA,EACAT,EAAA,EAQAN,EAAAliD,QACAgjD,EAAAd,EAAAliD,OACAkiD,EAAA,IAAAxpC,WAAAkB,EAAAhF,WAAAouC,GACAd,EAAA//C,IAAA+/C,EAAArtC,SAAA,EAAAmuC,IACAd,EAAA//C,IAAAyX,EAAAopC,IAEAd,EAAAtoC,EAGA,MAAAsoC,EAAAliD,OAAAwiD,GAAA,EACA,GAAAN,EAAAM,KAAA,IAAA56C,WAAA,IACAs6C,EAAAM,EAAA,SAAA56C,WAAA,IACAs6C,EAAAM,EAAA,SAAA56C,WAAA,GAuBO,MAAAs6C,EAAAM,IACP,WAAAN,EAAAM,EAAA,IADO,CAKP,GAAAN,EAAAliD,OAAAwiD,EAAA,EACA,MAOA,GAJAS,EAAAxlD,KAAAmlD,cAAAV,EAAAM,GAIAS,EAAAf,EAAAliD,OACA,MAGA+Z,GACA/T,KAAA,QACAsH,KAAA40C,EAAArtC,SAAA2tC,IAAAS,GACA9uC,IAAAguC,EACAjuC,IAAAiuC,GAEA1kD,KAAA2W,QAAA,OAAA2F,GACAyoC,GAAAS,OAGAT,QApDA,CAMA,GAAAN,EAAAliD,OAAAwiD,EAAA,GACA,MAQA,GAJAS,EAAAxlD,KAAA6kD,gBAAAJ,EAAAM,GAIAS,EAAAf,EAAAliD,OACA,MAEAqiB,GACArc,KAAA,iBACAsH,KAAA40C,EAAArtC,SAAA2tC,IAAAS,IAEAxlD,KAAA2W,QAAA,OAAAiO,GACAmgC,GAAAS,EA+BAF,EAAAb,EAAAliD,OAAAwiD,EAGAN,EADAa,EAAA,EACAb,EAAArtC,SAAA2tC,GAEA,IAAA9pC,aAKAupC,EAAAxiD,UAAA,IAAAgU,EAEApW,EAAAD,QAAA6kD,IAEGiB,qBAAA,KAAwBC,IAAA,SAAA16B,EAAAprB,EAAAD,GAS3B,aAEA,IAAAgmD,GACA,KACA,MACA,KACA,KACA,MACA,KACA,KACA,MACA,KACA,KACA,MACA,IACA,MAGAC,EAAA,SAAA/1C,GACA,OAAAA,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,IAKAg2C,EAAA,SAAA1pC,EAAA3W,EAAAG,GACA,IAAAvF,EAAA0H,EAAA,GACA,IAAA1H,EAAAoF,EAAiBpF,EAAAuF,EAASvF,IAC1B0H,GAAA,UAAAqU,EAAA/b,GAAAkV,SAAA,KAAA+B,OAAA,GAEA,OAAAvP,GAKAg+C,EAAA,SAAA3pC,EAAA3W,EAAAG,GACA,OAAAsC,SAAA49C,EAAA1pC,EAAA3W,EAAAG,KAGAk/C,EAAA,SAAAC,EAAAC,GACA,IACAC,EAAAF,EAAAC,EAAA,OACAD,EAAAC,EAAA,OACAD,EAAAC,EAAA,MACAD,EAAAC,EAAA,GACAE,EAAAH,EAAAC,EAAA,GACAG,GAAA,GAAAD,IAAA,EAEA,OAAAC,EACAF,EAAA,GAEAA,EAAA,IAGAG,EAAA,SAAAL,EAAAC,GACA,IACAK,GAAA,IAAAN,EAAAC,EAAA,OACAr/C,EAAAo/C,EAAAC,EAAA,MACAM,EAAA,KAAAP,EAAAC,EAAA,GAEA,OAAAM,EAAA3/C,EAAA0/C,GAGAtuC,EAAA,SAAAguC,EAAAC,GACA,OAAAD,EAAAC,KAAA,IAAA56C,WAAA,IACA26C,EAAAC,EAAA,SAAA56C,WAAA,IACA26C,EAAAC,EAAA,SAAA56C,WAAA,GACA,kBACG,EAAA26C,EAAAC,IACH,WAAAD,EAAAC,EAAA,IACA,QAEA,MAGAgB,EAAA,SAAAzpC,GACA,IAAAlc,EAAA,EAEA,MAAAA,EAAA,EAAAkc,EAAA/Z,OAAA,CACA,SAAA+Z,EAAAlc,IAAA,WAAAkc,EAAAlc,EAAA,IAMA,OAAAulD,GAAA,GAAArpC,EAAAlc,EAAA,SAHAA,IAMA,aAGA4lD,EAAA,SAAA1pC,GACA,IAAA2pC,EAAAT,EAAAU,EAAAC,EAGAF,EAAA,GACA,GAAA3pC,EAAA,KAEA2pC,GAAA,EACAA,GAAAL,EAAAtpC,EAAAlF,SAAA,SAKA,GAGA,GADAouC,EAAAI,EAAAtpC,EAAAlF,SAAA6uC,EAAA,EAAAA,EAAA,IACAT,EAAA,EACA,YAOA,GALAW,EAAA5uC,OAAAC,aAAA8E,EAAA2pC,GACA3pC,EAAA2pC,EAAA,GACA3pC,EAAA2pC,EAAA,GACA3pC,EAAA2pC,EAAA,IAEA,SAAAE,EAAA,CACAD,EAAA5pC,EAAAlF,SAAA6uC,EAAA,GAAAA,EAAAT,EAAA,IAEA,QAAAplD,EAAA,EAAqBA,EAAA8lD,EAAA/uC,WAAsB/W,IAC3C,OAAA8lD,EAAA9lD,GAAA,CACA,IAAAgmD,EAAAN,EAAAI,EAAA,EAAA9lD,GACA,oDAAAgmD,EAAA,CACA,IAAA1lD,EAAAwlD,EAAA9uC,SAAAhX,EAAA,GACAiF,GAAA,EAAA3E,EAAA,QACAA,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,OAIA,OAHA2E,GAAA,EACAA,GAAA,EAAA3E,EAAA,GAEA2E,EAEA,OAKA4gD,GAAA,GACAA,GAAAT,QACGS,EAAA3pC,EAAAnF,YACH,aAGAvX,EAAAD,SACAklD,kBACAM,gBACAruC,YACAivC,kBACAC,0BAGIK,IAAA,SAAAr7B,EAAAprB,EAAAD,GACJ,aAEA,IAEA2mD,EAFAtwC,EAAAgV,EAAA,sBAKA26B,GACA,KACA,MACA,KACA,KACA,MACA,KACA,KACA,MACA,KACA,KACA,MACA,IACA,MAWAW,EAAA,WACA,IAAAl1C,EAEAk1C,EAAAtkD,UAAAuU,KAAAhW,KAAAP,MAEAA,KAAAqJ,KAAA,SAAAiT,GACA,IAGAiqC,EACAC,EACAC,EACAC,EACAC,EACAC,EAPAxmD,EAAA,EACAymD,EAAA,EAQA,aAAAvqC,EAAA/T,KAAA,CAOA6I,GACAs1C,EAAAt1C,EACAA,EAAA,IAAA6J,WAAAyrC,EAAAvvC,WAAAmF,EAAAzM,KAAAsH,YACA/F,EAAA1M,IAAAgiD,GACAt1C,EAAA1M,IAAA4X,EAAAzM,KAAA62C,EAAAvvC,aAEA/F,EAAAkL,EAAAzM,KAKA,MAAAzP,EAAA,EAAAgR,EAAA7O,OAGA,SAAA6O,EAAAhR,IAAA,WAAAgR,EAAAhR,EAAA,KAyBA,GAhBAomD,EAAA,MAAAp1C,EAAAhR,EAAA,IAIAmmD,GAAA,EAAAn1C,EAAAhR,EAAA,QACAgR,EAAAhR,EAAA,OACA,IAAAgR,EAAAhR,EAAA,OAEAumD,EAAA,WAAAv1C,EAAAhR,EAAA,KACAwmD,EAAA,IAAAD,EACAhB,GAAA,GAAAv0C,EAAAhR,EAAA,SAEAqmD,EAAArmD,EAAAmmD,EAIAn1C,EAAA+F,WAAAsvC,EACA,OAmBA,GAfAzmD,KAAA2W,QAAA,QACAD,IAAA4F,EAAA5F,IAAAmwC,EAAAD,EACAnwC,IAAA6F,EAAA7F,IAAAowC,EAAAD,EACAD,cACAG,gBAAA,GAAA11C,EAAAhR,EAAA,UACA2mD,cAAA,EAAA31C,EAAAhR,EAAA,QACA,IAAAgR,EAAAhR,EAAA,QACA4mD,WAAArB,GAAA,GAAAv0C,EAAAhR,EAAA,SACA6mD,wBAAA,GAAA71C,EAAAhR,EAAA,QAEA8mD,WAAA,GACAr3C,KAAAuB,EAAAgG,SAAAhX,EAAA,EAAAomD,EAAAC,KAIAr1C,EAAA+F,aAAAsvC,EAEA,YADAr1C,OAAAnE,GAIA45C,IAGAz1C,IAAAgG,SAAAqvC,QAlDArmD,MAqDAJ,KAAAiT,MAAA,WACAjT,KAAA2W,QAAA,UAIA2vC,EAAAtkD,UAAA,IAAAgU,EAEApW,EAAAD,QAAA2mD,IAEGb,qBAAA,KAAwB0B,IAAA,SAAAn8B,EAAAprB,EAAAD,GAC3B,aAEA,IAGAynD,EAAAC,EACAC,EAJAtxC,EAAAgV,EAAA,sBACAu8B,EAAAv8B,EAAA,0BAQAq8B,EAAA,WACA,IAEAjnD,EACAgR,EAFA65B,EAAA,EAGAoc,EAAArlD,UAAAuU,KAAAhW,KAAAP,MAEAA,KAAAqJ,KAAA,SAAAwG,GACA,IAAA23C,EAsBA,IApBAp2C,GAGAo2C,EAAA,IAAAvsC,WAAA7J,EAAA+F,WAAAtH,OAAAsH,YACAqwC,EAAA9iD,IAAA0M,GACAo2C,EAAA9iD,IAAAmL,OAAAuB,EAAA+F,YACA/F,EAAAo2C,GALAp2C,EAAAvB,OAmBUo7B,EAAA75B,EAAA+F,WAAA,EAAmC8zB,IAC7C,OAAA75B,EAAA65B,EAAA,IAEA7qC,EAAA6qC,EAAA,EACA,MAIA,MAAA7qC,EAAAgR,EAAA+F,WAGA,OAAA/F,EAAAhR,IACA,OAEA,OAAAgR,EAAAhR,EAAA,IACAA,GAAA,EACA,MACS,OAAAgR,EAAAhR,EAAA,IACTA,IACA,MAIA6qC,EAAA,IAAA7qC,EAAA,GACAJ,KAAA2W,QAAA,OAAAvF,EAAAgG,SAAA6zB,EAAA,EAAA7qC,EAAA,IAIA,GACAA,UACS,IAAAgR,EAAAhR,MAAAgR,EAAA7O,QACT0oC,EAAA7qC,EAAA,EACAA,GAAA,EACA,MACA,OAEA,OAAAgR,EAAAhR,EAAA,IACA,IAAAgR,EAAAhR,EAAA,IACAA,GAAA,EACA,MAIAJ,KAAA2W,QAAA,OAAAvF,EAAAgG,SAAA6zB,EAAA,EAAA7qC,EAAA,IACA6qC,EAAA7qC,EAAA,EACAA,GAAA,EACA,MACA,QAGAA,GAAA,EACA,MAIAgR,IAAAgG,SAAA6zB,GACA7qC,GAAA6qC,EACAA,EAAA,GAGAjrC,KAAAiT,MAAA,WAEA7B,KAAA+F,WAAA,GACAnX,KAAA2W,QAAA,OAAAvF,EAAAgG,SAAA6zB,EAAA,IAGA75B,EAAA,KACA65B,EAAA,EACAjrC,KAAA2W,QAAA,UAGA0wC,EAAArlD,UAAA,IAAAgU,EAKAsxC,GACAG,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,GAOAhB,EAAA,WACA,IAEArnD,EACAi+B,EACAqqB,EACAC,EAEAC,EACAC,EACAC,EARAC,EAAA,IAAArB,EAUAD,EAAAplD,UAAAuU,KAAAhW,KAAAP,MACAD,EAAAC,KAEAA,KAAAqJ,KAAA,SAAAiT,GACA,UAAAA,EAAA/T,OAGAy1B,EAAA1hB,EAAA0hB,QACAqqB,EAAA/rC,EAAA5F,IACA4xC,EAAAhsC,EAAA7F,IAEAiyC,EAAAr/C,KAAAiT,KAGAosC,EAAAvqC,GAAA,gBAAAtO,GACA,IACAwa,GACA2T,UACAtnB,IAAA2xC,EACA5xC,IAAA6xC,EACAz4C,QAGA,UAAAA,EAAA,IACA,OACAwa,EAAAs+B,YAAA,4CACA,MACA,OACAt+B,EAAAs+B,YAAA,WACAt+B,EAAAu+B,YAAAL,EAAA14C,EAAAuH,SAAA,IACA,MACA,OACAiT,EAAAs+B,YAAA,yBACAt+B,EAAAu+B,YAAAL,EAAA14C,EAAAuH,SAAA,IACAiT,EAAAw+B,OAAAL,EAAAn+B,EAAAu+B,aACA,MACA,OACAv+B,EAAAs+B,YAAA,yBACA,MACA,OACAt+B,EAAAs+B,YAAA,6BACA,MAEA,QACA,MAEA5oD,EAAA4W,QAAA,OAAA0T,KAEAq+B,EAAAvqC,GAAA,kBACApe,EAAA4W,QAAA,UAGA3W,KAAAiT,MAAA,WACAy1C,EAAAz1C,SAYAw1C,EAAA,SAAAh+C,EAAAq+C,GACA,IAGA37B,EACA47B,EAHAC,EAAA,EACAC,EAAA,EAIA,IAAA97B,EAAA,EAAeA,EAAA1iB,EAAW0iB,IAC1B,IAAA87B,IACAF,EAAAD,EAAAI,gBACAD,GAAAD,EAAAD,EAAA,UAGAC,EAAA,IAAAC,EAAAD,EAAAC,GAYAV,EAAA,SAAA14C,GACA,IAIAs5C,EAAAC,EAHA7mD,EAAAsN,EAAAsH,WACAkyC,KACAjpD,EAAA,EAIA,MAAAA,EAAAmC,EAAA,EACA,IAAAsN,EAAAzP,IAAA,IAAAyP,EAAAzP,EAAA,QAAAyP,EAAAzP,EAAA,IACAipD,EAAAhgD,KAAAjJ,EAAA,GACAA,GAAA,GAEAA,IAMA,OAAAipD,EAAA9mD,OACA,OAAAsN,EAIAs5C,EAAA5mD,EAAA8mD,EAAA9mD,OACA6mD,EAAA,IAAAnuC,WAAAkuC,GACA,IAAAG,EAAA,EAEA,IAAAlpD,EAAA,EAAeA,EAAA+oD,EAAeG,IAAAlpD,IAC9BkpD,IAAAD,EAAA,KAEAC,IAEAD,EAAA1O,SAEAyO,EAAAhpD,GAAAyP,EAAAy5C,GAGA,OAAAF,GAYAZ,EAAA,SAAA34C,GACA,IAMAi5C,EAAAS,EAAAC,EAAAC,EACAC,EAAAC,EACAC,EAAAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA9pD,EAbA+pD,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAkBA,GAPAzB,EAAA,IAAAvB,EAAA13C,GACA05C,EAAAT,EAAA0B,mBACAf,EAAAX,EAAA0B,mBACAhB,EAAAV,EAAA0B,mBACA1B,EAAA2B,wBAGAnD,EAAAiC,KACAG,EAAAZ,EAAA4B,wBACA,IAAAhB,GACAZ,EAAA6B,SAAA,GAEA7B,EAAA2B,wBACA3B,EAAA2B,wBACA3B,EAAA6B,SAAA,GACA7B,EAAA8B,eAEA,IADAZ,EAAA,IAAAN,EAAA,KACAtpD,EAAA,EAAmBA,EAAA4pD,EAAsB5pD,IACzC0oD,EAAA8B,eAEAnC,EADAroD,EAAA,EACA,GAEA,GAFA0oD,GAYA,GAHAA,EAAA2B,wBACAd,EAAAb,EAAA4B,wBAEA,IAAAf,EACAb,EAAA4B,6BACK,OAAAf,EAKL,IAJAb,EAAA6B,SAAA,GACA7B,EAAA+B,gBACA/B,EAAA+B,gBACAjB,EAAAd,EAAA4B,wBACAtqD,EAAA,EAAiBA,EAAAwpD,EAAoCxpD,IACrD0oD,EAAA+B,gBAsBA,GAlBA/B,EAAA2B,wBACA3B,EAAA6B,SAAA,GAEAd,EAAAf,EAAA4B,wBACAZ,EAAAhB,EAAA4B,wBAEAX,EAAAjB,EAAAgC,SAAA,GACA,IAAAf,GACAjB,EAAA6B,SAAA,GAGA7B,EAAA6B,SAAA,GACA7B,EAAA8B,gBACAT,EAAArB,EAAA4B,wBACAN,EAAAtB,EAAA4B,wBACAL,EAAAvB,EAAA4B,wBACAJ,EAAAxB,EAAA4B,yBAEA5B,EAAA8B,eAEA9B,EAAA8B,cAAA,CAGA,OADAV,EAAApB,EAAA0B,mBACAN,GACA,OAAAD,GAAA,KAAoC,MACpC,OAAAA,GAAA,OAAsC,MACtC,OAAAA,GAAA,OAAsC,MACtC,OAAAA,GAAA,OAAsC,MACtC,OAAAA,GAAA,OAAsC,MACtC,OAAAA,GAAA,OAAsC,MACtC,OAAAA,GAAA,OAAsC,MACtC,OAAAA,GAAA,OAAsC,MACtC,OAAAA,GAAA,OAAsC,MACtC,QAAAA,GAAA,OAAuC,MACvC,QAAAA,GAAA,OAAuC,MACvC,QAAAA,GAAA,OAAuC,MACvC,QAAAA,GAAA,QAAwC,MACxC,QAAAA,GAAA,KAAqC,MACrC,QAAAA,GAAA,KAAqC,MACrC,QAAAA,GAAA,KAAqC,MACrC,SACAA,GAAAnB,EAAA0B,oBAAA,EACA1B,EAAA0B,mBACA1B,EAAA0B,oBAAA,EACA1B,EAAA0B,oBACA,MAGAP,IACAM,EAAAN,EAAA,GAAAA,EAAA,IAIA,OACAV,aACAC,WACAC,uBACAx9C,MAAAa,KAAAwB,MAAA,IAAAu7C,EAAA,KAAAM,EAAA,EAAAC,GAAAG,GACAr+C,QAAA,EAAA69C,IAAAD,EAAA,QAAAO,EAAA,EAAAC,KAKAlD,EAAAplD,UAAA,IAAAgU,EAEApW,EAAAD,SACAynD,aACAC,mBAGG0D,yBAAA,GAAAtF,qBAAA,KAAoDuF,IAAA,SAAAhgC,EAAAprB,EAAAD,GACvD,IAAAsrD,GAAA,mBACAC,GAAA,2CACAC,EAAA,SAAA1gD,GACA,IAAAlE,KACA,MAAAkE,IACAlE,EAAA8C,KAAA,GAEA,OAAA9C,GAGA6kD,EAAA,SAAAC,GACA,OAAAvqD,OAAAyrB,KAAA8+B,GAAA3zC,OAAA,SAAApL,EAAA3K,GAIA,OAHA2K,EAAA3K,GAAA,IAAAsZ,WAAAowC,EAAA1pD,GAAA+V,OAAA,SAAAyR,EAAAmiC,GACA,OAAAniC,EAAA7R,OAAAg0C,SAEAh/C,QAKAi/C,GACAC,OAAAP,GAAA,QAAAE,EAAA,WACAM,OAAAR,GAAA,KAAAE,EAAA,WACAO,OAAAT,GAAA,SAAAE,EAAA,WACAQ,OAAAV,GAAA,SAAAE,EAAA,kBAAAA,EAAA,WACAS,OAAAX,GAAA,SAAAE,EAAA,kBAAAA,EAAA,WACAU,OAAAZ,GAAA,SAAAE,EAAA,cAAAA,EAAA,YACAW,OAAAb,GAAA,SAAAE,EAAA,kBAAAA,EAAA,eAAAA,EAAA,YACAY,OAAAd,GAAA,SAAAE,EAAA,kBAAAA,EAAA,eAAAA,EAAA,eAAAA,EAAA,cACAa,OAAAd,EAAAC,EAAA,iBAAAA,EAAA,iBAAAA,EAAA,kBAAAA,EAAA,kBAAAA,EAAA,WACAc,OAAAf,EAAAC,EAAA,iBAAAA,EAAA,iBAAAA,EAAA,kBAAAA,EAAA,kBAAAA,EAAA,kBAAAA,EAAA,YACAe,MAAAhB,EAAAC,EAAA,gBAAAA,EAAA,UAGAvrD,EAAAD,QAAAyrD,EAAAG,QAEIY,IAAA,SAAAnhC,EAAAprB,EAAAD,GACJ,aAEA,IAAAqW,EAAAgV,EAAA,sBAOAohC,EAAA,SAAA9mC,GAIAtlB,KAAAqsD,eAAA,EACArsD,KAAAssD,eAAAhnC,EAAAgnC,eAEAtsD,KAAAusD,aACAvsD,KAAAwsD,aACAxsD,KAAAysD,WAAA,KACAzsD,KAAA0sD,WAAA,KACA1sD,KAAA2sD,mBACA3sD,KAAA4sD,mBACA5sD,KAAA6sD,cAAA,EACA7sD,KAAA8sD,gBAAA,EAEAV,EAAApqD,UAAAuU,KAAAhW,KAAAP,MAGAA,KAAAqJ,KAAA,SAAA0jD,GAGA,OAAAA,EAAAljD,KACA7J,KAAA2sD,gBAAAtjD,KAAA0jD,GAGAA,EAAAC,OACAhtD,KAAA4sD,gBAAAvjD,KAAA0jD,IAGA,UAAAA,EAAA1iD,MAAA9B,OACAvI,KAAAysD,WAAAM,EAAA1iD,MACArK,KAAAusD,UAAAQ,EAAAE,KACAjtD,KAAA6sD,sBAEA,UAAAE,EAAA1iD,MAAA9B,OACAvI,KAAA0sD,WAAAK,EAAA1iD,MACArK,KAAAwsD,UAAAO,EAAAE,KACAjtD,KAAA6sD,qBAKAT,EAAApqD,UAAA,IAAAgU,EACAo2C,EAAApqD,UAAAiR,MAAA,SAAA2L,GACA,IACAsuC,EACAC,EACA/sD,EACAgtD,EACA/iC,GACA4iC,QACAI,YACAC,kBACAC,aAGA,GAAAvtD,KAAA6sD,cAAA7sD,KAAAqsD,eAAA,CACA,0BAAAztC,GACA,uBAAAA,EAIA,OACK,OAAA5e,KAAA6sD,gBAOL7sD,KAAA8sD,kBAEA9sD,KAAA8sD,gBAAA9sD,KAAAqsD,gBACA,OAQA,GAHArsD,KAAA8sD,iBAAA9sD,KAAA6sD,cACA7sD,KAAA6sD,cAAA,IAEA7sD,KAAA8sD,gBAAA9sD,KAAAqsD,gBAAA,CAeA,IAXArsD,KAAAysD,WACAW,EAAAptD,KAAAysD,WAAAe,kBAAA92C,IACG1W,KAAA0sD,aACHU,EAAAptD,KAAA0sD,WAAAc,kBAAA92C,KAGA2T,EAAA4iC,KAAAV,UAAAvsD,KAAAusD,UACAliC,EAAA4iC,KAAAT,UAAAxsD,KAAAwsD,UAIApsD,EAAA,EAAaA,EAAAJ,KAAA2sD,gBAAApqD,OAAiCnC,IAC9C+sD,EAAAntD,KAAA2sD,gBAAAvsD,GACA+sD,EAAApnD,UAAAonD,EAAAM,SAAAL,EACAD,EAAApnD,WAAA,IACAonD,EAAAlnD,QAAAknD,EAAAO,OAAAN,EACAD,EAAAlnD,SAAA,IACAokB,EAAAijC,eAAAH,EAAAx6C,SAAA,EACA0X,EAAAgjC,SAAAhkD,KAAA8jD,GAKA,IAAA/sD,EAAA,EAAaA,EAAAJ,KAAA4sD,gBAAArqD,OAAiCnC,IAC9C8sD,EAAAltD,KAAA4sD,gBAAAxsD,GACA8sD,EAAAS,QAAAT,EAAAx2C,IAAA02C,EACAF,EAAAS,SAAA,IACAtjC,EAAAkjC,SAAAlkD,KAAA6jD,GAIA7iC,EAAAkjC,SAAAK,aAAA5tD,KAAAssD,eAAAsB,aAGA5tD,KAAAysD,WAAA,KACAzsD,KAAA0sD,WAAA,KACA1sD,KAAAusD,aACAvsD,KAAAwsD,aACAxsD,KAAA2sD,gBAAApqD,OAAA,EACAvC,KAAA4sD,gBAAArqD,OAAA,EACAvC,KAAA6sD,cAAA,EACA7sD,KAAA8sD,gBAAA,EAGA9sD,KAAA2W,QAAA,OAAA0T,GAEArqB,KAAA2W,QAAA,UAGA/W,EAAAD,QAAAysD,IAEG3G,qBAAA,KAAwBoC,IAAA,SAAA78B,EAAAprB,EAAAD,GAC3B,aAEA,IAAAkuD,EAAA7iC,EAAA,gBAQA8iC,EAAA,SAAAjsC,EAAA+Q,EAAAD,GACA,IAGA46B,EACAzlD,EACAimD,EAJAC,EAAA,IAAA/yC,WAAA,GACAgzC,EAAA,IAAAltB,SAAAitB,EAAA58C,QAyBA,OAnBAyQ,KAAA,EACA+Q,OAAA3lB,IAAA2lB,KACAD,OAAA1lB,IAAA0lB,KAGAs7B,EAAAC,SAAA,MACAD,EAAAC,SAAA,MACAD,EAAAC,SAAA,MAGAD,EAAAC,SAAA,KAGAD,EAAAC,SAAA,GAAAt7B,EAAA,MAAAD,EAAA,MAGAs7B,EAAAE,UAAA,EAAAH,EAAA72C,YAGA0K,GAAA,GAGA/Z,EAAA,IAAAmT,WAAA+yC,EAAA72C,WAAA,GACArP,EAAApD,IAAAspD,GACAlmD,EAAApD,KAAA,SAAAspD,EAAA72C,YACArP,IAIAylD,EAAA,IAAAM,IAAAO,cACAb,EAAA72C,IAAA62C,EAAA92C,IAAA,EACA82C,EAAAc,oBAAA,WAAAxsC,GACAksC,EAAAR,EAAAe,WAAA/rD,OACAuF,EAAA,IAAAmT,WAAA+yC,EAAA72C,WAAA42C,GACAjmD,EAAApD,IAAAspD,GACAlmD,EAAApD,IAAAupD,EAAA92C,WAAA42C,GAEAjmD,IAGAlI,EAAAD,QAAAmuD,IAEGS,eAAA,KAAkBC,IAAA,SAAAxjC,EAAAprB,EAAAD,GAMrB,aAEA,IAAAkuD,EAGAA,EAAA,SAAAtlD,EAAAkmD,GACA,IAgCAruD,EA7BAsuD,EAAA,EAKAC,EAAA,MAIAC,EAAA,SAAAC,EAAApkD,GACA,IACA0R,EACA2yC,EAAAD,EAAAtpD,SAAAkF,EACAqkD,EAAAD,EAAA1yC,MAAAhF,aAMAgF,EAAA,IAAAlB,WAAA,EAAA6zC,GACA3yC,EAAAzX,IAAAmqD,EAAA1yC,MAAA/E,SAAA,EAAAy3C,EAAAtpD,UAAA,GACAspD,EAAA1yC,QACA0yC,EAAA/tB,KAAA,IAAAC,SAAA8tB,EAAA1yC,MAAA/K,UAIA29C,EAAAlB,EAAAkB,YAAA,IAAA9zC,WAAA,QAAA1Y,QACAysD,EAAAnB,EAAAmB,aAAA,IAAA/zC,WAAA,SAAA1Y,QACA0sD,EAAApB,EAAAoB,mBAAA,IAAAh0C,WAAA,eAAA1Y,QAGA,IAAAsrD,EAAAkB,WAAA,CAKA,IAAA3uD,EAAA,EAAeA,EAAA,QAAAmC,OAAoBnC,IACnC2uD,EAAA3uD,GAAA,QAAA+J,WAAA/J,GAEA,IAAAA,EAAA,EAAeA,EAAA,SAAAmC,OAAqBnC,IACpC4uD,EAAA5uD,GAAA,SAAA+J,WAAA/J,GAEA,IAAAA,EAAA,EAAeA,EAAA,eAAAmC,OAA2BnC,IAC1C6uD,EAAA7uD,GAAA,eAAA+J,WAAA/J,GAGAytD,EAAAkB,aACAlB,EAAAmB,cACAnB,EAAAoB,oBAKA,OAFAjvD,KAAAkvD,UAAA,EAEA3mD,GACA,KAAAslD,EAAAsB,UACAnvD,KAAAuC,OAAA,GAEAosD,GAAA,EACA,MACA,KAAAd,EAAAuB,UACApvD,KAAAuC,OAAA,GACAvC,KAAAkvD,UAAA,EACA,MACA,KAAArB,EAAAO,aACApuD,KAAAuC,OAAA,GACAvC,KAAAkvD,UAAA,EACA,MACA,QACA,UAAA1sD,MAAA,wBAGAxC,KAAAmc,MAAA,IAAAlB,WAAA0zC,GACA3uD,KAAA8gC,KAAA,IAAAC,SAAA/gC,KAAAmc,MAAA/K,QACApR,KAAAmc,MAAA,GAAA5T,EACAvI,KAAAuF,SAAAvF,KAAAuC,OACAvC,KAAAkvD,SAAAT,EAGAzuD,KAAA0W,IAAA,EAEA1W,KAAAyW,IAAA,EAGAzW,KAAAqvD,WAAA,SAAAlzC,EAAAO,EAAAna,GACA,IAEAoD,EADAH,EAAAkX,GAAA,EAEAna,KAAA4Z,EAAAhF,WACAxR,EAAAH,EAAAjD,EAEAqsD,EAAA5uD,KAAAuC,GACAvC,KAAAmc,MAAAzX,IAAAyX,EAAA/E,SAAA5R,EAAAG,GAAA3F,KAAAuF,UAEAvF,KAAAuF,UAAAhD,EACAvC,KAAAuC,OAAAuK,KAAAC,IAAA/M,KAAAuC,OAAAvC,KAAAuF,WAIAvF,KAAAsvD,UAAA,SAAAC,GACAX,EAAA5uD,KAAA,GACAA,KAAAmc,MAAAnc,KAAAuF,UAAAgqD,EACAvvD,KAAAuF,WACAvF,KAAAuC,OAAAuK,KAAAC,IAAA/M,KAAAuC,OAAAvC,KAAAuF,WAIAvF,KAAAwvD,WAAA,SAAAC,GACAb,EAAA5uD,KAAA,GACAA,KAAA8gC,KAAA4uB,UAAA1vD,KAAAuF,SAAAkqD,GACAzvD,KAAAuF,UAAA,EACAvF,KAAAuC,OAAAuK,KAAAC,IAAA/M,KAAAuC,OAAAvC,KAAAuF,WAKAvF,KAAA2vD,SAAA,SAAAj+C,GACA,OAAA1R,KAAAmc,MAAAnc,KAAAuC,OAAAmP,IAMA1R,KAAA4vD,YAAA,WACA,WAAAlB,EACA,EAGA1uD,KAAAuC,QAAAmsD,EAAA,IAGA1uD,KAAA6vD,aAAA,WAEA,GAAAnB,EAAA,EACA,UAAAlsD,MAAA,0DAIAksD,EAAA1uD,KAAAuC,OACAvC,KAAAuC,QAAA,EACAvC,KAAAuF,SAAAvF,KAAAuC,QAIAvC,KAAA8vD,WAAA,SAAAC,GACA,IACAC,EACAC,EAGAjwD,KAAAuC,SAAAmsD,EAAA,EAEA1uD,KAAAuC,QAAA,EACKmsD,EAAA,IACLsB,EAAAtB,EAAA,EACAuB,EAAAjwD,KAAAuC,OAAAytD,EAEAhwD,KAAAuF,SAAAmpD,EACA1uD,KAAA8gC,KAAAqtB,UAAAnuD,KAAAuF,SAAA0qD,GACAjwD,KAAAuF,SAAAvF,KAAAuC,OAEAwtD,GAEAA,EAAA1mD,KAAArJ,KAAAmc,MAAA/E,SAAA44C,IAAAC,KAIAvB,EAAA,GAQA1uD,KAAAquD,oBAAA,SAAA1sD,EAAAkN,GACA,IAAAzO,EAWA,GAVAwuD,EAAA5uD,KAAA,EAAA2B,EAAAY,OAAA,GAGAvC,KAAA8gC,KAAA4uB,UAAA1vD,KAAAuF,SAAA5D,EAAAY,QACAvC,KAAAuF,UAAA,EAMA,UAAA5D,EACA3B,KAAAmc,MAAAzX,IAAAqqD,EAAA/uD,KAAAuF,UACAvF,KAAAuF,UAAA,OACK,cAAA5D,EACL3B,KAAAmc,MAAAzX,IAAAsqD,EAAAhvD,KAAAuF,UACAvF,KAAAuF,UAAA,OACK,oBAAA5D,EACL3B,KAAAmc,MAAAzX,IAAAuqD,EAAAjvD,KAAAuF,UACAvF,KAAAuF,UAAA,QAEA,IAAAnF,EAAA,EAAiBA,EAAAuB,EAAAY,OAAgBnC,IACjCJ,KAAAmc,MAAAnc,KAAAuF,UAAA5D,EAAAwI,WAAA/J,GACAJ,KAAAuF,WAKAvF,KAAAuF,WAGAvF,KAAA8gC,KAAAovB,WAAAlwD,KAAAuF,SAAAsJ,GACA7O,KAAAuF,UAAA,EAGAvF,KAAAuC,OAAAuK,KAAAC,IAAA/M,KAAAuC,OAAAvC,KAAAuF,YACAmpD,GAIA1uD,KAAAmwD,qBAAA,SAAAxuD,EAAAkN,GACA,IAAAzO,EAIA,IAHAwuD,EAAA5uD,KAAA,GACAA,KAAA8gC,KAAA4uB,UAAA1vD,KAAAuF,SAAA5D,EAAAY,QACAvC,KAAAuF,UAAA,EACAnF,EAAA,EAAeA,EAAAuB,EAAAY,OAAgBnC,IAE/BwuD,EAAA5uD,KAAA,GACAA,KAAAmc,MAAAnc,KAAAuF,UAAA5D,EAAAwI,WAAA/J,GACAJ,KAAAuF,WAEAqpD,EAAA5uD,KAAA,GACAA,KAAA8gC,KAAAotB,SAAAluD,KAAAuF,SAAA,GACAvF,KAAAuF,WACAvF,KAAA8gC,KAAAotB,SAAAluD,KAAAuF,SAAAsJ,EAAA,KACA7O,KAAAuF,WACAvF,KAAAuC,OAAAuK,KAAAC,IAAA/M,KAAAuC,OAAAvC,KAAAuF,YACAmpD,GAIA1uD,KAAAsuD,SAAA,WACA,IACA8B,EACAC,EAEA,OAAArwD,KAAAmc,MAAA,IAEA,KAAA0xC,EAAAsB,UAGAnvD,KAAAmc,MAAA,OAAAnc,KAAAkvD,UAAAT,EAAA,OACAzuD,KAAAmc,MAAA,IAAAsyC,EAAA,IAEA2B,EAAApwD,KAAA0W,IAAA1W,KAAAyW,IACAzW,KAAAmc,MAAA,cAAAi0C,KAAA,GACApwD,KAAAmc,MAAA,WAAAi0C,KAAA,EACApwD,KAAAmc,MAAA,SAAAi0C,KAAA,EACA,MAEA,KAAAvC,EAAAuB,UACApvD,KAAAmc,MAAA,QACAnc,KAAAmc,MAAA,IAAAsyC,EAAA,IACA,MAEA,KAAAZ,EAAAO,aACApuD,KAAAuF,SAAA,GACAvF,KAAA8gC,KAAAotB,SAAAluD,KAAAuF,SAAA,GACAvF,KAAAuF,WACAvF,KAAA8gC,KAAA4uB,UAAA1vD,KAAAuF,SAAA,IACAvF,KAAAuF,UAAA,EAEAvF,KAAAmc,MAAAzX,KAAA,eACA,aACA,QAAA1E,KAAAuF,UACAvF,KAAAuF,UAAA,GACAvF,KAAAmc,MAAAnc,KAAAuF,UAAA,EACAvF,KAAAuF,WACAvF,KAAA8gC,KAAAqtB,UAAAnuD,KAAAuF,SAAAmpD,GACA1uD,KAAAuF,SAAAvF,KAAAuC,OACAvC,KAAAmc,MAAAzX,KAAA,OAAA1E,KAAAuF,UACAvF,KAAAuF,UAAA,EACAvF,KAAAuC,OAAAvC,KAAAuF,SACA,MA8BA,OA3BA8qD,EAAArwD,KAAAuC,OAAA,GAGAvC,KAAAmc,MAAA,aAAAk0C,KAAA,GACArwD,KAAAmc,MAAA,UAAAk0C,KAAA,EACArwD,KAAAmc,MAAA,QAAAk0C,KAAA,EAEArwD,KAAAmc,MAAA,aAAAnc,KAAAyW,OAAA,GACAzW,KAAAmc,MAAA,UAAAnc,KAAAyW,OAAA,EACAzW,KAAAmc,MAAA,QAAAnc,KAAAyW,OAAA,EACAzW,KAAAmc,MAAA,eAAAnc,KAAAyW,OAAA,GAEAzW,KAAAmc,MAAA,KACAnc,KAAAmc,MAAA,KACAnc,KAAAmc,MAAA,MAIAyyC,EAAA5uD,KAAA,GACAA,KAAA8gC,KAAAqtB,UAAAnuD,KAAAuC,OAAAvC,KAAAuC,QACAvC,KAAAuC,QAAA,EACAvC,KAAAuF,UAAA,EAGAvF,KAAAmc,MAAAnc,KAAAmc,MAAA/E,SAAA,EAAApX,KAAAuC,QACAvC,KAAAswD,UAAAzC,EAAAyC,UAAAtwD,KAAAmc,OAEAnc,OAIA6tD,EAAAuB,UAAA,EACAvB,EAAAsB,UAAA,EACAtB,EAAAO,aAAA,GAGAP,EAAA0C,aAAA,SAAAnvC,GACA,OAAAysC,EAAAuB,YAAAhuC,EAAA,IAIAysC,EAAA2C,aAAA,SAAApvC,GACA,OAAAysC,EAAAsB,YAAA/tC,EAAA,IAIAysC,EAAA4C,WAAA,SAAArvC,GACA,OAAAysC,EAAAO,eAAAhtC,EAAA,IAIAysC,EAAA6C,WAAA,SAAAtvC,GACA,OAAAysC,EAAA2C,aAAApvC,GACA,KAAAA,EAAA,MAGAysC,EAAA0C,aAAAnvC,MAIAysC,EAAA4C,WAAArvC,IAQAysC,EAAAyC,UAAA,SAAAlvC,GACA,IAAA1K,EAAA0K,EAAA,OAIA,OAHA1K,GAAA0K,EAAA,MACA1K,GAAA0K,EAAA,MACA1K,GAAA0K,EAAA,OACA1K,GAGA9W,EAAAD,QAAAkuD,OAEI8C,IAAA,SAAA3lC,EAAAprB,EAAAD,GACJC,EAAAD,SACAyhB,IAAA4J,EAAA,aACA4lC,WAAA5lC,EAAA,gBACA8iC,aAAA9iC,EAAA,mBAGG6lC,eAAA,GAAAC,YAAA,GAAAC,eAAA,KAAmDC,IAAA,SAAAhmC,EAAAprB,EAAAD,GACtD,aAEA,IAAAsxD,EAAA,WACA,IAAAlxD,EAAAC,KAEAA,KAAAkxD,QAEAlxD,KAAAqJ,KAAA,SAAA+X,GACAphB,KAAAkxD,KAAA7nD,MACA8S,MAAAiF,EAAAjF,MACA1F,IAAA2K,EAAA3K,IACAC,IAAA0K,EAAA1K,IACAw4C,SAAA9tC,EAAA8tC,SACAiC,YAAA/vC,EAAA+vC,eAIArwD,OAAAC,eAAAf,KAAA,UACAiB,IAAA,WACA,OAAAlB,EAAAmxD,KAAA3uD,WAKA3C,EAAAD,QAAAsxD,OAEIG,IAAA,SAAApmC,EAAAprB,EAAAD,GACJ,aAEA,IASAixD,EACAS,EACAC,EACAC,EACAJ,EACAK,EAdAx7C,EAAAgV,EAAA,sBACA6iC,EAAA7iC,EAAA,gBACAymC,EAAAzmC,EAAA,mBACAs7B,EAAAt7B,EAAA,qBACAo8B,EAAAp8B,EAAA,kBAAAo8B,WACAgF,EAAAphC,EAAA,wBACAimC,EAAAjmC,EAAA,iBAeAumC,EAAA,SAAAlnD,EAAAwF,GACA,kBAAAA,EAAA6G,WACAzJ,IAAA5C,EAAAmjD,kBAAA92C,IACArM,EAAAmjD,kBAAA92C,IAAA7G,EAAA6G,IAEArM,EAAAmjD,kBAAA92C,IACA5J,KAAAuC,IAAAhF,EAAAmjD,kBAAA92C,IAAA7G,EAAA6G,MAIA,kBAAA7G,EAAA4G,WACAxJ,IAAA5C,EAAAmjD,kBAAA/2C,IACApM,EAAAmjD,kBAAA/2C,IAAA5G,EAAA4G,IAEApM,EAAAmjD,kBAAA/2C,IACA3J,KAAAuC,IAAAhF,EAAAmjD,kBAAA/2C,IAAA5G,EAAA4G,OAKA06C,EAAA,SAAA9mD,EAAAqM,GACA,IACA0K,EAAA,IAAAysC,IAAAO,cASA,OAPAhtC,EAAA3K,IAAAC,EACA0K,EAAA1K,MAEA0K,EAAAitC,oBAAA,kBACAjtC,EAAAitC,oBAAA,QAAAhkD,EAAA4B,OACAmV,EAAAitC,oBAAA,SAAAhkD,EAAA6B,QAEAkV,GAGAowC,EAAA,SAAAnnD,EAAAqM,GACA,IACAtW,EACAghB,EAAA,IAAAysC,IAAAsB,WAAA,GAeA,IAbA/tC,EAAA3K,IAAAC,EACA0K,EAAA1K,MAEA0K,EAAAkuC,UAAA,GACAluC,EAAAkuC,UAAAjlD,EAAAk/C,YACAnoC,EAAAkuC,UAAAjlD,EAAAo/C,sBACAroC,EAAAkuC,UAAAjlD,EAAAm/C,UACApoC,EAAAkuC,UAAA,KACAluC,EAAAkuC,UAAA,KACAluC,EAAAouC,WAAAnlD,EAAAqnD,IAAA,GAAAnvD,QACA6e,EAAAiuC,WAAAhlD,EAAAqnD,IAAA,IAEAtwC,EAAAkuC,UAAAjlD,EAAAsnD,IAAApvD,QACAnC,EAAA,EAAaA,EAAAiK,EAAAsnD,IAAApvD,SAAsBnC,EACnCghB,EAAAouC,WAAAnlD,EAAAsnD,IAAAvxD,GAAAmC,QACA6e,EAAAiuC,WAAAhlD,EAAAsnD,IAAAvxD,IAGA,OAAAghB,GAOAkwC,EAAA,SAAAjnD,GACA,IAGAunD,EAFAC,KACAC,KAGAR,EAAAtvD,UAAAuU,KAAAhW,KAAAP,MAEAA,KAAAqJ,KAAA,SAAAwG,GACA0hD,EAAAlnD,EAAAwF,GAEAxF,IACAA,EAAAy8C,gBAAAj3C,EAAAi3C,gBACAz8C,EAAA08C,aAAAl3C,EAAAk3C,aACA18C,EAAA28C,WAAAn3C,EAAAm3C,WACA38C,EAAA48C,uBAAAp3C,EAAAo3C,uBACA58C,EAAA68C,WAAAr3C,EAAAq3C,WACA78C,EAAAokD,UAAApkD,EAAAy8C,iBAAA,GACAz8C,EAAA48C,wBAAA,EACA58C,EAAA08C,cAAA,GAGAl3C,EAAA6G,IAAA5J,KAAAoB,MAAA2B,EAAA6G,IAAA,IACA7G,EAAA4G,IAAA3J,KAAAoB,MAAA2B,EAAA4G,IAAA,IAGAo7C,EAAAxoD,KAAAwG,IAGA7P,KAAAiT,MAAA,WACA,IAAA8+C,EAAAC,EAAAC,EAAAhF,EAAA,IAAAgE,EAEA,OAAAY,EAAAtvD,OAAA,CAKA0vD,GAAAt5C,IAEA,MAAAk5C,EAAAtvD,OACAwvD,EAAAF,EAAAlX,QAGAmX,EAAAvvD,QAAAwvD,EAAAr7C,KAAAo7C,EAAA,KACAG,EAAAH,EAAAnX,QACA36C,KAAAkyD,kBAAAjF,EAAAgF,KAMA5nD,EAAAokD,YAAAmD,GAAAG,EAAAr7C,IAAAu7C,GAAA,OACAjyD,KAAAkyD,kBAAAjF,EAAA8E,EAAAr7C,KACAk7C,EAAAvnD,EAAAokD,UACAwD,EAAAF,EAAAr7C,KAGAs7C,EAAA,IAAAnE,IAAAuB,WACA4C,EAAAt7C,IAAAq7C,EAAAr7C,IACAs7C,EAAAv7C,IAAAs7C,EAAAt7C,IAEAu7C,EAAA3C,WAAA0C,EAAAliD,MAEAo9C,EAAA5jD,KAAA2oD,EAAA1D,YAGAwD,EAAAvvD,OAAA,EACAqvD,EAAA,KACA5xD,KAAA2W,QAAA,QAA0BtM,QAAA4iD,OAAAiE,OAE1BlxD,KAAA2W,QAAA,kCArCA3W,KAAA2W,QAAA,8BAwCA3W,KAAAkyD,kBAAA,SAAAjF,EAAAv2C,GACA,IAAAs7C,EAEAA,EAAA,IAAAnE,IAAAO,cAIA4D,EAAAt7C,MACAs7C,EAAAv7C,IAAAC,EAGAs7C,EAAA3D,oBAAA,mBACA2D,EAAA7B,qBAAA,aAAA9lD,EAAA08C,cACAiL,EAAA3D,oBAAA,kBAAAhkD,EAAA28C,YAEAgL,EAAA3D,oBAAA,sBAEApB,EAAA5jD,KAAA2oD,EAAA1D,YAEA0D,EAAA,IAAAnE,IAAAuB,WAAA,GAIA4C,EAAAt7C,MACAs7C,EAAAv7C,IAAAC,EAEAs7C,EAAAlxB,KAAA4uB,UAAAsC,EAAAzsD,SAAA8E,EAAAokD,WACAuD,EAAAzsD,UAAA,EACAysD,EAAAzvD,OAAAuK,KAAAC,IAAAilD,EAAAzvD,OAAAyvD,EAAAzsD,UAEA0nD,EAAA5jD,KAAA2oD,EAAA1D,aAGAtuD,KAAAmyD,gBAAA,SAAAz7C,GACAo7C,EAAAzoD,KAAAqN,KAGA46C,EAAAtvD,UAAA,IAAAgU,EAMAq7C,EAAA,SAAAhnD,GACA,IAEAw+C,EACAuJ,EAFAC,KAGAhB,EAAArvD,UAAAuU,KAAAhW,KAAAP,MAEAA,KAAAsyD,YAAA,SAAArF,EAAA/G,GACA,GAAAA,EAAA,CAKA,GAAA2C,GAAAx+C,KAAAkoD,cACArM,EAAAgJ,UAAA,IAAAjC,EAAA1qD,QAAA,CAEA,IAAAiwD,EAAArB,EAAAtI,EAAA3C,EAAAzvC,KAAA63C,WACAmE,EAAAjB,EAAAnnD,EAAA67C,EAAAzvC,KAAA63C,WAEAkE,EAAArB,YAAAsB,EAAAtB,aAAA,EAEAlE,EAAA5jD,KAAAmpD,GACAvF,EAAA5jD,KAAAopD,GACApoD,EAAAkoD,aAAA,EAEAvyD,KAAA2W,QAAA,WAAAuvC,EAAAzvC,KAGAyvC,EAAA4J,aACA7C,EAAA5jD,KAAA68C,EAAAoI,YACA8D,EAAA,OAGApyD,KAAAqJ,KAAA,SAAAwG,GACA0hD,EAAAlnD,EAAAwF,GAEAA,EAAA6G,IAAA5J,KAAAoB,MAAA2B,EAAA6G,IAAA,IACA7G,EAAA4G,IAAA3J,KAAAoB,MAAA2B,EAAA4G,IAAA,IAGA47C,EAAAhpD,KAAAwG,IAGA7P,KAAAiT,MAAA,WACA,IACAy/C,EACAzF,EAAA,IAAAgE,EAIA,MAAAoB,EAAA9vD,OAAA,CACA,kCAAA8vD,EAAA,GAAA1J,YACA,MAEA0J,EAAA1X,QAIA,OAAA0X,EAAA9vD,OAAA,CAKA,MAAA8vD,EAAA9vD,OACAmwD,EAAAL,EAAA1X,QAGA,2BAAA+X,EAAA/J,aACAt+C,EAAAkoD,aAAA,EACA1J,EAAA6J,EAAA7J,OACAx+C,EAAA4B,MAAA48C,EAAA58C,MACA5B,EAAA6B,OAAA28C,EAAA38C,OACA7B,EAAAqnD,KAAAgB,EAAA7iD,MACAxF,EAAAk/C,WAAAV,EAAAU,WACAl/C,EAAAm/C,SAAAX,EAAAW,SACAn/C,EAAAo/C,qBAAAZ,EAAAY,qBACA2I,EAAAtC,cACO,2BAAA4C,EAAA/J,aACPt+C,EAAAkoD,aAAA,EACAloD,EAAAsnD,KAAAe,EAAA7iD,MACAuiD,EAAAtC,cACO,+BAAA4C,EAAA/J,aACPyJ,GACApyD,KAAAsyD,YAAArF,EAAAmF,GAEAA,EAAA,IAAAvE,IAAAsB,WACAiD,EAAA17C,IAAAg8C,EAAAh8C,IACA07C,EAAA37C,IAAAi8C,EAAAj8C,MAEA,8CAAAi8C,EAAA/J,cAEAyJ,EAAAlD,UAAA,GAEAkD,EAAAtC,cAEAsC,EAAAvC,eACAuC,EAAA/C,WAAAqD,EAAA7iD,MAEAuiD,GACApyD,KAAAsyD,YAAArF,EAAAmF,GAGApyD,KAAA2W,QAAA,QAA0BtM,QAAA4iD,OAAAiE,OAG1BlxD,KAAA2W,QAAA,kCA9CA3W,KAAA2W,QAAA,+BAkDA06C,EAAArvD,UAAA,IAAAgU,EAMA46C,EAAA,SAAAtrC,GACA,IAGAqtC,EAAA1yC,EAAA2yC,EACAC,EAAAC,EACAC,EACAC,EAAAC,EACAC,EAAAC,EAAAC,EACAC,EAPAtzD,EAAAC,KASA4wD,EAAA5uD,UAAAuU,KAAAhW,KAAAP,MAEAslB,QAGAtlB,KAAAssD,eAAA,IAAAmF,EAAA6B,eAEAhuC,EAAAgnC,eAAAtsD,KAAAssD,eAGAqG,EAAA,IAAAlB,EAAA8B,sBACAtzC,EAAA,IAAAwxC,EAAA+B,qBACAZ,EAAA,IAAAnB,EAAAgC,iBACAZ,EAAA,IAAApB,EAAAr7C,wBAAA,SACA08C,EAAA,IAAArB,EAAAr7C,wBAAA,SACA28C,EAAA,IAAAtB,EAAAr7C,wBAAA,kBAEA48C,EAAA,IAAA1M,EACA2M,EAAA,IAAA7L,EACAiM,EAAA,IAAAjH,EAAA9mC,GAGAqtC,EACAj0C,KAAAuB,GACAvB,KAAAk0C,GAIAA,EACAl0C,KAAAm0C,GACAn0C,KAAAu0C,GACAL,EACAl0C,KAAAo0C,GACAp0C,KAAAs0C,GAEAJ,EACAl0C,KAAAq0C,GACAr0C,KAAA1e,KAAAssD,gBACA5tC,KAAA20C,GAEAD,EAAA,IAAA3B,EAAAiC,cACAT,EAAAv0C,KAAA00C,GACA10C,KAAA20C,GAGAT,EAAAz0C,GAAA,gBAAAtO,GACA,IAAAzP,EAAAqsD,EAAAC,EAEA,gBAAA78C,EAAAtH,KAAA,CACAnI,EAAAyP,EAAAkuB,OAAAx7B,OAGA,MAAAnC,IACA,UAAAyP,EAAAkuB,OAAA39B,GAAAmI,KACAkkD,EAAA58C,EAAAkuB,OAAA39B,GACS,UAAAyP,EAAAkuB,OAAA39B,GAAAmI,OACTmkD,EAAA78C,EAAAkuB,OAAA39B,IAKAqsD,IAAAyG,IACAG,EAAAhH,iBACA6G,EAAA,IAAA7B,EAAA5E,GAGAwG,EACAv0C,KAAAw0C,GACAx0C,KAAA20C,IAGA3G,IAAAyG,IAEAE,EAAAhH,iBACA8G,EAAA,IAAA7B,EAAA5E,GAGAsG,EACAt0C,KAAAy0C,GACAz0C,KAAA20C,GAEAH,GACAA,EAAA/0C,GAAA,WAAAg1C,EAAAhB,qBAOAnyD,KAAAqJ,KAAA,SAAAwG,GACA8iD,EAAAtpD,KAAAwG,IAIA7P,KAAAiT,MAAA,WAEA0/C,EAAA1/C,SAIAjT,KAAA2zD,cAAA,WACAP,EAAAlc,SAIAmc,EAAAl1C,GAAA,gBAAAkM,GACAtqB,EAAA4W,QAAA,OAAA0T,KAIAgpC,EAAAl1C,GAAA,kBACApe,EAAA4W,QAAA,WAGAi6C,EAAA5uD,UAAA,IAAAgU,EAGApW,EAAAD,QAAAixD,IAEGgD,oBAAA,GAAAC,iBAAA,GAAAC,kBAAA,GAAArO,qBAAA,GAAAsO,uBAAA,GAAAxF,eAAA,GAAAyF,gBAAA,KAAuJC,IAAA,SAAAjpC,EAAAprB,EAAAD,GAc1J,aAUA,IAAAu0D,EAAA,EACAC,EAAA,IACAn+C,EAAAgV,EAAA,mBAUAopC,EAAA,SAAAj4C,GACA,IACA/b,EAAA,EACA0H,GACAusD,aAAA,EACAC,YAAA,GAEAD,EAAA,EACAC,EAAA,EAGA,MAAAl0D,EAAA+b,EAAAhF,WAAA,CAEA,GAAAgF,EAAA/b,KAAA+zD,EACA,MAIA,YAAAh4C,EAAA/b,GACAi0D,GAAA,IACAj0D,IAEAi0D,GAAAl4C,EAAA/b,KAGA,YAAA+b,EAAA/b,GACAk0D,GAAA,IACAl0D,IAMA,GAJAk0D,GAAAn4C,EAAA/b,MAIA0H,EAAAysD,SAAAF,IAAAH,EAAA,CACApsD,EAAAusD,cACAvsD,EAAAwsD,cACAxsD,EAAAysD,QAAAp4C,EAAA/E,SAAAhX,IAAAk0D,GACA,MAIAl0D,GAAAk0D,EACAD,EAAA,EACAC,EAAA,EAGA,OAAAxsD,GAIA0sD,EAAA,SAAAC,GAGA,aAAAA,EAAAF,QAAA,GACA,KAIA,MAAAE,EAAAF,QAAA,MAAAE,EAAAF,QAAA,IACA,KAOA,SAHAh9C,OAAAC,aAAAi9C,EAAAF,QAAA,GACAE,EAAAF,QAAA,GACAE,EAAAF,QAAA,GACAE,EAAAF,QAAA,IACA,KAIA,IAAAE,EAAAF,QAAA,GACA,KAKAE,EAAAF,QAAAn9C,SAAA,EAAAq9C,EAAAF,QAAAhyD,OAAA,IAIAmyD,EAAA,SAAAh+C,EAAAi+C,GACA,IAAAv0D,EAAAqK,EAAAiS,EAAA7M,EAAAqH,KAGA,QAAAy9C,EAAA,IACA,OAAAz9C,EAKA,IADAzM,EAAA,GAAAkqD,EAAA,GACAv0D,EAAA,EAAaA,EAAAqK,EAAWrK,IACxBsc,EAAA,EAAAtc,EACAyP,GACAtH,KAAA,EAAAosD,EAAAj4C,EAAA,GACAhG,OAIA,EAAAi+C,EAAAj4C,EAAA,KACA7M,EAAA+kD,OAAAD,EAAAj4C,EAAA,MAAAi4C,EAAAj4C,EAAA,GACAxF,EAAA7N,KAAAwG,IAGA,OAAAqH,GAGAw8C,EAAA,WAEAA,EAAA1xD,UAAAuU,KAAAhW,KAAAP,MAEAA,KAAA60D,mBAEA70D,KAAA80D,YACA,IAAAC,EAAA,KACA,IAAAA,EAAA,KACA,IAAAA,EAAA,KACA,IAAAA,EAAA,MAGA/0D,KAAAk3C,QAGAl3C,KAAA80D,WAAAtoC,QAAA,SAAAwoC,GACAA,EAAA72C,GAAA,OAAAne,KAAA2W,QAAA/U,KAAA5B,KAAA,SACAg1D,EAAA72C,GAAA,OAAAne,KAAA2W,QAAA/U,KAAA5B,KAAA,UACGA,OAIH0zD,EAAA1xD,UAAA,IAAAgU,EACA09C,EAAA1xD,UAAAqH,KAAA,SAAAghB,GACA,IAAAoqC,EAAAE,EAGA,aAAAtqC,EAAAs+B,cAKA8L,EAAAL,EAAA/pC,EAAAu+B,aAGA6L,EAAAJ,cAAAH,IAKAS,EAAAH,EAAAC,GAGAE,IAWAtqC,EAAA5T,IAAAzW,KAAAi1D,WAEAj1D,KAAAk1D,qBAAA,EAEG7qC,EAAA5T,MAAAzW,KAAAi1D,YAAAj1D,KAAA,oBAEHA,KAAAk1D,qBAAA,GAKAl1D,KAAA60D,gBAAA70D,KAAA60D,gBAAAv9C,OAAAo9C,EAAArqC,EAAA3T,IAAAi+C,IACA30D,KAAAi1D,WAAA5qC,EAAA5T,SAGAi9C,EAAA1xD,UAAAiR,MAAA,WAEAjT,KAAA60D,gBAAAtyD,QASAvC,KAAA60D,gBAAAroC,QAAA,SAAA2oC,EAAAC,GACAD,EAAAE,aAAAD,IAIAp1D,KAAA60D,gBAAAtsB,KAAA,SAAAhiC,EAAAY,GACA,OAAAZ,EAAAmQ,MAAAvP,EAAAuP,IACAnQ,EAAA8uD,aAAAluD,EAAAkuD,aAEA9uD,EAAAmQ,IAAAvP,EAAAuP,MAGA1W,KAAA60D,gBAAAroC,QAAA,SAAAlQ,GACAA,EAAA/T,KAAA,GAEAvI,KAAAs1D,qBAAAh5C,IAIGtc,MAEHA,KAAA60D,gBAAAtyD,OAAA,EACAvC,KAAA80D,WAAAtoC,QAAA,SAAAwoC,GACAA,EAAA/hD,SACGjT,OAhCHA,KAAA80D,WAAAtoC,QAAA,SAAAwoC,GACAA,EAAA/hD,SACKjT,OAkCL0zD,EAAA1xD,UAAAk1C,MAAA,WACAl3C,KAAAi1D,WAAA,KACAj1D,KAAAk1D,qBAAA,EACAl1D,KAAAu1D,sBAAA,WACAv1D,KAAA80D,WAAAtoC,QAAA,SAAAgpC,GACAA,EAAAte,WAIAwc,EAAA1xD,UAAAszD,qBAAA,SAAAh5C,GAEAtc,KAAAy1D,mBAAAn5C,GACAtc,KAAAu1D,qBAAAj5C,EAAA/T,MAAA,EACGvI,KAAA01D,mBAAAp5C,KACHtc,KAAAu1D,qBAAAj5C,EAAA/T,MAAA,GAEA,OAAAvI,KAAAu1D,qBAAAj5C,EAAA/T,OAKAvI,KAAA80D,YAAAx4C,EAAA/T,MAAA,GAAAvI,KAAAu1D,qBAAAj5C,EAAA/T,OAAAc,KAAAiT,IAGAo3C,EAAA1xD,UAAAyzD,mBAAA,SAAAn5C,GACA,qBAAAA,EAAAs4C,SAEAlB,EAAA1xD,UAAA0zD,mBAAA,SAAAp5C,GACA,qBAAAA,EAAAs4C,SAOA,IAAAe,GACA3K,GAAA,IACA4K,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,GACAC,IAAA,GACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,GACAC,IAAA,GACAC,IAAA,GACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,MAGAC,EAAA,SAAAz4D,GACA,cAAAA,EACA,IAEAA,EAAA+yD,EAAA/yD,MACA2U,OAAAC,aAAA5U,KAIA04D,EAAA,GAIAC,GAAA,wCACA,oCAIAC,EAAA,WACA,IAAA1zD,KAAA1H,EAAAk7D,EAAA,EACA,MAAAl7D,IACA0H,EAAAuB,KAAA,IAEA,OAAAvB,GAGAitD,EAAA,SAAA0G,EAAAC,GACA3G,EAAA/yD,UAAAuU,KAAAhW,KAAAP,MAEAA,KAAA27D,OAAAF,GAAA,EACAz7D,KAAA47D,aAAAF,GAAA,EAEA17D,KAAA67D,MAAA,SAAA77D,KAAA27D,QAAA,EAAA37D,KAAA47D,eAEA57D,KAAA87D,eACA97D,KAAAk3C,QAEAl3C,KAAAqJ,KAAA,SAAAiT,GACA,IAAAzM,EAAAksD,EAAAC,EAAAC,EAAApyD,EAKA,GAHAgG,EAAA,MAAAyM,EAAAs4C,OAGA/kD,IAAA7P,KAAAk8D,kBAeA,GATA,cAAArsD,GACA7P,KAAAk8D,iBAAArsD,EACKA,IAAA7P,KAAAm8D,WACLn8D,KAAAk8D,iBAAA,MAGAF,EAAAnsD,IAAA,EACAosD,EAAA,IAAApsD,EAEAA,IAAA7P,KAAAm8D,SAGK,GAAAtsD,IAAA7P,KAAAo8D,wBACLp8D,KAAA0zB,MAAA,aAEK,GAAA7jB,IAAA7P,KAAAq8D,gBACLr8D,KAAAs8D,gBAAAhgD,EAAA5F,KAEA1W,KAAAu8D,eAAAjgD,EAAA5F,KAGAqlD,EAAA/7D,KAAAw8D,WACAx8D,KAAAw8D,WAAAx8D,KAAAy8D,cACAz8D,KAAAy8D,cAAAV,EAGA/7D,KAAA08D,UAAApgD,EAAA5F,SAEK,GAAA7G,IAAA7P,KAAA28D,gBACL38D,KAAA48D,QAAAtB,EAAA,EACAt7D,KAAA0zB,MAAA,cACK,GAAA7jB,IAAA7P,KAAA68D,gBACL78D,KAAA48D,QAAAtB,EAAA,EACAt7D,KAAA0zB,MAAA,cACK,GAAA7jB,IAAA7P,KAAA88D,gBACL98D,KAAA48D,QAAAtB,EAAA,EACAt7D,KAAA0zB,MAAA,cACK,GAAA7jB,IAAA7P,KAAA+8D,iBACL/8D,KAAAs8D,gBAAAhgD,EAAA5F,KACA1W,KAAAu8D,eAAAjgD,EAAA5F,KACA1W,KAAAg9D,eACAh9D,KAAA08D,UAAApgD,EAAA5F,SAEK,GAAA7G,IAAA7P,KAAAi9D,WACL,UAAAj9D,KAAA0zB,MACA1zB,KAAAy8D,cAAAnB,GAAAt7D,KAAAy8D,cAAAnB,GAAAjkD,MAAA,MAEArX,KAAAw8D,WAAAlB,GAAAt7D,KAAAw8D,WAAAlB,GAAAjkD,MAAA,WAEK,GAAAxH,IAAA7P,KAAAk9D,wBACLl9D,KAAAu8D,eAAAjgD,EAAA5F,KACA1W,KAAAw8D,WAAAhB,SACK,GAAA3rD,IAAA7P,KAAAm9D,4BACLn9D,KAAAy8D,cAAAjB,SAEK,GAAA3rD,IAAA7P,KAAAo9D,0BACLp9D,KAAA0zB,MAAA,eAGK,GAAA1zB,KAAAq9D,mBAAArB,EAAAC,GAKLD,GAAA,EAAAA,IAAA,EACAnyD,EAAAwxD,EAAAW,EAAAC,GACAj8D,UAAA0zB,OAAApX,EAAA5F,IAAA7M,GACA7J,KAAAs9D,eAGK,GAAAt9D,KAAAu9D,eAAAvB,EAAAC,GAOL,UAAAj8D,KAAA0zB,MACA1zB,KAAAy8D,cAAAz8D,KAAAw9D,MAAAx9D,KAAAy8D,cAAAz8D,KAAAw9D,MAAAnmD,MAAA,MAEArX,KAAAw8D,WAAAlB,GAAAt7D,KAAAw8D,WAAAlB,GAAAjkD,MAAA,MAOA2kD,GAAA,EAAAA,IAAA,EACAnyD,EAAAwxD,EAAAW,EAAAC,GACAj8D,UAAA0zB,OAAApX,EAAA5F,IAAA7M,GACA7J,KAAAs9D,eAGK,GAAAt9D,KAAAy9D,aAAAzB,EAAAC,GAELj8D,KAAAs8D,gBAAAhgD,EAAA5F,KAIA1W,UAAA0zB,OAAApX,EAAA5F,IAAA,KACA1W,KAAAs9D,UAEA,SAAArB,IACAj8D,KAAA09D,cAAAphD,EAAA5F,KAAA,MAGA,OAAAulD,IACAj8D,KAAA09D,cAAAphD,EAAA5F,KAAA,WAIK,GAAA1W,KAAA29D,oBAAA3B,EAAAC,GAKLj8D,KAAAs9D,SAAA,EAAArB,OAGK,GAAAj8D,KAAA49D,MAAA5B,EAAAC,GAAA,CAIL,IAAA4B,EAAAtC,EAAAzoD,QAAA,KAAAjD,GAEAguD,IAAA79D,KAAAw9D,OAEAx9D,KAAAs8D,gBAAAhgD,EAAA5F,KACA1W,KAAAw9D,KAAAK,GAIA,EAAA5B,IAAA,IAAAj8D,KAAA89D,YAAAhrD,QAAA,MACA9S,KAAA09D,cAAAphD,EAAA5F,KAAA,MAGA,SAAA7G,KAKA7P,KAAAs9D,QAAA,OAAAztD,IAAA,IAGA7P,KAAA+9D,WAAA9B,IAKA,SAAAA,IACAj8D,KAAA09D,cAAAphD,EAAA5F,KAAA,WAKK1W,KAAAg+D,aAAAhC,KACL,IAAAC,IACAA,EAAA,MAEApyD,EAAAwxD,EAAAW,GACAnyD,GAAAwxD,EAAAY,GACAj8D,UAAA0zB,OAAApX,EAAA5F,IAAA7M,GACA7J,KAAAs9D,SAAAzzD,EAAAtH,aAvKAvC,KAAAk8D,iBAAA,OA6KAnH,EAAA/yD,UAAA,IAAAgU,EAGA++C,EAAA/yD,UAAAu6D,eAAA,SAAA7lD,GACA,IAAAunD,EAAAj+D,KAAAw8D,WAEApkD,IAAA,SAAAylD,GACA,OAAAA,EAAAl1D,SAGAmkB,KAAA,MAEA3pB,QAAA,iBAEA86D,EAAA17D,QACAvC,KAAA2W,QAAA,QACA82C,SAAAztD,KAAA08D,UACAhP,OAAAh3C,EACA7M,KAAAo0D,EACAtrD,OAAA3S,KAAA67D,SAQA9G,EAAA/yD,UAAAk1C,MAAA,WACAl3C,KAAA0zB,MAAA,QAKA1zB,KAAA48D,QAAA,EACA58D,KAAA08D,UAAA,EACA18D,KAAAw8D,WAAAhB,IACAx7D,KAAAy8D,cAAAjB,IACAx7D,KAAAk8D,iBAAA,KAGAl8D,KAAAs9D,QAAA,EACAt9D,KAAAw9D,KAAAlC,EAGAt7D,KAAA89D,gBAMA/I,EAAA/yD,UAAA85D,aAAA,WAaA,IAAA97D,KAAA47D,cACA57D,KAAAk+D,MAAA,GACAl+D,KAAAm+D,KAAA,GACAn+D,KAAAo+D,UAAA,GAAAp+D,KAAA27D,SAAA,EACA37D,KAAAq+D,QAAA,IACG,IAAAr+D,KAAA47D,eACH57D,KAAAk+D,MAAA,GACAl+D,KAAAm+D,KAAA,GACAn+D,KAAAo+D,UAAA,GAAAp+D,KAAA27D,SAAA,EACA37D,KAAAq+D,QAAA,IAOAr+D,KAAAm8D,SAAA,EAEAn8D,KAAAo8D,wBAAA,GAAAp8D,KAAAo+D,SACAp+D,KAAAq8D,gBAAA,GAAAr8D,KAAAo+D,SAEAp+D,KAAA28D,gBAAA,GAAA38D,KAAAo+D,SACAp+D,KAAA68D,gBAAA,GAAA78D,KAAAo+D,SACAp+D,KAAA88D,gBAAA,GAAA98D,KAAAo+D,SACAp+D,KAAA+8D,iBAAA,GAAA/8D,KAAAo+D,SAEAp+D,KAAAo9D,0BAAA,GAAAp9D,KAAAo+D,SAEAp+D,KAAAi9D,WAAA,GAAAj9D,KAAAo+D,SACAp+D,KAAAk9D,wBAAA,GAAAl9D,KAAAo+D,SACAp+D,KAAAm9D,4BAAA,GAAAn9D,KAAAo+D,UAcArJ,EAAA/yD,UAAAq7D,mBAAA,SAAArB,EAAAC,GACA,OAAAD,IAAAh8D,KAAAm+D,MAAAlC,GAAA,IAAAA,GAAA,IAcAlH,EAAA/yD,UAAAu7D,eAAA,SAAAvB,EAAAC,GACA,OAAAD,IAAAh8D,KAAAm+D,KAAA,GAAAnC,IAAAh8D,KAAAm+D,KAAA,IACAlC,GAAA,IAAAA,GAAA,IAcAlH,EAAA/yD,UAAAy7D,aAAA,SAAAzB,EAAAC,GACA,OAAAD,IAAAh8D,KAAAm+D,MAAAlC,GAAA,IAAAA,GAAA,IAcAlH,EAAA/yD,UAAA27D,oBAAA,SAAA3B,EAAAC,GACA,OAAAD,IAAAh8D,KAAAq+D,SAAApC,GAAA,IAAAA,GAAA,IAcAlH,EAAA/yD,UAAA47D,MAAA,SAAA5B,EAAAC,GACA,OAAAD,GAAAh8D,KAAAk+D,OAAAlC,EAAAh8D,KAAAk+D,MAAA,GACAjC,GAAA,IAAAA,GAAA,KAYAlH,EAAA/yD,UAAA+7D,WAAA,SAAA9B,GACA,OAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,KAWAlH,EAAA/yD,UAAAg8D,aAAA,SAAAtgB,GACA,OAAAA,GAAA,IAAAA,GAAA,KAKAqX,EAAA/yD,UAAA07D,cAAA,SAAAhnD,EAAA4nD,GACAt+D,KAAA89D,YAAA99D,KAAA89D,YAAAxmD,OAAAgnD,GACA,IAAAz0D,EAAAy0D,EAAA5mD,OAAA,SAAA7N,EAAAy0D,GACA,OAAAz0D,EAAA,IAAAy0D,EAAA,KACG,IACHt+D,UAAA0zB,OAAAhd,EAAA7M,IAKAkrD,EAAA/yD,UAAAs6D,gBAAA,SAAA5lD,GACA,GAAA1W,KAAA89D,YAAAv7D,OAAA,CAGA,IAAAsH,EAAA7J,KAAA89D,YAAAvvD,UAAAmJ,OAAA,SAAA7N,EAAAy0D,GACA,OAAAz0D,EAAA,KAAAy0D,EAAA,KACG,IACHt+D,KAAA89D,eACA99D,UAAA0zB,OAAAhd,EAAA7M,KAIAkrD,EAAA/yD,UAAAu8D,MAAA,SAAA7nD,EAAA7M,GACA,IAAA20D,EAAAx+D,KAAAy8D,cAAAz8D,KAAAw9D,MAGAgB,GAAA30D,EACA7J,KAAAy8D,cAAAz8D,KAAAw9D,MAAAgB,GAGAzJ,EAAA/yD,UAAAy8D,OAAA,SAAA/nD,EAAA7M,GACA,IAAA20D,EAAAx+D,KAAAw8D,WAAAlB,GAEAkD,GAAA30D,EACA7J,KAAAw8D,WAAAlB,GAAAkD,GAIAzJ,EAAA/yD,UAAAg7D,aAAA,WACA,IAAA58D,EAEA,IAAAA,EAAA,EAAaA,EAAAJ,KAAA48D,QAAkBx8D,IAC/BJ,KAAAw8D,WAAAp8D,GAAA,GAGA,IAAAA,EAAAJ,KAAA48D,QAAwBx8D,EAAAk7D,EAAgBl7D,IACxCJ,KAAAw8D,WAAAp8D,GAAAJ,KAAAw8D,WAAAp8D,EAAA,GAGAJ,KAAAw8D,WAAAlB,GAAA,IAIAvG,EAAA/yD,UAAA08D,QAAA,aAGA9+D,EAAAD,SACA+zD,gBACAqB,kBAGG4J,kBAAA,KAAqBC,IAAA,SAAA5zC,EAAAprB,EAAAD,GAWxB,aACA,IAQA4zD,EAAAC,EAAAC,EARAz9C,EAAAgV,EAAA,sBACA0oC,EAAA1oC,EAAA,oBACA5O,EAAA4O,EAAA,kBACA5U,EAAA4U,EAAA,+BAAA5U,wBAEAyoD,EAAA7zC,EAAA,qBAOA8zC,EAAA,IACAC,EAAA,GAMAxL,EAAA,WACA,IACAniD,EAAA,IAAA6J,WAAA6jD,GACAE,EAAA,EAEAzL,EAAAvxD,UAAAuU,KAAAhW,KAAAP,MAIAA,KAAAqJ,KAAA,SAAA8S,GACA,IAGAsoC,EAFApY,EAAA,EACAC,EAAAwyB,EAKAE,GACAva,EAAA,IAAAxpC,WAAAkB,EAAAhF,WAAA6nD,GACAva,EAAA//C,IAAA0M,EAAAgG,SAAA,EAAA4nD,IACAva,EAAA//C,IAAAyX,EAAA6iD,GACAA,EAAA,GAEAva,EAAAtoC,EAIA,MAAAmwB,EAAAmY,EAAAttC,WAEAstC,EAAApY,KAAA0yB,GAAAta,EAAAnY,KAAAyyB,GAWA1yB,IACAC,MATAtsC,KAAA2W,QAAA,OAAA8tC,EAAArtC,SAAAi1B,EAAAC,IACAD,GAAAyyB,EACAxyB,GAAAwyB,GAaAzyB,EAAAoY,EAAAttC,aACA/F,EAAA1M,IAAA+/C,EAAArtC,SAAAi1B,GAAA,GACA2yB,EAAAva,EAAAttC,WAAAk1B,IAIArsC,KAAAiT,MAAA,WAIA+rD,IAAAF,GAAA1tD,EAAA,KAAA2tD,IACA/+D,KAAA2W,QAAA,OAAAvF,GACA4tD,EAAA,GAEAh/D,KAAA2W,QAAA,UAGA48C,EAAAvxD,UAAA,IAAAgU,EAMAw9C,EAAA,WACA,IAAAyL,EAAAriD,EAAAE,EAAA/c,EACAyzD,EAAAxxD,UAAAuU,KAAAhW,KAAAP,MACAD,EAAAC,KAEAA,KAAAk/D,wBACAl/D,KAAA+c,qBAAA9P,EAEAgyD,EAAA,SAAA1K,EAAA4K,GACA,IAAAziD,EAAA,EAQAyiD,EAAAC,4BACA1iD,GAAA63C,EAAA73C,GAAA,GAGA,QAAAyiD,EAAA52D,KACAqU,EAAA23C,EAAAn9C,SAAAsF,GAAAyiD,GAEAriD,EAAAy3C,EAAAn9C,SAAAsF,GAAAyiD,IAIAviD,EAAA,SAAA23C,EAAA8K,GACAA,EAAAC,eAAA/K,EAAA,GACA8K,EAAAE,oBAAAhL,EAAA,GAGAx0D,EAAA4c,QAAA,GAAA43C,EAAA,QAAAA,EAAA,IACA8K,EAAA1iD,OAAA5c,EAAA4c,QAWAG,EAAA,SAAAy3C,EAAAiL,GACA,IAAAviD,EAAAC,EAAAC,EAAAT,EAOA,KAAA63C,EAAA,IAKAx0D,EAAAgd,iBACA4V,MAAA,KACAC,MAAA,KACA6sC,qBAIAxiD,GAAA,GAAAs3C,EAAA,OAAAA,EAAA,GACAr3C,EAAA,EAAAD,EAAA,EAIAE,GAAA,GAAAo3C,EAAA,QAAAA,EAAA,IAGA73C,EAAA,GAAAS,EACA,MAAAT,EAAAQ,EAAA,CACA,IAAAwiD,EAAAnL,EAAA73C,GACAH,GAAA,GAAAg4C,EAAA73C,EAAA,OAAA63C,EAAA73C,EAAA,GAKAgjD,IAAAtjD,EAAAiB,kBACA,OAAAtd,EAAAgd,gBAAA4V,MACA5yB,EAAAgd,gBAAA4V,MAAApW,EACOmjD,IAAAtjD,EAAAkB,kBACP,OAAAvd,EAAAgd,gBAAA6V,MACA7yB,EAAAgd,gBAAA6V,MAAArW,EACOmjD,IAAAtjD,EAAAmB,uBAEPxd,EAAAgd,gBAAA,kBAAAR,GAAAmjD,GAKAhjD,GAAA,OAAA63C,EAAA73C,EAAA,OAAA63C,EAAA73C,EAAA,IAIA8iD,EAAAziD,gBAAAhd,EAAAgd,kBAMA/c,KAAAqJ,KAAA,SAAAiT,GACA,IACAxU,KACA4U,EAAA,EAmBA,GAjBA5U,EAAAs3D,6BAAA,GAAA9iD,EAAA,IAGAxU,EAAAyU,IAAA,GAAAD,EAAA,GACAxU,EAAAyU,MAAA,EACAzU,EAAAyU,KAAAD,EAAA,IAOA,GAAAA,EAAA,YACAI,GAAAJ,EAAAI,GAAA,GAIA,IAAA5U,EAAAyU,IACAzU,EAAAS,KAAA,MACA02D,EAAA3iD,EAAAlF,SAAAsF,GAAA5U,GACA9H,KAAA2W,QAAA,OAAA7O,QACK,GAAAA,EAAAyU,MAAAvc,KAAA2c,OAAA,CACL7U,EAAAS,KAAA,MACA02D,EAAA3iD,EAAAlF,SAAAsF,GAAA5U,GACA9H,KAAA2W,QAAA,OAAA7O,GAGA,MAAA9H,KAAAk/D,qBAAA38D,OACAvC,KAAA2/D,YAAAxnD,MAAAnY,UAAAk/D,qBAAAvkB,mBAEK1tC,IAAAjN,KAAA+c,gBAGL/c,KAAAk/D,qBAAA71D,MAAAiT,EAAAI,EAAA5U,IAEA9H,KAAA2/D,YAAArjD,EAAAI,EAAA5U,IAIA9H,KAAA2/D,YAAA,SAAArjD,EAAAI,EAAA5U,GAEAA,EAAAyU,MAAAvc,KAAA+c,gBAAA4V,MACA7qB,EAAA43D,WAAAtjD,EAAAiB,iBACKvV,EAAAyU,MAAAvc,KAAA+c,gBAAA6V,MACL9qB,EAAA43D,WAAAtjD,EAAAkB,iBAIAxV,EAAA43D,WAAA1/D,KAAA+c,gBAAA,kBAAAjV,EAAAyU,KAGAzU,EAAAS,KAAA,MACAT,EAAA+H,KAAAyM,EAAAlF,SAAAsF,GAEA1c,KAAA2W,QAAA,OAAA7O,KAIA0rD,EAAAxxD,UAAA,IAAAgU,EACAw9C,EAAAoM,cACAC,KAAA,GACAC,KAAA,IAWArM,EAAA,WACA,IACA1zD,EAAAC,KAEA2yB,GACA9iB,QACAxK,KAAA,GAEAutB,GACA/iB,QACAxK,KAAA,GAEA06D,GACAlwD,QACAxK,KAAA,GAEA26D,EAAA,SAAAzL,EAAA72C,GACA,IAAAD,EAGAC,EAAAuiD,aAAA,GAAA1L,EAAA,MAAAA,EAAA,IAGA72C,EAAAwiD,uBAAA,OAAA3L,EAAA,IAIA92C,EAAA82C,EAAA,GAUA,IAAA92C,IAIAC,EAAAhH,KAAA,GAAA69C,EAAA,SACA,IAAAA,EAAA,UACA,IAAAA,EAAA,UACA,IAAAA,EAAA,SACA,IAAAA,EAAA,SACA72C,EAAAhH,KAAA,EACAgH,EAAAhH,MAAA,EAAA69C,EAAA,SACA72C,EAAAjH,IAAAiH,EAAAhH,IACA,GAAA+G,IACAC,EAAAjH,KAAA,GAAA89C,EAAA,UACA,IAAAA,EAAA,UACA,IAAAA,EAAA,UACA,IAAAA,EAAA,SACA,IAAAA,EAAA,SACA72C,EAAAjH,KAAA,EACAiH,EAAAjH,MAAA,EAAA89C,EAAA,WAMA72C,EAAA7N,KAAA0kD,EAAAn9C,SAAA,EAAAm9C,EAAA,KAEA4L,EAAA,SAAAxtD,EAAApK,EAAA63D,GACA,IAQApoD,EAPAqoD,EAAA,IAAAplD,WAAAtI,EAAAtN,MACAglB,GACA9hB,QAEAnI,EAAA,EACAsc,EAAA,EACA4jD,GAAA,EAKA,GAAA3tD,EAAA9C,KAAAtN,UAAAoQ,EAAAtN,KAAA,IAMA,IAHAglB,EAAA2T,QAAArrB,EAAA9C,KAAA,GAAA0M,IAGAnc,EAAA,EAAiBA,EAAAuS,EAAA9C,KAAAtN,OAAwBnC,IACzC4X,EAAArF,EAAA9C,KAAAzP,GAEAigE,EAAA37D,IAAAsT,EAAAnI,KAAA6M,GACAA,GAAA1E,EAAAnI,KAAAsH,WAIA6oD,EAAAK,EAAAh2C,GAIAi2C,EAAA,UAAA/3D,GAAA8hB,EAAA41C,cAAAttD,EAAAtN,MAGA+6D,GAAAE,KACA3tD,EAAAtN,KAAA,EACAsN,EAAA9C,KAAAtN,OAAA,GAKA+9D,GACAvgE,EAAA4W,QAAA,OAAA0T,KAIAopC,EAAAzxD,UAAAuU,KAAAhW,KAAAP,MAEAA,KAAAqJ,KAAA,SAAAwG,KAEAwvD,IAAA,aAIA3hD,IAAA,WACA,IAAA/K,EAAA+sD,EAEA,OAAA7vD,EAAA6vD,YACA,KAAAtjD,EAAAiB,iBACA,KAAAwhD,EAAAxhD,iBACA1K,EAAAggB,EACA+sC,EAAA,QACA,MACA,KAAAtjD,EAAAkB,iBACA3K,EAAAigB,EACA8sC,EAAA,QACA,MACA,KAAAtjD,EAAAmB,qBACA5K,EAAAotD,EACAL,EAAA,iBACA,MACA,QAEA,OAKA7vD,EAAAuvD,2BACAe,EAAAxtD,EAAA+sD,GAAA,GAKA/sD,EAAA9C,KAAAxG,KAAAwG,GACA8C,EAAAtN,MAAAwK,OAAAsH,YAEAqoD,IAAA,WACA,IACAn1C,GACA9hB,KAAA,WACAw1B,WAEAhhB,EAAAlN,EAAAkN,gBAGA,OAAAA,EAAA4V,OACAtI,EAAA0T,OAAA10B,MACAmkD,mBACA+S,oBAAA,GAEA97D,IAAAsY,EAAA4V,MACA6tC,MAAA,MACAj4D,KAAA,UAGA,OAAAwU,EAAA6V,OACAvI,EAAA0T,OAAA10B,MACAmkD,mBACA+S,oBAAA,GAEA97D,IAAAsY,EAAA6V,MACA4tC,MAAA,OACAj4D,KAAA,UAIAxI,EAAA4W,QAAA,OAAA0T,MAEKxa,EAAAtH,SAYLvI,KAAAiT,MAAA,WAGAktD,EAAAxtC,EAAA,SACAwtC,EAAAvtC,EAAA,SACAutC,EAAAJ,EAAA,kBACA//D,KAAA2W,QAAA,UAGA88C,EAAAzxD,UAAA,IAAAgU,EAEA,IAAAy7C,GACAgP,QAAA,EACA3B,qBACAvL,wBACAC,uBACAC,mBACAr9C,0BACAs9C,8BACAqB,aAAArB,EAAAqB,aACAzB,eAAAtoC,EAAA,sBAGA,QAAAziB,KAAA6T,EACAA,EAAAna,eAAAsG,KACAkpD,EAAAlpD,GAAA6T,EAAA7T,IAIA3I,EAAAD,QAAA8xD,IAEGhM,qBAAA,GAAAib,mBAAA,GAAAC,oBAAA,GAAAC,iBAAA,GAAAC,oBAAA,GAAAC,8BAAA,KAAiJC,IAAA,SAAA/1C,EAAAprB,EAAAD,GAMpJ,aACA,IA6EA2zD,EA5EAt9C,EAAAgV,EAAA,mBACA5O,EAAA4O,EAAA,kBAGA66B,EAAA,SAAA1pC,EAAA3W,EAAAG,GACA,IAAAvF,EAAA0H,EAAA,GACA,IAAA1H,EAAAoF,EAAmBpF,EAAAuF,EAASvF,IAC5B0H,GAAA,UAAAqU,EAAA/b,GAAAkV,SAAA,KAAA+B,OAAA,GAEA,OAAAvP,GAIAk5D,EAAA,SAAA7kD,EAAA3W,EAAAG,GACA,OAAAmK,mBAAA+1C,EAAA1pC,EAAA3W,EAAAG,KAIAmgD,EAAA,SAAA3pC,EAAA3W,EAAAG,GACA,OAAAsC,SAAA49C,EAAA1pC,EAAA3W,EAAAG,KAEAigD,EAAA,SAAA/1C,GACA,OAAAA,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,IAEAoxD,GACAC,KAAA,SAAA9/C,GACA,IAAAhhB,EACA,OAAAghB,EAAAvR,KAAA,IAKA,IAAAzP,EAAA,EAAiBA,EAAAghB,EAAAvR,KAAAtN,OAAqBnC,IACtC,OAAAghB,EAAAvR,KAAAzP,GAAA,CAEAghB,EAAA+/C,YAAAH,EAAA5/C,EAAAvR,KAAA,EAAAzP,GAEAghB,EAAA/f,MAAA2/D,EAAA5/C,EAAAvR,KAAAzP,EAAA,EAAAghB,EAAAvR,KAAAtN,QAAAY,QAAA,WACA,MAGAie,EAAAvR,KAAAuR,EAAA/f,QAEA+/D,KAAA,SAAAhgD,GACA,IAAAhhB,EACA,OAAAghB,EAAAvR,KAAA,GAKA,IAAAzP,EAAA,EAAiBA,EAAAghB,EAAAvR,KAAAtN,OAAqBnC,IACtC,OAAAghB,EAAAvR,KAAAzP,GAAA,CAEAghB,EAAA+/C,YAAAH,EAAA5/C,EAAAvR,KAAA,EAAAzP,GACAghB,EAAA8R,IAAA8tC,EAAA5/C,EAAAvR,KAAAzP,EAAA,EAAAghB,EAAAvR,KAAAtN,QACA,QAIA8+D,KAAA,SAAAjgD,GACA,IAAAhhB,EAEA,IAAAA,EAAA,EAAiBA,EAAAghB,EAAAvR,KAAAtN,OAAqBnC,IACtC,OAAAghB,EAAAvR,KAAAzP,GAAA,CAEAghB,EAAAglC,MAAAN,EAAA1kC,EAAAvR,KAAA,EAAAzP,GACA,MAGAghB,EAAAkgD,YAAAlgD,EAAAvR,KAAAuH,SAAAhX,EAAA,GACAghB,EAAAvR,KAAAuR,EAAAkgD,cAKAhO,EAAA,SAAAhuC,GACA,IAeAllB,EAdAoE,GACA6+B,SAAA/d,MAAA+d,OAKA9pB,WAAA+L,KAAA/L,YAGAgoD,EAAA,EAEAnwD,KAEAowD,EAAA,EAQA,GALAlO,EAAAtxD,UAAAuU,KAAAhW,KAAAP,MAIAA,KAAA4tD,aAAAxxC,EAAAmB,qBAAAjI,SAAA,IACA9Q,EAAA+U,WACA,IAAAnZ,EAAA,EAAeA,EAAAoE,EAAA+U,WAAAhX,OAAgCnC,IAC/CJ,KAAA4tD,eAAA,KAAAppD,EAAA+U,WAAAnZ,GAAAkV,SAAA,KAAA+B,OAAA,GAIArX,KAAAqJ,KAAA,SAAAub,GACA,IAAAxD,EAAA6kC,EAAAT,EAAAU,EAAA9lD,EAAA+lD,EACA,sBAAAvhC,EAAArc,KAaA,GANAqc,EAAAs7C,yBACAsB,EAAA,EACApwD,EAAA7O,OAAA,GAIA,IAAA6O,EAAA7O,SACAqiB,EAAA/U,KAAAtN,OAAA,IACAqiB,EAAA/U,KAAA,SAAA1F,WAAA,IACAya,EAAA/U,KAAA,SAAA1F,WAAA,IACAya,EAAA/U,KAAA,SAAA1F,WAAA,IACA3F,EAAA6+B,OAEAo+B,QAAAjvC,IAAA,8CAwBA,GAjBAphB,EAAA/H,KAAAub,GACA48C,GAAA58C,EAAA/U,KAAAsH,WAGA,IAAA/F,EAAA7O,SAKAg/D,EAAA3b,EAAAhhC,EAAA/U,KAAAuH,SAAA,OAIAmqD,GAAA,MAIAC,EAAAD,GAAA,CAWA,IANAngD,GACAvR,KAAA,IAAAoL,WAAAsmD,GACAvU,UACAt2C,IAAAtF,EAAA,GAAAsF,IACAD,IAAArF,EAAA,GAAAqF,KAEArW,EAAA,EAAeA,EAAAmhE,GACfngD,EAAAvR,KAAAnL,IAAA0M,EAAA,GAAAvB,KAAAuH,SAAA,EAAAmqD,EAAAnhE,MACAA,GAAAgR,EAAA,GAAAvB,KAAAsH,WACAqqD,GAAApwD,EAAA,GAAAvB,KAAAsH,WACA/F,EAAAupC,QAIAsL,EAAA,GACA,GAAA7kC,EAAAvR,KAAA,KAEAo2C,GAAA,EACAA,GAAAL,EAAAxkC,EAAAvR,KAAAuH,SAAA,QAGAmqD,GAAA3b,EAAAxkC,EAAAvR,KAAAuH,SAAA,SAKA,GAGA,GADAouC,EAAAI,EAAAxkC,EAAAvR,KAAAuH,SAAA6uC,EAAA,EAAAA,EAAA,IACAT,EAAA,EAEA,OAAAic,QAAAjvC,IAAA,+DAaA,GAXA2zB,EAAA5uC,OAAAC,aAAA4J,EAAAvR,KAAAo2C,GACA7kC,EAAAvR,KAAAo2C,EAAA,GACA7kC,EAAAvR,KAAAo2C,EAAA,GACA7kC,EAAAvR,KAAAo2C,EAAA,IAGAC,GACAzhD,GAAA0hD,EACAt2C,KAAAuR,EAAAvR,KAAAuH,SAAA6uC,EAAA,GAAAA,EAAAT,EAAA,KAEAU,EAAAvkD,IAAAukD,EAAAzhD,GACAw8D,EAAA/a,EAAAzhD,MACAw8D,EAAA/a,EAAAzhD,IAAAyhD,GAIA,iDAAAA,EAAAE,OAAA,CACA,IACA1lD,EAAAwlD,EAAAr2C,KACAxK,GAAA,EAAA3E,EAAA,QACAA,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,OAEA2E,GAAA,EACAA,GAAA,EAAA3E,EAAA,GACAwlD,EAAAxB,UAAAr/C,OAKA4H,IAAAmU,EAAA1K,UAAAzJ,IAAAmU,EAAA3K,MACA2K,EAAA1K,IAAAwvC,EAAAxB,UACAtjC,EAAA3K,IAAAyvC,EAAAxB,WAEA1kD,KAAA2W,QAAA,YAAAuvC,GAGA9kC,EAAA4rC,OAAA3jD,KAAA68C,GAEAD,GAAA,GACAA,GAAAT,QACKS,EAAAsb,GACLvhE,KAAA2W,QAAA,OAAAyK,MAGAkyC,EAAAtxD,UAAA,IAAAgU,EAEApW,EAAAD,QAAA2zD,IAEGqL,kBAAA,GAAAiC,iBAAA,KAAyCc,IAAA,SAAA12C,EAAAprB,EAAAD,GAS5C,aAEA,IAAAyc,EAAA4O,EAAA,qBAEA3O,EAAA,SAAAC,GACA,IAAAC,EAAA,GAAAD,EAAA,GAGA,OAFAC,IAAA,EACAA,GAAAD,EAAA,GACAC,GAGAC,EAAA,SAAAF,GACA,YAAAA,EAAA,KAGAG,EAAA,SAAAH,GACA,IAAAI,EAAA,EASA,OAHA,GAAAJ,EAAA,YACAI,GAAAJ,EAAA,MAEAI,GAGA5F,EAAA,SAAAwF,EAAAK,GACA,IAAAJ,EAAAF,EAAAC,GACA,WAAAC,EACA,MACGA,IAAAI,EACH,MACGA,EACH,MAEA,MAGAC,EAAA,SAAAN,GACA,IAAAO,EAAAL,EAAAF,GACAI,EAAA,EAAAD,EAAAH,GAMA,OAJAO,IACAH,GAAAJ,EAAAI,GAAA,IAGA,GAAAJ,EAAAI,EAAA,QAAAJ,EAAAI,EAAA,KAGAI,EAAA,SAAAR,GACA,IAAAS,KACAF,EAAAL,EAAAF,GACAU,EAAA,EAAAP,EAAAH,GAWA,GATAO,IACAG,GAAAV,EAAAU,GAAA,GAQA,EAAAV,EAAAU,EAAA,IAIA,IAAAC,EAAAC,EAAAC,EAEAF,GAAA,GAAAX,EAAAU,EAAA,OAAAV,EAAAU,EAAA,GACAE,EAAA,EAAAD,EAAA,EAIAE,GAAA,GAAAb,EAAAU,EAAA,QAAAV,EAAAU,EAAA,IAGA,IAAAN,EAAA,GAAAS,EACA,MAAAT,EAAAQ,EAAA,CACA,IAAA9c,EAAA4c,EAAAN,EAEAK,GAAA,GAAAT,EAAAlc,EAAA,OAAAkc,EAAAlc,EAAA,IAAAkc,EAAAlc,GAIAsc,GAAA,OAAAJ,EAAAlc,EAAA,OAAAkc,EAAAlc,EAAA,IAEA,OAAA2c,IAGAK,EAAA,SAAAd,EAAAS,GACA,IAAAR,EAAAF,EAAAC,GACA/T,EAAAwU,EAAAR,GACA,OAAAhU,GACA,KAAA6T,EAAAiB,iBACA,cACA,KAAAjB,EAAAkB,iBACA,cACA,KAAAlB,EAAAmB,qBACA,uBACA,QACA,cAIAC,EAAA,SAAAlB,GACA,IAAAO,EAAAL,EAAAF,GACA,IAAAO,EACA,YAGA,IAAAH,EAAA,EAAAD,EAAAH,GAEA,GAAAI,GAAAJ,EAAAnF,WAWA,YAGA,IACAsG,EADAC,EAAA,KAuCA,OAjCAD,EAAAnB,EAAAI,EAAA,GAUA,IAAAe,IACAC,KAIAA,EAAAhH,KAAA,GAAA4F,EAAAI,EAAA,SACA,IAAAJ,EAAAI,EAAA,UACA,IAAAJ,EAAAI,EAAA,UACA,IAAAJ,EAAAI,EAAA,SACA,IAAAJ,EAAAI,EAAA,SACAgB,EAAAhH,KAAA,EACAgH,EAAAhH,MAAA,EAAA4F,EAAAI,EAAA,SACAgB,EAAAjH,IAAAiH,EAAAhH,IACA,GAAA+G,IACAC,EAAAjH,KAAA,GAAA6F,EAAAI,EAAA,UACA,IAAAJ,EAAAI,EAAA,UACA,IAAAJ,EAAAI,EAAA,UACA,IAAAJ,EAAAI,EAAA,SACA,IAAAJ,EAAAI,EAAA,SACAgB,EAAAjH,KAAA,EACAiH,EAAAjH,MAAA,EAAA6F,EAAAI,EAAA,WAGAgB,GAGAC,EAAA,SAAApV,GACA,OAAAA,GACA,OACA,kDACA,OACA,iBACA,OACA,+BACA,OACA,+BACA,OACA,mCACA,QACA,cAIAqV,EAAA,SAAAtB,GASA,IARA,IAKAuB,EALAnB,EAAA,EAAAD,EAAAH,GACAwB,EAAAxB,EAAAlF,SAAAsF,GACAqB,EAAA,EACAC,EAAA,EACAC,GAAA,EAIQD,EAAAF,EAAA3G,WAAA,EAA6C6G,IACrD,OAAAF,EAAAE,EAAA,IAEAD,EAAAC,EAAA,EACA,MAIA,MAAAD,EAAAD,EAAA3G,WAGA,OAAA2G,EAAAC,IACA,OAEA,OAAAD,EAAAC,EAAA,IACAA,GAAA,EACA,MACO,OAAAD,EAAAC,EAAA,IACPA,IACA,MAGAC,EAAA,IAAAD,EAAA,IACAF,EAAAF,EAAA,GAAAG,EAAAE,EAAA,IACA,8CAAAH,IACAI,GAAA,IAKA,GACAF,UACO,IAAAD,EAAAC,MAAAD,EAAAvb,QACPyb,EAAAD,EAAA,EACAA,GAAA,EACA,MACA,OAEA,OAAAD,EAAAC,EAAA,IACA,IAAAD,EAAAC,EAAA,IACAA,GAAA,EACA,MAGAF,EAAAF,EAAA,GAAAG,EAAAE,EAAA,IACA,8CAAAH,IACAI,GAAA,GAEAD,EAAAD,EAAA,EACAA,GAAA,EACA,MACA,QAGAA,GAAA,EACA,MAcA,OAXAD,IAAA1G,SAAA4G,GACAD,GAAAC,EACAA,EAAA,EAEAF,KAAA3G,WAAA,IACA0G,EAAAF,EAAA,GAAAG,EAAAE,EAAA,IACA,8CAAAH,IACAI,GAAA,IAIAA,GAIAre,EAAAD,SACAmX,YACA8F,WACAE,WACAN,iCACAY,eACAI,eACAI,iCAGGijD,oBAAA,KAAuBc,IAAA,SAAA32C,EAAAprB,EAAAD,GAC1B,aAEAC,EAAAD,SACA0d,iBAAA,GACAC,iBAAA,GACAC,qBAAA,SAGIqkD,IAAA,SAAA52C,EAAAprB,EAAAD,GAYJ,aAEA,IAAAqW,EAAAgV,EAAA,mBAEA/U,EAAA,WAEAC,EAAA,WAEAC,EAAA,SAAA9U,EAAAmO,GACA,IAAA3D,EAAA,EAEAxK,EAAAmO,IAQA3D,GAAA,GAKA,MAAAiB,KAAAuB,IAAAmB,EAAAnO,GAAA6U,EACA7U,GAAAwK,EAAAoK,EAGA,OAAA5U,GAGA+U,EAAA,SAAA7N,GACA,IAAA8N,EAAAC,EAEAF,EAAApU,UAAAuU,KAAAhW,KAAAP,MAEAA,KAAAwW,MAAAjO,EAEAvI,KAAAqJ,KAAA,SAAAwG,GACAA,EAAAtH,OAAAvI,KAAAwW,aAIAvJ,IAAAqJ,IACAA,EAAAzG,EAAA4G,KAGA5G,EAAA4G,IAAAN,EAAAtG,EAAA4G,IAAAH,GACAzG,EAAA6G,IAAAP,EAAAtG,EAAA6G,IAAAJ,GAEAD,EAAAxG,EAAA4G,IAEAzW,KAAA2W,QAAA,OAAA9G,KAGA7P,KAAAiT,MAAA,WACAqD,EAAAD,EACArW,KAAA2W,QAAA,SAGA3W,KAAA4W,cAAA,WACAN,OAAA,EACAD,OAAA,IAKAD,EAAApU,UAAA,IAAAgU,EAEApW,EAAAD,SACAyW,0BACAD,oBAGGwoD,kBAAA,KAAqBkD,IAAA,SAAA72C,EAAAprB,EAAAD,GACxBC,EAAAD,SACAmiE,UAAA92C,EAAA,mBACA4lC,WAAA5lC,EAAA,gBAAA4lC,WACAU,mBAAAtmC,EAAA,gBAAAsmC,mBACAD,mBAAArmC,EAAA,gBAAAqmC,sBAGG0Q,kBAAA,GAAAhR,eAAA,KAAuCiR,IAAA,SAAAh3C,EAAAprB,EAAAD,GAU1C,aAEA,IAEAyM,EAAA61D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACA/qD,EAAAC,EAAA+qD,EAAA5qD,EAAA6qD,EAAAC,EAAAC,EAAAC,EAAA1qD,EAAA2qD,EACAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EALAC,EAAAl3D,KAAA4L,IAAA,SAQA,WACA,IAAAtY,EAyCA,GAxCA8iE,GACAe,QACAC,QACAC,QACAlC,QACAmC,QACAlC,QACAC,QACAS,QACAR,QACArqD,QACA4qD,QACAN,QACAC,QACAC,QACAC,QACA6B,QACA5B,QACAC,QACAG,QACAyB,QACAxB,QACAyB,QACAC,QACAzB,QACA0B,QACAC,QACAC,QACAlsD,QACAH,QACAD,QACAV,QACAsrD,QACAD,QACAprD,QACAgtD,SAKA,qBAAA3pD,WAAA,CAIA,IAAA7a,KAAA8iE,EACAA,EAAAjhE,eAAA7B,KACA8iE,EAAA9iE,IACAA,EAAA+J,WAAA,GACA/J,EAAA+J,WAAA,GACA/J,EAAA+J,WAAA,GACA/J,EAAA+J,WAAA,KAKAg5D,EAAA,IAAAloD,YACA,IAAA9Q,WAAA,GACA,IAAAA,WAAA,GACA,IAAAA,WAAA,GACA,IAAAA,WAAA,KAEAk5D,EAAA,IAAApoD,YACA,IAAA9Q,WAAA,GACA,IAAAA,WAAA,GACA,IAAAA,WAAA,GACA,IAAAA,WAAA,KAEAi5D,EAAA,IAAAnoD,YAAA,UACAqoD,EAAA,IAAAroD,YACA,EACA,MACA,QACA,gBACA,QACA,QACA,QACA,eACA,cACA,oBAEAsoD,EAAA,IAAAtoD,YACA,EACA,MACA,QACA,gBACA,QACA,QACA,QACA,eACA,cACA,oBAEAuoD,GACA7wC,MAAA2wC,EACA1wC,MAAA2wC,GAEAI,EAAA,IAAA1oD,YACA,EACA,MACA,QACA,SACA,eACA,EACA,QAEAyoD,EAAA,IAAAzoD,YACA,EACA,MACA,IACA,MAEA2oD,EAAA,IAAA3oD,YACA,EACA,MACA,UAEA4oD,EAAAD,EACAE,EAAA,IAAA7oD,YACA,EACA,MACA,QACA,UAEA8oD,EAAAH,EACAH,EAAA,IAAAxoD,YACA,EACA,MACA,IACA,IACA,IACA,QApIA,GAwIA7O,EAAA,SAAA7D,GACA,IAGAnI,EACA0H,EACAg5B,EAJAyzB,KACAlvD,EAAA,EAKA,IAAAjF,EAAA,EAAaA,EAAAkC,UAAAC,OAAsBnC,IACnCm0D,EAAAlrD,KAAA/G,UAAAlC,IAGAA,EAAAm0D,EAAAhyD,OAGA,MAAAnC,IACAiF,GAAAkvD,EAAAn0D,GAAA+W,WAQA,IANArP,EAAA,IAAAmT,WAAA5V,EAAA,GACAy7B,EAAA,IAAAC,SAAAj5B,EAAAsJ,OAAAtJ,EAAA+S,WAAA/S,EAAAqP,YACA2pB,EAAAqtB,UAAA,EAAArmD,EAAAqP,YACArP,EAAApD,IAAA6D,EAAA,GAGAnI,EAAA,EAAAiF,EAAA,EAAuBjF,EAAAm0D,EAAAhyD,OAAoBnC,IAC3C0H,EAAApD,IAAA6vD,EAAAn0D,GAAAiF,GACAA,GAAAkvD,EAAAn0D,GAAA+W,WAEA,OAAArP,GAGAm6D,EAAA,WACA,OAAA71D,EAAA82D,EAAAjB,KAAA71D,EAAA82D,EAAAkB,KAAAT,KAGAzB,EAAA,SAAA73D,GACA,OAAA+B,EAAA82D,EAAAhB,KAAA,IAAAjnD,YACA,EACA,MAGA,EACA,GACA,IACA,EAGA,EACA,GACA,GACA,GACA,MACA,YACA,YAGA,EACA,EAGA5Q,EAAAy8C,iBAAA,EAAAz8C,EAAA48C,yBAAA,EACA58C,EAAA48C,wBAAA,EAAA58C,EAAA08C,cAAA,EACA,UAIAob,EAAA,WACA,OAAA/1D,EAAA82D,EAAAf,KAAAgB,EAAAC,EAAAD,EAAAE,IAGAT,EAAA,SAAAr6D,GACA,OAAA6D,EAAA82D,EAAAN,KAAAY,EAAAj7D,KAEA65D,EAAA,SAAAvyD,GACA,OAAAzD,EAAA82D,EAAAd,KAAAvyD,IAEAkI,EAAA,SAAA1N,GACA,IAAAvC,EAAA,IAAAmT,YACA,EACA,MACA,QACA,QACA,WAEA5Q,EAAAwX,WAAA,OACAxX,EAAAwX,WAAA,OACAxX,EAAAwX,WAAA,MACA,IAAAxX,EAAAwX,SACA,OACA,MAaA,OAPAxX,EAAA28C,aACAl/C,EAAA,IAAAuC,EAAA28C,aAAA,OACAl/C,EAAA,IAAAuC,EAAA28C,aAAA,OACAl/C,EAAA,IAAAuC,EAAA28C,aAAA,MACAl/C,EAAA,QAAAuC,EAAA,YAGA+B,EAAA82D,EAAAnrD,KAAAjQ,IAEA66D,EAAA,SAAAt4D,GACA,OAAA+B,EAAA82D,EAAAP,KAAA5qD,EAAA1N,GAAAu4D,EAAAv4D,EAAA9B,MAAA+5D,EAAAj4D,KAEAg4D,EAAA,SAAAwC,GACA,OAAAz4D,EAAA82D,EAAAb,KAAA,IAAApnD,YACA,EACA,OACA,WAAA4pD,IAAA,IACA,SAAAA,IAAA,IACA,MAAAA,IAAA,EACA,IAAAA,MAGAvC,EAAA,SAAAj4D,GACA,OAAA+B,EAAA82D,EAAAZ,KACA,UAAAj4D,EAAA9B,KAAA6D,EAAA82D,EAAA0B,KAAAnB,GAAAr3D,EAAA82D,EAAAoB,KAAAZ,GACAzB,IACAa,EAAAz4D,KAEAk4D,EAAA,SAAAsC,EAAA9mC,GACA,IACA+mC,KACA1kE,EAAA29B,EAAAx7B,OAEA,MAAAnC,IACA0kE,EAAA1kE,GAAAiY,EAAA0lB,EAAA39B,IAEA,OAAAgM,EAAA+L,MAAA,MACA+qD,EAAAX,KACAF,EAAAwC,IACAvtD,OAAAwtD,KAOAtC,EAAA,SAAAzkC,GACA,IACA39B,EAAA29B,EAAAx7B,OACA2M,KAEA,MAAA9O,IACA8O,EAAA9O,GAAAuX,EAAAomB,EAAA39B,IAGA,OAAAgM,EAAA+L,MAAA,MAAA+qD,EAAAV,KAAAE,EAAA,aAAAprD,OAAApI,GAAAoI,OAAAmrD,EAAA1kC,MAEA0kC,EAAA,SAAA1kC,GACA,IACA39B,EAAA29B,EAAAx7B,OACA2M,KAEA,MAAA9O,IACA8O,EAAA9O,GAAA4iE,EAAAjlC,EAAA39B,IAEA,OAAAgM,EAAA+L,MAAA,MAAA+qD,EAAAT,MAAAnrD,OAAApI,KAEAwzD,EAAA,SAAA7gD,GACA,IACA1F,EAAA,IAAAlB,YACA,EACA,MACA,QACA,QACA,YACA,WAAA4G,IAAA,IACA,SAAAA,IAAA,IACA,MAAAA,IAAA,EACA,IAAAA,EACA,QACA,IACA,IACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,kBAEA,OAAAzV,EAAA82D,EAAAR,KAAAvmD,IAGA0mD,EAAA,SAAAx4D,GACA,IAGA46C,EACA7kD,EAHA2kE,EAAA16D,EAAA06D,YACA5oD,EAAA,IAAAlB,WAAA,EAAA8pD,EAAAxiE,QAOA,IAAAnC,EAAA,EAAaA,EAAA2kE,EAAAxiE,OAAoBnC,IACjC6kD,EAAA8f,EAAA3kE,GAAA6kD,MAEA9oC,EAAA/b,EAAA,GAAA6kD,EAAA+f,WAAA,EACA/f,EAAAggB,cAAA,EACAhgB,EAAA,cAGA,OAAA74C,EAAA82D,EAAAL,KACA1mD,IAGA2mD,EAAA,SAAAz4D,GACA,OAAA+B,EAAA82D,EAAAJ,KACAC,EAAA14D,GACA+B,EAAA82D,EAAAwB,KAAAX,GACA33D,EAAA82D,EAAAsB,KAAAX,GACAz3D,EAAA82D,EAAAuB,KAAAX,GACA13D,EAAA82D,EAAAqB,KAAAX,KAGA,WACA,IAAAsB,EAAAC,EAEApC,EAAA,SAAA14D,GAEA,OAAA+B,EAAA82D,EAAAH,KAAA,IAAA9nD,YACA,EACA,MACA,UACA,UAAA5Q,EAAA9B,KAAA28D,EAAA76D,GAAA86D,EAAA96D,KAGA66D,EAAA,SAAA76D,GACA,IAKAjK,EAJAsxD,EAAArnD,EAAAqnD,QACAC,EAAAtnD,EAAAsnD,QACAyT,KACAC,KAIA,IAAAjlE,EAAA,EAAeA,EAAAsxD,EAAAnvD,OAAgBnC,IAC/BglE,EAAA/7D,MAAA,MAAAqoD,EAAAtxD,GAAA+W,cAAA,GACAiuD,EAAA/7D,KAAA,IAAAqoD,EAAAtxD,GAAA+W,YACAiuD,IAAA9tD,OAAAyD,MAAA/Y,UAAAqV,MAAA9W,KAAAmxD,EAAAtxD,KAIA,IAAAA,EAAA,EAAeA,EAAAuxD,EAAApvD,OAAgBnC,IAC/BilE,EAAAh8D,MAAA,MAAAsoD,EAAAvxD,GAAA+W,cAAA,GACAkuD,EAAAh8D,KAAA,IAAAsoD,EAAAvxD,GAAA+W,YACAkuD,IAAA/tD,OAAAyD,MAAA/Y,UAAAqV,MAAA9W,KAAAoxD,EAAAvxD,KAGA,OAAAgM,EAAA82D,EAAAe,KAAA,IAAAhpD,YACA,MACA,MACA,IACA,IACA,IACA,QACA,QACA,SACA,MAAA5Q,EAAA4B,QAAA,EACA,IAAA5B,EAAA4B,OACA,MAAA5B,EAAA6B,SAAA,EACA,IAAA7B,EAAA6B,OACA,SACA,SACA,QACA,IACA,GACA,gBACA,eACA,eACA,cACA,cACA,QACA,QACA,MACA,KACA,QACAE,EAAA82D,EAAAgB,KAAA,IAAAjpD,YACA,EACA5Q,EAAAk/C,WACAl/C,EAAAo/C,qBACAp/C,EAAAm/C,SACA,KACAlyC,QACAo6C,EAAAnvD,SACA+U,OAAA8tD,GAAA9tD,QACAq6C,EAAApvD,SACA+U,OAAA+tD,KACAj5D,EAAA82D,EAAAiB,KAAA,IAAAlpD,YACA,aACA,aACA,kBAKAkqD,EAAA,SAAA96D,GACA,OAAA+B,EAAA82D,EAAAmB,KAAA,IAAAppD,YAGA,MACA,MACA,IAGA,QACA,SACA,MAAA5Q,EAAA08C,eAAA,EACA,IAAA18C,EAAA08C,cAEA,MAAA18C,EAAA68C,aAAA,EACA,IAAA78C,EAAA68C,WACA,IACA,KAEA,MAAA78C,EAAA28C,aAAA,EACA,IAAA38C,EAAA28C,WACA,MAGAkb,EAAA73D,KAzGA,GA6GAuN,EAAA,SAAAvN,GACA,IAAAvC,EAAA,IAAAmT,YACA,EACA,MACA,QACA,SACA,WAAA5Q,EAAA5F,KAAA,IACA,SAAA4F,EAAA5F,KAAA,IACA,MAAA4F,EAAA5F,KAAA,EACA,IAAA4F,EAAA5F,GACA,SACA,WAAA4F,EAAAwX,WAAA,IACA,SAAAxX,EAAAwX,WAAA,IACA,MAAAxX,EAAAwX,WAAA,EACA,IAAAxX,EAAAwX,SACA,QACA,QACA,IACA,IACA,IACA,IACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,MAAAxX,EAAA4B,QAAA,EACA,IAAA5B,EAAA4B,MACA,KACA,MAAA5B,EAAA6B,SAAA,EACA,IAAA7B,EAAA6B,OACA,MAGA,OAAAE,EAAA82D,EAAAtrD,KAAA9P,IAOAuQ,EAAA,SAAAhO,GACA,IAAAi7D,EAAAC,EAAAC,EACAC,EAAAC,EACAC,EAAAC,EA2CA,OAzCAN,EAAAl5D,EAAA82D,EAAA5qD,KAAA,IAAA2C,YACA,EACA,QACA,WAAA5Q,EAAA5F,KAAA,IACA,SAAA4F,EAAA5F,KAAA,IACA,MAAA4F,EAAA5F,KAAA,EACA,IAAA4F,EAAA5F,GACA,QACA,QACA,QACA,WAGAkhE,EAAA74D,KAAAuzB,MAAAh2B,EAAAk2D,qBAAAyD,EAAA,IACA4B,EAAA94D,KAAAuzB,MAAAh2B,EAAAk2D,qBAAAyD,EAAA,IAEAuB,EAAAn5D,EAAA82D,EAAAzqD,KAAA,IAAAwC,YACA,EACA,MAEA0qD,IAAA,OACAA,IAAA,OACAA,IAAA,MACA,IAAAA,EACAC,IAAA,OACAA,IAAA,OACAA,IAAA,MACA,IAAAA,KAMAF,EAAA,GAQA,UAAAr7D,EAAA9B,MACAi9D,EAAAvC,EAAA54D,EAAAq7D,GACAt5D,EAAA82D,EAAA7qD,KACAitD,EACAC,EACAC,KAMAC,EAAA5C,EAAAx4D,GACAm7D,EAAAvC,EAAA54D,EACAo7D,EAAAljE,OAAAmjE,GACAt5D,EAAA82D,EAAA7qD,KACAitD,EACAC,EACAC,EACAC,KAQA9tD,EAAA,SAAAtN,GAEA,OADAA,EAAAwX,SAAAxX,EAAAwX,UAAA,WACAzV,EAAA82D,EAAAvrD,KACAC,EAAAvN,GACAs4D,EAAAt4D,KAGA24D,EAAA,SAAA34D,GACA,IAAAvC,EAAA,IAAAmT,YACA,EACA,OACA,WAAA5Q,EAAA5F,KAAA,IACA,SAAA4F,EAAA5F,KAAA,IACA,MAAA4F,EAAA5F,KAAA,EACA,IAAA4F,EAAA5F,GACA,QACA,QACA,QACA,UAUA,MAJA,UAAA4F,EAAA9B,OACAT,IAAAvF,OAAA,MAGA6J,EAAA82D,EAAAF,KAAAl7D,IAGA,WACA,IAAA+9D,EAAAC,EAAAC,EAMAA,EAAA,SAAAhB,EAAAroD,GACA,IAAAspD,EAAA,EAAAC,EAAA,EACAC,EAAA,EAAAC,EAAA,EAkBA,OAfApB,EAAAxiE,cACA0K,IAAA83D,EAAA,GAAAljD,WACAmkD,EAAA,QAEA/4D,IAAA83D,EAAA,GAAA1/D,OACA4gE,EAAA,QAEAh5D,IAAA83D,EAAA,GAAA9f,QACAihB,EAAA,QAEAj5D,IAAA83D,EAAA,GAAAoB,wBACAA,EAAA,KAKA,EACA,EACAH,EAAAC,EAAAC,EAAAC,EACA,GACA,WAAApB,EAAAxiE,UAAA,IACA,SAAAwiE,EAAAxiE,UAAA,IACA,MAAAwiE,EAAAxiE,UAAA,EACA,IAAAwiE,EAAAxiE,QACA,WAAAma,KAAA,IACA,SAAAA,KAAA,IACA,MAAAA,KAAA,EACA,IAAAA,IAIAopD,EAAA,SAAAz7D,EAAAqS,GACA,IAAAP,EAAA4oD,EAAAqB,EAAAhmE,EAOA,IALA2kE,EAAA16D,EAAA06D,YACAroD,GAAA,MAAAqoD,EAAAxiE,OAEA4Z,EAAA4pD,EAAAhB,EAAAroD,GAEAtc,EAAA,EAAeA,EAAA2kE,EAAAxiE,OAAoBnC,IACnCgmE,EAAArB,EAAA3kE,GACA+b,IAAA7E,SACA,WAAA8uD,EAAAvkD,YAAA,IACA,SAAAukD,EAAAvkD,YAAA,IACA,MAAAukD,EAAAvkD,YAAA,EACA,IAAAukD,EAAAvkD,UACA,WAAAukD,EAAA/gE,QAAA,IACA,SAAA+gE,EAAA/gE,QAAA,IACA,MAAA+gE,EAAA/gE,QAAA,EACA,IAAA+gE,EAAA/gE,KACA+gE,EAAAnhB,MAAAohB,WAAA,EAAAD,EAAAnhB,MAAA+f,UACAoB,EAAAnhB,MAAAggB,cAAA,EACAmB,EAAAnhB,MAAAqhB,eAAA,EACAF,EAAAnhB,MAAAshB,cAAA,EACAH,EAAAnhB,MAAAuhB,gBACA,MAAAJ,EAAAnhB,MAAAwhB,oBACA,GAAAL,EAAAnhB,MAAAwhB,qBACA,WAAAL,EAAAD,yBAAA,IACA,SAAAC,EAAAD,yBAAA,IACA,MAAAC,EAAAD,yBAAA,EACA,IAAAC,EAAAD,wBAGA,OAAA/5D,EAAA82D,EAAAD,KAAA,IAAAhoD,WAAAkB,KAGA0pD,EAAA,SAAAx7D,EAAAqS,GACA,IAAAP,EAAA4oD,EAAAqB,EAAAhmE,EAOA,IALA2kE,EAAA16D,EAAA06D,YACAroD,GAAA,KAAAqoD,EAAAxiE,OAEA4Z,EAAA4pD,EAAAhB,EAAAroD,GAEAtc,EAAA,EAAeA,EAAA2kE,EAAAxiE,OAAoBnC,IACnCgmE,EAAArB,EAAA3kE,GACA+b,IAAA7E,SACA,WAAA8uD,EAAAvkD,YAAA,IACA,SAAAukD,EAAAvkD,YAAA,IACA,MAAAukD,EAAAvkD,YAAA,EACA,IAAAukD,EAAAvkD,UACA,WAAAukD,EAAA/gE,QAAA,IACA,SAAA+gE,EAAA/gE,QAAA,IACA,MAAA+gE,EAAA/gE,QAAA,EACA,IAAA+gE,EAAA/gE,OAGA,OAAA+G,EAAA82D,EAAAD,KAAA,IAAAhoD,WAAAkB,KAGA8mD,EAAA,SAAA54D,EAAAqS,GACA,gBAAArS,EAAA9B,KACAs9D,EAAAx7D,EAAAqS,GAGAopD,EAAAz7D,EAAAqS,IA3GA,GA+GA9c,EAAAD,SACAwiE,OACAC,OACAG,OACAC,OACA51C,YAAA,SAAAmR,GACA,IAGAj2B,EAFA4+D,EAAAvE,IACAwE,EAAAnE,EAAAzkC,GAMA,OAHAj2B,EAAA,IAAAmT,WAAAyrD,EAAAvvD,WAAAwvD,EAAAxvD,YACArP,EAAApD,IAAAgiE,GACA5+D,EAAApD,IAAAiiE,EAAAD,EAAAvvD,YACArP,SAII8+D,IAAA,SAAA57C,EAAAprB,EAAAD,GASJ,aAEA,IAAAkX,EAAAC,EAAAC,EAAAhR,EAGA8Q,EAAA,SAAAhH,EAAAmH,GACA,IACA5W,EAAAiF,EAAAkD,EAAA5C,EAAAsR,EADAC,KAGA,IAAAF,EAAAzU,OAEA,YAGA,IAAAnC,EAAA,EAAaA,EAAAyP,EAAAsH,YACb9R,EAAAwK,EAAAzP,IAAA,GACAiF,GAAAwK,EAAAzP,EAAA,OACAiF,GAAAwK,EAAAzP,EAAA,MACAiF,GAAAwK,EAAAzP,EAAA,GAEAmI,EAAAuO,EAAAjH,EAAAuH,SAAAhX,EAAA,EAAAA,EAAA,IAEAuF,EAAAN,EAAA,EAAAjF,EAAAiF,EAAAwK,EAAAsH,WAEA5O,IAAAyO,EAAA,KACA,IAAAA,EAAAzU,OAGA2U,EAAA7N,KAAAwG,EAAAuH,SAAAhX,EAAA,EAAAuF,KAGAsR,EAAAJ,EAAAhH,EAAAuH,SAAAhX,EAAA,EAAAuF,GAAAqR,EAAAK,MAAA,IACAJ,EAAA1U,SACA2U,IAAAI,OAAAL,MAIA7W,EAAAuF,EAIA,OAAAuR,GAQAJ,EAAA,SAAA1F,GACA,IAAAtJ,EAAA,GAKA,OAJAA,GAAAyP,OAAAC,aAAApG,EAAA,IACAtJ,GAAAyP,OAAAC,aAAApG,EAAA,IACAtJ,GAAAyP,OAAAC,aAAApG,EAAA,IACAtJ,GAAAyP,OAAAC,aAAApG,EAAA,IACAtJ,GAqBAiP,EAAA,SAAAR,GACA,IACAzO,KACA2P,EAAAZ,EAAAN,GAAA,gBAGA,OAAAkB,EAAAC,OAAA,SAAA5P,EAAA6P,GACA,IAAAC,EAAAC,EAAAC,EAAArT,EAAAsT,EAGA,OADAH,EAAAf,EAAAc,GAAA,YACAC,GAGAC,EAAAD,EAAA,GACAE,EAAA,IAAAD,EAAA,MACApT,EAAAmT,EAAAE,IAAA,GACAF,EAAAE,EAAA,OACAF,EAAAE,EAAA,MACAF,EAAAE,EAAA,GAEAC,EAAAlB,EAAAc,GAAA,mBACAI,GAGAF,EAAAE,EAAA,GACAD,EAAA,IAAAD,EAAA,MACA/P,EAAArD,GAAAsT,EAAAD,IAAA,GACAC,EAAAD,EAAA,OACAC,EAAAD,EAAA,MACAC,EAAAD,EAAA,GACAhQ,GARA,MAXA,MAoBGA,IAmBH/B,EAAA,SAAAgR,EAAAiB,GACA,IAAAC,EAAAC,EAAApQ,EA6CA,OA1CAmQ,EAAApB,EAAAmB,GAAA,gBAGAE,KAAAZ,OAAAa,SAAAF,EAAAG,IAAA,SAAAC,GACA,OAAAxB,EAAAwB,GAAA,SAAAD,IAAA,SAAAE,GACA,IAAA7T,EAAA8T,EAAAC,EA+BA,OA5BA/T,EAAA6T,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,GAEAC,EAAAxB,EAAAtS,IAAA,IAGA+T,EAAA3B,EAAAwB,GAAA,SAAAD,IAAA,SAAAK,GACA,IAAAZ,EAAA/P,EAcA,OAZA+P,EAAAY,EAAA,GACA3Q,EAAA2Q,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,GACA,IAAAZ,IACA/P,GAAAgF,KAAA4L,IAAA,MACA5Q,GAAA2Q,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,KAEA3Q,IACO,GACP0Q,KAAAG,IAGAH,EAAAD,OAKAzQ,EAAAgF,KAAAuC,IAAA8I,MAAA,KAAAD,GACAU,SAAA9Q,KAAA,GAGAlI,EAAAD,SACAmX,YACAC,YACAhR,kBAGI8gE,IAAA,SAAA77C,EAAAprB,EAAAD,GAWJ,aAEA,IA6BA0xD,EAAAC,EAAAV,EAAAxE,EAIA0a,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAvCApxD,EAAAgV,EAAA,sBACAq8C,EAAAr8C,EAAA,sBACAymC,EAAAzmC,EAAA,mBACAs7B,EAAAt7B,EAAA,qBACAo8B,EAAAp8B,EAAA,kBAAAo8B,WACA5C,EAAAx5B,EAAA,UACAugC,EAAAvgC,EAAA,mBACAs8C,EAAAt8C,EAAA,kBAGAu8C,GACA,kBACA,eACA,aACA,yBACA,cAGAC,GACA,QACA,SACA,aACA,WACA,wBAGAC,EAAA,IAmBAX,EAAA,WACA,OACAzhE,KAAA,EACA4/C,OACAohB,UAAA,EACArB,UAAA,EACAC,aAAA,EACAqB,cAAA,EACAG,oBAAA,KAKAM,EAAA,SAAAl3D,GACA,OAAAA,EAAA,SAAA1F,WAAA,IACA0F,EAAA,SAAA1F,WAAA,IACA0F,EAAA,SAAA1F,WAAA,IASAg9D,EAAA,SAAA5gE,EAAAY,GACA,IACA/G,EAEA,GAAAmG,EAAAhE,SAAA4E,EAAA5E,OACA,SAIA,IAAAnC,EAAA,EAAaA,EAAAmG,EAAAhE,OAAcnC,IAC3B,GAAAmG,EAAAnG,KAAA+G,EAAA/G,GACA,SAIA,UAMAgnE,EAAA,SAAAh/B,GACA,IACAhoC,EACAsnE,EACAC,EAAA,EAGA,IAAAvnE,EAAA,EAAaA,EAAAgoC,EAAA7lC,OAAkBnC,IAC/BsnE,EAAAt/B,EAAAhoC,GACAunE,GAAAD,EAAA73D,KAAAsH,WAGA,OAAAwwD,GAQArW,EAAA,SAAAjnD,GACA,IACAwnD,KACAgT,EAAA,EACA+C,EAAA,EACAC,EAAA,EACAC,EAAAnvD,IAEA24C,EAAAtvD,UAAAuU,KAAAhW,KAAAP,MAEAA,KAAAqJ,KAAA,SAAAwG,GACAm3D,EAAA38D,EAAAwF,GAEAxF,GACAk9D,EAAA/6C,QAAA,SAAA7d,GACAtE,EAAAsE,GAAAkB,EAAAlB,KAKAkjD,EAAAxoD,KAAAwG,IAGA7P,KAAA+nE,eAAA,SAAAC,GACAJ,EAAAI,EAAA39D,EAAAmjD,kBAAA+S,qBAGAvgE,KAAAioE,4BAAA,SAAA1H,GACAuH,EAAAvH,GAGAvgE,KAAAkoE,oBAAA,SAAAtjB,GACAijB,EAAAjjB,GAGA5kD,KAAAiT,MAAA,WACA,IACA+5C,EACAuV,EACAH,EACAlzD,EAGA,IAAA2iD,EAAAtvD,QAKAyqD,EAAAhtD,KAAAmoE,6BAAAtW,GACAxnD,EAAAk2D,oBAAA2G,EAAA78D,GAEArK,KAAAooE,mBAAA/9D,EAAA2iD,GAIA3iD,EAAA06D,QAAA/kE,KAAAqoE,qBAAArb,GAGAoV,EAAAiF,EAAAjF,KAAApiE,KAAAsoE,sBAAAtb,IAEA6E,KAEA0Q,EAAA8E,EAAA9E,KAAAsC,GAAAx6D,IACA6E,EAAA,IAAA+L,WAAAsnD,EAAAprD,WAAAirD,EAAAjrD,YAGA0tD,IAEA31D,EAAAxK,IAAA69D,GACArzD,EAAAxK,IAAA09D,EAAAG,EAAAprD,YAEA8vD,EAAA58D,GAEArK,KAAA2W,QAAA,QAA0BtM,QAAA6E,UAC1BlP,KAAA2W,QAAA,8BA9BA3W,KAAA2W,QAAA,8BAmCA3W,KAAAooE,mBAAA,SAAA/9D,EAAA2iD,GACA,IACAub,EAKAC,EACApoE,EALAqoE,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAIA,GAAA5b,EAAAzqD,SAIAgmE,EAAAjB,EAAAuB,iBAAAx+D,EAAAk2D,oBAAAl2D,EAAA28C,YAEAyhB,EAAA37D,KAAAwB,KAAAm5D,GAAAp9D,EAAA28C,WAAA,OAEA6gB,GAAAC,IAEAY,EACAH,EAAAz7D,KAAAC,IAAA86D,EAAAC,GAEAa,EAAA77D,KAAAuzB,MAAAqoC,EAAAD,GACAG,EAAAD,EAAAF,KAKAE,EAAA,GAAAC,EAAAnB,EAAA,KAYA,IARAe,EAAAjd,EAAAlhD,EAAA28C,YAEAwhB,IAGAA,EAAAxb,EAAA,GAAAn9C,MAGAzP,EAAA,EAAeA,EAAAuoE,EAAyBvoE,IACxC4sD,EAAA1uC,OAAAle,EAAA,GACAyP,KAAA24D,IAIAn+D,EAAAk2D,qBACAzzD,KAAAuzB,MAAAinC,EAAAwB,iBAAAF,EAAAv+D,EAAA28C,eAOAhnD,KAAAmoE,6BAAA,SAAAtW,GACA,OAAAxnD,EAAA0+D,eAAAnB,EACA/V,GAIAxnD,EAAA0+D,cAAApwD,IAEAk5C,EAAAngC,OAAA,SAAAqgC,GAEA,OAAAA,EAAAt7C,KAAAmxD,IACAv9D,EAAA0+D,cAAAj8D,KAAAuC,IAAAhF,EAAA0+D,cAAAhX,EAAAt7C,KACApM,EAAA2+D,cAAA3+D,EAAA0+D,eACA,OAQA/oE,KAAAqoE,qBAAA,SAAArb,GACA,IACA5sD,EACA2xD,EACAgT,KAEA,IAAA3kE,EAAA,EAAeA,EAAA4sD,EAAAzqD,OAAmBnC,IAClC2xD,EAAA/E,EAAA5sD,GACA2kE,EAAA17D,MACAhE,KAAA0sD,EAAAliD,KAAAsH,WACA0K,SAAA,OAGA,OAAAkjD,GAIA/kE,KAAAsoE,sBAAA,SAAAtb,GACA,IACA5sD,EACA2xD,EACA2T,EAAA,EACA71D,EAAA,IAAAoL,WAAAmsD,EAAApa,IAEA,IAAA5sD,EAAA,EAAeA,EAAA4sD,EAAAzqD,OAAmBnC,IAClC2xD,EAAA/E,EAAA5sD,GAEAyP,EAAAnL,IAAAqtD,EAAAliD,KAAA61D,GACAA,GAAA3T,EAAAliD,KAAAsH,WAEA,OAAAtH,IAIAyhD,EAAAtvD,UAAA,IAAAgU,EAWAq7C,EAAA,SAAAhnD,EAAAib,GACA,IAIAujC,EACA8I,EAJAkT,EAAA,EACAxS,KACA4W,KAIA3jD,QAEA+rC,EAAArvD,UAAAuU,KAAAhW,KAAAP,aAEAqK,EAAA6+D,OAEAlpE,KAAAmpE,aAEAnpE,KAAAqJ,KAAA,SAAA+/D,GACApC,EAAA38D,EAAA++D,GAGA,2BAAAA,EAAAzgB,aAAAE,IACAA,EAAAugB,EAAAvgB,OACAx+C,EAAAqnD,KAAA0X,EAAAv5D,MAEA23D,EAAAh7C,QAAA,SAAA7d,GACAtE,EAAAsE,GAAAk6C,EAAAl6C,IACO3O,OAGP,2BAAAopE,EAAAzgB,aACAgJ,IACAA,EAAAyX,EAAAv5D,KACAxF,EAAAsnD,KAAAyX,EAAAv5D,OAIAwiD,EAAAhpD,KAAA+/D,IAGAppE,KAAAiT,MAAA,WACA,IACA+5C,EACAqc,EACAC,EACA/G,EACAH,EACAlzD,EAIA,MAAAmjD,EAAA9vD,OAAA,CACA,kCAAA8vD,EAAA,GAAA1J,YACA,MAEA0J,EAAA1X,QAIA,OAAA0X,EAAA9vD,OAGA,OAFAvC,KAAAupE,oBACAvpE,KAAA2W,QAAA,6BAgDA,GAzCAq2C,EAAAhtD,KAAAwpE,qBAAAnX,GACAiX,EAAAtpE,KAAAypE,qBAAAzc,GAoBAsc,EAAA,MAAApa,WAEAma,EAAArpE,KAAA0pE,iBAAArX,EAAA,GAAAhoD,GAEAg/D,GACAC,EAAAK,QAAAN,GAGAC,EAAAnyD,YAAAkyD,EAAAlyD,WACAmyD,EAAAM,UAAAP,EAAAO,SACAN,EAAA5yD,IAAA2yD,EAAA3yD,IACA4yD,EAAA7yD,IAAA4yD,EAAA5yD,IACA6yD,EAAAznD,UAAAwnD,EAAAxnD,UAGAynD,EAAAtpE,KAAA6pE,qBAAAP,IAKAL,EAAA1mE,OAAA,CACA,IAAAunE,EAQA,GALAA,EADAxkD,EAAAykD,eACA/pE,KAAAgqE,gBAAAV,GAEAtpE,KAAAiqE,kBAAAX,IAGAQ,EAiBA,OAfA9pE,KAAAmpE,UAAAQ,SACAO,IAAAZ,EAAAtgE,MACA2oD,IAAAtnD,EAAAsnD,IACAD,IAAArnD,EAAAqnD,MAIA1xD,KAAAmpE,UAAA5mE,OAAAuK,KAAAuC,IAAA,EAAArP,KAAAmpE,UAAA5mE,QAGA8vD,KAGAryD,KAAAupE,oBACAvpE,KAAA2W,QAAA,6BAMAswD,EAAA58D,GAEAi/D,EAAAQ,EAGA9C,EAAA38D,EAAAi/D,GAIAj/D,EAAA06D,QAAA/kE,KAAAqoE,qBAAAiB,GAGAlH,EAAAiF,EAAAjF,KAAApiE,KAAAmqE,oBAAAb,IAEAj/D,EAAAk2D,oBAAA2G,EAAA78D,GAEArK,KAAA2W,QAAA,oBAAA2yD,EAAAlxD,IAAA,SAAA8xD,GACA,OACAxzD,IAAAwzD,EAAAxzD,IACAD,IAAAyzD,EAAAzzD,IACAU,WAAA+yD,EAAA/yD,eAKAnX,KAAAmpE,UAAAQ,SACAO,IAAAZ,EAAAtgE,MACA2oD,IAAAtnD,EAAAsnD,IACAD,IAAArnD,EAAAqnD,MAIA1xD,KAAAmpE,UAAA5mE,OAAAuK,KAAAuC,IAAA,EAAArP,KAAAmpE,UAAA5mE,QAGA8vD,KAEAryD,KAAA2W,QAAA,sBAAAtM,EAAAk2D,qBACAvgE,KAAA2W,QAAA,oBAAAtM,EAAAmjD,mBAEA+U,EAAA8E,EAAA9E,KAAAsC,GAAAx6D,IAIA6E,EAAA,IAAA+L,WAAAsnD,EAAAprD,WAAAirD,EAAAjrD,YAGA0tD,IAEA31D,EAAAxK,IAAA69D,GACArzD,EAAAxK,IAAA09D,EAAAG,EAAAprD,YAEAnX,KAAA2W,QAAA,QAA0BtM,QAAA6E,UAE1BlP,KAAAupE,eAGAvpE,KAAA2W,QAAA,8BAGA3W,KAAAupE,aAAA,WACAtC,EAAA58D,GAIAw+C,OAAA57C,EACA0kD,OAAA1kD,GAKAjN,KAAA0pE,iBAAA,SAAAN,GACA,IAIAgB,EACAC,EACAC,EACAC,EACAnqE,EAPAoqE,EAAA,KACAC,EAAA,IACAC,EAAA/xD,IAQA,IAAAvY,EAAA,EAAeA,EAAAJ,KAAAmpE,UAAA5mE,OAA2BnC,IAC1CmqE,EAAAvqE,KAAAmpE,UAAA/oE,GACAkqE,EAAAC,EAAAL,IAGA7/D,EAAAsnD,KAAAwV,EAAA98D,EAAAsnD,IAAA,GAAA4Y,EAAA5Y,IAAA,KACAtnD,EAAAqnD,KAAAyV,EAAA98D,EAAAqnD,IAAA,GAAA6Y,EAAA7Y,IAAA,MAKA4Y,EAAA7zD,IAAApM,EAAAmjD,kBAAA/2C,MAKA2zD,EAAAhB,EAAA3yD,IAAA6zD,EAAA7zD,IAAA6zD,EAAAzoD,SAIAuoD,IAAAK,GACAL,GAAAI,KAIAH,GACAK,EAAAN,KACAC,EAAAE,EACAG,EAAAN,KAKA,OAAAC,EACAA,EAAAH,IAEA,MAGAlqE,KAAA6pE,qBAAA,SAAAP,GACA,IAAAgB,EAiBA,OAfAhB,EAAA,MAAApa,UAAAoa,EAAA/mE,OAAA,IAEA+nE,EAAAhB,EAAA3uB,QAEA2uB,EAAAnyD,YAAAmzD,EAAAnzD,WACAmyD,EAAAM,UAAAU,EAAAV,SAKAN,EAAA,MAAA7yD,IAAA6zD,EAAA7zD,IACA6yD,EAAA,MAAA5yD,IAAA4zD,EAAA5zD,IACA4yD,EAAA,MAAAznD,UAAAyoD,EAAAzoD,UAGAynD,GAOAtpE,KAAAwpE,qBAAA,SAAAnX,GACA,IACAjyD,EACAsyD,EACAX,KACA/E,KAIA,IAFA+E,EAAA56C,WAAA,EAEA/W,EAAA,EAAeA,EAAAiyD,EAAA9vD,OAAqBnC,IACpCsyD,EAAAL,EAAAjyD,GAGA,+BAAAsyD,EAAA/J,aAGAoJ,EAAAxvD,SACAwvD,EAAAlwC,SAAA6wC,EAAAj8C,IAAAs7C,EAAAt7C,IACAu2C,EAAA3jD,KAAA0oD,IAEAA,GAAAW,GACAX,EAAA56C,WAAAu7C,EAAA7iD,KAAAsH,WACA46C,EAAAr7C,IAAAg8C,EAAAh8C,IACAq7C,EAAAt7C,IAAAi8C,EAAAj8C,MAGA,8CAAAi8C,EAAA/J,cACAoJ,EAAA7C,UAAA,GAEA6C,EAAAlwC,SAAA6wC,EAAAj8C,IAAAs7C,EAAAt7C,IACAs7C,EAAA56C,YAAAu7C,EAAA7iD,KAAAsH,WACA46C,EAAA1oD,KAAAqpD,IAcA,OARA1F,EAAAzqD,UACAwvD,EAAAlwC,UACAkwC,EAAAlwC,UAAA,KACAkwC,EAAAlwC,SAAAmrC,IAAAzqD,OAAA,GAAAsf,UAIAmrC,EAAA3jD,KAAA0oD,GACA/E,GAOAhtD,KAAAypE,qBAAA,SAAAzc,GACA,IACA5sD,EACA2xD,EACAuY,KACAhB,KAiBA,IAbAgB,EAAAnzD,WAAA,EACAmzD,EAAAV,SAAA,EACAU,EAAAzoD,SAAA,EACAyoD,EAAA5zD,IAAAs2C,EAAA,GAAAt2C,IACA4zD,EAAA7zD,IAAAu2C,EAAA,GAAAv2C,IAGA6yD,EAAAnyD,WAAA,EACAmyD,EAAAM,SAAA,EACAN,EAAAznD,SAAA,EACAynD,EAAA5yD,IAAAs2C,EAAA,GAAAt2C,IACA4yD,EAAA7yD,IAAAu2C,EAAA,GAAAv2C,IAEArW,EAAA,EAAeA,EAAA4sD,EAAAzqD,OAAmBnC,IAClC2xD,EAAA/E,EAAA5sD,GAEA2xD,EAAA7C,UAGAob,EAAA/nE,SACA+mE,EAAAjgE,KAAAihE,GACAhB,EAAAnyD,YAAAmzD,EAAAnzD,WACAmyD,EAAAM,UAAAU,EAAAV,SACAN,EAAAznD,UAAAyoD,EAAAzoD,UAGAyoD,GAAAvY,GACAuY,EAAAV,SAAA7X,EAAAxvD,OACA+nE,EAAAnzD,WAAA46C,EAAA56C,WACAmzD,EAAA5zD,IAAAq7C,EAAAr7C,IACA4zD,EAAA7zD,IAAAs7C,EAAAt7C,IACA6zD,EAAAzoD,SAAAkwC,EAAAlwC,WAEAyoD,EAAAzoD,UAAAkwC,EAAAlwC,SACAyoD,EAAAV,UAAA7X,EAAAxvD,OACA+nE,EAAAnzD,YAAA46C,EAAA56C,WACAmzD,EAAAjhE,KAAA0oD,IAaA,OATAuX,EAAA/mE,QAAA+nE,EAAAzoD,UAAA,IACAyoD,EAAAzoD,SAAAynD,IAAA/mE,OAAA,GAAAsf,UAEAynD,EAAAnyD,YAAAmzD,EAAAnzD,WACAmyD,EAAAM,UAAAU,EAAAV,SACAN,EAAAznD,UAAAyoD,EAAAzoD,SAGAynD,EAAAjgE,KAAAihE,GACAhB,GAIAtpE,KAAAqoE,qBAAA,SAAAiB,EAAAqB,GACA,IACA3nE,EAAA5C,EACAgmE,EACAkE,EACAvY,EACA2T,EAAAiF,GAAA,EACA5F,KAEA,IAAA/hE,EAAA,EAAeA,EAAAsmE,EAAA/mE,OAAiBS,IAGhC,IAFAsnE,EAAAhB,EAAAtmE,GAEA5C,EAAA,EAAiBA,EAAAkqE,EAAA/nE,OAAuBnC,IACxC2xD,EAAAuY,EAAAlqE,GAEAgmE,EAAAU,IAEAV,EAAAV,aACAU,EAAAD,sBAAApU,EAAAr7C,IAAAq7C,EAAAt7C,IACA2vD,EAAAvkD,SAAAkwC,EAAAlwC,SACAukD,EAAA/gE,KAAA,EAAA0sD,EAAAxvD,OACA6jE,EAAA/gE,MAAA0sD,EAAA56C,WAEA46C,EAAA7C,WACAkX,EAAAnhB,MAAA+f,UAAA,GAGAU,GAAAU,EAAA/gE,KAEA0/D,EAAA17D,KAAA+8D,GAGA,OAAArB,GAIA/kE,KAAAmqE,oBAAA,SAAAb,GACA,IACAtmE,EAAA5C,EAAA+sB,EACAm9C,EACAvY,EACAW,EACAgT,EAAA,EACAkF,EAAAtB,EAAAnyD,WACA0zD,EAAAvB,EAAAM,SACAkB,EAAAF,EAAA,EAAAC,EACAh7D,EAAA,IAAAoL,WAAA6vD,GACAhqC,EAAA,IAAAC,SAAAlxB,EAAAuB,QAGA,IAAApO,EAAA,EAAeA,EAAAsmE,EAAA/mE,OAAiBS,IAIhC,IAHAsnE,EAAAhB,EAAAtmE,GAGA5C,EAAA,EAAiBA,EAAAkqE,EAAA/nE,OAAuBnC,IAIxC,IAHA2xD,EAAAuY,EAAAlqE,GAGA+sB,EAAA,EAAmBA,EAAA4kC,EAAAxvD,OAAyB4qB,IAC5CulC,EAAAX,EAAA5kC,GAEA2T,EAAAqtB,UAAAuX,EAAAhT,EAAA7iD,KAAAsH,YACAuuD,GAAA,EACA71D,EAAAnL,IAAAguD,EAAA7iD,KAAA61D,GACAA,GAAAhT,EAAA7iD,KAAAsH,WAIA,OAAAtH,GAKA7P,KAAAiqE,kBAAA,SAAAX,GACA,IAAAyB,EAAAC,EAAA1lE,EAAA4kE,EAAA/yD,EAAAyyD,EAAA/nD,EAAAioD,EAEA3yD,EAAAmyD,EAAAnyD,WACAyyD,EAAAN,EAAAM,SACA/nD,EAAAynD,EAAAznD,SACAkpD,EAAAC,EAAA,EAEA,MAAAD,EAAA9B,EAAA1mE,QAAAyoE,EAAA1B,EAAA/mE,OAAA,CAIA,GAHA+C,EAAA2jE,EAAA8B,GACAb,EAAAZ,EAAA0B,GAEA1lE,EAAAoR,MAAAwzD,EAAAxzD,IACA,MAGAwzD,EAAAxzD,IAAApR,EAAAoR,IAGAq0D,KAMAC,IACA7zD,GAAA+yD,EAAA/yD,WACAyyD,GAAAM,EAAAN,SACA/nD,GAAAqoD,EAAAroD,UAGA,WAAAmpD,EAEA1B,EAGA0B,IAAA1B,EAAA/mE,OAEA,MAGAunE,EAAAR,EAAAjyD,MAAA2zD,GACAlB,EAAA3yD,aACA2yD,EAAAjoD,WACAioD,EAAAF,WACAE,EAAApzD,IAAAozD,EAAA,GAAApzD,IACAozD,EAAArzD,IAAAqzD,EAAA,GAAArzD,IAEAqzD,IAKA9pE,KAAAgqE,gBAAA,SAAAV,GACA,IAAAyB,EAAAC,EAAA1lE,EAAA4kE,EAAAe,EAAAC,EAmCAC,EAjCAJ,EAAA9B,EAAA1mE,OAAA,EACAyoE,EAAA1B,EAAA/mE,OAAA,EACA0oE,EAAA,KACAC,GAAA,EAEA,MAAAH,GAAA,GAAAC,GAAA,GAIA,GAHA1lE,EAAA2jE,EAAA8B,GACAb,EAAAZ,EAAA0B,GAEA1lE,EAAAoR,MAAAwzD,EAAAxzD,IAAA,CACAw0D,GAAA,EACA,MAGA5lE,EAAAoR,IAAAwzD,EAAAxzD,IACAq0D,KAIAA,IAAA9B,EAAA1mE,OAAA,IAIA0oE,EAAAD,GAGAA,KAGA,IAAAE,GAAA,OAAAD,EACA,YAWA,GALAE,EADAD,EACAF,EAEAC,EAGA,IAAAE,EACA,OAAA7B,EAGA,IAAAQ,EAAAR,EAAAjyD,MAAA8zD,GACA5d,EAAAuc,EAAApyD,OAAA,SAAA0zD,EAAAlB,GAIA,OAHAkB,EAAAj0D,YAAA+yD,EAAA/yD,WACAi0D,EAAAvpD,UAAAqoD,EAAAroD,SACAupD,EAAAxB,UAAAM,EAAAN,SACAwB,IACQj0D,WAAA,EAAA0K,SAAA,EAAA+nD,SAAA,IAQR,OANAE,EAAA3yD,WAAAo2C,EAAAp2C,WACA2yD,EAAAjoD,SAAA0rC,EAAA1rC,SACAioD,EAAAF,SAAArc,EAAAqc,SACAE,EAAApzD,IAAAozD,EAAA,GAAApzD,IACAozD,EAAArzD,IAAAqzD,EAAA,GAAArzD,IAEAqzD,GAGA9pE,KAAAqrE,cAAA,SAAAC,GACArC,EAAAqC,IAIAja,EAAArvD,UAAA,IAAAgU,EAOAgxD,EAAA,SAAA38D,EAAAwF,GACA,kBAAAA,EAAA6G,WACAzJ,IAAA5C,EAAAmjD,kBAAA92C,MACArM,EAAAmjD,kBAAA92C,IAAA7G,EAAA6G,UAGAzJ,IAAA5C,EAAA2+D,cACA3+D,EAAA2+D,cAAAn5D,EAAA6G,IAEArM,EAAA2+D,cAAAl8D,KAAAuC,IAAAhF,EAAA2+D,cAAAn5D,EAAA6G,UAGAzJ,IAAA5C,EAAAkhE,cACAlhE,EAAAkhE,cAAA17D,EAAA6G,IAEArM,EAAAkhE,cAAAz+D,KAAAC,IAAA1C,EAAAkhE,cAAA17D,EAAA6G,MAIA,kBAAA7G,EAAA4G,WACAxJ,IAAA5C,EAAAmjD,kBAAA/2C,MACApM,EAAAmjD,kBAAA/2C,IAAA5G,EAAA4G,UAGAxJ,IAAA5C,EAAA0+D,cACA1+D,EAAA0+D,cAAAl5D,EAAA4G,IAEApM,EAAA0+D,cAAAj8D,KAAAuC,IAAAhF,EAAA0+D,cAAAl5D,EAAA4G,UAGAxJ,IAAA5C,EAAAmhE,cACAnhE,EAAAmhE,cAAA37D,EAAA4G,IAEApM,EAAAmhE,cAAA1+D,KAAAC,IAAA1C,EAAAmhE,cAAA37D,EAAA4G,OASAwwD,EAAA,SAAA58D,UACAA,EAAA0+D,qBACA1+D,EAAAmhE,qBACAnhE,EAAA2+D,qBACA3+D,EAAAkhE,eAQArE,EAAA,SAAA78D,GACA,IACAk2D,EACAhoD,EAGAkzD,EAAAphE,EAAA0+D,cAAA1+D,EAAAmjD,kBAAA/2C,IAoBA,OAhBA8pD,EAAAl2D,EAAAmjD,kBAAA+S,oBAGAA,GAAAkL,EAGAlL,EAAAzzD,KAAAC,IAAA,EAAAwzD,GAEA,UAAAl2D,EAAA9B,OAGAgQ,EAAAlO,EAAA28C,WAAAygB,EACAlH,GAAAhoD,EACAgoD,EAAAzzD,KAAAuzB,MAAAkgC,IAGAA,GAQAnU,EAAA,SAAA9mC,EAAAgnC,GAIAtsD,KAAAqsD,eAAA,EACArsD,KAAAssD,iBAEA,qBAAAhnC,EAAAomD,MACA1rE,KAAA2rE,cAAArmD,EAAAomD,MAEA1rE,KAAA2rE,aAAA,EAGA3rE,KAAA6sD,iBACA7sD,KAAAysD,WAAA,KACAzsD,KAAA4rE,gBACA5rE,KAAA2sD,mBACA3sD,KAAA4sD,mBACA5sD,KAAA6rE,aAAA,EACA7rE,KAAA8rE,cAAA,EAEA1f,EAAApqD,UAAAuU,KAAAhW,KAAAP,MAGAA,KAAAqJ,KAAA,SAAA0jD,GAGA,OAAAA,EAAAljD,KACA7J,KAAA2sD,gBAAAtjD,KAAA0jD,GAGAA,EAAAC,OACAhtD,KAAA4sD,gBAAAvjD,KAAA0jD,IAMA/sD,KAAA6sD,cAAAxjD,KAAA0jD,EAAA1iD,OACArK,KAAA4rE,aAAAviE,KAAA0jD,EAAA79C,OACAlP,KAAA6rE,cAAA9e,EAAA79C,MAAAiI,WAEA,UAAA41C,EAAA1iD,MAAA9B,OACAvI,KAAAysD,WAAAM,EAAA1iD,YAEA,UAAA0iD,EAAA1iD,MAAA9B,OACAvI,KAAA0sD,WAAAK,EAAA1iD,WAKA+hD,EAAApqD,UAAA,IAAAgU,EACAo2C,EAAApqD,UAAAiR,MAAA,SAAA2L,GACA,IAQAuuC,EACAD,EACAtgC,EAEAxsB,EAXAsc,EAAA,EACA2N,GACAgjC,YACAC,kBACAC,YACAwe,SAKA3e,EAAA,EAGA,GAAAptD,KAAA6sD,cAAAtqD,OAAAvC,KAAAqsD,eAAA,CACA,0BAAAztC,GACA,uBAAAA,EAIA,OACK,GAAA5e,KAAA2rE,YAGL,OACK,OAAA3rE,KAAA6sD,cAAAtqD,OAaL,OANAvC,KAAA8rE,qBAEA9rE,KAAA8rE,eAAA9rE,KAAAqsD,iBACArsD,KAAA2W,QAAA,QACA3W,KAAA8rE,cAAA,IAuCA,IAjCA9rE,KAAAysD,YACAW,EAAAptD,KAAAysD,WAAAe,kBAAA92C,IACA8wD,EAAAh7C,QAAA,SAAA7d,GACA0b,EAAA0hD,KAAAp9D,GAAA3O,KAAAysD,WAAA99C,IACK3O,OACFA,KAAA0sD,aACHU,EAAAptD,KAAA0sD,WAAAc,kBAAA92C,IACA6wD,EAAA/6C,QAAA,SAAA7d,GACA0b,EAAA0hD,KAAAp9D,GAAA3O,KAAA0sD,WAAA/9C,IACK3O,OAGL,IAAAA,KAAA6sD,cAAAtqD,OACA8nB,EAAA9hB,KAAAvI,KAAA6sD,cAAA,GAAAtkD,KAEA8hB,EAAA9hB,KAAA,WAGAvI,KAAA8rE,eAAA9rE,KAAA6sD,cAAAtqD,OAEAqqB,EAAAy6C,EAAAz6C,YAAA5sB,KAAA6sD,eAGAxiC,EAAAuC,YAAA,IAAA3R,WAAA2R,EAAAzV,YAIAkT,EAAAuC,YAAAloB,IAAAkoB,GAGAvC,EAAAxa,KAAA,IAAAoL,WAAAjb,KAAA6rE,cAGAzrE,EAAA,EAAaA,EAAAJ,KAAA4rE,aAAArpE,OAA8BnC,IAC3CiqB,EAAAxa,KAAAnL,IAAA1E,KAAA4rE,aAAAxrE,GAAAsc,GACAA,GAAA1c,KAAA4rE,aAAAxrE,GAAA+W,WAKA,IAAA/W,EAAA,EAAaA,EAAAJ,KAAA2sD,gBAAApqD,OAAiCnC,IAC9C+sD,EAAAntD,KAAA2sD,gBAAAvsD,GACA+sD,EAAApnD,UAAAonD,EAAAM,SAAAL,EACAD,EAAApnD,WAAA,IACAonD,EAAAlnD,QAAAknD,EAAAO,OAAAN,EACAD,EAAAlnD,SAAA,IACAokB,EAAAijC,eAAAH,EAAAx6C,SAAA,EACA0X,EAAAgjC,SAAAhkD,KAAA8jD,GAKA,IAAA/sD,EAAA,EAAaA,EAAAJ,KAAA4sD,gBAAArqD,OAAiCnC,IAC9C8sD,EAAAltD,KAAA4sD,gBAAAxsD,GACA8sD,EAAAS,QAAAT,EAAAx2C,IAAA02C,EACAF,EAAAS,SAAA,IACAtjC,EAAAkjC,SAAAlkD,KAAA6jD,GAIA7iC,EAAAkjC,SAAAK,aAAA5tD,KAAAssD,eAAAsB,aAGA5tD,KAAA6sD,cAAAtqD,OAAA,EACAvC,KAAAysD,WAAA,KACAzsD,KAAA4rE,aAAArpE,OAAA,EACAvC,KAAA2sD,gBAAApqD,OAAA,EACAvC,KAAA6rE,aAAA,EACA7rE,KAAA4sD,gBAAArqD,OAAA,EAGAvC,KAAA2W,QAAA,OAAA0T,GAGArqB,KAAA8rE,eAAA9rE,KAAAqsD,iBACArsD,KAAA2W,QAAA,QACA3W,KAAA8rE,cAAA,IASAlb,EAAA,SAAAtrC,GACA,IAGAmnC,EACAC,EAHA3sD,EAAAC,KACAgsE,GAAA,EAIApb,EAAA5uD,UAAAuU,KAAAhW,KAAAP,MAEAslB,QACAtlB,KAAAugE,oBAAAj7C,EAAAi7C,qBAAA,EACAvgE,KAAAisE,qBAEAjsE,KAAAksE,iBAAA,WACA,IAAAC,KACAnsE,KAAAisE,kBAAAE,EAEAA,EAAA5jE,KAAA,MACA4jE,EAAA7f,eAAA,IAAAmF,EAAA6B,eAGA6Y,EAAAC,UAAA,IAAA5nB,EACA2nB,EAAArZ,6BAAA,IAAArB,EAAAr7C,wBAAA,SACA+1D,EAAApZ,qCAAA,IAAAtB,EAAAr7C,wBAAA,kBACA+1D,EAAAnZ,WAAA,IAAA1M,EACA6lB,EAAA9Y,eAAA,IAAAjH,EAAA9mC,EAAA6mD,EAAA7f,gBACA6f,EAAAE,eAAAF,EAAAC,UAEAD,EAAAC,UACA1tD,KAAAytD,EAAArZ,8BACAp0C,KAAAytD,EAAAnZ,YACAmZ,EAAAC,UACA1tD,KAAAytD,EAAApZ,sCACAr0C,KAAAytD,EAAA7f,gBACA5tC,KAAAytD,EAAA9Y,gBAEA8Y,EAAA7f,eAAAnuC,GAAA,qBAAA+nC,GACAimB,EAAAC,UAAAznB,aAAAuB,EAAAxB,aAGAynB,EAAAC,UAAAjuD,GAAA,gBAAAtO,GACA,mBAAAA,EAAAtH,MAAA4jE,EAAAhZ,qBACAzG,MACAc,mBACA+S,oBAAAxgE,EAAAwgE,qBAEAC,MAAA,OACAj4D,KAAA,SAGA4jE,EAAA9Y,eAAAhH,iBACA8f,EAAAhZ,mBAAA,IAAA7B,EAAA5E,GAEAyf,EAAAnZ,WACAt0C,KAAAytD,EAAAhZ,oBACAz0C,KAAAytD,EAAA9Y,mBAKA8Y,EAAA9Y,eAAAl1C,GAAA,OAAAne,KAAA2W,QAAA/U,KAAA5B,KAAA,SAEAmsE,EAAA9Y,eAAAl1C,GAAA,OAAAne,KAAA2W,QAAA/U,KAAA5B,KAAA,UAGAA,KAAAssE,gBAAA,WACA,IAAAH,KACAnsE,KAAAisE,kBAAAE,EAEAA,EAAA5jE,KAAA,KACA4jE,EAAA7f,eAAA,IAAAmF,EAAA6B,eAGA6Y,EAAAxZ,aAAA,IAAAlB,EAAA8B,sBACA4Y,EAAAlsD,YAAA,IAAAwxC,EAAA+B,qBACA2Y,EAAAvZ,iBAAA,IAAAnB,EAAAgC,iBACA0Y,EAAAtZ,6BAAA,IAAApB,EAAAr7C,wBAAA,SACA+1D,EAAArZ,6BAAA,IAAArB,EAAAr7C,wBAAA,SACA+1D,EAAApZ,qCAAA,IAAAtB,EAAAr7C,wBAAA,kBACA+1D,EAAAnZ,WAAA,IAAA1M,EACA6lB,EAAAlZ,WAAA,IAAA7L,EACA+kB,EAAA/Y,cAAA,IAAA3B,EAAAiC,cACAyY,EAAA9Y,eAAA,IAAAjH,EAAA9mC,EAAA6mD,EAAA7f,gBACA6f,EAAAE,eAAAF,EAAAxZ,aAGAwZ,EAAAxZ,aACAj0C,KAAAytD,EAAAlsD,aACAvB,KAAAytD,EAAAvZ,kBAIAuZ,EAAAvZ,iBACAl0C,KAAAytD,EAAAtZ,8BACAn0C,KAAAytD,EAAAlZ,YACAkZ,EAAAvZ,iBACAl0C,KAAAytD,EAAArZ,8BACAp0C,KAAAytD,EAAAnZ,YAEAmZ,EAAAvZ,iBACAl0C,KAAAytD,EAAApZ,sCACAr0C,KAAAytD,EAAA7f,gBACA5tC,KAAAytD,EAAA9Y,gBAGA8Y,EAAAlZ,WAAAv0C,KAAAytD,EAAA/Y,eACA10C,KAAAytD,EAAA9Y,gBAEA8Y,EAAAvZ,iBAAAz0C,GAAA,gBAAAtO,GACA,IAAAzP,EAEA,gBAAAyP,EAAAtH,KAAA,CACAnI,EAAAyP,EAAAkuB,OAAAx7B,OAGA,MAAAnC,IACAqsD,GAAA,UAAA58C,EAAAkuB,OAAA39B,GAAAmI,KAGWmkD,GAAA,UAAA78C,EAAAkuB,OAAA39B,GAAAmI,OACXmkD,EAAA78C,EAAAkuB,OAAA39B,GACAssD,EAAAc,kBAAA+S,oBAAAxgE,EAAAwgE,sBAJA9T,EAAA58C,EAAAkuB,OAAA39B,GACAqsD,EAAAe,kBAAA+S,oBAAAxgE,EAAAwgE,qBAQA9T,IAAA0f,EAAAjZ,qBACAiZ,EAAA9Y,eAAAhH,iBACA8f,EAAAjZ,mBAAA,IAAA7B,EAAA5E,EAAAnnC,GAEA6mD,EAAAjZ,mBAAA/0C,GAAA,6BAAAqvC,GAIAd,IACAA,EAAAc,oBAKA2e,EAAAhZ,mBAAA4U,eAAAva,EAAA/2C,QAIA01D,EAAAjZ,mBAAA/0C,GAAA,oBACApe,EAAA4W,QAAA/U,KAAA7B,EAAA,YAEAosE,EAAAjZ,mBAAA/0C,GAAA,+BAAAoiD,GACA7T,GACAyf,EAAAhZ,mBAAA8U,4BAAA1H,KAKA4L,EAAAlZ,WACAv0C,KAAAytD,EAAAjZ,oBACAx0C,KAAAytD,EAAA9Y,iBAGA3G,IAAAyf,EAAAhZ,qBAEAgZ,EAAA9Y,eAAAhH,iBACA8f,EAAAhZ,mBAAA,IAAA7B,EAAA5E,GAGAyf,EAAAnZ,WACAt0C,KAAAytD,EAAAhZ,oBACAz0C,KAAAytD,EAAA9Y,oBAMA8Y,EAAA9Y,eAAAl1C,GAAA,OAAAne,KAAA2W,QAAA/U,KAAA5B,KAAA,SAEAmsE,EAAA9Y,eAAAl1C,GAAA,OAAAne,KAAA2W,QAAA/U,KAAA5B,KAAA,UAIAA,KAAAusE,uBAAA,SAAAhM,GACA,IAAA4L,EAAAnsE,KAAAisE,kBAEAjsE,KAAAugE,sBACA7T,IACAA,EAAAc,kBAAA/2C,SAAAxJ,EACAy/C,EAAAc,kBAAA92C,SAAAzJ,EACAg6D,EAAAva,GACAA,EAAAc,kBAAA+S,sBACA4L,EAAArZ,8BACAqZ,EAAArZ,6BAAAl8C,iBAGA61C,IACA0f,EAAAjZ,qBACAiZ,EAAAjZ,mBAAAiW,aACAgD,EAAAtZ,6BAAAj8C,iBAEA61C,EAAAe,kBAAA/2C,SAAAxJ,EACAw/C,EAAAe,kBAAA92C,SAAAzJ,EACAg6D,EAAAxa,GACA0f,EAAA/Y,cAAAlc,QACAuV,EAAAe,kBAAA+S,uBAGA4L,EAAApZ,sCACAoZ,EAAApZ,qCAAAn8C,iBAIA5W,KAAAkoE,oBAAA,SAAAtjB,GACA8H,GACA1sD,KAAAisE,kBAAA9Y,mBAAA+U,oBAAAtjB,IAIA5kD,KAAAqrE,cAAA,SAAApC,GACAxc,GAAAzsD,KAAAisE,kBAAA/Y,oBACAlzD,KAAAisE,kBAAA/Y,mBAAAmY,cAAApC,IAKAjpE,KAAAqJ,KAAA,SAAAwG,GACA,GAAAm8D,EAAA,CACA,IAAAQ,EAAAzF,EAAAl3D,GAEA28D,GAAA,QAAAxsE,KAAAisE,kBAAA1jE,KACAvI,KAAAksE,mBACOM,GAAA,OAAAxsE,KAAAisE,kBAAA1jE,MACPvI,KAAAssE,kBAEAN,GAAA,EAEAhsE,KAAAisE,kBAAAI,eAAAhjE,KAAAwG,IAIA7P,KAAAiT,MAAA,WACA+4D,GAAA,EAEAhsE,KAAAisE,kBAAAI,eAAAp5D,SAIAjT,KAAA2zD,cAAA,WACA3zD,KAAAisE,kBAAA7Y,eACApzD,KAAAisE,kBAAA7Y,cAAAlc,UAKA0Z,EAAA5uD,UAAA,IAAAgU,EAEApW,EAAAD,SACAixD,aACAS,qBACAC,qBACAiW,mBACAC,sBAGGiF,SAAA,GAAA7Y,oBAAA,GAAAC,iBAAA,GAAA6Y,kBAAA,GAAA5Y,kBAAA,GAAA6Y,iBAAA,GAAAlnB,qBAAA,GAAAmnB,qBAAA,KAAqKC,IAAA,SAAA7hD,EAAAprB,EAAAD,GASxK,aAEA,IAAAyc,EAAA4O,EAAA,2BACA7U,EAAA6U,EAAA,wCAAA7U,eACA22D,KACAA,EAAA1oE,GAAA4mB,EAAA,oBACA8hD,EAAAC,IAAA/hD,EAAA,mBAGA,IACAgiD,EAAA,IACAlO,EAAA,IACAC,EAAA,GAEAgI,EAAA,SAAAl3D,GACA,OAAAA,EAAA,SAAA1F,WAAA,IACA0F,EAAA,SAAA1F,WAAA,IACA0F,EAAA,SAAA1F,WAAA,IAUA8iE,EAAA,SAAA9wD,EAAAqjD,GACA,IAGAljD,EAAA/T,EAFA8jC,EAAA,EACAC,EAAAwyB,EAGA,MAAAxyB,EAAAnwB,EAAAhF,WAEA,GAAAgF,EAAAkwB,KAAA0yB,GAAA5iD,EAAAmwB,KAAAyyB,EAiCA1yB,IACAC,QAlCA,CAKA,OAHAhwB,EAAAH,EAAA/E,SAAAi1B,EAAAC,GACA/jC,EAAAukE,EAAA1oE,GAAA0S,UAAAwF,EAAAkjD,EAAAjjD,KAEAhU,GACA,UACAi3D,EAAAjjD,MACAijD,EAAAjjD,IAAAuwD,EAAA1oE,GAAAwY,SAAAN,IAEA,MACA,UACAkjD,EAAAne,QACAme,EAAAne,MAAAyrB,EAAA1oE,GAAA0Y,SAAAR,IAEA,MACA,QACA,MAIA,GAAAkjD,EAAAjjD,KAAAijD,EAAAne,MACA,OAGAhV,GAAAyyB,EACAxyB,GAAAwyB,IAgBAoO,EAAA,SAAA/wD,EAAAqjD,EAAA13D,GACA,IAGAwU,EAAA/T,EAAA4kE,EAAAtwD,EAAA0gC,EAFAlR,EAAA,EACAC,EAAAwyB,EAGAsO,GAAA,EAGA,MAAA9gC,EAAAnwB,EAAAhF,WAEA,GAAAgF,EAAAkwB,KAAA0yB,GAAA5iD,EAAAmwB,KAAAyyB,EAkCA1yB,IACAC,QAnCA,CAKA,OAHAhwB,EAAAH,EAAA/E,SAAAi1B,EAAAC,GACA/jC,EAAAukE,EAAA1oE,GAAA0S,UAAAwF,EAAAkjD,EAAAjjD,KAEAhU,GACA,UACA4kE,EAAAL,EAAA1oE,GAAAgZ,aAAAd,EAAAkjD,EAAAne,OACAxkC,EAAAiwD,EAAA1oE,GAAAoY,+BAAAF,GACA,UAAA6wD,GAAAtwD,IACA0gC,EAAAuvB,EAAA1oE,GAAAoZ,aAAAlB,GACAihC,IACAA,EAAAh1C,KAAA,QACAT,EAAA8qB,MAAAvpB,KAAAk0C,GACA6vB,GAAA,IAGA,MACA,QACA,MAGA,GAAAA,EACA,MAGA/gC,GAAAyyB,EACAxyB,GAAAwyB,EAYAxyB,EAAAnwB,EAAAhF,WACAk1B,EAAAC,EAAAwyB,EACAsO,GAAA,EACA,MAAA/gC,GAAA,EAEA,GAAAlwB,EAAAkwB,KAAA0yB,GAAA5iD,EAAAmwB,KAAAyyB,EAkCA1yB,IACAC,QAnCA,CAKA,OAHAhwB,EAAAH,EAAA/E,SAAAi1B,EAAAC,GACA/jC,EAAAukE,EAAA1oE,GAAA0S,UAAAwF,EAAAkjD,EAAAjjD,KAEAhU,GACA,UACA4kE,EAAAL,EAAA1oE,GAAAgZ,aAAAd,EAAAkjD,EAAAne,OACAxkC,EAAAiwD,EAAA1oE,GAAAoY,+BAAAF,GACA,UAAA6wD,GAAAtwD,IACA0gC,EAAAuvB,EAAA1oE,GAAAoZ,aAAAlB,GACAihC,IACAA,EAAAh1C,KAAA,QACAT,EAAA8qB,MAAAvpB,KAAAk0C,GACA6vB,GAAA,IAGA,MACA,QACA,MAGA,GAAAA,EACA,MAGA/gC,GAAAyyB,EACAxyB,GAAAwyB,IAiBAuO,EAAA,SAAAlxD,EAAAqjD,EAAA13D,GACA,IAGAwU,EAAA/T,EAAA4kE,EAAAtwD,EAAA0gC,EAAA2I,EAAA9lD,EAAAsd,EAFA2uB,EAAA,EACAC,EAAAwyB,EAGAsO,GAAA,EAEArb,GACAliD,QACAxK,KAAA,GAIA,MAAAinC,EAAAnwB,EAAAhF,WAEA,GAAAgF,EAAAkwB,KAAA0yB,GAAA5iD,EAAAmwB,KAAAyyB,EAwDA1yB,IACAC,QAzDA,CAKA,OAHAhwB,EAAAH,EAAA/E,SAAAi1B,EAAAC,GACA/jC,EAAAukE,EAAA1oE,GAAA0S,UAAAwF,EAAAkjD,EAAAjjD,KAEAhU,GACA,UAGA,GAFA4kE,EAAAL,EAAA1oE,GAAAgZ,aAAAd,EAAAkjD,EAAAne,OACAxkC,EAAAiwD,EAAA1oE,GAAAoY,+BAAAF,GACA,UAAA6wD,IACAtwD,IAAAuwD,IACA7vB,EAAAuvB,EAAA1oE,GAAAoZ,aAAAlB,GACAihC,IACAA,EAAAh1C,KAAA,QACAT,EAAA6qB,MAAAtpB,KAAAk0C,GACA6vB,GAAA,KAGAtlE,EAAAwlE,eAAA,CACA,GAAAzwD,GACA,IAAAk1C,EAAA1sD,KAAA,CACA6gD,EAAA,IAAAjrC,WAAA82C,EAAA1sD,MACAjF,EAAA,EACA,MAAA2xD,EAAAliD,KAAAtN,OACAmb,EAAAq0C,EAAAliD,KAAA8qC,QACAuL,EAAAxhD,IAAAgZ,EAAAtd,GACAA,GAAAsd,EAAAvG,WAEA21D,EAAA1oE,GAAAwZ,4BAAAsoC,KACAp+C,EAAAwlE,cAAAR,EAAA1oE,GAAAoZ,aAAA0oC,GACAp+C,EAAAwlE,cAAA/kE,KAAA,SAEAwpD,EAAA1sD,KAAA,EAGA0sD,EAAAliD,KAAAxG,KAAAiT,GACAy1C,EAAA1sD,MAAAiX,EAAAnF,WAGA,MACA,QACA,MAGA,GAAAi2D,GAAAtlE,EAAAwlE,cACA,MAGAjhC,GAAAyyB,EACAxyB,GAAAwyB,EAYAxyB,EAAAnwB,EAAAhF,WACAk1B,EAAAC,EAAAwyB,EACAsO,GAAA,EACA,MAAA/gC,GAAA,EAEA,GAAAlwB,EAAAkwB,KAAA0yB,GAAA5iD,EAAAmwB,KAAAyyB,EAkCA1yB,IACAC,QAnCA,CAKA,OAHAhwB,EAAAH,EAAA/E,SAAAi1B,EAAAC,GACA/jC,EAAAukE,EAAA1oE,GAAA0S,UAAAwF,EAAAkjD,EAAAjjD,KAEAhU,GACA,UACA4kE,EAAAL,EAAA1oE,GAAAgZ,aAAAd,EAAAkjD,EAAAne,OACAxkC,EAAAiwD,EAAA1oE,GAAAoY,+BAAAF,GACA,UAAA6wD,GAAAtwD,IACA0gC,EAAAuvB,EAAA1oE,GAAAoZ,aAAAlB,GACAihC,IACAA,EAAAh1C,KAAA,QACAT,EAAA6qB,MAAAtpB,KAAAk0C,GACA6vB,GAAA,IAGA,MACA,QACA,MAGA,GAAAA,EACA,MAGA/gC,GAAAyyB,EACAxyB,GAAAwyB,IAgBAyO,EAAA,SAAAj3B,EAAAk3B,GACA,GAAAl3B,EAAA1jB,OAAA0jB,EAAA1jB,MAAArwB,OAAA,CACA,IAAAkrE,EAAAD,EACA,qBAAAC,IACAA,EAAAn3B,EAAA1jB,MAAA,GAAAnc,KAEA6/B,EAAA1jB,MAAApG,QAAA,SAAAu/C,GACAA,EAAAt1D,IAAAN,EAAA41D,EAAAt1D,IAAAg3D,GACA1B,EAAAr1D,IAAAP,EAAA41D,EAAAr1D,IAAA+2D,GAEA1B,EAAA/uB,QAAA+uB,EAAAt1D,IAAAu2D,EACAjB,EAAA2B,QAAA3B,EAAAr1D,IAAAs2D,IAIA,GAAA12B,EAAA3jB,OAAA2jB,EAAA3jB,MAAApwB,OAAA,CACA,IAAAorE,EAAAH,EAWA,GAVA,qBAAAG,IACAA,EAAAr3B,EAAA3jB,MAAA,GAAAlc,KAEA6/B,EAAA3jB,MAAAnG,QAAA,SAAAu/C,GACAA,EAAAt1D,IAAAN,EAAA41D,EAAAt1D,IAAAk3D,GACA5B,EAAAr1D,IAAAP,EAAA41D,EAAAr1D,IAAAi3D,GAEA5B,EAAA/uB,QAAA+uB,EAAAt1D,IAAAu2D,EACAjB,EAAA2B,QAAA3B,EAAAr1D,IAAAs2D,IAEA12B,EAAAg3B,cAAA,CACA,IAAApnB,EAAA5P,EAAAg3B,cACApnB,EAAAzvC,IAAAN,EAAA+vC,EAAAzvC,IAAAk3D,GACAznB,EAAAxvC,IAAAP,EAAA+vC,EAAAxvC,IAAAi3D,GAEAznB,EAAAlJ,QAAAkJ,EAAAzvC,IAAAu2D,EACA9mB,EAAAwnB,QAAAxnB,EAAAzvC,IAAAu2D,KAQAY,EAAA,SAAAzxD,GACA,IAOAG,EANA8wD,GAAA,EACAS,EAAA,EACAC,EAAA,KACAlpB,EAAA,KACAY,EAAA,EACAT,EAAA,EAGA,MAAA5oC,EAAA5Z,OAAAwiD,GAAA,GACA,IAAAx8C,EAAAukE,EAAAC,IAAAj2D,UAAAqF,EAAA4oC,GACA,OAAAx8C,GACA,qBAGA,GAAA4T,EAAA5Z,OAAAwiD,EAAA,IACAqoB,GAAA,EACA,MAOA,GAJA5nB,EAAAsnB,EAAAC,IAAAloB,gBAAA1oC,EAAA4oC,GAIAS,EAAArpC,EAAA5Z,OAAA,CACA6qE,GAAA,EACA,MAEA,OAAAxoB,IACAtoC,EAAAH,EAAA/E,SAAA2tC,IAAAS,GACAZ,EAAAkoB,EAAAC,IAAA/mB,kBAAA1pC,IAEAyoC,GAAAS,EACA,MACA,YAGA,GAAArpC,EAAA5Z,OAAAwiD,EAAA,GACAqoB,GAAA,EACA,MAOA,GAJA5nB,EAAAsnB,EAAAC,IAAA5nB,cAAAhpC,EAAA4oC,GAIAS,EAAArpC,EAAA5Z,OAAA,CACA6qE,GAAA,EACA,MAEA,OAAAU,IACAxxD,EAAAH,EAAA/E,SAAA2tC,IAAAS,GACAsoB,EAAAhB,EAAAC,IAAAhnB,gBAAAzpC,IAEAuxD,IACA9oB,GAAAS,EACA,MACA,QACAT,IACA,MAEA,GAAAqoB,EACA,YAGA,UAAAU,GAAA,OAAAlpB,EACA,YAGA,IAAAmpB,EAAAf,EAAAc,EAEAhmE,GACA8qB,QAEArqB,KAAA,QACAkO,IAAAmuC,EACAluC,IAAAkuC,IAGAr8C,KAAA,QACAkO,IAAAmuC,EAAA,KAAAipB,EAAAE,EACAr3D,IAAAkuC,EAAA,KAAAipB,EAAAE,KAKA,OAAAjmE,GAQAkmE,EAAA,SAAA7xD,GACA,IAAAqjD,GACAjjD,IAAA,KACA8kC,MAAA,MAGAv5C,KAIA,QAAAyU,KAFA0wD,EAAA9wD,EAAAqjD,GAEAA,EAAAne,MACA,GAAAme,EAAAne,MAAAp/C,eAAAsa,GAAA,CACA,IAAAhU,EAAAi3D,EAAAne,MAAA9kC,GACA,OAAAhU,GACA,KAAA6T,EAAAiB,iBACAvV,EAAA6qB,SACA06C,EAAAlxD,EAAAqjD,EAAA13D,GACA,IAAAA,EAAA6qB,MAAApwB,eACAuF,EAAA6qB,MAEA,MACA,KAAAvW,EAAAkB,iBACAxV,EAAA8qB,SACAs6C,EAAA/wD,EAAAqjD,EAAA13D,GACA,IAAAA,EAAA8qB,MAAArwB,eACAuF,EAAA8qB,MAEA,MACA,QACA,OAIA,OAAA9qB,GAWA+0C,EAAA,SAAA1gC,EAAAqxD,GACA,IAEA1lE,EAFAmmE,EAAAlH,EAAA5qD,GAUA,OALArU,EADAmmE,EACAL,EAAAzxD,GAEA6xD,EAAA7xD,GAGArU,MAAA8qB,OAAA9qB,EAAA6qB,QAIA46C,EAAAzlE,EAAA0lE,GAEA1lE,GALA,MAQAlI,EAAAD,SACAk9C,aAGGqxB,kBAAA,GAAAC,mBAAA,GAAAC,0BAAA,GAAAC,uCAAA,KAAkHC,IAAA,SAAAtjD,EAAAprB,EAAAD,GACrH,IAEA4uE,EACAC,EACAC,EACAC,EACA7F,EACAC,EANArB,EAAA,IAQA8G,EAAA,SAAAI,GACA,OAAAA,EAAAlH,GAGA+G,EAAA,SAAAG,EAAAb,GACA,OAAAa,EAAAb,GAGAW,EAAA,SAAA7pB,GACA,OAAAA,EAAA6iB,GAGAiH,EAAA,SAAA9pB,EAAAkpB,GACA,OAAAlpB,EAAAkpB,GAGAjF,EAAA,SAAAjkB,EAAAkpB,GACA,OAAAS,EAAAG,EAAA9pB,EAAAkpB,KAGAhF,EAAA,SAAAlkB,EAAAkpB,GACA,OAAAU,EAAAC,EAAA7pB,GAAAkpB,IAGAluE,EAAAD,SACA4uE,mBACAC,mBACAC,mBACAC,mBACA7F,mBACAC,yBAGI8F,IAAA,SAAA5jD,EAAAprB,EAAAD,GACJ,aAEA,IAAA4nD,EAMAA,EAAA,SAAAsnB,GACA,IAEAC,EAAAD,EAAA13D,WAGA43D,EAAA,EAGAC,EAAA,EAGAhvE,KAAAuC,OAAA,WACA,SAAAusE,GAIA9uE,KAAAivE,cAAA,WACA,SAAAH,EAAAE,GAIAhvE,KAAAkvE,SAAA,WACA,IACA3pE,EAAAspE,EAAA13D,WAAA23D,EACAK,EAAA,IAAAl0D,WAAA,GACAm0D,EAAAtiE,KAAAuC,IAAA,EAAAy/D,GAEA,OAAAM,EACA,UAAA5sE,MAAA,sBAGA2sE,EAAAzqE,IAAAmqE,EAAAz3D,SAAA7R,EACAA,EAAA6pE,IACAL,EAAA,IAAAhuC,SAAAouC,EAAA/9D,QAAA4vB,UAAA,GAGAguC,EAAA,EAAAI,EACAN,GAAAM,GAIApvE,KAAA2qD,SAAA,SAAAlgD,GACA,IAAA4kE,EACAL,EAAAvkE,GACAskE,IAAAtkE,EACAukE,GAAAvkE,IAEAA,GAAAukE,EACAK,EAAAviE,KAAAuzB,MAAA51B,EAAA,GAEAA,GAAA,EAAA4kE,EACAP,GAAAO,EAEArvE,KAAAkvE,WAEAH,IAAAtkE,EACAukE,GAAAvkE,IAKAzK,KAAA8qD,SAAA,SAAAzlD,GACA,IACAiqE,EAAAxiE,KAAAuC,IAAA2/D,EAAA3pE,GACAkqE,EAAAR,IAAA,GAAAO,EAUA,OARAN,GAAAM,EACAN,EAAA,EACAD,IAAAO,EACKR,EAAA,GACL9uE,KAAAkvE,WAGAI,EAAAjqE,EAAAiqE,EACAA,EAAA,EACAC,GAAAD,EAAAtvE,KAAA8qD,SAAAwkB,GAEAC,GAIAvvE,KAAAwvE,iBAAA,WACA,IAAAC,EACA,IAAAA,EAAA,EAA8BA,EAAAT,IAAyCS,EACvE,QAAAV,EAAA,aAAAU,GAIA,OAFAV,IAAAU,EACAT,GAAAS,EACAA,EAMA,OADAzvE,KAAAkvE,WACAO,EAAAzvE,KAAAwvE,oBAIAxvE,KAAAyqD,sBAAA,WACAzqD,KAAA2qD,SAAA,EAAA3qD,KAAAwvE,qBAIAxvE,KAAA6qD,cAAA,WACA7qD,KAAA2qD,SAAA,EAAA3qD,KAAAwvE,qBAIAxvE,KAAA0qD,sBAAA,WACA,IAAAglB,EAAA1vE,KAAAwvE,mBACA,OAAAxvE,KAAA8qD,SAAA4kB,EAAA,MAIA1vE,KAAAkpD,cAAA,WACA,IAAAqmB,EAAAvvE,KAAA0qD,wBACA,SAAA6kB,EAEA,EAAAA,IAAA,GAEA,GAAAA,IAAA,IAKAvvE,KAAA4qD,YAAA,WACA,WAAA5qD,KAAA8qD,SAAA,IAIA9qD,KAAAwqD,iBAAA,WACA,OAAAxqD,KAAA8qD,SAAA,IAGA9qD,KAAAkvE,YAGAtvE,EAAAD,QAAA4nD,OAEIooB,IAAA,SAAA3kD,EAAAprB,EAAAD,GAUJ,aAEA,IAAAqW,EAAA,WACAhW,KAAAuW,KAAA,WACA,IAAA2H,KAOAle,KAAAme,GAAA,SAAA5V,EAAA6V,GACAF,EAAA3V,KACA2V,EAAA3V,OAEA2V,EAAA3V,GAAA2V,EAAA3V,GAAA+O,OAAA8G,IAQApe,KAAAqe,IAAA,SAAA9V,EAAA6V,GACA,IAAAtG,EACA,QAAAoG,EAAA3V,KAGAuP,EAAAoG,EAAA3V,GAAAuK,QAAAsL,GACAF,EAAA3V,GAAA2V,EAAA3V,GAAA8O,QACA6G,EAAA3V,GAAA+V,OAAAxG,EAAA,GACAA,GAAA,IAOA9X,KAAA2W,QAAA,SAAApO,GACA,IAAAgW,EAAAne,EAAAmC,EAAAic,EAEA,GADAD,EAAAL,EAAA3V,GACAgW,EAOA,OAAAjc,UAAAC,OAEA,IADAA,EAAAgc,EAAAhc,OACAnC,EAAA,EAAmBA,EAAAmC,IAAYnC,EAC/Bme,EAAAne,GAAAG,KAAAP,KAAAsC,UAAA,QAEO,CAGP,IAFAkc,KACApe,EAAAkC,UAAAC,OACAnC,EAAA,EAAmBA,EAAAkC,UAAAC,SAAsBnC,EACzCoe,EAAAnV,KAAA/G,UAAAlC,IAGA,IADAmC,EAAAgc,EAAAhc,OACAnC,EAAA,EAAmBA,EAAAmC,IAAYnC,EAC/Bme,EAAAne,GAAA+X,MAAAnY,KAAAwe,KAOAxe,KAAAye,QAAA,WACAP,QAcAlI,EAAAhU,UAAA0c,KAAA,SAAAC,GASA,OARA3e,KAAAme,GAAA,gBAAAtO,GACA8O,EAAAtV,KAAAwG,KAGA7P,KAAAme,GAAA,gBAAAS,GACAD,EAAA1L,MAAA2L,KAGAD,GAOA3I,EAAAhU,UAAAqH,KAAA,SAAAwG,GACA7P,KAAA2W,QAAA,OAAA9G,IAGAmG,EAAAhU,UAAAiR,MAAA,SAAA2L,GACA5e,KAAA2W,QAAA,OAAAiI,IAGAhf,EAAAD,QAAAqW,OAEI45D,IAAA,SAAA5kD,EAAAprB,EAAAD,IAIJ,SAAAF,GAGA,IAAAowE,EAAA,2EACAC,EAAA,oBACAC,EAAA,oBACAC,EAAA,qCAEAC,GAOA19B,iBAAA,SAAAF,EAAAC,EAAA49B,GAKA,GAJAA,QAEA79B,IAAA1pC,OACA2pC,IAAA3pC,QACA2pC,EAAA,CAIA,IAAA49B,EAAAC,gBACA,OAAA99B,EAEA,IAAA+9B,EAAApwE,KAAAqwE,SAAAh+B,GACA,IAAA+9B,EACA,UAAA5tE,MAAA,mCAGA,OADA4tE,EAAAp5D,KAAAi5D,EAAAK,cAAAF,EAAAp5D,MACAi5D,EAAAM,kBAAAH,GAEA,IAAAI,EAAAxwE,KAAAqwE,SAAA/9B,GACA,IAAAk+B,EACA,UAAAhuE,MAAA,uCAEA,GAAAguE,EAAAC,OAGA,OAAAP,EAAAC,iBAGAK,EAAAx5D,KAAAi5D,EAAAK,cAAAE,EAAAx5D,MACAi5D,EAAAM,kBAAAC,IAHAl+B,EAKA,IAAAo+B,EAAA1wE,KAAAqwE,SAAAh+B,GACA,IAAAq+B,EACA,UAAAluE,MAAA,mCAEA,IAAAkuE,EAAAC,QAAAD,EAAA15D,MAAA,MAAA05D,EAAA15D,KAAA,IAGA,IAAA45D,EAAAd,EAAA3lD,KAAAumD,EAAA15D,MACA05D,EAAAC,OAAAC,EAAA,GACAF,EAAA15D,KAAA45D,EAAA,GAEAF,EAAAC,SAAAD,EAAA15D,OACA05D,EAAA15D,KAAA,KAEA,IAAA65D,GAGAJ,OAAAC,EAAAD,OACAE,OAAAH,EAAAG,OACA35D,KAAA,KACA85D,OAAAN,EAAAM,OACAC,MAAAP,EAAAO,MACA/4D,SAAAw4D,EAAAx4D,UAEA,IAAAw4D,EAAAG,SAIAE,EAAAF,OAAAD,EAAAC,OAGA,MAAAH,EAAAx5D,KAAA,IACA,GAAAw5D,EAAAx5D,KAgBW,CAKX,IAAAg6D,EAAAN,EAAA15D,KACAi6D,EAAAD,EAAAlmD,UAAA,EAAAkmD,EAAAE,YAAA,QAAAV,EAAAx5D,KACA65D,EAAA75D,KAAAi5D,EAAAK,cAAAW,QApBAJ,EAAA75D,KAAA05D,EAAA15D,KAIAw5D,EAAAM,SACAD,EAAAC,OAAAJ,EAAAI,OAIAN,EAAAO,QACAF,EAAAE,MAAAL,EAAAK,QAiBA,OAHA,OAAAF,EAAA75D,OACA65D,EAAA75D,KAAAk5D,EAAAC,gBAAAF,EAAAK,cAAAE,EAAAx5D,MAAAw5D,EAAAx5D,MAEAi5D,EAAAM,kBAAAM,IAEAR,SAAA,SAAAn9C,GACA,IAAAi+C,EAAAtB,EAAA1lD,KAAA+I,GACA,OAAAi+C,GAIAV,OAAAU,EAAA,OACAR,OAAAQ,EAAA,OACAn6D,KAAAm6D,EAAA,OACAL,OAAAK,EAAA,OACAJ,MAAAI,EAAA,OACAn5D,SAAAm5D,EAAA,QARA,MAWAb,cAAA,SAAAt5D,GAOAA,IAAArT,MAAA,IAAA4K,UAAAue,KAAA,IAAA3pB,QAAA4sE,EAAA,IASA,MAAA/4D,EAAAzU,UAAAyU,IAAA7T,QAAA6sE,EAAA,KAAAztE,QACA,OAAAyU,EAAArT,MAAA,IAAA4K,UAAAue,KAAA,KAEAyjD,kBAAA,SAAAY,GACA,OAAAA,EAAAV,OAAAU,EAAAR,OAAAQ,EAAAn6D,KAAAm6D,EAAAL,OAAAK,EAAAJ,MAAAI,EAAAn5D,WAKA,kBAAArY,GAAA,kBAAAC,EACAA,EAAAD,QAAAswE,EACA,oBAAApwE,KAAAC,IACAD,KAAA,WAA2B,OAAAowE,IAC3B,kBAAAtwE,EACAA,EAAA,cAAAswE,EAEAxwE,EAAA,cAAAwwE,GA7JA,CA8JCjwE,WAGGoxE,IAAA,SAAApmD,EAAAprB,EAAAD,IACJ,SAAAorB,GAIA,aAMA,SAAAlR,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAJ7ExL,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAKA,IAAA6pB,EAAAF,EAAA,iBAEAG,EAAAtR,EAAAqR,GAEAuE,EAAA,qBAAA9nB,cAAA,gCAAAojB,IAAA,gBAEA2E,EAAA7V,EAAA4V,GAUA4hD,EAAA,SAAArtE,GACAlD,OAAAsY,iBAAApV,EAAAkiD,OACAzhD,IACAxD,IAAA,WAEA,OADAyuB,EAAA,WAAA8C,IAAAC,KAAA,0DACAzuB,EAAA3C,MAAAM,MAGAN,OACAJ,IAAA,WAEA,OADAyuB,EAAA,WAAA8C,IAAAC,KAAA,8DACAzuB,EAAA3C,MAAAwO,OAGAyxD,aACArgE,IAAA,WAEA,OADAyuB,EAAA,WAAA8C,IAAAC,KAAA,oEACAzuB,EAAA3C,MAAAwO,UAMAyhE,EAAA,SAAAzvD,GACA,IAAA0vD,OAAAtkE,EAOA,OAJAskE,EADAzhC,MAAAjuB,IAAA/U,KAAAuB,IAAAwT,KAAAlJ,IACAiwB,OAAAC,UAEAhnB,EAEA0vD,GAWAC,EAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAr4B,EAAAnuB,EAAA,WAAAouB,eAAApuB,EAAA,WAAAtY,OAEA6+D,GACAA,EAAAllD,QAAA,SAAA2gC,GACA,IAAA9iD,EAAA8iD,EAAAx6C,OAEA3S,KAAA4xE,kBAAAvnE,GAAAqhB,OAAA,IAAA4tB,EAAA6T,EAAApnD,UAAA/F,KAAAi3C,gBAAAkW,EAAAlnD,QAAAjG,KAAAi3C,gBAAAkW,EAAAtjD,QACK4nE,GAGLE,GACA,WACA,IAAAE,EAAAP,EAAAG,EAAAn9B,aAAAzyB,UAEA8vD,EAAAnlD,QAAA,SAAA+gC,GACA,IAAA/f,EAAA+f,EAAAI,QAAA3tD,KAAAi3C,gBAEAsW,EAAAP,OAAAxgC,QAAA,SAAA05B,GACA,IAAAliD,EAAA,IAAAs1C,EAAA9L,IAAA0Y,EAAA7kD,OAAA6kD,EAAAhzB,KAAAgzB,EAAAr2C,MAAA,IAEA7L,EAAAkiD,QACAliD,EAAA3C,MAAA6kD,EACAmrB,EAAArtE,GAEAhE,KAAA8xE,eAAApmD,OAAA1nB,IACShE,OACFyxE,GAKPA,EAAAK,gBAAAL,EAAAK,eAAAxhE,MAAAmhE,EAAAK,eAAAxhE,KAAA/N,QACA,WAMA,IALA,IAAA+N,EAAAmhE,EAAAK,eAAAxhE,KACAyhE,KAIA3xE,EAAA,EAAyBA,EAAAkQ,EAAA/N,OAAiBnC,IAC1CkQ,EAAAlQ,IACA2xE,EAAA1oE,KAAAiH,EAAAlQ,IAKA,IAAA4xE,EAAAD,EAAAr6D,OAAA,SAAApL,EAAAtI,GACA,IAAAiuE,EAAA3lE,EAAAtI,EAAA+B,eAKA,OAHAksE,EAAA5oE,KAAArF,GACAsI,EAAAtI,EAAA+B,WAAAksE,EAEA3lE,OAIA4lE,EAAApxE,OAAAyrB,KAAAylD,GAAAzpC,KAAA,SAAAhiC,EAAAY,GACA,OAAAyhC,OAAAriC,GAAAqiC,OAAAzhC,KAIA+qE,EAAA1lD,QAAA,SAAAzmB,EAAAqvD,GACA,IAAA+c,EAAAH,EAAAjsE,GACAqsE,EAAAxpC,OAAAspC,EAAA9c,EAAA,KAAAyc,EAGAM,EAAA3lD,QAAA,SAAAxoB,GACAA,EAAAiC,QAAAmsE,MAlCA,GArBA,IAgEAzyE,EAAA,YACA6xE,mBACAF,mBAEA1xE,EAAAD,UAAA,aACCY,KAAAP,KAAA,qBAAA+qB,IAAA,qBAAAhrB,UAAA,qBAAA4H,oBACEokB,gBAAA,KAAmBsmD,IAAA,SAAArnD,EAAAprB,EAAAD,GAYtB,aAEAmB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAEA,IAAAixE,EAAA,SAAA9R,GACA,uBAAAh6D,KAAAg6D,IAWA+R,EAAA,SAAA/R,GACA,wBAAAh6D,KAAAg6D,IAYAgS,EAAA,SAAAjqE,GACA,IAAAzG,GAAgByG,KAAA,GAAAkqE,eAChBA,EAAAlqE,EAAAI,OAAAhF,MAAA,KAeA,OAZA7B,EAAAyG,KAAAkqE,EAAA93B,QAAAhyC,OACA8pE,EAAAjmD,QAAA,SAAAkmD,GACA,IAAAC,EAAAD,EAAA/pE,OAAAhF,MAAA,KAEA,GAAAgvE,EAAApwE,OAAA,GACA,IAAAqwE,EAAAD,EAAA,GAAAxvE,QAAA,SAAAwF,OACAtH,EAAAsxE,EAAA,GAAAxvE,QAAA,SAAAwF,OAEA7G,EAAA2wE,WAAAG,GAAAvxE,KAIAS,GAWAyvB,EAAA,SAAAE,GACA,OAAAA,EAAArZ,IAAA,SAAAooD,GACA,OAAAA,EAAAr9D,QAAA,+BAAA0vE,EAAAC,EAAAC,GACA,IAAAC,GAAA,KAAApqC,OAAAkqC,GAAAx9D,SAAA,KAAA+B,OAAA,GACA47D,GAAA,KAAArqC,OAAAmqC,GAAAz9D,SAAA,KAAA+B,OAAA,GAEA,cAAA27D,EAAA,KAAAC,OAKAtzE,EAAA,YACA2yE,eACAE,mBACAD,eACAhhD,yBAEA3xB,EAAAD,UAAA,gBACIuzE,IAAA,SAAAloD,EAAAprB,EAAAD,GAaJ,aAEAmB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAEA,IAAA8xE,EAAA,SAAAC,EAAAj/C,EAAA1I,GACA,IAAA3E,EAAAqN,EAAAk/C,QAGA,GAAA5nD,EAAA4hC,UAAA5hC,EAAA4hC,SAAA9qD,OAKA,QAAAy7B,KAJAo1C,EAAAxB,oBACAwB,EAAAxB,sBAGAnmD,EAAA6hC,eACA,IAAA8lB,EAAAxB,kBAAA5zC,GAAA,CACAlX,EAAAC,MAAApQ,SAA8BpO,KAAA,QAAA5H,KAAA,YAC9B,IAAA0J,EAAAyc,EAAAwsD,aAAAC,aAAAv1C,GAMAo1C,EAAAxB,kBAAA5zC,GAJA3zB,GAQAyc,EAAA8N,oBACAC,KAAA,WACApwB,GAAAu5B,EACAlJ,MAAAkJ,IACW,GAAA3zB,MAMXohB,EAAA8hC,UAAA9hC,EAAA8hC,SAAAhrD,SAAA6wE,EAAAtB,iBACAsB,EAAAtB,eAAAhrD,EAAA8N,oBACAC,KAAA,WACAC,MAAA,mBACK,GAAAzqB,MACL+oE,EAAAtB,eAAAh+C,gCAAArI,EAAA8hC,SAAAK,eAIAjuD,EAAA,WAAAwzE,EACAvzE,EAAAD,UAAA,gBACI6zE,IAAA,SAAAxoD,EAAAprB,EAAAD,GAcJ,aAEAmB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAEA,IAAAoyE,GAEAC,oBAAA,EACAC,gBAAA,OAGAh0E,EAAA,WAAA8zE,EACA7zE,EAAAD,UAAA,gBACIi0E,IAAA,SAAA5oD,EAAAprB,EAAAD,IACJ,SAAAorB,GAIA,aAEAjqB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAA8X,EAAA,WAAiC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAzhB,GAEA8U,EAAA,SAAAC,EAAAC,EAAAC,GAAuC,IAAAC,GAAA,EAAmB,MAAAA,EAAA,CAA4B,IAAA9sB,EAAA2sB,EAAA1sB,EAAA2sB,EAAAG,EAAAF,EAAiDC,GAAA,EAAgB,OAAA9sB,MAAAuT,SAAArT,WAAkD,IAAA8sB,EAAAhuB,OAAAiuB,yBAAAjtB,EAAAC,GAA8D,QAAAkL,IAAA6hB,EAAA,CAAuO,aAAAA,EAA4B,OAAAA,EAAAztB,MAA4B,IAAAT,EAAAkuB,EAAA7tB,IAAuB,QAAAgM,IAAArM,EAA4B,OAAoB,OAAAA,EAAAL,KAAAsuB,GAA5U,IAAA5G,EAAAnnB,OAAAif,eAAAje,GAA4C,UAAAmmB,EAAuB,OAA2BwG,EAAAxG,EAAayG,EAAA3sB,EAAgB4sB,EAAAE,EAAgBD,GAAA,EAAeE,EAAA7G,OAAAhb,IAE3b,SAAA4M,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAE7E,SAAAyN,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAE3F,SAAAwK,EAAAC,EAAAC,GAA0C,uBAAAA,GAAA,OAAAA,EAA+D,UAAA1K,UAAA,kEAAA0K,GAAuGD,EAAAzd,UAAAlB,OAAAY,OAAAge,KAAA1d,WAAyEkE,aAAe7E,MAAAoe,EAAAze,YAAA,EAAAyY,UAAA,EAAAD,cAAA,KAA6EkG,IAAA5e,OAAA6e,eAAA7e,OAAA6e,eAAAF,EAAAC,GAAAD,EAAAG,UAAAF,GAErX,IAAAm0D,EAAA7oD,EAAA,mBAEA8oD,EAAAj6D,EAAAg6D,GAEApkD,EAAA,qBAAA9nB,cAAA,gCAAAojB,IAAA,gBAEA2E,EAAA7V,EAAA4V,GAEAskD,EAAA/oD,EAAA,yBAEAgpD,EAAAn6D,EAAAk6D,GAEAE,EAAAjpD,EAAA,qBAEAkpD,EAAAr6D,EAAAo6D,GAEAE,EAAAnpD,EAAA,iBAWAopD,EAAA,SAAAnhD,GAGA,SAAAmhD,IACA,IAAAt0D,EAAA9f,KAEA+Z,EAAA/Z,KAAAo0E,GAEA5lD,EAAA1tB,OAAAif,eAAAq0D,EAAApyE,WAAA,cAAAhC,MAAAO,KAAAP,MACAA,KAAAq0E,iBACAr0E,KAAAy5B,WAAA,SAEAz5B,KAAAme,IAAA,0CAAAkM,GAEAvK,EAAAw0D,OAAAR,EAAA,WAAAS,eAAAlqD,EAAAmqD,OACA10D,EAAAuzD,SAAA,EAAA3jD,EAAA,YAAA5P,EAAAw0D,OAAArrE,YACA6W,EAAAiH,MAAAjH,EAAAw0D,OAAAnhD,KACArT,EAAA2Z,WAAA,OAEA3Z,EAAAiH,MAAA5I,GAAA,qBACA,IAAA/d,EAAA0f,EAAAu0D,cAAA9xE,OAEA,MAAAnC,IACA0f,EAAAu0D,cAAAj0E,GAAAw3B,UAKA9X,EAAAw0D,QACAx0D,EAAAw0D,OAAAG,aA4EA,OAxGAj1D,EAAA40D,EAAAnhD,GAgDA9Z,EAAAi7D,IACAzyE,IAAA,oBACAN,MAAA,eAYAM,IAAA,kBACAN,MAAA,SAAAkH,GACA,IAAAmsE,GAAA,EAAAP,EAAA3B,kBAAAjqE,GACA6qE,OAAAnmE,EAGA,kBAAAynE,EAAAnsE,MAAA,eAAAmsE,EAAAnsE,KAIA,UAAA/F,MAAA,gCAIA,OANA4wE,EAAA,IAAAY,EAAA,WAAAh0E,MAKAA,KAAAq0E,cAAAhrE,KAAA+pE,GACAA,KAYAzxE,IAAA,cACAN,MAAA,SAAAs2B,GACA,YAAAA,EAEA33B,KAAA+mB,MAAA4Q,MAAA,GACO,WAAAA,GAEP33B,KAAA+mB,MAAA4Q,MAAA,GAEA,UAAA33B,KAAAy5B,aACAz5B,KAAAy5B,WAAA,QACAz5B,KAAAs0E,OAAAK,uBAKAP,EAzGA,CA0GC1kD,EAAA,WAAAsM,aAEDr8B,EAAA,WAAAy0E,EACA,IACAtzE,OAAAC,eAAAqzE,EAAApyE,UAAA,YAOAf,IAAA,WACA,OAAAjB,KAAAs0E,OAIAt0E,KAAAs0E,OAAAM,gBAAA,YAHA/mC,KAYAnpC,IAAA,SAAArD,GACA,IAAAjB,OAAA6M,EACA8tB,EAAA/6B,KAAAs0E,OAAAM,gBAAA,YAIA,GAFA50E,KAAAs0E,OAAAO,gBAAA,WAAAxzE,GAEAA,EAAA05B,EAGA,IAAA36B,EAAA,EAAmBA,EAAAJ,KAAAq0E,cAAA9xE,OAA+BnC,IAClDJ,KAAAq0E,cAAAj0E,GAAAu2C,OAAAt1C,EAAA05B,GAIA,OAAA15B,KAGC,MAAA2G,GAIDosE,EAAApyE,UAAA6f,SAAAgsB,IAGA,QAAA9rC,KAAAmyE,EAAA,WACAE,EAAAryE,GAAAmyE,EAAA,WAAAnyE,GAEAnC,EAAAD,UAAA,aACCY,KAAAP,KAAA,qBAAA+qB,IAAA,qBAAAhrB,UAAA,qBAAA4H,oBACEmtE,gBAAA,GAAAC,oBAAA,GAAAC,wBAAA,GAAAC,kBAAA,KAA0FC,IAAA,SAAAlqD,EAAAprB,EAAAD,IAC7F,SAAAorB,GAIA,aAEAjqB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAA8X,EAAA,WAAiC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAzhB,GAEA8U,EAAA,SAAAC,EAAAC,EAAAC,GAAuC,IAAAC,GAAA,EAAmB,MAAAA,EAAA,CAA4B,IAAA9sB,EAAA2sB,EAAA1sB,EAAA2sB,EAAAG,EAAAF,EAAiDC,GAAA,EAAgB,OAAA9sB,MAAAuT,SAAArT,WAAkD,IAAA8sB,EAAAhuB,OAAAiuB,yBAAAjtB,EAAAC,GAA8D,QAAAkL,IAAA6hB,EAAA,CAAuO,aAAAA,EAA4B,OAAAA,EAAAztB,MAA4B,IAAAT,EAAAkuB,EAAA7tB,IAAuB,QAAAgM,IAAArM,EAA4B,OAAoB,OAAAA,EAAAL,KAAAsuB,GAA5U,IAAA5G,EAAAnnB,OAAAif,eAAAje,GAA4C,UAAAmmB,EAAuB,OAA2BwG,EAAAxG,EAAayG,EAAA3sB,EAAgB4sB,EAAAE,EAAgBD,GAAA,EAAeE,EAAA7G,OAAAhb,IAE3b,SAAA4M,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAE7E,SAAAyN,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAE3F,SAAAwK,EAAAC,EAAAC,GAA0C,uBAAAA,GAAA,OAAAA,EAA+D,UAAA1K,UAAA,kEAAA0K,GAAuGD,EAAAzd,UAAAlB,OAAAY,OAAAge,KAAA1d,WAAyEkE,aAAe7E,MAAAoe,EAAAze,YAAA,EAAAyY,UAAA,EAAAD,cAAA,KAA6EkG,IAAA5e,OAAA6e,eAAA7e,OAAA6e,eAAAF,EAAAC,GAAAD,EAAAG,UAAAF,GAErX,IAAAwL,EAAAF,EAAA,iBAEAG,EAAAtR,EAAAqR,GAEAuE,EAAA,qBAAA9nB,cAAA,gCAAAojB,IAAA,gBAEA2E,EAAA7V,EAAA4V,GAEA0lD,EAAAnqD,EAAA,kBAEAoqD,EAAAv7D,EAAAs7D,GAEAE,EAAArqD,EAAA,4BAEAsqD,EAAAz7D,EAAAw7D,GAEAE,EAAAvqD,EAAA,qCAEAwqD,EAAA37D,EAAA07D,GAEAE,EAAAzqD,EAAA,yBAEA0qD,EAAA1qD,EAAA,6BAEA2qD,EAAA97D,EAAA67D,GAEA1lD,EAAAhF,EAAA,cAEAiF,EAAApW,EAAAmW,GAEAikD,EAAAjpD,EAAA,qBAEAkpD,EAAAr6D,EAAAo6D,GAEA2B,EAAA,WACA,IAAA9tE,OAAAmF,EAEA,IACAnF,EAAAkjB,EAAAoG,QAAA,6BACG,MAAAppB,IAIH,OAAAF,GAUA+tE,EAAA,SAAAC,GAGA3qD,EAAA,WAAA8Y,WAAA6xC,EAAA5B,EAAA,WAAAR,sBAUAqC,EAAA,WACA,OAAAjpE,KAAA6qC,SAAAriC,SAAA,IAAA+B,MAAA,MAYA2+D,EAAA,SAAAjpC,EAAAkpC,IACA,kBAAAA,KAAA,KACAA,EAAA,GAGA,IAAA19D,EAAAzL,KAAA4L,IAAA,GAAAu9D,GAEA,OAAAnpE,KAAAoB,MAAA6+B,EAAAx0B,MAYA29D,EAAA,SAAAjjD,GAGA,SAAAijD,EAAA/hD,GACA,IAAArU,EAAA9f,KAEA+Z,EAAA/Z,KAAAk2E,GAEA1nD,EAAA1tB,OAAAif,eAAAm2D,EAAAl0E,WAAA,cAAAhC,MAAAO,KAAAP,MACA,IAAAm2E,OAAAlpE,EAIAjN,KAAAo2E,WAAAlC,EAAA,WAAAP,gBAGA3zE,KAAAq2E,WAGAr2E,KAAAs2E,YAAA,EAKAt2E,KAAAu2E,eAAA1oC,IAEA7tC,KAAAs0C,aAAAngB,EAEAn0B,KAAAw2E,gBAAA3oC,IACA7tC,KAAAy2E,gBAAA5oC,IAKA7tC,KAAA82C,UAAA,EACA92C,KAAAw6C,iBAAA,EAEA27B,EAAAhrD,EAAA,WAAAurD,KAAAn/D,OAAAC,aAAAW,MAAA,KAAA4C,MAAA/Y,UAAAqV,MAAA9W,KAAA60E,EAAA,WAAAtnB,kBASA,IAAA6oB,EAAA32E,KAAAs0C,aAAA++B,QAAA5uE,KAAAtB,QAAA,qBAEAnD,KAAA42E,wBAAA,0BAAAD,EAAAZ,IACA/1E,KAAA62E,sBAAA,wBAAAF,EAAAZ,IAEA5qD,EAAA,WAAAnrB,KAAA42E,yBAAA,WAEA,cADAzrD,EAAA,WAAArL,EAAA82D,yBACAT,GAGAn2E,KAAAs0C,aAAAggC,OAAAwC,qBAAA92E,KAAA42E,yBAEA52E,KAAA+2E,aAAA,EAAA9mD,EAAA,YAAA0lD,EAAA,WAAAC,KACA51E,KAAA+2E,YAAA3oD,aAAkC4oD,OAAA,OAAA1xD,aAClCtlB,KAAA+2E,YAAA5oD,UAAA,SAAA9D,GACA,SAAAA,EAAAxa,KAAAmnE,QACAl3D,EAAAm3D,eAAA5sD,EAAAxa,KAAA4b,UAIAzrB,KAAA03B,IAAA,uBACA5X,EAAAw0B,aAAAvtB,MAAApQ,QAAA,oBAGA7V,OAAAC,eAAAf,KAAA,mBACAiB,IAAA,WACA,OAAAjB,KAAAw6C,kBAEA91C,IAAA,SAAAmK,GACA,kBAAAA,MAAA,IACA7O,KAAAw6C,iBAAA3rC,EAEA7O,KAAAs0C,aAAAggC,OAAA4C,oBAGAl3E,KAAAu2E,eAAA1oC,IACA7tC,KAAAw2E,gBAAA3oC,IACA7tC,KAAAy2E,gBAAA5oC,IAEA7tC,KAAA+2E,YAAA3oD,aAAwC4oD,OAAA,cAKxCl2E,OAAAC,eAAAf,KAAA,YACAiB,IAAA,WACA,IAAAjB,KAAAs0C,eAAAt0C,KAAAs0C,aAAAggC,UAAA,oBAAAt0E,KAAAs0C,aAAAggC,QACA,OAAA5kD,EAAA,WAAAmd,kBAGA,IAAAnU,EAAA14B,KAAAs0C,aAAAggC,OAAAM,gBAAA,YAMA,OAJAl8C,KAAAn2B,SACAm2B,EAAA,MAAAs9C,EAAAt9C,EAAA,SACAA,EAAA,MAAAs9C,EAAAt9C,EAAA,UAEAhJ,EAAA,WAAA8E,iBAAAkE,MAMA14B,KAAAs0C,aAAA++B,QAAAl1D,GAAA,oBAEA,IADA,EAAAm3D,EAAA,cAAA38D,IAAAmH,EAAAgyD,gBACAhyD,EAAA8xD,kBACA,QAAAvnE,KAAAyV,EAAA8xD,mBACA,EAAA0D,EAAA,cAAA38D,IAAAmH,EAAA8xD,kBAAAvnE,MAKA,IAAA8sE,EAAAn3E,KAAAo3E,YAAAx1E,KAAA5B,MAIAA,KAAAs0C,aAAA++B,QAAAtsD,MAAA5I,GAAA,YAAAg5D,GAEAn3E,KAAAs0C,aAAA++B,QAAAtsD,MAAAL,IAAAvI,GAAA,qBACA2B,EAAAi3D,YAAA37C,YACAtb,EAAAw0B,aAAA++B,QAAAtsD,MAAA1I,IAAA,YAAA84D,KAgYA,OA5fA33D,EAAA02D,EAAAjjD,GAwIA9Z,EAAA+8D,IACAv0E,IAAA,eACAN,MAAA,SAAA8a,GACA,IAAAwb,OAAA1qB,EAEA,GAAAjN,KAAA82C,SAIA,MAHAnf,EAAA,IAAAn1B,MAAA,yEACAm1B,EAAAh3B,KAAA,oBACAg3B,EAAA/0B,KAAA,GACA+0B,EAEA33B,KAAA82C,UAAA,EACA92C,KAAAs0C,aAAA7a,WAAA,OACAz5B,KAAA2W,SAAoBpO,KAAA,WAEpBvI,KAAA+2E,YAAA3oD,aACA4oD,OAAA,OACAnnE,KAAAsM,EAAA/K,OACAyJ,WAAAsB,EAAAtB,WACA1D,WAAAgF,EAAAhF,aACOgF,EAAA/K,SACPpR,KAAA+2E,YAAA3oD,aAAoC4oD,OAAA,aASpCr1E,IAAA,QACAN,MAAA,WACArB,KAAAq2E,WACAr2E,KAAAs2E,YAAA,EACAt2E,KAAAs0C,aAAAggC,OAAA+C,YAGAr3E,KAAA82C,WACA92C,KAAA82C,UAAA,EACA92C,KAAA2W,SAAsBpO,KAAA,kBActB5G,IAAA,SACAN,MAAA,SAAAmE,EAAAG,GAEA,IADA,EAAA2vE,EAAA,YAAA9vE,EAAAG,EAAA3F,KAAA8xE,gBACA9xE,KAAA4xE,kBACA,QAAAvnE,KAAArK,KAAA4xE,mBACA,EAAA0D,EAAA,YAAA9vE,EAAAG,EAAA3F,KAAA4xE,kBAAAvnE,IAGArK,KAAA2W,SAAoBpO,KAAA,WACpBvI,KAAA2W,SAAoBpO,KAAA,iBAUpB5G,IAAA,iBACAN,MAAA,SAAAoqB,GACA,IAAAuK,EAAAh2B,MAGA,EAAAw1E,EAAA,YAAAx1E,UAAAs0C,aAAA7oB,IACA,EAAAgqD,EAAAjE,kBAAAxxE,KAAAyrB,EAAA4hC,SAAA5hC,EAAA8hC,UAGAsoB,EAAA,WACA,IAAAyB,EAAAthD,EAAAuhD,mBAAA9rD,GAEA,IAAAuK,EAAAqgD,QAAA9zE,QACAszE,EAAA7/C,EAAAwhD,eAAA51E,KAAAo0B,IAGAshD,IACAthD,EAAAqgD,QAAAhtE,KAAAiuE,GACAthD,EAAAsgD,aAAAgB,EAAAngE,iBAWAxV,IAAA,iBACAN,MAAA,WACA,IAAAk3B,EAAAv4B,KAEAy3E,EAAAvD,EAAA,WAAAP,gBAEA,GAAA3zE,KAAAq2E,QAAA9zE,OAAA,CAUA,IAAAqiB,EAAA5kB,KAAAq2E,QAAA,GAAAj/D,SAAA,EAAAqgE,GAGA7yD,EAAAzN,WAAAsgE,GAAAz3E,KAAAq2E,QAAA,GAAAl/D,aAAAsgE,EACAz3E,KAAAq2E,QAAA17B,QAEA36C,KAAAq2E,QAAA,GAAAr2E,KAAAq2E,QAAA,GAAAj/D,SAAAqgE,GAGAz3E,KAAAs2E,aAAA1xD,EAAAzN,WAMA,IAHA,IAAAugE,KACAn1E,EAAAqiB,EAAAzN,WAEA/W,EAAA,EAAqBA,EAAAmC,EAAYnC,IACjCs3E,EAAAruE,KAAAkO,OAAAC,aAAAoN,EAAAxkB,KAEA,IAAAu3E,EAAAxsD,EAAA,WAAAurD,KAAAgB,EAAA5qD,KAAA,KAEA3B,EAAA,WAAAnrB,KAAA62E,uBAAA,WAKA,OAFAhB,EAAAt9C,EAAAi/C,eAAA51E,KAAA22B,WACApN,EAAA,WAAAoN,EAAAs+C,uBACAc,GAIA33E,KAAAs0C,aAAAggC,OAAAwC,qBAAA92E,KAAA62E,4BAtCA,IAAA72E,KAAA82C,WACA92C,KAAA82C,UAAA,EACA92C,KAAA2W,SAAwBpO,KAAA,kBAiDxB5G,IAAA,qBACAN,MAAA,SAAA09C,GACA,IAAA64B,EAAA,EACAzkD,EAAAnzB,KAAAs0C,aAAAvtB,MACA8wD,EAAA,EACApsD,OAAAxe,EACAs/C,EAAAxN,EAAAkO,KAAAV,UACAC,EAAAzN,EAAAkO,KAAAT,UAIA,GAAA1c,MAAA9vC,KAAAu2E,kBAAAhqB,EAAAhqD,QAAAiqD,EAAAjqD,QAAA,CAIA,IAAAu1E,EAAAvrB,EAAA,KAA6C71C,IAAAiC,KAC7Co/D,EAAAvrB,EAAA,KAA6C91C,IAAAiC,KAE7C3Y,KAAAu2E,eAAAzpE,KAAAuC,IAAA0oE,EAAArhE,IAAAohE,EAAAphE,KAGAyc,EAAAgC,YAGAn1B,KAAAy2E,gBAAA5oC,IACA7tC,KAAAw2E,gBAAA3oC,KAGAiC,MAAA9vC,KAAAy2E,kBACAtjD,EAAAuF,WAAAn2B,SACAs1E,EAAA1kD,EAAAuF,WAAA/yB,IAAA,GAAA3F,KAAAi3C,iBAIA9jB,EAAAgC,YACA0iD,EAAA/qE,KAAAC,IAAA8qE,EAAA1kD,EAAA8B,cAAAj1B,KAAAi3C,kBAIA4gC,GAAA,IACAA,GAAA73E,KAAAu2E,gBAOAsB,EAAA73E,KAAAy2E,gBAAA,GAIA,IAAAuB,EAAAzrB,EAAAhqD,OAIA,GAAAy1E,GAAAzrB,EAAAyrB,EAAA,GAAAthE,KAAAmhE,EAAA,CAGA,QAAAG,EAAA,CACA,IAAAC,EAAA1rB,EAAAyrB,GAEA,KAAAC,EAAAvhE,IAAAmhE,KAMAI,EAAA/oB,UAAA+oB,EAAA9mB,aACA,MASA,MAAA6mB,EAAA,CACA,IAAAE,EAAA3rB,EAAAyrB,EAAA,GAEA,IAAAE,EAAA/mB,YACA,MAGA6mB,KAIA,IAAAG,EAAA5rB,EAAAl1C,MAAA2gE,GAEAI,OAAAnrE,EAGAmrE,EADAtoC,MAAA9vC,KAAAw2E,iBACAqB,EAOA73E,KAAAw2E,gBAAA,GAGA2B,EAAA51E,SAIA61E,EAAAtrE,KAAAuC,IAAA+oE,EAAAD,EAAA,GAAAzhE,MAIAshE,EAAA,EAEA,MAAAA,EAAAxrB,EAAAjqD,OAAA,CACA,GAAAiqD,EAAAwrB,GAAAthE,KAAA0hE,EACA,MAGAJ,IAGA,IAAAK,EAAA7rB,EAAAn1C,MAAA2gE,GAGAK,EAAA91E,SACAvC,KAAAw2E,gBAAA6B,IAAA91E,OAAA,GAAAmU,KAEAyhE,EAAA51E,SACAvC,KAAAy2E,gBAAA0B,IAAA51E,OAAA,GAAAmU,KAGA,IAAAu2C,EAAAjtD,KAAAs4E,gBAAAH,EAAAE,GAEA,OAAAprB,EAAA1qD,OAAA,CAOA,GAAA0qD,EAAA,GAAAv2C,IAAAmhE,GAAA1kD,EAAAgC,UAAA,CACA,IAAAojD,EAAA,KACAtjD,EAAA9B,EAAA8B,cACA+pB,GAAA64B,EAAA5qB,EAAA,GAAAv2C,KAAA,IACA8hE,EAAAvjD,EAAA+pB,EAEAw5B,EAAAD,IACAC,EAAA,GAGA,IACAx4E,KAAAs0C,aAAAggC,OAAAmE,sBAAAD,GACS,MAAAxwE,KAST,QAAA5H,EAAA,EAAqBA,EAAA6sD,EAAA1qD,OAAiBnC,IACtCw3E,GAAA3qB,EAAA7sD,GAAA+b,MAAAhF,WAEAsU,EAAA,IAAAxQ,WAAA28D,GACAx3E,EAAA,UAAA+sB,EAAA,EAA4B/sB,EAAA6sD,EAAA1qD,OAAiBnC,IAC7CqrB,EAAA/mB,IAAAuoD,EAAA7sD,GAAA+b,MAAAgR,GACAA,GAAA8/B,EAAA7sD,GAAA+b,MAAAhF,WAGA,OAAAsU,MAWA9pB,IAAA,kBACAN,MAAA,SAAAkrD,EAAAC,GACA,IAAAprC,OAAAnU,EACAggD,KAEA,MAAAV,EAAAhqD,QAAAiqD,EAAAjqD,OASA6e,EARAmrC,EAAAhqD,OAGSiqD,EAAAjqD,QAGAiqD,EAAA,GAAA/1C,IAAA81C,EAAA,GAAA91C,IAET+1C,EAAA7R,QAHA4R,EAAA5R,QAHA6R,EAAA7R,QAYAsS,EAAA5jD,KAAA+X,GAGA,OAAA6rC,KAGAtrD,IAAA,cACAN,MAAA,WACArB,KAAA+2E,YAAA3oD,aAAoC4oD,OAAA,sBAIpCd,EA7fA,CA8fCxmD,EAAA,WAAAsM,aAEDr8B,EAAA,WAAAu2E,EACAt2E,EAAAD,UAAA,aACCY,KAAAP,KAAA,qBAAA+qB,IAAA,qBAAAhrB,UAAA,qBAAA4H,oBACE+wE,wBAAA,GAAAC,oCAAA,GAAA5D,oBAAA,GAAA6D,4BAAA,GAAAC,2BAAA,GAAA9sD,gBAAA,GAAA+sD,iBAAA,GAAAj8C,WAAA,KAA6Mk8C,IAAA,SAAA/tD,EAAAprB,EAAAD,GAIhN,aAEAmB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAA8X,EAAA,WAAiC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAzhB,GAEA,SAAAG,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAE7E,SAAAyN,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAE3F,IAAAkW,EAAAF,EAAA,iBAEAG,EAAAtR,EAAAqR,GAEAiqD,EAAAnqD,EAAA,kBAEAoqD,EAAAv7D,EAAAs7D,GASA6D,EAAA,SAAAC,GACAA,EAAA96D,GAAA,gBAAAsN,GACAN,EAAA,WAAAiD,aACA4oD,OAAA,OACAvrD,cAIAwtD,EAAA96D,GAAA,gBAAAtO,GACAsb,EAAA,WAAAiD,aAA2C4oD,OAAA,YAY3CkC,EAAA,WACA,SAAAA,EAAA5zD,GACAvL,EAAA/Z,KAAAk5E,GAEAl5E,KAAAslB,cACAtlB,KAAAuW,OAkEA,OAnDA4C,EAAA+/D,IACAv3E,IAAA,OACAN,MAAA,WACArB,KAAAi5E,YACAj5E,KAAAi5E,WAAAx6D,UAEAze,KAAAi5E,WAAA,IAAA7D,EAAA,WAAAxkB,WAAA5wD,KAAAslB,SACA0zD,EAAAh5E,KAAAi5E,eAUAt3E,IAAA,OACAN,MAAA,SAAAwO,GAEA,IAAA4b,EAAA,IAAAxQ,WAAApL,SAAAgL,WAAAhL,EAAAsH,YAEAnX,KAAAi5E,WAAA5vE,KAAAoiB,MAQA9pB,IAAA,QACAN,MAAA,WACArB,KAAAuW,UAQA5U,IAAA,QACAN,MAAA,WACArB,KAAAi5E,WAAAhmE,WAGAtR,IAAA,gBACAN,MAAA,WACArB,KAAAi5E,WAAAtlB,oBAIAulB,EAvEA,GA0EAC,EAAA,SAAAp5E,GACAA,EAAAouB,UAAA,SAAA9D,GACA,SAAAA,EAAAxa,KAAAmnE,QAAA3sD,EAAAxa,KAAAyV,QACAtlB,KAAAo5E,gBAAA,IAAAF,EAAA7uD,EAAAxa,KAAAyV,UAIAtlB,KAAAo5E,kBACAp5E,KAAAo5E,gBAAA,IAAAF,GAGA7uD,EAAAxa,MAAAwa,EAAAxa,KAAAmnE,QAAA,SAAA3sD,EAAAxa,KAAAmnE,QACAh3E,KAAAo5E,gBAAA/uD,EAAAxa,KAAAmnE,SACAh3E,KAAAo5E,gBAAA/uD,EAAAxa,KAAAmnE,QAAA3sD,EAAAxa,SAMAlQ,EAAA,oBAAAI,GACA,WAAAo5E,EAAAp5E,IAGAH,EAAAD,UAAA,aACGosB,gBAAA,GAAA+sD,iBAAA,KAAuCO,IAAA,SAAAruD,EAAAprB,EAAAD,IAC1C,SAAAorB,GAIA,aAEAjqB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAA8X,EAAA,WAAiC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAzhB,GAEA8U,EAAA,SAAAC,EAAAC,EAAAC,GAAuC,IAAAC,GAAA,EAAmB,MAAAA,EAAA,CAA4B,IAAA9sB,EAAA2sB,EAAA1sB,EAAA2sB,EAAAG,EAAAF,EAAiDC,GAAA,EAAgB,OAAA9sB,MAAAuT,SAAArT,WAAkD,IAAA8sB,EAAAhuB,OAAAiuB,yBAAAjtB,EAAAC,GAA8D,QAAAkL,IAAA6hB,EAAA,CAAuO,aAAAA,EAA4B,OAAAA,EAAAztB,MAA4B,IAAAT,EAAAkuB,EAAA7tB,IAAuB,QAAAgM,IAAArM,EAA4B,OAAoB,OAAAA,EAAAL,KAAAsuB,GAA5U,IAAA5G,EAAAnnB,OAAAif,eAAAje,GAA4C,UAAAmmB,EAAuB,OAA2BwG,EAAAxG,EAAayG,EAAA3sB,EAAgB4sB,EAAAE,EAAgBD,GAAA,EAAeE,EAAA7G,OAAAhb,IAE3b,SAAA4M,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAE7E,SAAAyN,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAE3F,SAAAwK,EAAAC,EAAAC,GAA0C,uBAAAA,GAAA,OAAAA,EAA+D,UAAA1K,UAAA,kEAAA0K,GAAuGD,EAAAzd,UAAAlB,OAAAY,OAAAge,KAAA1d,WAAyEkE,aAAe7E,MAAAoe,EAAAze,YAAA,EAAAyY,UAAA,EAAAD,cAAA,KAA6EkG,IAAA5e,OAAA6e,eAAA7e,OAAA6e,eAAAF,EAAAC,GAAAD,EAAAG,UAAAF,GAErX,IAAAwL,EAAAF,EAAA,iBAEAG,EAAAtR,EAAAqR,GAEA2oD,EAAA7oD,EAAA,mBAEA8oD,EAAAj6D,EAAAg6D,GAEApkD,EAAA,qBAAA9nB,cAAA,gCAAAojB,IAAA,gBAEA2E,EAAA7V,EAAA4V,GAEA6pD,EAAAtuD,EAAA,2BAEAuuD,EAAA1/D,EAAAy/D,GAEA7D,EAAAzqD,EAAA,yBAEAmpD,EAAAnpD,EAAA,iBAWAwuD,EAAA,SAAAvmD,GAGA,SAAAumD,IACA,IAAA15D,EAAA9f,KAEA+Z,EAAA/Z,KAAAw5E,GAEAhrD,EAAA1tB,OAAAif,eAAAy5D,EAAAx3E,WAAA,cAAAhC,MAAAO,KAAAP,MACA,IAAA+B,OAAAkL,EAIA,IAAAlL,KAFA/B,KAAAy5E,mBAAA,IAAAtuD,EAAA,WAAAiJ,YAEAp0B,KAAAy5E,mBACA13E,KAAAy3E,EAAAx3E,WAAA,oBAAAhC,KAAAy5E,mBAAA13E,KACA/B,KAAA+B,GAAA/B,KAAAy5E,mBAAA13E,GAAAH,KAAA5B,KAAAy5E,qBAOAz5E,KAAAq0C,UAAAxG,IACA/sC,OAAAC,eAAAf,KAAA,YACAiB,IAAA,WACA,OAAAjB,KAAAq0C,YAAA17B,IACA3Y,KAAAq0C,UAEAr0C,KAAAy5E,mBAAA53D,UAEAnd,IAAA,SAAAmd,GACA7hB,KAAAq0C,UAAAxyB,EACAA,IAAAlJ,MACA3Y,KAAAy5E,mBAAA53D,eAKA/gB,OAAAC,eAAAf,KAAA,YACAiB,IAAA,WACA,OAAAjB,KAAAq0C,YAAA17B,IACA+W,EAAA,WAAA8E,mBAAA,EAAAx0B,KAAAy5E,mBAAA53D,YAEA7hB,KAAAy5E,mBAAAvkD,YAIAp0B,OAAAC,eAAAf,KAAA,cACAiB,IAAA,WACA,OAAAjB,KAAAy5E,mBAAAhgD,cAIA34B,OAAAC,eAAAf,KAAA,uBACAiB,IAAA,WACA,OAAAjB,KAAA05E,wBAMA15E,KAAAq0E,iBAEAr0E,KAAA05E,wBAQA15E,KAAA25E,2BAAA,WAMA,GAJA75D,EAAA45D,qBAAAn3E,OAAA,EAIA,IAAAud,EAAAu0D,cAAA9xE,OAAA,CACA,IAAA6wE,EAAAtzD,EAAAu0D,cAAA,GAKA,OAHAjB,EAAAwG,yBAAA,EACAxG,EAAAyG,gBAAAzG,EAAA0G,iBACAh6D,EAAA45D,qBAAArwE,KAAA+pE,GAaA,IALA,IAAA2G,GAAA,EACAC,GAAA,EAIA55E,EAAA,EAAqBA,EAAA0f,EAAAuzD,QAAA10C,cAAAp8B,OAAwCnC,IAAA,CAC7D,IAAAiK,EAAAyV,EAAAuzD,QAAA10C,cAAAv+B,GAEA,GAAAiK,EAAA4zB,SAAA,SAAA5zB,EAAAwqB,KAAA,CAGAklD,GAAA,EACAC,GAAA,EACA,OAIAl6D,EAAAu0D,cAAA7nD,QAAA,SAAA4mD,GAQA,GAFAA,EAAAwG,yBAAA,EAEAxG,EAAA6G,aAAA7G,EAAA0G,YAEA1G,EAAAyG,eAAAE,OACS,GAAA3G,EAAA6G,cAAA7G,EAAA0G,YAIT1G,EAAAyG,gBAAA,EACAG,GAAA,OACS,IAAA5G,EAAA6G,aAAA7G,EAAA0G,cAET1G,EAAAyG,eAAAG,EACAA,GACA,OAIAl6D,EAAA45D,qBAAArwE,KAAA+pE,MAIApzE,KAAAk6E,qBAAA,WACAp6D,EAAAu0D,cAAA7nD,QAAA,SAAA4mD,GACAA,EAAAwG,yBAAA,KAIA55E,KAAAo3E,YAAA,WACAt3D,EAAAu0D,cAAA7nD,QAAA,SAAA4mD,GACAA,EAAA2D,aACA3D,EAAA2D,YAAA3oD,aAAgD4oD,OAAA,qBAKhDh3E,KAAAm6E,yBAAA,SAAA9vD,GACAvK,EAAAu0D,cAAA7nD,QAAA,SAAApb,GACA,OAAAA,EAAAgpE,aAAA/vD,EAAA0O,YAKA,0CAAAvM,QAAA,SAAA6tD,GACAr6E,KAAAy5E,mBAAAplD,iBAAAgmD,EAAAr6E,KAAA2W,QAAA/U,KAAA5B,QACKA,MAILA,KAAAme,GAAA,sBAAAkM,GAEA,IAAAsI,EAAAmhD,EAAA,WAAAwG,cAAA,SAAAx6D,EAAAy6D,KAAA,MAEA5nD,IAIA7S,EAAAuzD,SAAA,EAAA3jD,EAAA,YAAAiD,EAAA1pB,YAIA6W,EAAAuzD,QAAAtsD,MAAA5I,GAAA,YAAA2B,EAAAs3D,aAIAt3D,EAAAuzD,QAAAtsD,MAAA5I,GAAA,2BAAA2B,EAAAq6D,0BAEAr6D,EAAAuzD,QAAA10C,aAAA7e,EAAAuzD,QAAA10C,gBACA7e,EAAAuzD,QAAA10C,cAAAxgB,GAAA,SAAA2B,EAAA65D,4BACA75D,EAAAuzD,QAAA10C,cAAAxgB,GAAA,WAAA2B,EAAA65D,4BACA75D,EAAAuzD,QAAA10C,cAAAxgB,GAAA,cAAA2B,EAAA65D,6BAGA75D,EAAAuzD,QAAAl1D,GAAA,cAAA2B,EAAAo6D,yBAGAl6E,KAAAme,GAAA,uBAAAkM,GAGA,IAFA,IAAAxI,GAAA,EAAA4zD,EAAAnE,iBAAAxxD,EAAA+B,UAEAzhB,EAAA,EAAqBA,EAAA0f,EAAAu0D,cAAA9xE,OAAgCnC,IAAA,CACrD,IAAAo6E,EAAA16D,EAAAu0D,cAAAj0E,GACAkQ,EAAAkqE,EAAA1I,gBAAA0I,EAAA1I,eAAAxhE,KAEAA,KAAA/N,SACA+N,IAAA/N,OAAA,GAAA0D,QAAA4b,MAOA7hB,KAAAme,GAAA,uBAAAkM,GACArqB,KAAAq0E,cAAA7nD,QAAA,SAAA4mD,GACAA,EAAA2D,aACA3D,EAAA2D,YAAA37C,cAIAp7B,KAAAq0E,cAAA9xE,OAAA,EACAvC,KAAAqzE,UAIArzE,KAAAqzE,QAAA10C,aAAA3+B,KAAAqzE,QAAA10C,gBACA3+B,KAAAqzE,QAAA10C,cAAAtgB,IAAA,SAAAre,KAAA25E,4BACA35E,KAAAqzE,QAAA10C,cAAAtgB,IAAA,WAAAre,KAAA25E,4BACA35E,KAAAqzE,QAAA10C,cAAAtgB,IAAA,cAAAre,KAAA25E,6BAOA35E,KAAAqzE,QAAAoH,MACAz6E,KAAAqzE,QAAAh1D,IAAA,cAAAre,KAAAk6E,sBACAl6E,KAAAqzE,QAAAtsD,MAAA1I,IAAA,YAAAre,KAAAo3E,aACAp3E,KAAAqzE,QAAAtsD,MAAA1I,IAAA,2BAAAre,KAAAm6E,8BAqFA,OA1TA36D,EAAAg6D,EAAAvmD,GAkPA9Z,EAAAqgE,IACA73E,IAAA,oBACAN,MAAA,SAAAmE,EAAAG,GACA,IAAAgyB,OAAA1qB,EAEA,GAAAjN,KAAA6hB,WAAAlJ,IAIA,MAHAgf,EAAA,IAAAn1B,MAAA,oFACAm1B,EAAAh3B,KAAA,oBACAg3B,EAAA/0B,KAAA,GACA+0B,GAGAhyB,EAAA3F,KAAAy5E,mBAAA53D,UAAAiuB,MAAA9vC,KAAAy5E,mBAAA53D,aACA7hB,KAAAy5E,mBAAA53D,SAAAlc,MAYAhE,IAAA,kBACAN,MAAA,SAAAkH,GACA,IAAA6I,OAAAnE,EACAynE,GAAA,EAAAP,EAAA3B,kBAAAjqE,GAIA,4BAAA/B,KAAAkuE,EAAAnsE,MAAA,CACA,IAAAkpB,KAEAijD,EAAAjC,YAAAiC,EAAAjC,WAAAhhD,SACAA,EAAAijD,EAAAjC,WAAAhhD,OAAA9tB,MAAA,KACA8tB,GAAA,EAAA0iD,EAAA5iD,uBAAAE,GACAA,IAAAC,OAAA,SAAA8uC,GACA,SAAA2T,EAAA7B,cAAA9R,KAAA,EAAA2T,EAAA5B,cAAA/R,MAIA,IAAA/uC,EAAAlvB,SACAkvB,GAAA,4BAGArgB,EAAA,IAAAmoE,EAAA,WAAAv5E,KAAAyxB,GAEA,IAAAzxB,KAAAq0E,cAAA9xE,SAMAvC,KAAAq0E,cAAA,GAAAqG,2BACAtpE,EAAAspE,2BAIA16E,KAAAq0E,cAAA,GAAAwF,gBAAA,QAIAzoE,EAAApR,KAAAy5E,mBAAAv/B,gBAAA3xC,GAIA,OADAvI,KAAAq0E,cAAAhrE,KAAA+H,GACAA,MAIAooE,EA3TA,CA4TC9pD,EAAA,WAAAsM,aAEDr8B,EAAA,WAAA65E,EACA55E,EAAAD,UAAA,aACCY,KAAAP,KAAA,qBAAA+qB,IAAA,qBAAAhrB,UAAA,qBAAA4H,oBACE+wE,wBAAA,GAAA5D,gBAAA,GAAA6F,0BAAA,GAAA1F,kBAAA,GAAAlpD,gBAAA,KAAmH6uD,IAAA,SAAA5vD,EAAAprB,EAAAD,GAatH,aAEAmB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAEA,IAAAw5E,EAAA,SAAAr1E,EAAAG,EAAA0E,GACA,IAAAjK,OAAA6M,EACAjJ,OAAAiJ,EAEA,GAAA5C,GAIAA,EAAAiG,KAAA,CAIAlQ,EAAAiK,EAAAiG,KAAA/N,OAEA,MAAAnC,IACA4D,EAAAqG,EAAAiG,KAAAlQ,GAGA4D,EAAA+B,WAAAJ,GAAA3B,EAAAiC,SAAAT,GACA6E,EAAAywE,UAAA92E,KAKArE,EAAA,WAAAk7E,EACAj7E,EAAAD,UAAA,gBACIo7E,IAAA,SAAA/vD,EAAAprB,EAAAD,GAeJ,aAEAmB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAA8X,EAAA,WAAiC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAzhB,GAEA,SAAAG,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAE7E,SAAAyN,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAE3F,IAAAkW,EAAAF,EAAA,iBAEAG,EAAAtR,EAAAqR,GAEA8vD,EAAAhwD,EAAA,kBAEAiwD,EAAAphE,EAAAmhE,GASAhC,EAAA,SAAAC,GACAA,EAAA96D,GAAA,gBAAAsN,GAKA,IAAAyvD,EAAAzvD,EAAAmB,YAEAnB,EAAAmB,aACA/c,KAAAqrE,EAAA9pE,OACAyJ,WAAAqgE,EAAArgE,WACA1D,WAAA+jE,EAAA/jE,YAGA,IAAAgkE,EAAA1vD,EAAA5b,KAEA4b,EAAA5b,KAAAsrE,EAAA/pE,OACA+Z,EAAA,WAAAiD,aACA4oD,OAAA,OACAvrD,UACA5Q,WAAAsgE,EAAAtgE,WACA1D,WAAAgkE,EAAAhkE,aACKsU,EAAA5b,SAGLopE,EAAA7lB,eACA6lB,EAAA7lB,cAAAj1C,GAAA,gBAAAgvC,GACAhiC,EAAA,WAAAiD,aACA4oD,OAAA,UACAnnE,KAAAs9C,MAKA8rB,EAAA96D,GAAA,gBAAAtO,GACAsb,EAAA,WAAAiD,aAA2C4oD,OAAA,WAG3CiC,EAAA96D,GAAA,mBAAAi9D,GACAjwD,EAAA,WAAAiD,aACA4oD,OAAA,UACAoE,eAaAlC,EAAA,WACA,SAAAA,EAAA5zD,GACAvL,EAAA/Z,KAAAk5E,GAEAl5E,KAAAslB,cACAtlB,KAAAuW,OA6FA,OA9EA4C,EAAA+/D,IACAv3E,IAAA,OACAN,MAAA,WACArB,KAAAi5E,YACAj5E,KAAAi5E,WAAAx6D,UAEAze,KAAAi5E,WAAA,IAAAgC,EAAA,WAAArqB,WAAA5wD,KAAAslB,SACA0zD,EAAAh5E,KAAAi5E,eAUAt3E,IAAA,OACAN,MAAA,SAAAwO,GAEA,IAAA4b,EAAA,IAAAxQ,WAAApL,SAAAgL,WAAAhL,EAAAsH,YAEAnX,KAAAi5E,WAAA5vE,KAAAoiB,MAQA9pB,IAAA,QACAN,MAAA,WACArB,KAAAuW,UAWA5U,IAAA,qBACAN,MAAA,SAAAwO,GACA,IAAAonC,EAAApnC,EAAAonC,iBAAA,EAEAj3C,KAAAi5E,WAAA1M,uBAAAz/D,KAAAoB,MAAA,IAAA+oC,OAGAt1C,IAAA,sBACAN,MAAA,SAAAwO,GACA7P,KAAAi5E,WAAA/Q,oBAAAp7D,KAAAwB,KAAA,IAAAuB,EAAAwrE,iBAUA15E,IAAA,QACAN,MAAA,SAAAwO,GACA7P,KAAAi5E,WAAAhmE,WAGAtR,IAAA,gBACAN,MAAA,WACArB,KAAAi5E,WAAAtlB,mBAGAhyD,IAAA,gBACAN,MAAA,SAAAwO,GACA7P,KAAAi5E,WAAA5N,cAAAx7D,EAAAo5D,gBAAA5xD,aAIA6hE,EAlGA,GAqGAoC,EAAA,SAAAv7E,GACAA,EAAAouB,UAAA,SAAA9D,GACA,SAAAA,EAAAxa,KAAAmnE,QAAA3sD,EAAAxa,KAAAyV,QACAtlB,KAAAo5E,gBAAA,IAAAF,EAAA7uD,EAAAxa,KAAAyV,UAIAtlB,KAAAo5E,kBACAp5E,KAAAo5E,gBAAA,IAAAF,GAGA7uD,EAAAxa,MAAAwa,EAAAxa,KAAAmnE,QAAA,SAAA3sD,EAAAxa,KAAAmnE,QACAh3E,KAAAo5E,gBAAA/uD,EAAAxa,KAAAmnE,SACAh3E,KAAAo5E,gBAAA/uD,EAAAxa,KAAAmnE,QAAA3sD,EAAAxa,SAMAlQ,EAAA,oBAAAI,GACA,WAAAu7E,EAAAv7E,IAGAH,EAAAD,UAAA,aACGosB,gBAAA,GAAAwvD,iBAAA,KAAuCC,IAAA,SAAAxwD,EAAAprB,EAAAD,IAC1C,SAAAorB,GAIA,aAMA,SAAAlR,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAJ7ExL,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAKA,IAAA6pB,EAAAF,EAAA,iBAEAG,EAAAtR,EAAAqR,GAEAuwD,EAAAzwD,EAAA,wBAEA0wD,EAAA7hE,EAAA4hE,GAEAE,EAAA3wD,EAAA,uBAEA4wD,EAAA/hE,EAAA8hE,GAEAlsD,EAAA,qBAAA9nB,cAAA,gCAAAojB,IAAA,gBAEA2E,EAAA7V,EAAA4V,GAEAosD,EAAA,EAMAC,GAOAv6E,KAAA,QAMAmuB,EAAA,WAAAqsD,gBASA,IAAAC,EAAA,SAAAC,EAAAzH,GACA,IAAArgD,EAAAzE,EAAA,WAAAqsD,aAAAE,GAEA,IAAA9nD,EAGA,UAAA3xB,MAAA,qCAFA2xB,EAAAxd,SAAyBpO,KAAA,aAAAisE,WAYzB0H,EAAA,WACA,QAAA/wD,EAAA,WAAAiJ,eAAAjJ,EAAA,WAAAiJ,YAAAyH,iBAAA1Q,EAAA,WAAAiJ,YAAAyH,gBAAA,6CAaAzH,EAAA,SAAA9O,GACA,IAAA9gB,EAAAkrB,EAAA,WAAAgG,aAAAomD,EAAAx2D,GAQA,GANAtlB,KAAAo0B,aACA4nD,OACAE,8BAIA,UAAA13E,EAAAjD,MAAA,SAAAiD,EAAAjD,MAAA26E,IACA,WAAAN,EAAA,WACG,GAAAlsD,EAAA,WAAAysD,QAAA,SACH,WAAAT,EAAA,WAGA,UAAAl5E,MAAA,qEAGA7C,EAAAy0B,cACAA,EAAA4nD,OACA5nD,EAAA8nD,6BAQA,IAAAE,GASAC,gBAAA,SAAAv6E,GACA,IAAAw6E,EAAA,yBACAppD,OAAAjmB,EAGA,OAAAnL,aAAA85E,EAAA,YACA1oD,EAAA/H,EAAA,WAAAixD,IAAAC,gBAAAv6E,EAAA23E,oBACA33E,EAAAy4E,KAAArnD,EACAA,GAIApxB,aAAA45E,EAAA,YAQAxoD,EAAAopD,EAAAT,EAEAA,IAGAnsD,EAAA,WAAAqsD,aAAA7oD,GAAApxB,EAEAoxB,IAdAA,EAAA/H,EAAA,WAAAixD,IAAAC,gBAAAv6E,GACAA,EAAAy4E,KAAArnD,EACAA,KAgBAvzB,EAAAy8E,MACA1sD,EAAA,WAAA0E,cACA1E,EAAA,WAAA0sD,QACC77E,KAAAP,KAAA,qBAAA+qB,IAAA,qBAAAhrB,UAAA,qBAAA4H,oBACE40E,uBAAA,GAAAC,sBAAA,GAAAzwD,gBAAA,KAAsE0wD,IAAA,SAAAzxD,EAAAprB,EAAAD,IACzE,SAAAorB,GAIA,aAEAjqB,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAA8X,EAAA,WAAiC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAzhB,GAEA8U,EAAA,SAAAC,EAAAC,EAAAC,GAAuC,IAAAC,GAAA,EAAmB,MAAAA,EAAA,CAA4B,IAAA9sB,EAAA2sB,EAAA1sB,EAAA2sB,EAAAG,EAAAF,EAAiDC,GAAA,EAAgB,OAAA9sB,MAAAuT,SAAArT,WAAkD,IAAA8sB,EAAAhuB,OAAAiuB,yBAAAjtB,EAAAC,GAA8D,QAAAkL,IAAA6hB,EAAA,CAAuO,aAAAA,EAA4B,OAAAA,EAAAztB,MAA4B,IAAAT,EAAAkuB,EAAA7tB,IAAuB,QAAAgM,IAAArM,EAA4B,OAAoB,OAAAA,EAAAL,KAAAsuB,GAA5U,IAAA5G,EAAAnnB,OAAAif,eAAAje,GAA4C,UAAAmmB,EAAuB,OAA2BwG,EAAAxG,EAAayG,EAAA3sB,EAAgB4sB,EAAAE,EAAgBD,GAAA,EAAeE,EAAA7G,OAAAhb,IAE3b,SAAA4M,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAE7E,SAAAyN,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAE3F,SAAAwK,EAAAC,EAAAC,GAA0C,uBAAAA,GAAA,OAAAA,EAA+D,UAAA1K,UAAA,kEAAA0K,GAAuGD,EAAAzd,UAAAlB,OAAAY,OAAAge,KAAA1d,WAAyEkE,aAAe7E,MAAAoe,EAAAze,YAAA,EAAAyY,UAAA,EAAAD,cAAA,KAA6EkG,IAAA5e,OAAA6e,eAAA7e,OAAA6e,eAAAF,EAAAC,GAAAD,EAAAG,UAAAF,GAErX,IAAA+P,EAAA,qBAAA9nB,cAAA,gCAAAojB,IAAA,gBAEA2E,EAAA7V,EAAA4V,GAEA8lD,EAAAvqD,EAAA,qCAEAwqD,EAAA37D,EAAA07D,GAEAF,EAAArqD,EAAA,4BAEAsqD,EAAAz7D,EAAAw7D,GAEAI,EAAAzqD,EAAA,yBAEAgF,EAAAhF,EAAA,cAEAiF,EAAApW,EAAAmW,GAEA0sD,EAAA1xD,EAAA,uBAEA2xD,EAAA9iE,EAAA6iE,GAEAvI,EAAAnpD,EAAA,iBAEA4xD,EAAA,WACA,IAAA90E,OAAAmF,EAEA,IACAnF,EAAAkjB,EAAAoG,QAAA,uBACG,MAAAppB,IAIH,OAAAF,GAOA+0E,EAAA,SAAA1oD,EAAAqH,GACA,IAAA43C,EAAAj/C,EAAA+lB,gBAAA1e,GACAshD,EAAAh8E,OAAAY,OAAA,MAEAo7E,EAAAhmC,UAAA,EACAgmC,EAAAC,YAAA3J,EAEA,IAAA4J,EAAA,SAAAr7E,GACA,oBAAAyxE,EAAAzxE,GACAm7E,EAAAn7E,GAAA,WACA,OAAAyxE,EAAAzxE,GAAAwW,MAAAi7D,EAAA9wE,YAEK,qBAAAw6E,EAAAn7E,IACLb,OAAAC,eAAA+7E,EAAAn7E,GACAV,IAAA,WACA,OAAAmyE,EAAAzxE,IAEA+C,IAAA,SAAAZ,GACA,OAAAsvE,EAAAzxE,GAAAmC,MAMA,QAAAnC,KAAAyxE,EACA4J,EAAAr7E,GAGA,OAAAm7E,GAgBAG,EAAA,SAAA7rE,EAAA0V,EAAAiS,GACA,IAAAjS,IAAA1V,EAAA7O,OACA,SAIA,IAAA26E,EAAApwE,KAAAwB,KAAA,KAAAwY,EAAAmO,cAAA8D,EAAA,IAEA34B,OAAA6M,EAEA,IAAA7M,EAAA,EAAaA,EAAAgR,EAAA7O,OAAmBnC,IAChC,GAAAgR,EAAAhR,GAAAsW,IAAAwmE,EACA,MAIA,OAAA9rE,EAAAiG,MAAAjX,IAGAT,EAAAs9E,sBAeA,IAAAE,EAAA,SAAA/rE,EAAAk4D,EAAAnmE,GACA,IAAAmmE,EAAA/mE,OACA,OAAA6O,EAGA,GAAAjO,EAKA,OAAAmmE,EAAAjyD,QAGA,IAAA7R,EAAA8jE,EAAA,GAAA5yD,IAEAtW,EAAA,EAEA,IAAAA,EAASA,EAAAgR,EAAA7O,OAAmBnC,IAC5B,GAAAgR,EAAAhR,GAAAsW,KAAAlR,EACA,MAIA,OAAA4L,EAAAiG,MAAA,EAAAjX,GAAAkX,OAAAgyD,IAGA3pE,EAAAw9E,kBAaA,IAAAC,EAAA,SAAAhsE,EAAA5L,EAAAG,EAAAozB,GACA,IAAA00B,EAAA3gD,KAAAwB,KAAA,KAAA9I,EAAAuzB,IACA20B,EAAA5gD,KAAAwB,KAAA,KAAA3I,EAAAozB,IACAskD,EAAAjsE,EAAAiG,QAEAjX,EAAAgR,EAAA7O,OAEA,MAAAnC,IACA,GAAAgR,EAAAhR,GAAAsW,KAAAg3C,EACA,MAIA,QAAAttD,EAEA,OAAAi9E,EAGA,IAAAlwD,EAAA/sB,EAAA,EAEA,MAAA+sB,IACA,GAAA/b,EAAA+b,GAAAzW,KAAA+2C,EACA,MASA,OAJAtgC,EAAArgB,KAAAC,IAAAogB,EAAA,GAEAkwD,EAAA/+D,OAAA6O,EAAA/sB,EAAA+sB,EAAA,GAEAkwD,GAGA19E,EAAAy9E,kBAeA,IAAAE,EAAA,SAAArqD,GAGA,SAAAqqD,EAAAnpD,EAAA1C,GACA,IAAA3R,EAAA9f,KAEA+Z,EAAA/Z,KAAAs9E,GAEA9uD,EAAA1tB,OAAAif,eAAAu9D,EAAAt7E,WAAA,cAAAhC,MAAAO,KAAAP,KAAA0vB,EAAA,WAAAsM,aACAh8B,KAAAw6C,iBAAA,EACAx6C,KAAAu9E,mBACAv9E,KAAAw9E,iBAAA,EAEAx9E,KAAAs0C,aAAAngB,EACAn0B,KAAAy9E,QAAAhsD,EACAzxB,KAAA85E,YAAA,KACA95E,KAAAi6E,YAAA,KACAj6E,KAAA65E,gBAAA,EACA75E,KAAA45E,yBAAA,EACA55E,KAAA09E,cACA19E,KAAAo6E,aAAA,EACAp6E,KAAA29E,YAAAjuD,EAAA,WAAA6J,QAAAC,YAAA,GAEA,IAAAlU,GACAomD,OAAA,EACA3B,eAAA/pE,KAAA29E,aAGA39E,KAAAy9E,QAAAjxD,QAAA,SAAAg0C,IACA,EAAA2T,EAAA7B,cAAA9R,GACA1gD,EAAAg6D,YAAAtZ,GACO,EAAA2T,EAAA5B,cAAA/R,KACP1gD,EAAAm6D,YAAAzZ,KAMAxgE,KAAA+2E,aAAA,EAAA9mD,EAAA,YAAA0sD,EAAA,WAAAC,KACA58E,KAAA+2E,YAAA3oD,aAAkC4oD,OAAA,OAAA1xD,YAElCtlB,KAAA+2E,YAAA5oD,UAAA,SAAA9D,GACA,eAAAA,EAAAxa,KAAAmnE,OACAl3D,EAAA89D,MAAAvzD,GAGA,SAAAA,EAAAxa,KAAAmnE,OACAl3D,EAAA+9D,MAAAxzD,GAGA,YAAAA,EAAAxa,KAAAmnE,OACAl3D,EAAAg+D,eAAAzzD,QADA,GAOAvpB,OAAAC,eAAAf,KAAA,mBACAiB,IAAA,WACA,OAAAjB,KAAAw6C,kBAEA91C,IAAA,SAAAmK,GACA,kBAAAA,MAAA,IACA7O,KAAAw6C,iBAAA3rC,EACA7O,KAAA45E,yBAAA,EAGA55E,KAAA09E,WAAAn7E,OAAA,EACAvC,KAAAo6E,aAAA,EAIAp6E,KAAA+2E,YAAA3oD,aACA4oD,OAAA,qBACA//B,gBAAApoC,QAOA/N,OAAAC,eAAAf,KAAA,qBACAiB,IAAA,WACA,OAAAjB,KAAA+9E,cAAA/9E,KAAAg+E,cAAAC,mBAEAv5E,IAAA,SAAAc,GACAxF,KAAA+9E,eACA/9E,KAAA+9E,aAAAE,kBAAAz4E,GAEAxF,KAAAg+E,eACAh+E,KAAAg+E,aAAAC,kBAAAz4E,MAMA1E,OAAAC,eAAAf,KAAA,YACAiB,IAAA,WACA,SAAAjB,KAAAw9E,kBAAAx9E,KAAA65E,gBAAA75E,KAAAg+E,cAAAh+E,KAAAg+E,aAAAlnC,UAAA92C,KAAA+9E,cAAA/9E,KAAA+9E,aAAAjnC,aAMAh2C,OAAAC,eAAAf,KAAA,YACAiB,IAAA,WACA,IAAAuE,EAAA,KACAG,EAAA,KACAkpC,EAAA,EACAC,KACAxhB,KAGA,IAAAttB,KAAA+9E,eAAA/9E,KAAAg+E,aACA,OAAAtuD,EAAA,WAAAmd,kBAIA,IAAA7sC,KAAA+9E,aACA,OAAA/9E,KAAAg+E,aAAAtlD,SAEA,IAAA14B,KAAAg+E,aACA,OAAAh+E,KAAA+9E,aAAArlD,SAIA,GAAA14B,KAAA65E,eACA,OAAA75E,KAAA+9E,aAAArlD,SAIA,OAAA14B,KAAA+9E,aAAArlD,SAAAn2B,QAAA,IAAAvC,KAAAg+E,aAAAtlD,SAAAn2B,OACA,OAAAmtB,EAAA,WAAAmd,kBAKA,IAAAqxC,EAAAl+E,KAAA+9E,aAAArlD,SACAylD,EAAAn+E,KAAAg+E,aAAAtlD,SACAjuB,EAAAyzE,EAAA37E,OAGA,MAAAkI,IACAqkC,EAAAzlC,MAAwBmkC,KAAA0wC,EAAA14E,MAAAiF,GAAAlC,KAAA,UACxBumC,EAAAzlC,MAAwBmkC,KAAA0wC,EAAAv4E,IAAA8E,GAAAlC,KAAA,QAExBkC,EAAA0zE,EAAA57E,OACA,MAAAkI,IACAqkC,EAAAzlC,MAAwBmkC,KAAA2wC,EAAA34E,MAAAiF,GAAAlC,KAAA,UACxBumC,EAAAzlC,MAAwBmkC,KAAA2wC,EAAAx4E,IAAA8E,GAAAlC,KAAA,QASxB,IANAumC,EAAAvG,KAAA,SAAAhiC,EAAAY,GACA,OAAAZ,EAAAinC,KAAArmC,EAAAqmC,OAKA/iC,EAAA,EAAuBA,EAAAqkC,EAAAvsC,OAAwBkI,IAC/C,UAAAqkC,EAAArkC,GAAAlC,MACAsmC,IAIA,IAAAA,IACArpC,EAAAspC,EAAArkC,GAAA+iC,OAEW,QAAAsB,EAAArkC,GAAAlC,OACXsmC,IAIA,IAAAA,IACAlpC,EAAAmpC,EAAArkC,GAAA+iC,OAKA,OAAAhoC,GAAA,OAAAG,IACA2nB,EAAAjkB,MAAA7D,EAAAG,IACAH,EAAA,KACAG,EAAA,MAIA,OAAA+pB,EAAA,WAAA8E,iBAAAlH,MA6ZA,OArlBA9N,EAAA89D,EAAArqD,GAsMA9Z,EAAAmkE,IACA37E,IAAA,QACAN,MAAA,SAAAgpB,GACA,IAAAoB,EAAApB,EAAAxa,KAAA4b,QAGAA,EAAA5b,KAAA,IAAAoL,WAAAwQ,EAAA5b,KAAAwa,EAAAxa,KAAAgL,WAAAwP,EAAAxa,KAAAsH,YAEAsU,EAAAmB,YAAA,IAAA3R,WAAAwQ,EAAAmB,YAAA/c,KAAA4b,EAAAmB,YAAA/R,WAAA4Q,EAAAmB,YAAAzV,aAEA,EAAAq+D,EAAA,YAAAx1E,UAAAs0C,aAAA7oB,GAGAzrB,KAAAu9E,gBAAAl0E,KAAAoiB,MAcA9pB,IAAA,QACAN,MAAA,SAAAgpB,GAEA,WAAArqB,KAAAs0C,aAAA7a,WAOAz5B,KAAAo+E,0BANAp+E,KAAAu9E,gBAAAh7E,OAAA,KAmBAZ,IAAA,2BACAN,MAAA,WACA,IAAA20B,EAAAh2B,KAEAkjE,GAAA,iBAEAA,EAAA12C,QAAA,SAAAjkB,GAGA,GAAAytB,EAAAztB,EAAA,YAKAytB,EAAAztB,EAAA,YAIA,IAAA6I,EAAA,KAIA,GAAA4kB,EAAAse,aAAA/rC,EAAA,WACA6I,EAAA4kB,EAAAse,aAAA/rC,EAAA,WAWA6I,EAAA0lC,UAAA,MACS,CACT,IAAAunC,EAAA91E,EAAA,SACAizB,EAAAjzB,EAAA,gBAAsCytB,EAAAqoD,GAAA,IAEtCjtE,EAAAyrE,EAAA7mD,EAAAse,aAAAmlC,mBAAAj+C,GAEAxF,EAAAse,aAAA/rC,EAAA,WAAA6I,EAGA4kB,EAAAztB,EAAA,WAAA6I,GAGA,oCAAAob,QAAA,SAAAnC,GACAjZ,EAAAijB,iBAAAhK,EAAA,WAEA,aAAA9hB,IAAAytB,EAAA6jD,eAAA,CAIA,cAAAxvD,IACA2L,EAAAztB,EAAA,WAAAuuC,UAAA,GAGA,IAAAwnC,EAAApb,EAAAqb,MAAA,SAAAj9E,GAGA,kBAAAA,IAAA00B,EAAA6jD,kBAIAtxE,IAAAjH,IAAA00B,EAAA10B,EAAA,aAAA00B,EAAA10B,EAAA,WAAAw1C,YAMA,OAAAwnC,EACAtoD,EAAArf,QAAA0T,QADA,aAkBA1oB,IAAA,eACAN,MAAA,SAAAoqB,GAIA,GAFAzrB,KAAAw9E,iBAAA,EAEAx9E,KAAAg+E,cAAAh+E,KAAAg+E,aAAAtlD,SAAAn2B,OAAA,CACA,IAAA47E,EAAAn+E,KAAAg+E,aAAAtlD,SAEA14B,KAAA+2E,YAAA3oD,aACA4oD,OAAA,sBACAqE,YAAA8C,EAAAx4E,IAAAw4E,EAAA57E,OAAA,KAIAvC,KAAA+9E,cACA/9E,KAAA+2E,YAAA3oD,aACA4oD,OAAA,gBACA/N,gBAAAgU,EAAAj9E,KAAA09E,WAAA19E,KAAAs0C,aAAA++B,QAAArzE,KAAAo6E,gBAIAp6E,KAAA+2E,YAAA3oD,aACA4oD,OAAA,OAIAnnE,KAAA4b,EAAAra,OAIAyJ,WAAA4Q,EAAA5Q,WACA1D,WAAAsU,EAAAtU,aACOsU,EAAAra,SACPpR,KAAA+2E,YAAA3oD,aAAoC4oD,OAAA,aAapCr1E,IAAA,iBACAN,MAAA,SAAAgpB,GACArqB,KAAA09E,WAAAP,EAAAn9E,KAAA09E,WAAArzD,EAAAxa,KAAAurE,QAAAp7E,KAAA29E,gBAYAh8E,IAAA,SACAN,MAAA,SAAAmE,EAAAG,GAeA,GAdA3F,KAAA+9E,eACA/9E,KAAA+9E,aAAAjnC,UAAA,EACA92C,KAAA+9E,aAAApnC,OAAAnxC,EAAAG,GACA3F,KAAA09E,WAAAN,EAAAp9E,KAAA09E,WAAAl4E,EAAAG,EAAA3F,KAAAo6E,gBAEAp6E,KAAA65E,gBAAA75E,KAAAg+E,eACAh+E,KAAAg+E,aAAAlnC,UAAA,EACA92C,KAAAg+E,aAAArnC,OAAAnxC,EAAAG,KAIA,EAAA2vE,EAAA,YAAA9vE,EAAAG,EAAA3F,KAAA8xE,gBAGA9xE,KAAA4xE,kBACA,QAAAvnE,KAAArK,KAAA4xE,mBACA,EAAA0D,EAAA,YAAA9vE,EAAAG,EAAA3F,KAAA4xE,kBAAAvnE,OAaA1I,IAAA,0BACAN,MAAA,WACA,IAAAm9E,GACA7rD,OACA3R,YACA7E,MAAA,GAEAyW,OACA5R,YACA7E,MAAA,GAEAkxC,YACAE,aAKAixB,EAAAx+E,KAAAu9E,gBAAA7lE,OAAA,SAAA+mE,EAAAhzD,GACA,IAAAljB,EAAAkjB,EAAAljB,KACAsH,EAAA4b,EAAA5b,KACA+c,EAAAnB,EAAAmB,YAqBA,OAnBA6xD,EAAAl2E,GAAAyY,SAAA3X,KAAAwG,GACA4uE,EAAAl2E,GAAA4T,OAAAtM,EAAAsH,WAEAsnE,EAAAl2E,GAAAqkB,cAGAnB,EAAA4hC,WACAoxB,EAAApxB,SAAAoxB,EAAApxB,SAAA/1C,OAAAmU,EAAA4hC,WAGA5hC,EAAAsgD,OACA0S,EAAAl2E,GAAAwjE,KAAAtgD,EAAAsgD,MAIAtgD,EAAA8hC,WACAkxB,EAAAlxB,SAAAkxB,EAAAlxB,SAAAj2C,OAAAmU,EAAA8hC,WAGAkxB,GACOD,GAIPx+E,KAAA+9E,cAAA/9E,KAAAg+E,eAGA,IAAAQ,EAAA7rD,MAAAxW,QACAnc,KAAAi6E,YAAA,MAEA,IAAAuE,EAAA5rD,MAAAzW,QACAnc,KAAA85E,YAAA,MAGA95E,KAAA06E,4BAGA8D,EAAA5rD,MAAAm5C,MACA/rE,KAAAs0C,aAAA39B,SAAmCpO,KAAA,YAAAwjE,KAAAyS,EAAA5rD,MAAAm5C,OAEnCyS,EAAA7rD,MAAAo5C,MACA/rE,KAAAs0C,aAAA39B,SAAmCpO,KAAA,YAAAwjE,KAAAyS,EAAA7rD,MAAAo5C,OAGnC/rE,KAAA45E,2BACA55E,KAAA65E,gBAAA75E,KAAAg+E,eACAQ,EAAA5rD,MAAA5R,SAAA2oD,QAAA6U,EAAA5rD,MAAAhG,aACA4xD,EAAA5rD,MAAAzW,OAAAqiE,EAAA5rD,MAAAhG,YAAAzV,YAEAnX,KAAA45E,yBAAA,GAGA,IAAA8E,GAAA,EAGA1+E,KAAA+9E,cAAAS,EAAA7rD,MAAAxW,OACAqiE,EAAA7rD,MAAA3R,SAAA2oD,QAAA6U,EAAA7rD,MAAA/F,aACA4xD,EAAA7rD,MAAAxW,OAAAqiE,EAAA7rD,MAAA/F,YAAAzV,WACAnX,KAAA2+E,yBAAAH,EAAA7rD,MAAA3yB,KAAA+9E,eAEA,EAAAtI,EAAAjE,kBAAAxxE,KAAAw+E,EAAAnxB,SAAAmxB,EAAAjxB,YACOvtD,KAAA+9E,eAAA/9E,KAAA65E,gBAAA75E,KAAAg+E,eAOPU,GAAA,IAGA1+E,KAAA65E,gBAAA75E,KAAAg+E,cACAh+E,KAAA2+E,yBAAAH,EAAA5rD,MAAA5yB,KAAAg+E,cAGAh+E,KAAAu9E,gBAAAh7E,OAAA,EAEAm8E,GACA1+E,KAAA2W,QAAA,aAIA3W,KAAAw9E,iBAAA,KAYA77E,IAAA,2BACAN,MAAA,SAAAo9E,EAAAG,GACA,IAAAliE,EAAA,EACAmiE,OAAA5xE,EAEA,GAAAwxE,EAAAtiE,MAAA,CACA0iE,EAAA,IAAA5jE,WAAAwjE,EAAAtiE,OAGAsiE,EAAAz9D,SAAAwL,QAAA,SAAAf,GACAozD,EAAAn6E,IAAA+mB,EAAA/O,GACAA,GAAA+O,EAAAtU,aAGA,IACAynE,EAAA9nC,UAAA,EACA8nC,EAAA7lC,aAAA8lC,GACS,MAAAlnD,GACT33B,KAAAs0C,aAAA++B,SACArzE,KAAAs0C,aAAA++B,QAAA17C,OACA/0B,MAAA,EACA2F,KAAA,oBACA5F,QAAAg1B,EAAAh1B,QACAm8E,cAAAnnD,SAcAh2B,IAAA,QACAN,MAAA,WACArB,KAAA+9E,cACA/9E,KAAA+9E,aAAAnmD,SAEA53B,KAAA65E,gBAAA75E,KAAAg+E,cACAh+E,KAAAg+E,aAAApmD,QAEA53B,KAAA+2E,aACA/2E,KAAA+2E,YAAA3oD,aAAsC4oD,OAAA,UAEtCh3E,KAAAu9E,gBAAAh7E,OAAA,EACAvC,KAAAw9E,iBAAA,MAIAF,EAtlBA,CAulBC5tD,EAAA,WAAAsM,aAEDr8B,EAAA,WAAA29E,IACC/8E,KAAAP,KAAA,qBAAA+qB,IAAA,qBAAAhrB,UAAA,qBAAA4H,oBACE+wE,wBAAA,GAAA5D,gBAAA,GAAA6D,oCAAA,GAAAE,2BAAA,GAAAkG,sBAAA,GAAAliD,WAAA,KAA4JmiD,IAAA,SAAAh0D,EAAAprB,EAAAD,GAG/J,IAAAs/E,EAAA38E,UAAA,GACA6jB,EAAA7jB,UAAA,GACA48E,EAAA58E,UAAA,GACAm3C,EAAAD,KAAAC,UACA0lC,GAAA,EAGAC,EAAA,SAAA9+E,GAEA,IAAAL,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAR,QAGA,IAAAC,EAAAK,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAV,YAUA,OANAW,EAAAH,GAAAI,KAAAX,EAAAD,QAAAC,IAAAD,QAAAO,GAGAN,EAAAS,GAAA,EAGAT,EAAAD,QAsCA,OAjCAO,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAf,EAAAgB,EAAAC,GACAV,EAAAW,EAAAlB,EAAAgB,IACAG,OAAAC,eAAApB,EAAAgB,GACA6Y,cAAA,EACAxY,YAAA,EACAC,IAAAL,KAMAV,EAAA2B,EAAA,SAAAjC,GACA,IAAAgB,EAAAhB,KAAA4B,WACA,WAA6B,OAAA5B,EAAA,YAC7B,WAAmC,OAAAA,GAGnC,OADAM,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,GAGAhC,IAAAiC,EAAAk9E,cAGA,qBAAAJ,IAEAE,GAAA,EACAF,EAAAG,EACAj5D,EAAYjmB,EAAAM,GAGZ,IAAA8+E,EAAA,SAAAC,GAKA,IAHA,IACAC,EADAC,EAAA3+E,OAAAyrB,KAAA2yD,GAGA9+E,EAAA,EAAiBA,EAAAq/E,EAAAl9E,OAAsBnC,IAAA,CACvC,IAAAs/E,EAAAD,EAAAr/E,GACAu/E,EAAAT,EAAAQ,GAAA//E,QAMA,GAAAggF,IAAAJ,GAAAI,KAAA7lE,UAAAylE,EAAA,CACAC,EAAAE,EACA,OAKA,IAAAF,EAAA,CACAA,EAAA1yE,KAAAuzB,MAAAvzB,KAAA4L,IAAA,MAAA5L,KAAA6qC,UAAAriC,SAAA,IAEA,IAAAsqE,KAEA,IAAAx/E,EAAA,EAAmBA,EAAAq/E,EAAAl9E,OAAsBnC,IAAA,CACzCs/E,EAAAD,EAAAr/E,GAEAw/E,EAAAF,KAGAv5D,EAAAq5D,IACA,oCAAwCD,EAAA,YACxCK,GAIA,IAAAC,EAAA/yE,KAAAuzB,MAAAvzB,KAAA4L,IAAA,MAAA5L,KAAA6qC,UAAAriC,SAAA,IACAwqE,KAYA,OAVAA,EAAAN,KACAr5D,EAAA05D,IACA,oDAEApmC,EAAA+lC,GAAA,wCAGAM,GAGA,IAAAb,EAAA,MACAn+E,OAAAyrB,KAAApG,GAAA/N,IAAA,SAAAzW,GACA,OAAA83C,EAAA93C,GAAA,KACAwkB,EAAAxkB,GAAA,OACA83C,EAAAtzB,EAAAxkB,GAAA,UACSmrB,KAAA,KACT,SAAe2sB,EAAAomC,GAAA,MAGfE,EAAA,SAAAR,EAAAS,GACA,IACAC,EADAC,EAAA,kBAAAF,EAIAC,EADAC,QAMAp/E,OAAAyrB,KAAApG,GAAAqG,QAAA,SAAA2zD,GACAh6D,EAAAg6D,KAGAF,EAAAE,GAAAh6D,EAAAg6D,GAAA7qE,cAGA,IAaA8qE,EAbAC,EAAwBngF,EAAmB8/E,GAM3C,IAAAK,OAAAd,GAAAc,EAAAvmE,UAAAylE,EAAA,CACA,IAAAe,EAAAL,EAAAD,GAEAC,EAAAD,GAAAM,EAAAx1D,UAAA,EAAAw1D,EAAA/9E,OAAA,GACA,KAAAg9E,EAAA5+E,KAAA,SAKA,GAAAu/E,EAAA,CAEAF,EAAAvmC,EAAAumC,GAEA,IAAAO,EAAAz/E,OAAAyrB,KAAA0zD,GAAA7nE,IAAA,SAAA+nE,GACA,OAAA1mC,EAAA0mC,GAAA,IAAAF,EAAAE,KAGAC,EAAA,IAAsBG,EAAAzzD,KAAA,cAEtBszD,EAAA,IAAAH,EAAAnzD,KAAA,SAGA,mBAAAmyD,EAAA3pE,WAAAnS,QAAA,cAAA68E,GAAA,KACAI,EACA,+CAMAxgF,EAAAD,QAAA,SAAA4/E,EAAAS,GACA,IAAA35D,EAGAA,EADA84D,EACAY,EAAAR,EAAAS,GAEAV,EAAAC,GAGA,IAAAiB,EAAA,IAAAC,MAAAp6D,IAA8B9d,KAAA,oBAC9B6zE,EAAAz0E,OAAAy0E,KAAAz0E,OAAA+4E,WAAA/4E,OAAAg5E,QAAAh5E,OAAAi5E,MACAC,EAAAzE,EAAAC,gBAAAmE,GACAM,EAAA,IAAAC,OAAAF,GAEA,OADAC,EAAAE,UAAAH,EACAC,QAGIG,IAAA,SAAAj2D,EAAAprB,EAAAD,IACJ,SAAAorB,GAOA,aAEA,IAAA5R,EAAA,WAAiC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAzhB,GAEA8U,EAAA,SAAAkkB,EAAAC,EAAAC,GAAwC,IAAAhkB,GAAA,EAAmB,MAAAA,EAAA,CAA4B,IAAA9sB,EAAA4wC,EAAA3wC,EAAA4wC,EAAA9jB,EAAA+jB,EAAkDhkB,GAAA,EAAgB,OAAA9sB,MAAAuT,SAAArT,WAAkD,IAAA8sB,EAAAhuB,OAAAiuB,yBAAAjtB,EAAAC,GAA8D,QAAAkL,IAAA6hB,EAAA,CAAwO,aAAAA,EAA4B,OAAAA,EAAAztB,MAA4B,IAAAT,EAAAkuB,EAAA7tB,IAAuB,QAAAgM,IAAArM,EAA4B,OAAoB,OAAAA,EAAAL,KAAAsuB,GAA7U,IAAA5G,EAAAnnB,OAAAif,eAAAje,GAA4C,UAAAmmB,EAAuB,OAA2ByqB,EAAAzqB,EAAc0qB,EAAA5wC,EAAgB6wC,EAAA/jB,EAAgBD,GAAA,EAAeE,EAAA7G,OAAAhb,IAE9b,SAAA4M,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAE7E,SAAAyN,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAE3F,SAAAwK,EAAAC,EAAAC,GAA0C,uBAAAA,GAAA,OAAAA,EAA+D,UAAA1K,UAAA,kEAAA0K,GAAuGD,EAAAzd,UAAAlB,OAAAY,OAAAge,KAAA1d,WAAyEkE,aAAe7E,MAAAoe,EAAAze,YAAA,EAAAyY,UAAA,EAAAD,cAAA,KAA6EkG,IAAA5e,OAAA6e,eAAA7e,OAAA6e,eAAAF,EAAAC,GAAAD,EAAAG,UAAAF,GAErX,IAAAm0D,EAAA7oD,EAAA,mBAEA8oD,EAAAj6D,EAAAg6D,GAEA7kD,EAAAhE,EAAA,qBAEAiE,EAAApV,EAAAmV,GAEA8Y,EAAA9c,EAAA,cAEA+c,EAAAluB,EAAAiuB,GAEAo5C,EAAAl2D,EAAA,SAEAm2D,EAAAtnE,EAAAqnE,GAEAlzD,EAAAhD,EAAA,iBAEAiD,EAAAjD,EAAA,eAEAo2D,EAAAvnE,EAAAoU,GAEAozD,EAAAr2D,EAAA,iCAEAwa,EAAAxa,EAAA,eAEAya,EAAA5rB,EAAA2rB,GAEA/V,EAAA,qBAAA9nB,cAAA,gCAAAojB,IAAA,gBAEA2E,EAAA7V,EAAA4V,GAEA6xD,EAAAt2D,EAAA,gCAEAoF,EAAApF,EAAA,YAEAqF,EAAAxW,EAAAuW,GAEAmxD,EAAAv2D,EAAA,qBAEAw2D,EAAA3nE,EAAA0nE,GAEAr2D,EAAAF,EAAA,iBAEAG,EAAAtR,EAAAqR,GAEAu2D,EAAAz2D,EAAA,sBAEA02D,EAAA7nE,EAAA4nE,GAEAE,EAAA32D,EAAA,4BAEA42D,EAAA/nE,EAAA8nE,GAEAE,EAAA72D,EAAA,2BAEAyF,GACAgW,eAAAxX,EAAA,WACAmJ,SAAA2P,EAAA,WACAnsB,UAAAoS,EAAApS,UACA+lC,YAAA3zB,EAAA2zB,YACAnnC,QAAAwT,EAAAxT,QACAuS,MAAAq0D,EAAA,WAEAU,2BAAAD,EAAAz3C,sBACA23C,0BAAAF,EAAAp2C,uCACAhD,yBAAAo5C,EAAAp5C,yBACAK,0BAAA+4C,EAAA/4C,0BAEA9hB,KAAA,EAAAm6D,EAAA,eAIAa,EAAA,SAGA,+KAAAx1D,QAAA,SAAA7d,GACA7N,OAAAC,eAAA0vB,EAAA9hB,GACA1N,IAAA,WAEA,OADAyuB,EAAA,WAAA8C,IAAAC,KAAA,aAAA9jB,EAAA,kDACA0hB,EAAA,WAAA1hB,IAEAjK,IAAA,SAAArD,GACAquB,EAAA,WAAA8C,IAAAC,KAAA,aAAA9jB,EAAA,kDAEA,kBAAAtN,KAAA,EACAquB,EAAA,WAAA8C,IAAAC,KAAA,gBAAA9jB,EAAA,uCAIA0hB,EAAA,WAAA1hB,GAAAtN,OAYA,IAAA4gF,EAAA,SAAAC,EAAA5mD,GAIA,IAHA,IAAA8a,EAAA9a,EAAAxY,QACAq/D,GAAA,EAEA/hF,EAAA,EAAiBA,EAAA8hF,EAAA3/E,OAA0BnC,IAC3C,GAAA8hF,EAAA9hF,GAAAqE,KAAA2xC,EAAAl0B,IAAA,CACAigE,EAAA/hF,EACA,MAIA8hF,EAAAE,eAAAD,EACAD,EAAAvrE,SACAwrE,gBACA55E,KAAA,YAWA85E,EAAA,SAAAH,EAAAx7D,GACAA,EAAAsrB,kBAAAxlB,QAAA,SAAA8c,GACA44C,EAAAI,gBAAAh5C,KAEA24C,EAAAC,EAAAx7D,EAAA9D,YAKA6N,EAAA8xD,cAAA,WACA,OAAA7yD,EAAA,WAAA8C,IAAAC,KAAA,4EAMAhC,EAAA+xD,kBAAA,WACA,IAAA7vD,EAAAmhD,EAAA,WAAAxrE,cAAA,SAGA,IAAAonB,EAAA,WAAAysD,QAAA,SAAAsG,cACA,SAIA,IAAAC,GAEA,gCAEA,gBAEA,kBAEA,wBAEA,yDAEA,OAAAA,EAAAj0C,KAAA,SAAAk0C,GACA,wBAAAn8E,KAAAmsB,EAAAiwD,YAAAD,MAtBA,GA+BAlyD,EAAAgyD,YAAA,WACA,OAAA/yD,EAAA,WAAA8C,IAAAC,KAAA,4EAGA,IAAAowD,EAAAnzD,EAAA,WAAAozD,aAAA,aAaAC,EAAA,SAAAC,GAGA,SAAAD,EAAAhkE,EAAAoU,EAAA7N,GACA,IAAAxF,EAAA9f,KAQA,GANA+Z,EAAA/Z,KAAA+iF,GAEAv0D,EAAA1tB,OAAAif,eAAAgjE,EAAA/gF,WAAA,cAAAhC,MAAAO,KAAAP,KAAAmzB,EAAA7N,EAAAoB,KAIAyM,EAAA8vD,UAAA9vD,EAAA8vD,SAAAC,SAAA,CACA,IAAAC,GAAA,EAAAzzD,EAAA,YAAAyD,EAAA8vD,SAAAC,UAEAC,EAAAlhF,eAAA,QACAnB,OAAAC,eAAAoiF,EAAA,OACAliF,IAAA,WAGA,OAFAyuB,EAAA,WAAA8C,IAAAC,KAAA,2DACAU,EAAAxc,SAA0BpO,KAAA,QAAA5H,KAAA,sBAC1Bmf,KAcA,GARA9f,KAAA+mB,MAAAoM,EACAnzB,KAAAojF,QAAArkE,EACA/e,KAAAmgC,SACAngC,KAAAqjF,yBAAA,EACArjF,KAAAsjF,cAIAtjF,KAAAijF,SAAAM,iBAAApwD,EAAAqwD,2BAAArwD,EAAAswD,2BACA,UAAAjhF,MAAA,4EAKAxC,KAAAme,GAAA21D,EAAA,6GAAAzpD,GACA,IAAAq5D,EAAA5P,EAAA,WAAA4P,mBAAA5P,EAAA,WAAA6P,yBAAA7P,EAAA,WAAA8P,sBAAA9P,EAAA,WAAA+P,oBAEAH,KAAAI,SAAAhkE,EAAAiH,MAAAkhB,OACAnoB,EAAA+xB,0BAAAC,uBAIA9xC,KAAAme,GAAAne,KAAA+mB,MAAA,qBACA/mB,KAAAqjF,wBACArjF,KAAAqjF,yBAAA,EAIArjF,KAAAo5B,eAAAp5B,KAAA+mB,MAAAkO,iBAEAj1B,KAAAme,GAAAne,KAAA+mB,MAAA,mBACA/mB,KAAA6xC,2BACA7xC,KAAA6xC,0BAAAkyC,iBAIA/jF,KAAAme,GAAAne,KAAA+mB,MAAA,OAAA/mB,KAAA45B,MA8TA,OA3XApa,EAAAujE,EAAAC,GAwEA7pE,EAAA4pE,IACAphF,IAAA,cACAN,MAAA,WACA,IAAA20B,EAAAh2B,KAGAA,KAAAijF,SAAA78D,gBAAApmB,KAAAijF,SAAA78D,kBAAA,EAEA,kBAAApmB,KAAAijF,SAAA1vD,oBACAvzB,KAAAijF,SAAA1vD,kBAAA,KAKA,kBAAAvzB,KAAAijF,SAAA7vD,YACApzB,KAAAijF,SAAA7vD,UAAA4uD,GAKAhiF,KAAAijF,SAAAzvD,yBAAAxzB,KAAAijF,SAAAzvD,0BAAAxzB,KAAAijF,SAAA7vD,YAAA4uD,GAGA,+BAAAx1D,QAAA,SAAAw3D,GACA,qBAAAhuD,EAAAotD,QAAAY,KACAhuD,EAAAitD,SAAAe,GAAAhuD,EAAAotD,QAAAY,MAIAhkF,KAAAozB,UAAApzB,KAAAijF,SAAA7vD,aASAzxB,IAAA,MACAN,MAAA,SAAA4iF,GACA,IAAA1rD,EAAAv4B,KAGAikF,IAGAjkF,KAAAsjF,cAEAtjF,KAAAijF,SAAA/vD,IAAAlzB,KAAAojF,QAAA/8D,IACArmB,KAAAijF,SAAA9vD,KAAAnzB,KAAA+mB,MACA/mB,KAAAijF,SAAA5vD,UAAA5C,EAEAzwB,KAAA6xC,0BAAA,IAAAyvC,EAAAtuD,yBAAAhzB,KAAAijF,UACAjjF,KAAAkkF,iBAAA,IAAAxC,EAAA,WAAAhyD,EAAA,WAAAgG,aAAA11B,KAAAijF,UACA/tD,SAAA,WACA,OAAAqD,EAAArD,eAIAl1B,KAAA6xC,0BAAA1zB,GAAA,mBACA,IAAA2I,EAAA4I,EAAA,WAAAy0D,QAAA5rD,EAAAxR,MAAAk8D,SAAAC,UAEAp8D,EAAA6Q,MAAAY,EAAAsZ,0BAAAla,SAKA33B,KAAA6xC,0BAAA3a,eAAAl3B,KAAAk3B,eAAAl3B,KAAAk3B,eAAAt1B,KAAA5B,MAAAywB,EAAAqxD,2BAAAlgF,KAAA5B,MAEAA,KAAA6xC,0BAAA5a,sBAAAxG,EAAAsxD,0BAAAngF,KAAA5B,MAGAA,KAAA4iB,UAAA5iB,KAAA6xC,0BAAArc,sBACAx1B,KAAAm0B,YAAAn0B,KAAA6xC,0BAAA1d,YAKArzB,OAAAsY,iBAAApZ,MACAk3B,gBACAj2B,IAAA,WACA,OAAAjB,KAAA6xC,0BAAA3a,gBAEAxyB,IAAA,SAAAwyB,GACAl3B,KAAA6xC,0BAAA3a,iBAAAt1B,KAAA5B,QAGAg0C,YACA/yC,IAAA,WACA,OAAAjB,KAAA6xC,0BAAA3gB,mBAAA8iB,WAAAjY,MAEAr3B,IAAA,SAAAsvC,GACAh0C,KAAA6xC,0BAAA3gB,mBAAA8iB,WAAAjY,KAAAiY,EAGAh0C,KAAA6xC,0BAAA3gB,mBAAA8iB,WAAAvpC,MAAA,IAGA2oB,WACAnyB,IAAA,WACA,OAAAjB,KAAA6xC,0BAAA3gB,mBAAAkC,WAEA1uB,IAAA,SAAA0uB,GACApzB,KAAA6xC,0BAAA3gB,mBAAAkC,YAIApzB,KAAA6xC,0BAAA3gB,mBAAA8iB,YACAjY,KAAA,EACAtxB,MAAA,KAaA4/B,iBACAppC,IAAA,WACA,IAAAmjF,EAAA,GAAApkF,KAAAozB,WAAA,GACAixD,OAAAp3E,EAGAo3E,EADArkF,KAAAg0C,WAAA,EACA,EAAAh0C,KAAAg0C,WAEA,EAGA,IAAAswC,EAAAx3E,KAAAuzB,MAAA,GAAA+jD,EAAAC,IAEA,OAAAC,GAEA5/E,IAAA,WACAgrB,EAAA,WAAA8C,IAAAmF,MAAA,mDAKA72B,OAAAsY,iBAAApZ,KAAAmgC,OACA/M,WACAnyB,IAAA,WACA,OAAAs3B,EAAAnF,WAAA,GAEApyB,YAAA,GAEAs0C,eACAr0C,IAAA,WACA,OAAAs3B,EAAAsZ,0BAAA0yC,kBAAA,GAEAvjF,YAAA,GAEAu0C,sBACAt0C,IAAA,WACA,OAAAs3B,EAAAsZ,0BAAA2yC,yBAAA,GAEAxjF,YAAA,GAEAw0C,uBACAv0C,IAAA,WACA,OAAAs3B,EAAAsZ,0BAAA4yC,0BAAA,GAEAzjF,YAAA,GAEAy0C,sBACAx0C,IAAA,WACA,OAAAs3B,EAAAsZ,0BAAA6yC,yBAAA,GAEA1jF,YAAA,GAEA00C,uBACAz0C,IAAA,WACA,OAAAs3B,EAAAsZ,0BAAA8yC,0BAAA,GAEA3jF,YAAA,GAEAq0C,uBACAp0C,IAAA,WACA,OAAAs3B,EAAAsZ,0BAAA+yC,0BAAA,GAEA5jF,YAAA,GAEAg4B,oBACA/3B,IAAA,WACA,OAAAs3B,EAAAsZ,0BAAAgzC,uBAAA,GAEA7jF,YAAA,KAIAhB,KAAA+mB,MAAA2Q,IAAA,UAAA13B,KAAA6xC,0BAAA/a,eAAAl1B,KAAA5B,KAAA6xC,4BAEA7xC,KAAA6xC,0BAAA1zB,GAAA,mCAEA,EAAAqjE,EAAA,YAAAjpD,KAKAv4B,KAAAme,GAAAne,KAAA6xC,0BAAA,sBACA7xC,KAAA+mB,MAAApQ,QAAA,cAKA3W,KAAAme,GAAAne,KAAA6xC,0BAAA,uBACA7xC,KAAAqjF,yBAAA,IAGArjF,KAAA+mB,MAAAvB,MAAA,WACA,OAAA+S,EAAAusD,wBAKA9kF,KAAA+mB,MAAAkhB,MAIAjoC,KAAA+mB,MAAAV,IAAAqJ,EAAA,WAAA0sD,IAAAC,gBAAAr8E,KAAA6xC,0BAAA1d,kBAUAxyB,IAAA,sBACAN,MAAA,WACA,IAAAg4B,EAAAr5B,KAEA8mB,EAAA4I,EAAA,WAAAy0D,QAAAnkF,KAAA+mB,MAAAk8D,SAAAC,UAEAp8D,KAAAo7D,gBACAliF,KAAA+kF,eAAAj+D,EAAAo7D,gBAEAliF,KAAA6xC,0BAAA1zB,GAAA,kCACAkkE,EAAAhpD,EAAA0rD,eAAA1rD,KAGAr5B,KAAA4iB,UAAAzE,GAAA,yBACA8jE,EAAA5oD,EAAA0rD,eAAA1rD,EAAAzW,iBASAjhB,IAAA,OACAN,MAAA,WACArB,KAAA6xC,0BAAAjY,UAOAj4B,IAAA,iBACAN,MAAA,SAAA4zB,GACAj1B,KAAA6xC,0BAAAzY,eAAAnE,MAOAtzB,IAAA,WACAN,MAAA,WACA,OAAArB,KAAA6xC,0BAAAhwB,cAOAlgB,IAAA,WACAN,MAAA,WACA,OAAArB,KAAA6xC,0BAAA3c,cAOAvzB,IAAA,UACAN,MAAA,WACArB,KAAAkkF,kBACAlkF,KAAAkkF,iBAAAzlE,UAEAze,KAAA6xC,2BACA7xC,KAAA6xC,0BAAApzB,UAEAze,KAAA+kF,gBACA/kF,KAAA+kF,eAAAtmE,UAEA+P,EAAA1tB,OAAAif,eAAAgjE,EAAA/gF,WAAA,UAAAhC,MAAAO,KAAAP,UAIA+iF,EA5XA,CA6XCF,GAEDmC,EAAA,SAAAA,EAAAzjF,GACA,OACA0jF,gBAAA,SAAAC,GACA,IAAA5/D,EAAAhjB,UAAAC,QAAA,QAAA0K,IAAA3K,UAAA,MAA4EA,UAAA,GAE5EouC,EAAAhhB,EAAA,WAAAgG,aAAAhG,EAAA,WAAApK,WAIA,QAAAorB,EAAAhqB,MAAAgqB,EAAAhqB,IAAAnlB,MAAAmvC,EAAAhqB,IAAAnlB,WAGAyjF,EAAApC,YAAAsC,EAAA38E,KAAAmoC,IAEAy0C,aAAA,SAAApmE,EAAAoU,GACA,IAAA7N,EAAAhjB,UAAAC,QAAA,QAAA0K,IAAA3K,UAAA,MAA4EA,UAAA,GAE5EouC,EAAAhhB,EAAA,WAAAgG,aAAAhG,EAAA,WAAApK,WAAmGoB,KAAOnlB,UAc1G,MAZA,UAAAA,GAGA4xB,EAAA8Q,WAAA,WACA9Q,EAAAxc,QAAA,cACS,GAGTwc,EAAAzM,IAAA,IAAAq8D,EAAAhkE,EAAAoU,EAAAud,GACAvd,EAAAzM,IAAAM,KAAA,EAAAm6D,EAAA,cAEAhuD,EAAAzM,IAAAL,IAAAtH,EAAAsH,KACA8M,EAAAzM,KAEAk8D,YAAA,SAAAr6E,GACA,IAAA+c,EAAAhjB,UAAAC,QAAA,QAAA0K,IAAA3K,UAAA,MAA4EA,UAAA,GAE5EouC,EAAAhhB,EAAA,WAAAgG,aAAAhG,EAAA,WAAApK,WAEA,OAAA0/D,EAAApC,YAAAr6E,EAAAmoC,GACA,QAEA,MAKAs0C,EAAApC,YAAA,SAAAr6E,EAAA+c,GAEA,GAAAoK,EAAA,WAAA6J,QAAAC,YAAA9J,EAAA,WAAA6J,QAAAC,YAAA,GACA,SAGA,IAAA4rD,EAAA,yDAGA,SAAA9/D,EAAAoB,IAAA68D,gBAAA9yD,EAAA+xD,oBAGA4C,EAAA5+E,KAAA+B,IAGA,qBAAAmnB,EAAA,WAAA0E,aAAA,qBAAA1E,EAAA,WAAA0sD,MACA1sD,EAAA,WAAA0E,YAAAitD,EAAAjtD,YACA1E,EAAA,WAAA0sD,IAAAiF,EAAAjF,KAGA,IAAAiJ,EAAA31D,EAAA,WAAAysD,QAAA,SAGAkF,EAAAjtD,YAAA8nD,8BACAxsD,EAAA,WAAAysD,QAAA,SAAAmJ,sBAAAN,EAAA,YAEA75D,EAAA,WAAAlQ,YAAAoqE,GACAA,EAAAC,sBAAAN,EAAA,UAGAt1D,EAAA,WAAAqzD,aACArzD,EAAA,WAAAs1D,mBACAt1D,EAAA,WAAAe,MACAf,EAAA,WAAA61D,KACA71D,EAAA,WAAA81D,kBAAA,MAAA/0D,GAEAf,EAAA,WAAA+1D,KAAAhgD,EAAA,WACA/V,EAAA,WAAApK,QAAAoB,IAAAgJ,EAAA,WAAApK,QAAAoB,QAEAgJ,EAAA,WAAAg2D,eACAh2D,EAAA,WAAAg2D,eAAA,sBAAA9D,EAAA,YAEAlyD,EAAA,WAAAi2D,OAAA,sBAAA/D,EAAA,YAGAhiF,EAAAD,SACA8wB,MACAsyD,aACAiC,sBAECzkF,KAAAP,KAAA,qBAAA+qB,IAAA,qBAAAhrB,UAAA,qBAAA4H,oBACE0mB,cAAA,EAAA6N,WAAA,EAAA0pD,+BAAA,EAAAC,qBAAA,EAAAl6C,aAAA,GAAAtP,oBAAA,EAAAypD,0BAAA,GAAAC,2BAAA,GAAAC,oBAAA,GAAAC,QAAA,GAAA33D,gBAAA,GAAA2mD,kBAAA,GAAAlpD,gBAAA,GAAA6b,cAAA,GAAAs+C,gCAAA,UAA4U,IArkqBmC,CAqkqBnC,mDC3kqB/U,IAAAv9E,EAAWzI,EAAQ,QACnBssB,EAActsB,EAAQ,QACtB2pB,EAAA,SAAAs8D,GACA,yBAAArlF,OAAAkB,UAAAsT,SAAA/U,KAAA4lF,IAGAvmF,EAAAD,QAAA,SAAA6/B,GACA,IAAAA,EACA,SAEA,IAAA13B,KAmBA,OAjBA0kB,EACA7jB,EAAA62B,GAAA77B,MAAA,MACA,SAAAk6D,GACA,IAAA/lD,EAAA+lD,EAAA/qD,QAAA,KACAnR,EAAAgH,EAAAk1D,EAAAxmD,MAAA,EAAAS,IAAAjE,cACAxS,EAAAsH,EAAAk1D,EAAAxmD,MAAAS,EAAA,IAEA,qBAAAhQ,EAAAnG,GACAmG,EAAAnG,GAAAN,EACSwoB,EAAA/hB,EAAAnG,IACTmG,EAAAnG,GAAA0H,KAAAhI,GAEAyG,EAAAnG,IAAAmG,EAAAnG,GAAAN,KAKAyG,yBCbA,IAAAs+E,GACA7yE,IAAA,EACA8yE,IAAA,GAGA,SAAAC,EAAAjlF,GACA,qBAAAA,EACA,SAEA,IAAA+Q,EAAAg0E,EAAA/kF,EAAAwS,eACA,QAAAzB,GAAA/Q,EAAAwS,cAGA,SAAA0yE,EAAAllF,GACA,wBAAAA,MAAA,GAAAA,GAAA,IAIA,SAAAyQ,IACA,IAAA00E,EAAA,IACAC,EAAA,EACAC,EAAA,EACAC,EAAA,IACAC,EAAA,EACAC,EAAA,IACAC,EAAA,GAEAhmF,OAAAsY,iBAAApZ,MACAiM,OACAjL,YAAA,EACAC,IAAA,WACA,OAAAulF,GAEA9hF,IAAA,SAAArD,GACA,IAAAklF,EAAAllF,GACA,UAAAmB,MAAA,oCAEAgkF,EAAAnlF,IAGA0Q,OACA/Q,YAAA,EACAC,IAAA,WACA,OAAAwlF,GAEA/hF,IAAA,SAAArD,GACA,qBAAAA,EACA,UAAA2T,UAAA,kCAEAyxE,EAAAplF,IAGA4Q,eACAjR,YAAA,EACAC,IAAA,WACA,OAAA0lF,GAEAjiF,IAAA,SAAArD,GACA,IAAAklF,EAAAllF,GACA,UAAAmB,MAAA,4CAEAmkF,EAAAtlF,IAGA2Q,eACAhR,YAAA,EACAC,IAAA,WACA,OAAAylF,GAEAhiF,IAAA,SAAArD,GACA,IAAAklF,EAAAllF,GACA,UAAAmB,MAAA,4CAEAkkF,EAAArlF,IAGA8Q,iBACAnR,YAAA,EACAC,IAAA,WACA,OAAA4lF,GAEAniF,IAAA,SAAArD,GACA,IAAAklF,EAAAllF,GACA,UAAAmB,MAAA,8CAEAqkF,EAAAxlF,IAGA6Q,iBACAlR,YAAA,EACAC,IAAA,WACA,OAAA2lF,GAEAliF,IAAA,SAAArD,GACA,IAAAklF,EAAAllF,GACA,UAAAmB,MAAA,8CAEAokF,EAAAvlF,IAGA+Q,QACApR,YAAA,EACAC,IAAA,WACA,OAAA6lF,GAEApiF,IAAA,SAAArD,GACA,IAAA4T,EAAAqxE,EAAAjlF,GAEA,QAAA4T,EACA,UAAAC,YAAA,+CAEA4xE,EAAA7xE,MAMArV,EAAAD,QAAAmS,uCC3HA,IAAA4wC,EAQA9iD,EAAAD,QAAA,SAAAgjD,GACA,IAAAC,EAAAF,EAAAC,EAAAxrC,WAAA,OACArP,EAAA,IAAAmT,WAAA0nC,EAAAxrC,WAAAyrC,EAAArgD,QAGA,OAFAuF,EAAApD,IAAAi+C,GACA76C,EAAApD,IAAAk+C,EAAAD,EAAAxrC,YACArP,GAIA46C,IACA,YACA,YACA,YACA,cAEA,YACA,YACA,YACA,WAEA,YACA,YACA,YACA,QAEA,YACA,YACA,YACA,KAEA,YACA,YACA,cAEA,YACA,YACA,WAEA,YACA,YACA,QAEA,QACA,QACA,IAEA,QACA,UAEA,QACA,QAEA,QACA,MAEA,QACA,IAEA,UAEA,QAEA,MAEA,yCCpCA5hD,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAA8X,EAAA,WAAiC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAzhB,GAEA,SAAAK,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAE3F,IAAA2qC,EAAA,WACA,IAAAC,sCACAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAF,EAAA,GACAG,EAAAF,EAAA,GACA1/C,OAAA6M,EACAmC,OAAAnC,EACAgzC,OAAAhzC,EACAvM,KACAw/C,KACAC,OAAAlzC,EACAmzC,OAAAnzC,EACAozC,OAAApzC,EACA9K,OAAA8K,EACAqzC,OAAArzC,EACAszC,OAAAtzC,EAGA,IAAA7M,EAAA,EAAaA,EAAA,IAASA,IACtB8/C,GAAAx/C,EAAAN,MAAA,OAAAA,GAAA,IAAAA,KAGA,IAAAgP,EAAA6wC,EAAA,GAAoBF,EAAA3wC,GAAUA,GAAA+wC,GAAA,EAAAF,EAAAC,EAAAD,IAAA,EAY9B,IAVA99C,EAAA89C,KAAA,EAAAA,GAAA,EAAAA,GAAA,EAAAA,GAAA,EACA99C,KAAA,MAAAA,EAAA,GACA49C,EAAA3wC,GAAAjN,EACA69C,EAAA79C,GAAAiN,EAGAixC,EAAA3/C,EAAA0/C,EAAA1/C,EAAAy/C,EAAAz/C,EAAA0O,KACAmxC,EAAA,SAAAF,EAAA,MAAAD,EAAA,IAAAD,EAAA,SAAA/wC,EACAkxC,EAAA,IAAA5/C,EAAAyB,GAAA,SAAAA,EAEA/B,EAAA,EAAeA,EAAA,EAAOA,IACtBy/C,EAAAz/C,GAAAgP,GAAAkxC,KAAA,GAAAA,IAAA,EACAR,EAAA1/C,GAAA+B,GAAAo+C,KAAA,GAAAA,IAAA,EAKA,IAAAngD,EAAA,EAAaA,EAAA,EAAOA,IACpBy/C,EAAAz/C,GAAAy/C,EAAAz/C,GAAAiX,MAAA,GACAyoC,EAAA1/C,GAAA0/C,EAAA1/C,GAAAiX,MAAA,GAEA,OAAAuoC,GAEAY,EAAA,KAUAC,EAAA,WACA,SAAAA,EAAA9+C,GACAoY,EAAA/Z,KAAAygD,GAgBAD,IACAA,EAAAb,KAGA3/C,KAAA0gD,UAAAF,EAAA,MAAAnpC,QAAAmpC,EAAA,MAAAnpC,QAAAmpC,EAAA,MAAAnpC,QAAAmpC,EAAA,MAAAnpC,QAAAmpC,EAAA,MAAAnpC,UAAAmpC,EAAA,MAAAnpC,QAAAmpC,EAAA,MAAAnpC,QAAAmpC,EAAA,MAAAnpC,QAAAmpC,EAAA,MAAAnpC,QAAAmpC,EAAA,MAAAnpC,UACA,IAAAjX,OAAA6M,EACAkgB,OAAAlgB,EACA0zC,OAAA1zC,EACA2zC,OAAA3zC,EACA4zC,OAAA5zC,EACA8yC,EAAA//C,KAAA0gD,QAAA,MACAZ,EAAA9/C,KAAA0gD,QAAA,GACAI,EAAAn/C,EAAAY,OACAw+C,EAAA,EAEA,OAAAD,GAAA,IAAAA,GAAA,IAAAA,EACA,UAAAt+C,MAAA,wBAQA,IALAo+C,EAAAj/C,EAAA0V,MAAA,GACAwpC,KACA7gD,KAAAqgB,MAAAugC,EAAAC,GAGAzgD,EAAA0gD,EAAoB1gD,EAAA,EAAA0gD,EAAA,GAAqB1gD,IACzCugD,EAAAC,EAAAxgD,EAAA,IAGAA,EAAA0gD,IAAA,OAAAA,GAAA1gD,EAAA0gD,IAAA,KACAH,EAAAZ,EAAAY,IAAA,QAAAZ,EAAAY,GAAA,YAAAZ,EAAAY,GAAA,UAAAZ,EAAA,IAAAY,GAGAvgD,EAAA0gD,IAAA,IACAH,KAAA,EAAAA,IAAA,GAAAI,GAAA,GACAA,KAAA,OAAAA,GAAA,KAIAH,EAAAxgD,GAAAwgD,EAAAxgD,EAAA0gD,GAAAH,EAIA,IAAAxzB,EAAA,EAAe/sB,EAAG+sB,IAAA/sB,IAClBugD,EAAAC,EAAA,EAAAzzB,EAAA/sB,IAAA,GAEAygD,EAAA1zB,GADA/sB,GAAA,GAAA+sB,EAAA,EACAwzB,EAEAb,EAAA,GAAAC,EAAAY,IAAA,KAAAb,EAAA,GAAAC,EAAAY,GAAA,SAAAb,EAAA,GAAAC,EAAAY,GAAA,QAAAb,EAAA,GAAAC,EAAA,IAAAY,IA+DA,OA5CAxnC,EAAAsnC,IACA9+C,IAAA,UACAN,MAAA,SAAAka,EAAAC,EAAAC,EAAAC,EAAAslC,EAAAtkC,GACA,IAAA/a,EAAA3B,KAAAqgB,KAAA,GAEA9Z,EAAAgV,EAAA5Z,EAAA,GACAwF,EAAAuU,EAAA/Z,EAAA,GACAlB,EAAAgb,EAAA9Z,EAAA,GACAjB,EAAA8a,EAAA7Z,EAAA,GACAs/C,OAAAh0C,EACAgC,OAAAhC,EACAi0C,OAAAj0C,EAGAk0C,EAAAx/C,EAAAY,OAAA,IACAnC,OAAA6M,EACAm0C,EAAA,EACAC,EAAArhD,KAAA0gD,QAAA,GAGAY,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAtB,EAAAsB,EAAA,GAGA,IAAAjhD,EAAA,EAAiBA,EAAA+gD,EAAkB/gD,IACnC6gD,EAAAK,EAAA/6C,IAAA,IAAAg7C,EAAAp6C,GAAA,QAAAq6C,EAAA/gD,GAAA,OAAAghD,EAAA,IAAA/gD,GAAAiB,EAAAy/C,GACAnyC,EAAAqyC,EAAAn6C,IAAA,IAAAo6C,EAAA9gD,GAAA,QAAA+gD,EAAA9gD,GAAA,OAAA+gD,EAAA,IAAAl7C,GAAA5E,EAAAy/C,EAAA,GACAF,EAAAI,EAAA7gD,IAAA,IAAA8gD,EAAA7gD,GAAA,QAAA8gD,EAAAj7C,GAAA,OAAAk7C,EAAA,IAAAt6C,GAAAxF,EAAAy/C,EAAA,GACA1gD,EAAA4gD,EAAA5gD,IAAA,IAAA6gD,EAAAh7C,GAAA,QAAAi7C,EAAAr6C,GAAA,OAAAs6C,EAAA,IAAAhhD,GAAAkB,EAAAy/C,EAAA,GACAA,GAAA,EACA76C,EAAA06C,EAAe95C,EAAA8H,EAAOxO,EAAAygD,EAItB,IAAA9gD,EAAA,EAAiBA,EAAA,EAAOA,IACxB4gD,GAAA,GAAA5gD,GAAAsc,GAAAqjC,EAAAx5C,IAAA,QAAAw5C,EAAA54C,GAAA,YAAA44C,EAAAt/C,GAAA,UAAAs/C,EAAA,IAAAr/C,GAAAiB,EAAAy/C,KACAH,EAAA16C,EAAeA,EAAAY,EAAMA,EAAA1G,EAAMA,EAAAC,EAAMA,EAAAugD,MAKjCR,EAhIA,GAmIA9gD,EAAA,WAAA8gD,EACA7gD,EAAAD,UAAA,+BCpPAC,EAAAD,QAAAonF,EAEA,IAAAzxE,EAAAxU,OAAAkB,UAAAsT,SAEA,SAAAyxE,EAAAxH,GACA,IAAAyH,EAAA1xE,EAAA/U,KAAAg/E,GACA,4BAAAyH,GACA,oBAAAzH,GAAA,oBAAAyH,GACA,qBAAAr/E,SAEA43E,IAAA53E,OAAAs8B,YACAs7C,IAAA53E,OAAAs/E,OACA1H,IAAA53E,OAAAu/E,SACA3H,IAAA53E,OAAAw/E,4CCbAjnF,EAAAQ,EAAAsoB,EAAA,sBAAAxX,KAAAtR,EAAAQ,EAAAsoB,EAAA,sBAAAo+D,KAAA,IAAAC,EAAAnnF,EAAA,QAAAonF,EAAApnF,EAAA2B,EAAAwlF,GAAAE,EAAArnF,EAAA,QAAAsnF,EAAAtnF,EAAA2B,EAAA0lF,GAWAE,EAAA,SAAAj7C,GACA,IAAAk7C,EAEA5lE,EAAA0qB,EAAA1qB,WACAd,EAAAwrB,EAAAxrB,SAEA0B,GACAZ,YAAA4lE,GACA1kE,KAAAlB,EAAArd,GACAmmB,UAAA9I,EAAAsR,UACAtB,OAAAhQ,EAAA2P,QACKi2D,EAAA,gBAAAA,GACLxlE,IAAA,GACAT,QAAA,YAAAK,EAAAvZ,MAAA,UACAmc,SAAA5C,EAAA6lE,YACA96D,YAAA,GACA7I,eAAAlC,EAAAD,SACAb,WACAW,cAAAX,EAAAze,OAAAye,EAAA,GAAAsB,OAAA,GAOA,OAJAR,EAAA8lE,oBACAllE,EAAAklE,kBAAA9lE,EAAA8lE,mBAGAllE,GAGAmlE,EAAA,SAAA55C,GACA,IAAA65C,EAEAhmE,EAAAmsB,EAAAnsB,WACAd,EAAAitB,EAAAjtB,SAcA,MAZA,qBAAAA,IAEAA,IACAkB,IAAAJ,EAAAimE,QACArjE,SAAA5C,EAAA6lE,YACA96D,YAAA/K,EAAAimE,SAAA,GACAlmE,SAAAC,EAAAkmE,eACA1lE,OAAA,IAGAR,EAAAD,SAAAC,EAAAkmE,iBAGAlmE,YAAAgmE,GACA9kE,KAAAlB,EAAArd,GACAmmB,UAAA9I,EAAAsR,WACK00D,EAAA,gBAAAA,GACL5lE,IAAA,GACAT,QAAA,YAAAK,EAAAvZ,MAAA,UACAmc,SAAA5C,EAAA6lE,YACA96D,YAAA/K,EAAAimE,SAAA,GACA/jE,eAAAlC,EAAAD,SACAb,WACAW,cAAAX,EAAAze,OAAAye,EAAA,GAAAsB,OAAA,IAIA2lE,EAAA,SAAArlE,GACA,OAAAA,EAAAlL,OAAA,SAAAnR,EAAAmc,GACA,IAAAwlE,EAAAxlE,EAAAZ,WAAAomE,MAAAxlE,EAAAZ,WAAAomE,KAAA7mF,OAAA,OACAiiB,EAAAZ,EAAAZ,WAAAva,MAAA,GAEAutB,EAAA,OAOA,OALAxR,IACAwR,EAAApS,EAAAZ,WAAAva,KAAA,KAAA2gF,EAAA,KAIA3hF,EAAAuuB,IAAAvuB,EAAAuuB,GAAAlS,UAAA,GAAAd,WAAA8I,UAAAlI,EAAAZ,WAAAsR,UACA7sB,GAGAA,EAAAuuB,IACAxR,WACAH,YAAA,EACArJ,QAAA,SAAAouE,EACAtlE,WAAA6kE,EAAA/kE,IACAR,IAAA,IAGA3b,SAIA4hF,EAAA,SAAAvlE,GACA,OAAAA,EAAAlL,OAAA,SAAAnR,EAAAmc,GACA,IAAAoS,EAAApS,EAAAZ,WAAAva,MAAA,OAGA,OAAAhB,EAAAuuB,GACAvuB,GAGAA,EAAAuuB,IACAxR,SAAAwR,EACAhb,SAAA,EACAqJ,YAAA,EACAP,WAAAilE,EAAAnlE,IACAR,IAAA,IAGA3b,SAIA6hF,EAAA,SAAAC,GACA,IAAAC,EAEAxmE,EAAAumE,EAAAvmE,WACAd,EAAAqnE,EAAArnE,SAEA0B,GACAZ,YAAAwmE,GACAtlE,KAAAlB,EAAArd,GACA+b,MAAA,QACAG,UAAA,OACA+J,YACAze,MAAA6V,EAAA7V,MACAC,OAAA4V,EAAA5V,QAEA4lB,OAAAhQ,EAAA2P,OACA7G,UAAA9I,EAAAsR,WACKk1D,EAAA,gBAAAA,GACLpmE,IAAA,GACAT,QAAA,YAAAK,EAAAvZ,MAAA,UACAmc,SAAA5C,EAAA6lE,YACA96D,YAAA,GACA7I,eAAAlC,EAAAD,SACAb,WACAW,cAAAX,EAAAze,OAAAye,EAAA,GAAAsB,OAAA,GAOA,OAJAR,EAAA8lE,oBACAllE,EAAAklE,kBAAA9lE,EAAA8lE,mBAGAllE,GAGA6lE,EAAA,SAAAC,GACA,IAAAj4D,EAEA,IAAAi4D,EAAAjmF,OACA,SAIA,IAAAkmF,EAAAD,EAAA,GAAA1mE,WACAD,EAAA4mE,EAAAT,eACAU,EAAAD,EAAAE,oBACAA,OAAA17E,IAAAy7E,EAAA,EAAAA,EAGAE,EAAA,SAAAC,GACA,IAAA/mE,EAAA+mE,EAAA/mE,WACA,oBAAAA,EAAA0Z,UAAA,UAAA1Z,EAAAgnE,aAEAC,EAAA,SAAAC,GACA,IAAAlnE,EAAAknE,EAAAlnE,WACA,oBAAAA,EAAA0Z,UAAA,UAAA1Z,EAAAgnE,aAEAG,EAAA,SAAAC,GACA,IAAApnE,EAAAonE,EAAApnE,WACA,mBAAAA,EAAA0Z,UAAA,SAAA1Z,EAAAgnE,aAGAK,EAAAX,EAAA92D,OAAAk3D,GAAAxwE,IAAAgwE,GACAgB,EAAAZ,EAAA92D,OAAAq3D,GACAM,EAAAb,EAAA92D,OAAAu3D,GAEAh3D,GACAnR,YAAA,EACAC,uBACAC,YACAS,SAAA,EACAoB,aAAA0N,GACA/P,SACAC,UACK8P,EAAA,sBAAsCA,EAAA5P,aAA6B4P,GACxErO,IAAA,GACAL,WACAe,UAAAumE,EACAR,oBAAA,IAAAA,GAWA,OARAS,EAAA7mF,SACA0vB,EAAApP,YAAArC,MAAAoS,MAAAq1D,EAAAmB,IAGAC,EAAA9mF,SACA0vB,EAAApP,YAAAlC,UAAA2oE,KAAAnB,EAAAkB,IAGAp3D,GAGAs3D,EAAA,oBAAApoF,QAAA,kBAAAA,OAAAuoB,SAAA,SAAApd,GACA,cAAAA,GACC,SAAAA,GACD,OAAAA,GAAA,oBAAAnL,QAAAmL,EAAApG,cAAA/E,QAAAmL,IAAAnL,OAAAa,UAAA,gBAAAsK,GAGAk9E,EAAA,SAAAl9E,GACA,QAAAA,GAAA,iCAAAA,EAAA,YAAAi9E,EAAAj9E,KAGAm9E,EAAA,SAAAA,IACA,QAAAC,EAAApnF,UAAAC,OAAAonF,EAAA5uE,MAAA2uE,GAAArpE,EAAA,EAAoEA,EAAAqpE,EAAarpE,IACjFspE,EAAAtpE,GAAA/d,UAAA+d,GAGA,OAAAspE,EAAAjyE,OAAA,SAAA5P,EAAAiX,GAYA,OAVAje,OAAAyrB,KAAAxN,GAAAyN,QAAA,SAAA7qB,GAEAoZ,MAAA8O,QAAA/hB,EAAAnG,KAAAoZ,MAAA8O,QAAA9K,EAAApd,IACAmG,EAAAnG,GAAAmG,EAAAnG,GAAA2V,OAAAyH,EAAApd,IACO6nF,EAAA1hF,EAAAnG,KAAA6nF,EAAAzqE,EAAApd,IACPmG,EAAAnG,GAAA8nF,EAAA3hF,EAAAnG,GAAAod,EAAApd,IAEAmG,EAAAnG,GAAAod,EAAApd,KAGAmG,QAIAsqC,EAAA,SAAA21C,EAAA6B,GAEA,kBAAApjF,KAAAojF,GACAA,GAIA,QAAApjF,KAAAuhF,KACAA,EAAcT,EAAA/gF,EAAUgsC,iBAAkBi1C,EAAAjhF,EAAMkhC,SAAAC,KAAAqgD,IAGvCT,EAAA/gF,EAAUgsC,iBAAAw1C,EAAA6B,KA2BnBC,EAAA,SAAAr9C,GACA,IAAAs9C,EAAAt9C,EAAAu7C,QACAA,OAAA96E,IAAA68E,EAAA,GAAAA,EACAC,EAAAv9C,EAAAztB,OACAA,OAAA9R,IAAA88E,EAAA,GAAAA,EACAC,EAAAx9C,EAAAtgB,MACAA,OAAAjf,IAAA+8E,EAAA,GAAAA,EAEAzzE,GACA2L,IAAAnD,EACA8N,YAAAulB,EAAA21C,GAAA,GAAAhpE,IAGA,GAAAmN,EAAA,CACA,IAAAoB,EAAApB,EAAAvoB,MAAA,KACAsmF,EAAAxjF,SAAA6mB,EAAA,OACA48D,EAAAzjF,SAAA6mB,EAAA,OAEA/W,EAAAgL,WACAhf,OAAA2nF,EAAAD,EACAvtE,OAAAutE,GAIA,OAAA1zE,GAkBA4zE,EAAA,SAAAroE,EAAA0rB,EAAA3rB,GACA,IAAAuoE,EAAAtoE,EAAAsoE,IACAC,EAAAvoE,EAAAuoE,aACAC,EAAAxoE,EAAAwoE,sBACAC,EAAAzoE,EAAA/K,UACAA,OAAA9J,IAAAs9E,EAAA,EAAAA,EACAC,EAAA1oE,EAAAtc,MACAA,OAAAyH,IAAAu9E,EAAA,EAAAA,EACAC,EAAA3oE,EAAA6mE,oBACAA,OAAA17E,IAAAw9E,EAAA,EAAAA,EAEAhwD,GAAA2vD,EAAAC,GAAA,IACAK,EAAAJ,EAAA9kF,EACAmlF,EAAAlwD,EAAAkuD,EACAiC,EAAAD,EAAAD,EAEA,OAAA59E,KAAAwB,MAAAs8E,EAAA7zE,EAAAy2B,GAAA3rB,IAgBAgpE,EAAA,SAAA/oE,EAAAgpE,GAiBA,IAhBA,IAAAC,EAAAjpE,EAAAvZ,KACAA,OAAA0E,IAAA89E,EAAA,SAAAA,EACAC,EAAAlpE,EAAA6mE,oBACAA,OAAA17E,IAAA+9E,EAAA,EAAAA,EACAC,EAAAnpE,EAAAgB,MACAA,OAAA7V,IAAAg+E,EAAA,GAAAA,EACAjD,EAAAlmE,EAAAkmE,eACAkD,EAAAppE,EAAA/K,UACAA,OAAA9J,IAAAi+E,EAAA,EAAAA,EACAC,EAAArpE,EAAAspE,YACAA,OAAAn+E,IAAAk+E,EAAA,EAAAA,EACAzmE,EAAA5C,EAAA6lE,YAEA3mE,KACAwsB,GAAA,EAEA69C,EAAA,EAAsBA,EAAAP,EAAAvoF,OAAiC8oF,IAAA,CACvD,IAAAC,EAAAR,EAAAO,GACAxpE,EAAAypE,EAAA5qF,EACA6qF,EAAAD,EAAApqF,GAAA,EACAsqF,EAAAF,EAAAhqF,GAAA,EAEAksC,EAAA,IAEAA,EAAAg+C,GAGAA,KAAAh+C,IAuBAA,EAAAg+C,GAGA,IAAA/gF,OAAA,EAEA,GAAA8gF,EAAA,GACA,IAAAE,EAAAJ,EAAA,EAKA5gF,EAHAghF,IAAAX,EAAAvoF,OAEA,YAAAgG,GAAAogF,EAAA,GAAA7lE,EAAAhQ,QAAA,cACAq3E,EAAAroE,EAAA0rB,EAAA3rB,IAGAmmE,EAAAjxE,EAAAy2B,GAAA3rB,GAGAipE,EAAAW,GAAAnqF,EAAAksC,GAAA3rB,OAGApX,EAAA8gF,EAAA,EAGA,IAAA5lF,EAAAylF,EAAApqE,EAAAze,OAAAkI,EACA6X,EAAA8oE,EAAApqE,EAAAze,OAEA,MAAA+f,EAAA3c,EACAqb,EAAA3X,MAAqBiZ,SAAAT,WAAA9K,EAAAy2B,OAAA9oB,aACrB8oB,GAAA3rB,EACAS,IAIA,OAAAtB,GAGAkL,EAAA,SAAA1mB,EAAAG,GAGA,IAFA,IAAAmC,KAEA1H,EAAAoF,EAAqBpF,EAAAuF,EAASvF,IAC9B0H,EAAAuB,KAAAjJ,GAGA,OAAA0H,GAGA4jF,EAAA,SAAAC,GACA,OAAAA,EAAAj0E,OAAA,SAAAtI,EAAAE,GACA,OAAAF,EAAAkI,OAAAhI,SAIAs8E,EAAA,SAAA16B,GACA,IAAAA,EAAA3uD,OACA,SAKA,IAFA,IAAAuF,KAEA1H,EAAA,EAAiBA,EAAA8wD,EAAA3uD,OAAiBnC,IAClC0H,EAAAuB,KAAA6nD,EAAA9wD,IAGA,OAAA0H,GAOA+jF,GASAC,OAAA,SAAAhqE,GACA,IAAAD,EAAAC,EAAAD,SACA0oE,EAAAzoE,EAAA/K,UACAA,OAAA9J,IAAAs9E,EAAA,EAAAA,EACAvC,EAAAlmE,EAAAkmE,eAGA,OACAxiF,MAAA,EACAG,IAAAmH,KAAAwB,KAAA05E,GAAAnmE,EAAA9K,MAaAg1E,QAAA,SAAAjqE,GACA,IAAAsoE,EAAAtoE,EAAAsoE,IACAC,EAAAvoE,EAAAuoE,aACAC,EAAAxoE,EAAAwoE,sBACAY,EAAAppE,EAAA/K,UACAA,OAAA9J,IAAAi+E,EAAA,EAAAA,EACArpE,EAAAC,EAAAD,SACA2oE,EAAA1oE,EAAAtc,MACAA,OAAAyH,IAAAu9E,EAAA,EAAAA,EACAC,EAAA3oE,EAAA6mE,oBACAA,OAAA17E,IAAAw9E,EAAA,EAAAA,EACAuB,EAAAlqE,EAAAmqE,qBACAA,OAAAh/E,IAAA++E,EAAArzE,IAAAqzE,EAEAvxD,GAAA2vD,EAAAC,GAAA,IACAK,EAAAJ,EAAA9kF,EACAmlF,EAAAlwD,EAAAkuD,EACAiC,EAAAD,EAAAD,EACAwB,EAAAp/E,KAAAwB,KAAAs8E,EAAA7zE,EAAA8K,GACAsqE,EAAAr/E,KAAAuzB,OAAA5F,EAAAiwD,EAAAuB,GAAAl1E,EAAA8K,GACAuqE,EAAAt/E,KAAAuzB,OAAA5F,EAAAiwD,GAAA3zE,EAAA8K,GAEA,OACArc,MAAAsH,KAAAC,IAAA,EAAAo/E,GACAxmF,IAAAmH,KAAAuC,IAAA68E,EAAAE,MA4BAC,EAAA,SAAAvqE,GACA,gBAAAQ,EAAAxK,GACA,IAAA+J,EAAAC,EAAAD,SACAyqE,EAAAxqE,EAAA/K,UACAA,OAAA9J,IAAAq/E,EAAA,EAAAA,EACA3E,EAAA7lE,EAAA6lE,YACAwD,EAAArpE,EAAAspE,YACAA,OAAAn+E,IAAAk+E,EAAA,EAAAA,EAGA,OACA7oE,OAAA8oE,EAAA9oE,EACAT,WAAA9K,EACA2N,SAAAijE,EACAn6C,KAAA11B,EAAA+J,KAeA0qE,EAAA,SAAAzqE,GACA,IAAAipE,EAAAjpE,EAAAvZ,KACAA,OAAA0E,IAAA89E,EAAA,SAAAA,EACAlpE,EAAAC,EAAAD,SACA2qE,EAAA1qE,EAAA/K,UACAA,OAAA9J,IAAAu/E,EAAA,EAAAA,EACAxE,EAAAlmE,EAAAkmE,eAEAyE,EAAAZ,EAAAtjF,GAAAuZ,GACAtc,EAAAinF,EAAAjnF,MACAG,EAAA8mF,EAAA9mF,IAEAqb,EAAAkL,EAAA1mB,EAAAG,GAAAyS,IAAAi0E,EAAAvqE,IAEA,cAAAvZ,EAAA,CACA,IAAAuP,EAAAkJ,EAAAze,OAAA,EAGAye,EAAAlJ,GAAA+J,SAAAmmE,EAAAnmE,EAAA9K,EAAAe,EAGA,OAAAkJ,GAGA0rE,EAAA,kCAsCAC,EAAA,SAAAtpF,GACA,gBAAAH,EAAA0pF,EAAAtuB,EAAAryD,GACA,UAAA/I,EAEA,UAGA,wBAAAG,EAAAupF,GACA,OAAA1pF,EAGA,IAAA7B,EAAA,GAAAgC,EAAAupF,GAEA,2BAAAA,EAEAvrF,GAMA4K,EAHAqyD,EAGA73D,SAAAwF,EAAA,IAFA,EAKA5K,EAAAkB,QAAA0J,EACA5K,EAGA,OAAA0Z,MAAA9O,EAAA5K,EAAAkB,OAAA,GAAAuqB,KAAA,KAAAzrB,KAsBAwrF,EAAA,SAAA35D,EAAA7vB,GACA,OAAA6vB,EAAA/vB,QAAAupF,EAAAC,EAAAtpF,KAgBAypF,EAAA,SAAAhrE,EAAAgpE,GACA,OAAAhpE,EAAAD,UAAAipE,EAWAhpE,EAAAD,SACA0qE,EAAAzqE,GAGA+oE,EAAA/oE,EAAAgpE,KAXAxoE,OAAAR,EAAAspE,aAAA,EACAvpE,SAAAC,EAAAkmE,eACAx6C,KAAA,EACA9oB,SAAA5C,EAAA6lE,eAuBAoF,EAAA,SAAAjrE,EAAAgpE,GACA,IAAAkC,GACAC,iBAAAnrE,EAAArd,GACAyoF,UAAAprE,EAAAsR,WAAA,GAGA+5D,EAAArrE,EAAAsrE,eACAA,OAAAngF,IAAAkgF,GAA8DE,UAAA,GAAAnhE,MAAA,IAA2BihE,EAGzFG,EAAAzD,GACA9B,QAAAjmE,EAAAimE,QACAhpE,OAAA8tE,EAAAO,EAAAC,UAAAL,GACA9gE,MAAAkhE,EAAAlhE,QAGAlL,EAAA8rE,EAAAhrE,EAAAgpE,GAEA,OAAA9pE,EAAA5I,IAAA,SAAAqT,GACAuhE,EAAApkD,OAAAnd,EAAAnJ,OACA0qE,EAAAO,KAAA9hE,EAAA+hB,KAEA,IAAAtrB,EAAA2qE,EAAA/qE,EAAAgB,OAAA,GAAAkqE,GAEA,OACA9qE,MACAwC,SAAA+G,EAAA/G,SACA7C,SAAA4J,EAAA5J,SACAgL,YAAAulB,EAAAtwB,EAAAimE,SAAA,GAAA7lE,GACA9J,IAAAk1E,EACAhrE,OAAAmJ,EAAAnJ,WAKAmf,GACA+rD,yBAAA,2BACAC,oBAAA,sBACAC,iBAAA,mBACAC,YAAA,cACAC,4BAAA,8BACAC,yBAAA,2BACAC,8BAAA,iCAcAC,EAAA,SAAAjsE,EAAAksE,GACA,IAAAjG,EAAAjmE,EAAAimE,QACAoF,EAAArrE,EAAAsrE,eACAA,OAAAngF,IAAAkgF,KAA+DA,EAG/DvgE,EAAAi9D,GACA9B,UACAhpE,OAAAquE,EAAAC,UACAnhE,MAAAkhE,EAAAlhE,QAGAT,EAAAo+D,GACA9B,UACAhpE,OAAAivE,EAAAlrE,MACAoJ,MAAA8hE,EAAAC,aAKA,OAFAxiE,EAAArT,IAAAwU,EAEAnB,GAgBAyiE,EAAA,SAAApsE,EAAAgpE,GACA,IAAAjpE,EAAAC,EAAAD,SACAssE,EAAArsE,EAAAssE,YACAA,OAAAnhF,IAAAkhF,OAKA,IAAAtsE,IAAAipE,GAAAjpE,GAAAipE,EACA,UAAAtoF,MAAAi/B,EAAAosD,0BAGA,IAAAQ,EAAAD,EAAAh2E,IAAA,SAAAk2E,GACA,OAAAP,EAAAjsE,EAAAwsE,KAEAC,OAAA,EAEA1sE,IACA0sE,EAAAhC,EAAAzqE,IAGAgpE,IACAyD,EAAA1D,EAAA/oE,EAAAgpE,IAGA,IAAA9pE,EAAAutE,EAAAn2E,IAAA,SAAAozE,EAAA1zE,GACA,GAAAu2E,EAAAv2E,GAAA,CACA,IAAA2T,EAAA4iE,EAAAv2E,GAKA,OAHA2T,EAAA/G,SAAA8mE,EAAA9mE,SACA+G,EAAA5J,SAAA2pE,EAAA3pE,SACA4J,EAAAnJ,OAAAkpE,EAAAlpE,OACAmJ,KAKGiG,OAAA,SAAAjG,GACH,OAAAA,IAGA,OAAAzK,GAaAwtE,EAAA,SAAA1sE,GACA,IAAAimE,EAAAjmE,EAAAimE,QACAoF,EAAArrE,EAAAsrE,eACAA,OAAAngF,IAAAkgF,KAA+DA,EAC/DnF,EAAAlmE,EAAAkmE,eACAuC,EAAAzoE,EAAA/K,UACAA,OAAA9J,IAAAs9E,EAAA,EAAAA,EACAkE,EAAA3sE,EAAA4sE,WACAA,OAAAzhF,IAAAwhF,EAAA,GAAAA,EACA5sE,EAAAC,EAAAD,SAIA,IAAAkmE,EACA,UAAAvlF,MAAAi/B,EAAAksD,aAGA,IAAA/gE,EAAAi9D,GACA9B,UACAhpE,OAAAquE,EAAAC,UACAnhE,MAAAkhE,EAAAlhE,QAEAT,EAAAo+D,GAAkC9B,UAAAhpE,OAAAgpE,EAAA77D,MAAAwiE,IAMlC,GAJAjjE,EAAArT,IAAAwU,EAIA/K,EAAA,CACA,IAAA0sE,EAAAhC,EAAAzqE,GAEAysE,EAAAhsF,SACAkpB,EAAA5J,SAAA0sE,EAAA,GAAA1sE,SACA4J,EAAA/G,SAAA6pE,EAAA,GAAA7pE,eAEGsjE,IACHv8D,EAAA5J,SAAAmmE,EAAAjxE,EACA0U,EAAA/G,SAAA,GAMA,OAFA+G,EAAAnJ,OAAA,GAEAmJ,IAGAkjE,EAAA,SAAAniD,GACA,IAAA1qB,EAAA0qB,EAAA1qB,WACAw0B,EAAA9J,EAAA8J,YAEAs4C,OAAA,EACAC,OAAA,EAaA,GAXAv4C,EAAAw4C,UACAD,EAAA9B,EACA6B,EAAAnF,EAAA3nE,EAAAw0B,EAAAw4C,WACGx4C,EAAAy4C,MACHF,EAAAL,EACAI,EAAAnF,EAAA3nE,EAAAw0B,EAAAy4C,OACGz4C,EAAA4a,OACH29B,EAAAX,EACAU,EAAAnF,EAAA3nE,EAAAw0B,EAAA4a,QAGA29B,EACA,OAAY/sE,cAGZ,IAAAd,EAAA6tE,EAAAD,EAAAt4C,EAAA5xB,UAKA,GAAAkqE,EAAA/sE,SAAA,CACA,IAAAmtE,EAAAJ,EACA/sE,EAAAmtE,EAAAntE,SACAotE,EAAAD,EAAAj4E,UACAA,OAAA9J,IAAAgiF,EAAA,EAAAA,EAGAL,EAAA/sE,WAAA9K,OACGiK,EAAAze,OAGHqsF,EAAA/sE,SAAAb,EAAAtJ,OAAA,SAAA3K,EAAA0e,GACA,OAAA3e,KAAAC,MAAAD,KAAAwB,KAAAmd,EAAA5J,YACK,GAEL+sE,EAAA/sE,SAAA,EAGA,OACAC,WAAA8sE,EACA5tE,aAIAkuE,EAAA,SAAAl9C,GACA,OAAAA,EAAA55B,IAAAu2E,IAGAQ,EAAA,SAAA/mF,EAAAzH,GACA,OAAAirF,EAAAxjF,EAAA0B,YAAA4nB,OAAA,SAAA8a,GACA,IAAA/jC,EAAA+jC,EAAA/jC,QACA,OAAAA,IAAA9H,KAIAyuF,EAAA,SAAAhnF,GACA,OAAAA,EAAA6B,YAAAtB,QAGA0mF,EAAA,SAAAxqE,GACA,IAAAyqE,EAAA,QACAC,EAAA,OACAC,EAAA,MACAC,EAAA,KACAC,EAAA,GAGAC,EAAA,+EACAzsF,EAAAysF,EAAAxlE,KAAAtF,GAEA,IAAA3hB,EACA,SAGA,IAAA0sF,EAAA1sF,EAAAmU,MAAA,GACAw4E,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GACAM,EAAAN,EAAA,GAEA,OAAAlpF,WAAAmpF,GAAA,GAAAP,EAAA5oF,WAAAopF,GAAA,GAAAP,EAAA7oF,WAAAqpF,GAAA,GAAAP,EAAA9oF,WAAAspF,GAAA,GAAAP,EAAA/oF,WAAAupF,GAAA,GAAAP,EAAAhpF,WAAAwpF,GAAA,IAGAC,EAAA,SAAAtrE,GAGA,IAAAurE,EAAA,oCAQA,OAJAA,EAAA5pF,KAAAqe,KACAA,GAAA,KAGAgG,KAAArZ,MAAAqT,IAIAwrE,GAUAC,0BAAA,SAAAjvF,GACA,OAAAguF,EAAAhuF,IAcAipF,sBAAA,SAAAjpF,GACA,OAAA8uF,EAAA9uF,GAAA,KAaAsnF,oBAAA,SAAAtnF,GACA,OAAAguF,EAAAhuF,IAaA4qF,qBAAA,SAAA5qF,GACA,OAAAguF,EAAAhuF,IAaAmE,MAAA,SAAAnE,GACA,OAAAguF,EAAAhuF,IAYA4K,MAAA,SAAA5K,GACA,OAAAoF,SAAApF,EAAA,KAYA6K,OAAA,SAAA7K,GACA,OAAAoF,SAAApF,EAAA,KAYA+xB,UAAA,SAAA/xB,GACA,OAAAoF,SAAApF,EAAA,KAYA+pF,YAAA,SAAA/pF,GACA,OAAAoF,SAAApF,EAAA,KAYA0V,UAAA,SAAA1V,GACA,OAAAoF,SAAApF,EAAA,KAgBAwgB,SAAA,SAAAxgB,GACA,IAAAkvF,EAAA9pF,SAAApF,EAAA,IAEA,OAAAyuC,MAAAygD,GACAlB,EAAAhuF,GAGAkvF,GAYA7vF,EAAA,SAAAW,GACA,OAAAoF,SAAApF,EAAA,KAaAC,EAAA,SAAAD,GACA,OAAAoF,SAAApF,EAAA,KAaAH,EAAA,SAAAG,GACA,OAAAoF,SAAApF,EAAA,KAaA6hB,QAAA,SAAA7hB,GACA,OAAAA,IAaA4oB,EAAA,SAAAge,GACA,OAAAA,KAAAnmB,WAIA8pE,EAAA3jD,EAAAnmB,YAAApK,OAAA,SAAAnR,EAAAyB,GACA,IAAAwoF,EAAAH,EAAAroF,EAAArH,OAAA0vF,EAAAntE,QAIA,OAFA3c,EAAAyB,EAAArH,MAAA6vF,EAAAxoF,EAAA3G,OAEAkF,WAIA,SAAAkqF,EAAAC,GAIA,IAHA,IAAAC,EAAsBnJ,EAAAjhF,EAAMqqF,KAAAF,GAC5BtoD,EAAA,IAAAntB,WAAA01E,EAAApuF,QAEAnC,EAAA,EAAiBA,EAAAuwF,EAAApuF,OAA0BnC,IAC3CgoC,EAAAhoC,GAAAuwF,EAAAxmF,WAAA/J,GAEA,OAAAgoC,EAGA,IAAAyoD,GACAC,gDAAA,kBACAC,gDAAA,qBACAC,gDAAA,0BACAC,gDAAA,uBAaAC,EAAA,SAAAC,EAAAC,GACA,OAAAA,EAAA7uF,OAIAmpF,EAAAyF,EAAA/4E,IAAA,SAAA5I,GACA,OAAA4hF,EAAAh5E,IAAA,SAAAi5E,GACA,OAAAj/C,EAAA5iC,EAAA4/E,EAAAiC,SALAF,GAgCAG,EAAA,SAAAC,GACA,IAAAC,EAAArC,EAAAoC,EAAA,sBACAE,EAAAtC,EAAAoC,EAAA,kBACAnD,EAAAqD,GAAAtC,EAAAsC,EAAA,cAAAr5E,IAAA,SAAAjW,GACA,OAAAsnF,GAAkBroE,IAAA,cAAoB6I,EAAA9nB,MAEtCuvF,EAAAvC,EAAAoC,EAAA,kBACAI,EAAAF,GAAAD,EACA1G,EAAA6G,GAAAxC,EAAAwC,EAAA,sBACAC,EAAAH,GAAAC,GAAAF,EACAK,EAAAD,GAAAzC,EAAAyC,EAAA,qBAOA9C,EAAA0C,GAAAvnE,EAAAunE,GAEA1C,GAAA+C,EACA/C,EAAA1B,eAAAyE,GAAA5nE,EAAA4nE,GACG/C,KAAA1B,iBAIH0B,EAAA1B,gBAA+BC,UAAAyB,EAAA1B,iBAG/B,IAAA92C,GACAw4C,WACApqE,SAAAomE,GAAAqE,EAAArE,EAAA,KAAA1yE,IAAA,SAAAjW,GACA,OAAA8nB,EAAA9nB,KAEA+uD,KAAAugC,GAAAhI,EAAAx/D,EAAAwnE,IACArD,cACAhB,eAAAnjE,EAAA4nE,KAEA9C,KAAA2C,GAAAjI,EAAAx/D,EAAAynE,IACAtE,eAAAnjE,EAAA4nE,MAUA,OANA/wF,OAAAyrB,KAAA+pB,GAAA9pB,QAAA,SAAA7qB,GACA20C,EAAA30C,WACA20C,EAAA30C,KAIA20C,GAsCAw7C,EAAA,SAAAC,EAAAC,EAAAC,GACA,gBAAAC,GACA,IAAAC,EAAAhD,EAAA+C,EAAA,WACAE,EAAAlB,EAAAc,EAAAG,GACArwE,EAAA2nE,EAAAsI,EAAA9nE,EAAAioE,IACAG,EAAAf,EAAAY,GAEA,OAAAE,EAAAh6E,IAAA,SAAA2vE,GACA,OACAzxC,YAAAmzC,EAAAwI,EAAAI,GACAvwE,WAAA2nE,EAAA3nE,GAAuCimE,iBAevCuK,EAAA,SAAAC,GACA,OAAAA,EAAA76E,OAAA,SAAA86E,EAAAtpF,GACA,IAAA4Y,EAAAmI,EAAA/gB,GACAupF,EAAA5B,EAAA/uE,EAAA4wE,aAEA,GAAAD,EAAA,CACAD,EAAAC,IAAwB3wE,cAExB,IAAA6wE,EAAAxD,EAAAjmF,EAAA,gBAEA,GAAAypF,EAAA,CACA,IAAAC,EAAAxD,EAAAuD,GACAE,EAAAD,GAAAnC,EAAAmC,GAEAJ,EAAAC,GAAAG,KAAAC,GAIA,OAAAL,QA4BAM,EAAA,SAAAC,EAAAC,EAAAC,GACA,gBAAA1B,GACA,IAAAQ,EAAA9nE,EAAAsnE,GACAS,EAAAd,EAAA8B,EAAA7D,EAAAoC,EAAA,YACArJ,EAAAiH,EAAAoC,EAAA,WACA2B,GAA0BhL,KAAAj+D,EAAAi+D,IAE1B7iE,EAAAokE,EAAAsJ,EAAAhB,EAAAmB,GAEAtL,EAAA0K,EAAAnD,EAAAoC,EAAA,sBAEAzwF,OAAAyrB,KAAAq7D,GAAArlF,SACA8iB,EAAAokE,EAAApkE,GAA4BuiE,uBAG5B,IAAAtxC,EAAAg7C,EAAAC,GACAv/C,EAAAm9C,EAAAoC,EAAA,kBACAU,EAAAxI,EAAAwJ,EAAA38C,GAEA,OAAAo1C,EAAA15C,EAAA55B,IAAA05E,EAAAzsE,EAAA2sE,EAAAC,OA6BAkB,EAAA,SAAAC,EAAAC,GACA,gBAAAC,EAAA3L,GACA,IAAAqL,EAAA9B,EAAAmC,EAAAlE,EAAAmE,EAAA,YACAC,EAAAtpE,EAAAqpE,GACAP,EAAAtJ,EAAA2J,EAAAG,GAA4D5L,gBAC5D6L,EAAArE,EAAAmE,EAAA,iBACAL,EAAA3B,EAAAgC,GAEA,OAAA5H,EAAA8H,EAAAp7E,IAAA06E,EAAAC,EAAAC,EAAAC,OAqBAQ,EAAA,SAAAC,GACA,IAAApuE,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAqxF,EAAAruE,EAAAsuE,YACAA,OAAA3mF,IAAA0mF,EAAA,GAAAA,EACAE,EAAAvuE,EAAA8kE,IACAA,OAAAn9E,IAAA4mF,EAAAhpE,KAAA4P,MAAAo5D,EACAC,EAAAxuE,EAAA+kE,aACAA,OAAAp9E,IAAA6mF,EAAA,EAAAA,EAEAC,EAAA5E,EAAAuE,EAAA,UAEA,OAAAK,EAAAxxF,OAEA,UAAAC,MAAAi/B,EAAA+rD,0BAGA,IAAA4F,EAAAnpE,EAAAypE,GACAL,EAAAnC,GAAA0C,GAAAzE,EAAAuE,EAAA,YAMA,OAJAN,EAAApL,eAAAoL,EAAA9C,2BAAA,EACA8C,EAAAhJ,MACAgJ,EAAA/I,eAEAqB,EAAAqI,EAAA37E,IAAA+6E,EAAAC,EAAAC,MAGAW,EAAA,SAAAC,GACA,QAAAA,EACA,UAAAzxF,MAAAi/B,EAAAgsD,qBAGA,IAAAxmD,EAAA,IAAmBugD,EAAAjhF,EAAM2tF,UACzBC,EAAAltD,EAAAmtD,gBAAAH,EAAA,mBACAP,EAAAS,GAAA,QAAAA,EAAAE,gBAAA5rF,QAAA0rF,EAAAE,gBAAA,KAEA,IAAAX,QAAAY,qBAAA,eAAA/xF,OAAA,EACA,UAAAC,MAAAi/B,EAAAisD,kBAGA,OAAAgG,GAWAa,EAAA,SAAAb,GACA,IAAAc,EAAArF,EAAAuE,EAAA,gBAEA,IAAAc,EACA,YAGA,IAAA1yE,EAAAmI,EAAAuqE,GAEA,OAAA1yE,EAAA4wE,aACA,uCACA,uCACA5wE,EAAAG,OAAA,OACA,MACA,yCACA,sCACA,yCACA,sCACAH,EAAAG,OAAA,MACA,MACA,oCACA,oCACAH,EAAAG,OAAA,SACAH,EAAAzgB,MAAAwpB,KAAArZ,MAAAsQ,EAAAzgB,OACA,MACA,sCACA,iCACA,kCACA,QACA,UAAAmB,MAAAi/B,EAAAqsD,+BAGA,OAAAhsE,GAKAtQ,GAAA,SAAAyiF,EAAA3uE,GACA,OAAAijE,EAAA2G,EAAAuE,EAAAO,EAAAC,GAAA3uE,MAWA8hE,GAAA,SAAA6M,GACA,OAAAM,EAAAP,EAAAC,wCC3oDAnzF,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAA8X,EAAA,WAAiC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAzhB,GAEA8U,EAAA,SAAAC,EAAAC,EAAAC,GAAuC,IAAAC,GAAA,EAAmB,MAAAA,EAAA,CAA4B,IAAA9sB,EAAA2sB,EAAA1sB,EAAA2sB,EAAAG,EAAAF,EAAiDC,GAAA,EAAgB,OAAA9sB,MAAAuT,SAAArT,WAAkD,IAAA8sB,EAAAhuB,OAAAiuB,yBAAAjtB,EAAAC,GAA8D,QAAAkL,IAAA6hB,EAAA,CAAuO,aAAAA,EAA4B,OAAAA,EAAAztB,MAA4B,IAAAT,EAAAkuB,EAAA7tB,IAAuB,QAAAgM,IAAArM,EAA4B,OAAoB,OAAAA,EAAAL,KAAAsuB,GAA5U,IAAA5G,EAAAnnB,OAAAif,eAAAje,GAA4C,UAAAmmB,EAAuB,OAA2BwG,EAAAxG,EAAayG,EAAA3sB,EAAgB4sB,EAAAE,EAAgBD,GAAA,EAAeE,EAAA7G,OAAAhb,IAE3b,SAAA4M,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAE7E,SAAAyN,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAE3F,SAAAwK,EAAAC,EAAAC,GAA0C,uBAAAA,GAAA,OAAAA,EAA+D,UAAA1K,UAAA,kEAAA0K,GAAuGD,EAAAzd,UAAAlB,OAAAY,OAAAge,KAAA1d,WAAyEkE,aAAe7E,MAAAoe,EAAAze,YAAA,EAAAyY,UAAA,EAAAD,cAAA,KAA6EkG,IAAA5e,OAAA6e,eAAA7e,OAAA6e,eAAAF,EAAAC,GAAAD,EAAAG,UAAAF,GAErX,IAAAV,EAAc9e,EAAQ,QAEtB+e,EAAApF,EAAAmF,GAUA2iC,EAAA,SAAA9hC,GAGA,SAAA8hC,IACA5nC,EAAA/Z,KAAA2hD,GAEAnzB,EAAA1tB,OAAAif,eAAA4hC,EAAA3/C,WAAA,cAAAhC,MAAAO,KAAAP,KAAAif,EAAA,YACAjf,KAAA4hD,QACA5hD,KAAAwmC,MAAA,EACAxmC,KAAA6hD,SAAA,KAmCA,OA3CAriC,EAAAmiC,EAAA9hC,GAiBA1G,EAAAwoC,IACAhgD,IAAA,cACAN,MAAA,WACArB,KAAA4hD,KAAAjH,OAAA36C,GACAA,KAAA4hD,KAAAr/C,OACAvC,KAAA6hD,SAAA5d,WAAAjkC,KAAA8hD,YAAAlgD,KAAA5B,WAAAwmC,OAEAxmC,KAAA6hD,SAAA,QAUAlgD,IAAA,OACAN,MAAA,SAAA0gD,GACA/hD,KAAA4hD,KAAAv4C,KAAA04C,GACA/hD,KAAA6hD,WACA7hD,KAAA6hD,SAAA5d,WAAAjkC,KAAA8hD,YAAAlgD,KAAA5B,WAAAwmC,YAKAmb,EA5CA,CA6CC1iC,EAAA,YAEDtf,EAAA,WAAAgiD,EACA/hD,EAAAD,UAAA,iCC7EA,SAAA80F,EAAAnoF,EAAAooF,GACA,IAAAC,EACAh9D,EAAA,KAEA,IACAg9D,EAAAn7C,KAAAhoC,MAAAlF,EAAAooF,GACK,MAAA9qE,GACL+N,EAAA/N,EAGA,OAAA+N,EAAAg9D,GAZA/0F,EAAAD,QAAA80F,qCCUA,IAAA9uC,GACA,KACA,MACA,KACA,KACA,MACA,KACA,KACA,MACA,KACA,KACA,MACA,IACA,MAGAC,EAAA,SAAA/1C,GACA,OAAAA,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,IAKAg2C,EAAA,SAAA1pC,EAAA3W,EAAAG,GACA,IAAAvF,EAAA0H,EAAA,GACA,IAAA1H,EAAAoF,EAAiBpF,EAAAuF,EAASvF,IAC1B0H,GAAA,UAAAqU,EAAA/b,GAAAkV,SAAA,KAAA+B,OAAA,GAEA,OAAAvP,GAKAg+C,EAAA,SAAA3pC,EAAA3W,EAAAG,GACA,OAAAsC,SAAA49C,EAAA1pC,EAAA3W,EAAAG,KAGAk/C,EAAA,SAAAC,EAAAC,GACA,IACAC,EAAAF,EAAAC,EAAA,OACAD,EAAAC,EAAA,OACAD,EAAAC,EAAA,MACAD,EAAAC,EAAA,GACAE,EAAAH,EAAAC,EAAA,GACAG,GAAA,GAAAD,IAAA,EAEA,OAAAC,EACAF,EAAA,GAEAA,EAAA,IAGAG,EAAA,SAAAL,EAAAC,GACA,IACAK,GAAA,IAAAN,EAAAC,EAAA,OACAr/C,EAAAo/C,EAAAC,EAAA,MACAM,EAAA,KAAAP,EAAAC,EAAA,GAEA,OAAAM,EAAA3/C,EAAA0/C,GAGAtuC,EAAA,SAAAguC,EAAAC,GACA,OAAAD,EAAAC,KAAA,IAAA56C,WAAA,IACA26C,EAAAC,EAAA,SAAA56C,WAAA,IACA26C,EAAAC,EAAA,SAAA56C,WAAA,GACA,kBACG,EAAA26C,EAAAC,IACH,WAAAD,EAAAC,EAAA,IACA,QAEA,MAGAgB,EAAA,SAAAzpC,GACA,IAAAlc,EAAA,EAEA,MAAAA,EAAA,EAAAkc,EAAA/Z,OAAA,CACA,SAAA+Z,EAAAlc,IAAA,WAAAkc,EAAAlc,EAAA,IAMA,OAAAulD,GAAA,GAAArpC,EAAAlc,EAAA,SAHAA,IAMA,aAGA4lD,EAAA,SAAA1pC,GACA,IAAA2pC,EAAAT,EAAAU,EAAAC,EAGAF,EAAA,GACA,GAAA3pC,EAAA,KAEA2pC,GAAA,EACAA,GAAAL,EAAAtpC,EAAAlF,SAAA,SAKA,GAGA,GADAouC,EAAAI,EAAAtpC,EAAAlF,SAAA6uC,EAAA,EAAAA,EAAA,IACAT,EAAA,EACA,YAOA,GALAW,EAAA5uC,OAAAC,aAAA8E,EAAA2pC,GACA3pC,EAAA2pC,EAAA,GACA3pC,EAAA2pC,EAAA,GACA3pC,EAAA2pC,EAAA,IAEA,SAAAE,EAAA,CACAD,EAAA5pC,EAAAlF,SAAA6uC,EAAA,GAAAA,EAAAT,EAAA,IAEA,QAAAplD,EAAA,EAAqBA,EAAA8lD,EAAA/uC,WAAsB/W,IAC3C,OAAA8lD,EAAA9lD,GAAA,CACA,IAAAgmD,EAAAN,EAAAI,EAAA,EAAA9lD,GACA,oDAAAgmD,EAAA,CACA,IAAA1lD,EAAAwlD,EAAA9uC,SAAAhX,EAAA,GACAiF,GAAA,EAAA3E,EAAA,QACAA,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,OAIA,OAHA2E,GAAA,EACAA,GAAA,EAAA3E,EAAA,GAEA2E,EAEA,OAKA4gD,GAAA,GACAA,GAAAT,QACGS,EAAA3pC,EAAAnF,YACH,aAGAvX,EAAAD,SACAklD,kBACAM,gBACAruC,YACAivC,kBACAC,yCC/JA,IAAA4uC,EAGAA,EAAA,WACA,OAAA50F,KADA,GAIA,IAEA40F,KAAAv/E,SAAA,cAAAA,KAAA,EAAAw/E,MAAA,QACC,MAAA7sF,GAED,kBAAAL,SAAAitF,EAAAjtF,QAOA/H,EAAAD,QAAAi1F;;;;;;;;;;;;ACPA,SAAAE,EAAAC,GAA+B,OAAAA,GAAA,kBAAAA,GAAA,YAAAA,IAAA,WAAAA,EAE/B,IAAAptF,EAAAmtF,EAA6B50F,EAAQ,SACrCwI,EAAAosF,EAA+B50F,EAAQ,SACvC80F,EAAAF,EAA2B50F,EAAQ,SACnC+0F,EAAAH,EAAqC50F,EAAQ,SAC7C8mB,EAAA8tE,EAA0B50F,EAAQ,SAClCg1F,EAAAJ,EAA0B50F,EAAQ,SAElC2X,EAAA,SAMAs9E,EAAAxtF,EAAAmD,WAAAnD,EAAAmD,UAAAC,WAAA,GACAqqF,EAAA,yBAAAjrE,KAAAgrE,GACAE,EAAAD,EAAA1uF,WAAA0uF,EAAApsF,OAAA,KASAssF,EAAA,QAAA9uF,KAAA2uF,GAKAI,EAAA,UAAA/uF,KAAA2uF,KAAAG,EACAE,EAAA,QAAAhvF,KAAA2uF,GACAM,EAAAF,GAAAD,GAAAE,EAEAE,EAAA,WACA,IAAAxyF,EAAAiyF,EAAAjyF,MAAA,cAEA,OAAAA,KAAA,GACAA,EAAA,GAEA,KANA,GASAyyF,EAAA,WAAAnvF,KAAA2uF,GACAS,EAAA,WAGA,IAAA1yF,EAAAiyF,EAAAjyF,MAAA,0CAEA,IAAAA,EACA,YAGA,IAAA2yF,EAAA3yF,EAAA,IAAAwD,WAAAxD,EAAA,IACA4yF,EAAA5yF,EAAA,IAAAwD,WAAAxD,EAAA,IAEA,OAAA2yF,GAAAC,EACApvF,WAAAxD,EAAA,OAAAA,EAAA,IACG2yF,GAGH,KAjBA,GAqBAE,EAAAJ,GAAA,UAAAnvF,KAAA2uF,IAAAS,EAAA,IACAI,EAAAL,GAAAC,EAAA,GAAAP,EAAA,IAEAY,EAAA,WAAAzvF,KAAA2uF,GACAe,EAAA,QAAA1vF,KAAA2uF,GACAgB,GAAAD,IAAA,UAAA1vF,KAAA2uF,IAAA,SAAA3uF,KAAA2uF,IACAiB,EAAA,WACA,IAAAlzF,EAAAiyF,EAAAjyF,MAAA,yBAEA,OAAAA,KAAA,GACAwD,WAAAxD,EAAA,IAEA,KANA,GAQAmzF,EAAA,aAAA7vF,KAAA2uF,GACA37D,EAAA,WACA,IAAA1xB,EAAA,kBAAAqiB,KAAAgrE,GACAt9E,EAAA/P,GAAApB,WAAAoB,EAAA,IAOA,OALA+P,GAAA,gBAAArR,KAAA2uF,IAAA,UAAA3uF,KAAA2uF,KAEAt9E,EAAA,IAGAA,EATA,GAYAy+E,EAAA,UAAA9vF,KAAA2uF,KAAAgB,IAAAR,IAAAO,EACAK,GAAAD,GAAAb,KAAAU,EAEAK,EAAAC,OAAA,iBAAA9uF,KAAAmD,UAAA4rF,gBAAA/uF,EAAAgvF,eAAAhvF,EAAAe,oBAAAf,EAAAgvF,eAEAC,EAAAH,MAAA,mBAAA9uF,EAAAe,SAAAJ,cAAA,SAAAsG,MAEA2qB,GAAAz4B,OAAA+1F,QAAA/1F,SACAw0F,UACAC,YACAC,UACAC,SACAC,cACAC,aACAC,kBACAG,iBACAC,oBACAC,aACAC,UACAC,YACAC,iBACAC,SACA78D,aACA88D,YACAC,gBACAC,gBACAI,8BAGArN,EAAA,oBAAApoF,QAAA,kBAAAA,OAAAuoB,SAAA,SAAApd,GACA,cAAAA,GACC,SAAAA,GACD,OAAAA,GAAA,oBAAAnL,QAAAmL,EAAApG,cAAA/E,QAAAmL,IAAAnL,OAAAa,UAAA,gBAAAsK,GAaAwqF,EAAA,SAAA98E,EAAAN,GACA,KAAAM,aAAAN,GACA,UAAA1E,UAAA,sCAcA+hF,EAAA,SAAAt3E,EAAAC,GACA,uBAAAA,GAAA,OAAAA,EACA,UAAA1K,UAAA,kEAAA0K,GAGAD,EAAAzd,UAAAlB,OAAAY,OAAAge,KAAA1d,WACAkE,aACA7E,MAAAoe,EACAze,YAAA,EACAyY,UAAA,EACAD,cAAA,KAGAkG,IAAA5e,OAAA6e,eAAA7e,OAAA6e,eAAAF,EAAAC,GAAAD,EAAAG,UAAAF,IAaAs3E,EAAA,SAAAj3F,EAAAQ,GACA,IAAAR,EACA,UAAAwf,eAAA,6DAGA,OAAAhf,GAAA,kBAAAA,GAAA,oBAAAA,EAAAR,EAAAQ,GAaA02F,EAAA,SAAAC,EAAAC,GAEA,OADAD,EAAAC,MACAD,GAiCA5hF,EAAAxU,OAAAkB,UAAAsT,SAcAiX,EAAA,SAAAzqB,GACA,OAAA0nF,EAAA1nF,GAAAhB,OAAAyrB,KAAAzqB,OAYA,SAAAs1F,EAAAt1F,EAAAy9E,GACAhzD,EAAAzqB,GAAA0qB,QAAA,SAAA7qB,GACA,OAAA49E,EAAAz9E,EAAAH,QAqBA,SAAA+V,EAAA5V,EAAAy9E,GACA,IAAAzjD,EAAAx5B,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,KAEA,OAAAiqB,EAAAzqB,GAAA4V,OAAA,SAAA2/E,EAAA11F,GACA,OAAA49E,EAAA8X,EAAAv1F,EAAAH,OACGm6B,GAUH,SAAAhd,EAAAzF,GACA,QAAAqwE,EAAApnF,UAAAC,OAAA4jB,EAAApL,MAAA2uE,EAAA,EAAAA,EAAA,KAAArpE,EAAA,EAAuFA,EAAAqpE,EAAarpE,IACpG8F,EAAA9F,EAAA,GAAA/d,UAAA+d,GAGA,OAAAvf,OAAAge,OACAhe,OAAAge,OAAA3G,MAAArX,QAAAuY,GAAA/B,OAAA6O,KAGAA,EAAAqG,QAAA,SAAAzN,GACAA,GAIAq4E,EAAAr4E,EAAA,SAAA1d,EAAAM,GACA0X,EAAA1X,GAAAN,MAIAgY,GAaA,SAAAmwE,EAAAnoF,GACA,QAAAA,GAAA,iCAAAA,EAAA,YAAAkoF,EAAAloF,IAUA,SAAAi2F,EAAAj2F,GACA,OAAAmoF,EAAAnoF,IAAA,oBAAAiU,EAAA/U,KAAAc,MAAA6E,cAAApF,OAOA,IAAA0xB,OAAA,EAGA+kE,EAAA,OAGAC,KAgBAC,EAAA,SAAAlvF,EAAAiW,GACA,IAAAi7B,EAAAn3C,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,KAAAk3B,KAAA,GAEAk+D,EAAAllE,EAAAmlE,OAAAJ,GACAK,EAAA,IAAA5tE,OAAA,KAAA0tE,EAAA,MAkBA,GAhBA,QAAAnvF,GAGAiW,EAAAmrD,QAAAphE,EAAAsvF,cAAA,KAIAL,GACAA,EAAAnuF,QAAAiO,OAAAkH,IAIAA,EAAAmrD,QAAA,YAIAhiE,EAAA85D,QAAA,CAOA,IAAA8d,EAAA53E,EAAA85D,QAAAl5D,GAEAg3E,GAAA,UAAAh3E,IAGAg3E,EAAA53E,EAAA85D,QAAAsK,MAAApkE,EAAA85D,QAAAjvC,KAKA+sD,GAAAmY,GAAAE,EAAApxF,KAAA+B,KAMAkxC,IACAj7B,IAAApG,IAAA,SAAA7R,GACA,GAAAijF,EAAAjjF,IAAAwU,MAAA8O,QAAAtjB,GACA,IACA,OAAAizC,KAAAC,UAAAlzC,GACS,MAAA6I,GACT,OAAAmI,OAAAhR,GAMA,OAAAgR,OAAAhR,KACKumB,KAAA,MAKLyyD,EAAApnE,MAGAonE,EAAAxkE,MAAA8O,QAAArL,GAAA,gBAAA7W,EAAA85D,QAAAjjD,GAFA+gE,EAAA/gE,MAaAgU,EAAA,WACA,QAAAk3D,EAAApnF,UAAAC,OAAAic,EAAAzD,MAAA2uE,GAAArpE,EAAA,EAAiEA,EAAAqpE,EAAarpE,IAC9E7B,EAAA6B,GAAA/d,UAAA+d,GAGAo3E,EAAA,MAAAj5E,IAsBAgU,EAAAmlE,QACAG,IAAA,uBACAz5E,IAAA,GACAglB,MAAA,uBACA0oC,KAAA,iBACAt5C,KAAA,aACAkF,MAAA,QACAzU,QAAAq0E,GAcA/kE,EAAA+kE,MAAA,SAAAG,GACA,qBAAAA,EAAA,CACA,IAAAllE,EAAAmlE,OAAA11F,eAAAy1F,GACA,UAAAl1F,MAAA,IAAAk1F,EAAA,8BAEAH,EAAAG,EAEA,OAAAH,GAYA/kE,EAAAglE,QAAA,WACA,OAAAA,KAAAlgF,OAAAkgF,OAOAhlE,EAAAglE,QAAAO,MAAA,WACAP,IACAA,EAAAj1F,OAAA,IAOAiwB,EAAAglE,QAAAQ,QAAA,WACA,OAAAR,IACAA,EAAAj1F,OAAA,EACAi1F,EAAA,OAOAhlE,EAAAglE,QAAAjmD,OAAA,WACA,OAAAimD,IACAA,OAUAhlE,EAAAmF,MAAA,WACA,QAAAsgE,EAAA31F,UAAAC,OAAAic,EAAAzD,MAAAk9E,GAAAC,EAAA,EAAoEA,EAAAD,EAAeC,IACnF15E,EAAA05E,GAAA51F,UAAA41F,GAGA,OAAAT,EAAA,QAAAj5E,IASAgU,EAAAC,KAAA,WACA,QAAA0lE,EAAA71F,UAAAC,OAAAic,EAAAzD,MAAAo9E,GAAAC,EAAA,EAAoEA,EAAAD,EAAeC,IACnF55E,EAAA45E,GAAA91F,UAAA81F,GAGA,OAAAX,EAAA,OAAAj5E,IAUAgU,EAAA6Q,MAAA,WACA,QAAAg1D,EAAA/1F,UAAAC,OAAAic,EAAAzD,MAAAs9E,GAAAC,EAAA,EAAoEA,EAAAD,EAAeC,IACnF95E,EAAA85E,GAAAh2F,UAAAg2F,GAGA,OAAAb,EAAA,QAAAj5E,IAGA,IAAA+5E,EAAA/lE,EAwBA,SAAAgmE,EAAAvwD,EAAAt5B,GACA,IAAAs5B,IAAAt5B,EACA,SAGA,uBAAAhH,EAAAugC,iBAAA,CACA,IAAAuwD,EAAA9wF,EAAAugC,iBAAAD,GAEA,OAAAwwD,IAAA9pF,GAAA,GAGA,OAAAs5B,EAAAywD,aAAA/pF,IAAA,GAGA,IAAAgqF,EAAA1B,GAAA,kbAiBA,SAAA2B,EAAA/zE,GACA,wBAAAA,GAAA,KAAAre,KAAAqe,GAcA,SAAAg0E,GAAAh0E,GACA,QAAAre,KAAAqe,GACA,UAAAriB,MAAA,2CAcA,SAAAs2F,GAAA1vF,GACA,WAAA4gB,OAAA,UAAA5gB,EAAA,WAQA,SAAAqtF,KACA,OAGA/tF,IAAAf,EAAAe,UAIA,qBAAAA,EAAAJ,cAcA,SAAAywF,GAAA13F,GACA,OAAAmoF,EAAAnoF,IAAA,IAAAA,EAAA23F,SASA,SAAAC,KAIA,IACA,OAAAtxF,EAAAsgB,SAAAtgB,EAAA5H,KACG,MAAAqP,GACH,UAaA,SAAA8pF,GAAAj3E,GACA,gBAAAk3E,EAAArxE,GACA,IAAA8wE,EAAAO,GACA,OAAAzwF,EAAAuZ,GAAA,MAEA22E,EAAA9wE,KACAA,EAAApf,EAAA4xE,cAAAxyD,IAGA,IAAAsxE,EAAAL,GAAAjxE,KAAApf,EAEA,OAAA0wF,EAAAn3E,IAAAm3E,EAAAn3E,GAAAk3E,IAsBA,SAAAE,KACA,IAAA5wF,EAAAnG,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,SACA61B,EAAA71B,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAwf,EAAAxf,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACA27D,EAAA37D,UAAA,GAEA2lC,EAAAv/B,EAAAJ,cAAAG,GA6BA,OA3BA3H,OAAAw4F,oBAAAnhE,GAAA3L,QAAA,SAAA+sE,GACA,IAAA1qF,EAAAspB,EAAAohE,IAKA,IAAAA,EAAAzmF,QAAA,mBAAAymF,GAAA,SAAAA,GACAhB,EAAA9lE,KAAAuiE,EAAA2D,EAAAY,EAAA1qF,IACAo5B,EAAAuxD,aAAAD,EAAA1qF,IAIK,gBAAA0qF,EACLtvF,GAAAg+B,EAAAp5B,GAEAo5B,EAAAsxD,GAAA1qF,IAIA/N,OAAAw4F,oBAAAx3E,GAAA0K,QAAA,SAAAitE,GACAxxD,EAAAuxD,aAAAC,EAAA33E,EAAA23E,MAGAx7B,GACAy7B,GAAAzxD,EAAAg2B,GAGAh2B,EAeA,SAAAh+B,GAAAg+B,EAAAp+B,GAMA,MALA,qBAAAo+B,EAAAh+B,YACAg+B,EAAA/9B,UAAAL,EAEAo+B,EAAAh+B,YAAAJ,EAEAo+B,EAYA,SAAA0xD,GAAAC,EAAA3xE,GACAA,EAAAzX,WACAyX,EAAA4xE,aAAAD,EAAA3xE,EAAAzX,YAEAyX,EAAAnf,YAAA8wF,GAoBA,SAAAE,GAAA1xF,EAAA2xF,GAEA,OADAlB,GAAAkB,GACA3xF,EAAA4xF,UACA5xF,EAAA4xF,UAAAlW,SAAAiW,GAEAjB,GAAAiB,GAAAvzF,KAAA4B,EAAAgB,WAeA,SAAA6wF,GAAA7xF,EAAA8xF,GAUA,OATA9xF,EAAA4xF,UACA5xF,EAAA4xF,UAAA5xE,IAAA8xE,GAIGJ,GAAA1xF,EAAA8xF,KACH9xF,EAAAgB,WAAAhB,EAAAgB,UAAA,IAAA8wF,GAAAvxF,QAGAP,EAeA,SAAA+xF,GAAA/xF,EAAAgyF,GAUA,OATAhyF,EAAA4xF,UACA5xF,EAAA4xF,UAAArjD,OAAAyjD,IAEAvB,GAAAuB,GACAhyF,EAAAgB,UAAAhB,EAAAgB,UAAAzF,MAAA,OAAA+tB,OAAA,SAAAjxB,GACA,OAAAA,IAAA25F,IACKttE,KAAA,MAGL1kB,EAmCA,SAAAiyF,GAAAjyF,EAAAkyF,EAAAlsD,GAKA,IAAA9nC,EAAAwzF,GAAA1xF,EAAAkyF,GAYA,GAVA,oBAAAlsD,IACAA,IAAAhmC,EAAAkyF,IAGA,mBAAAlsD,IACAA,GAAA9nC,GAKA8nC,IAAA9nC,EAUA,OANA8nC,EACA6rD,GAAA7xF,EAAAkyF,GAEAH,GAAA/xF,EAAAkyF,GAGAlyF,EAYA,SAAAmyF,GAAAtyD,EAAAnmB,GACAhhB,OAAAw4F,oBAAAx3E,GAAA0K,QAAA,SAAAitE,GACA,IAAAe,EAAA14E,EAAA23E,GAEA,OAAAe,GAAA,qBAAAA,IAAA,IAAAA,EACAvyD,EAAAwyD,gBAAAhB,GAEAxxD,EAAAuxD,aAAAC,GAAA,IAAAe,EAAA,GAAAA,KAiBA,SAAAE,GAAAt5E,GACA,IAAA9U,KAKAquF,EAAA,kEAEA,GAAAv5E,KAAAU,YAAAV,EAAAU,WAAAvf,OAAA,EAGA,IAFA,IAAA8iB,EAAAjE,EAAAU,WAEA1hB,EAAAilB,EAAA9iB,OAAA,EAAkCnC,GAAA,EAAQA,IAAA,CAC1C,IAAAq5F,EAAAp0E,EAAAjlB,GAAAO,KACAi6F,EAAAv1E,EAAAjlB,GAAAiB,MAIA,mBAAA+f,EAAAq4E,KAAA,IAAAkB,EAAA7nF,QAAA,IAAA2mF,EAAA,OAIAmB,EAAA,OAAAA,GAGAtuF,EAAAmtF,GAAAmB,EAIA,OAAAtuF,EAeA,SAAAuuF,GAAA5yD,EAAA6yD,GACA,OAAA7yD,EAAA4yD,aAAAC,GAeA,SAAAtB,GAAAvxD,EAAA6yD,EAAAz5F,GACA4mC,EAAAuxD,aAAAsB,EAAAz5F,GAYA,SAAAo5F,GAAAxyD,EAAA6yD,GACA7yD,EAAAwyD,gBAAAK,GAMA,SAAAC,KACAryF,EAAAsyF,KAAAC,QACAvyF,EAAAwyF,cAAA,WACA,UAOA,SAAAC,KACAzyF,EAAAwyF,cAAA,WACA,UAuBA,SAAAruF,GAAAo7B,GACA,GAAAA,KAAAp7B,uBAAAo7B,EAAAh/B,WAAA,CACA,IAAAmyF,EAAAnzD,EAAAp7B,wBACA/E,KAgBA,OAdA,gDAAA0kB,QAAA,SAAA3oB,QACAoJ,IAAAmuF,EAAAv3F,KACAiE,EAAAjE,GAAAu3F,EAAAv3F,MAIAiE,EAAAoE,SACApE,EAAAoE,OAAAxF,WAAA8xF,EAAAvwD,EAAA,YAGAngC,EAAAmE,QACAnE,EAAAmE,MAAAvF,WAAA8xF,EAAAvwD,EAAA,WAGAngC,GA6BA,SAAAuzF,GAAApzD,GACA,IAAA77B,OAAA,EAMA,GAJA67B,EAAAp7B,uBAAAo7B,EAAAh/B,aACAmD,EAAA67B,EAAAp7B,0BAGAT,EACA,OACA3G,KAAA,EACA0F,IAAA,GAIA,IAAAmwF,EAAA5yF,EAAA2rF,gBACA2G,EAAAtyF,EAAAsyF,KAEAO,EAAAD,EAAAC,YAAAP,EAAAO,YAAA,EACAC,EAAA7zF,EAAA8zF,aAAAT,EAAAQ,WACA/1F,EAAA2G,EAAA3G,KAAA+1F,EAAAD,EAEAG,EAAAJ,EAAAI,WAAAV,EAAAU,WAAA,EACAC,EAAAh0F,EAAAi0F,aAAAZ,EAAAW,UACAxwF,EAAAiB,EAAAjB,IAAAwwF,EAAAD,EAGA,OACAj2F,KAAAqH,KAAAoB,MAAAzI,GACA0F,IAAA2B,KAAAoB,MAAA/C,IA+BA,SAAA0wF,GAAA5zD,EAAA5d,GACA,IAAA9kB,KACA6G,EAAAivF,GAAApzD,GACA6zD,EAAA7zD,EAAAx7B,YACAsvF,EAAA9zD,EAAAz7B,aAEAwvF,EAAA5vF,EAAAjB,IACA8wF,EAAA7vF,EAAA3G,KACAy2F,EAAA7xE,EAAA6xE,MACAC,EAAA9xE,EAAA8xE,MAUA,OARA9xE,EAAA+xE,iBACAD,EAAA9xE,EAAA+xE,eAAA,GAAAD,MACAD,EAAA7xE,EAAA+xE,eAAA,GAAAF,OAGA32F,EAAA+J,EAAAxC,KAAAC,IAAA,EAAAD,KAAAuC,IAAA,GAAA2sF,EAAAE,EAAAH,OACAx2F,EAAA6J,EAAAtC,KAAAC,IAAA,EAAAD,KAAAuC,IAAA,GAAA8sF,EAAAF,GAAAH,IAEAv2F,EAaA,SAAA82F,GAAAh7F,GACA,OAAAmoF,EAAAnoF,IAAA,IAAAA,EAAA23F,SAYA,SAAAsD,GAAAr0D,GACA,MAAAA,EAAAz3B,WACAy3B,EAAAx3B,YAAAw3B,EAAAz3B,YAEA,OAAAy3B,EAwBA,SAAAs0D,GAAAt+B,GAUA,MANA,oBAAAA,IACAA,QAKAljD,MAAA8O,QAAAo0C,UAAA7lD,IAAA,SAAA/W,GAQA,MAJA,oBAAAA,IACAA,OAGA03F,GAAA13F,IAAAg7F,GAAAh7F,GACAA,EAGA,kBAAAA,GAAA,KAAAmF,KAAAnF,GACAqH,EAAAK,eAAA1H,QADA,IAGGqwB,OAAA,SAAArwB,GACH,OAAAA,IAiBA,SAAAq4F,GAAAzxD,EAAAg2B,GAIA,OAHAs+B,GAAAt+B,GAAAzxC,QAAA,SAAAtjB,GACA,OAAA++B,EAAAn/B,YAAAI,KAEA++B,EAiBA,SAAAu0D,GAAAv0D,EAAAg2B,GACA,OAAAy7B,GAAA4C,GAAAr0D,GAAAg2B,GAaA,SAAAw+B,GAAApyE,GAKA,YAAApd,IAAAod,EAAAqyE,aAAAzvF,IAAAod,EAAAsyE,UAgBA,IAAAtyE,EAAAqyE,aAAAzvF,IAAAod,EAAAsyE,UAOA,IAAAnjE,GAMA,IAAAnP,EAAAqyE,QAAA,IAAAryE,EAAAsyE,UA4BA,IAAAC,GAAA1D,GAAA,iBAmBA2D,GAAA3D,GAAA,oBAIA4D,IAAAh8F,OAAA+1F,QAAA/1F,SACA21F,UACAsC,QACAE,aACAI,YACApvF,eACA0vF,aACAG,YACAG,YACAE,eACAE,eACAE,iBACAG,iBACAG,gBACArB,gBACAiB,mBACAM,sBACAI,wBACAtuF,yBACAwuF,gBACAQ,sBACAQ,cACAC,WACAC,oBACA7C,iBACA8C,iBACAC,qBACAG,KACAC,QAYAE,GAAA,EAQA,SAAAC,KACA,OAAAD,KAiBA,IAAAE,MASAC,GAAA,aAAAryE,MAAAuwB,UAWA,SAAA+hD,GAAAl1D,GACA,IAAAxjC,EAAAwjC,EAAAi1D,IAUA,OARAz4F,IACAA,EAAAwjC,EAAAi1D,IAAAF,MAGAC,GAAAx4F,KACAw4F,GAAAx4F,OAGAw4F,GAAAx4F,GAaA,SAAA24F,GAAAn1D,GACA,IAAAxjC,EAAAwjC,EAAAi1D,IAEA,QAAAz4F,KAIA3D,OAAAw4F,oBAAA2D,GAAAx4F,IAAAlC,OASA,SAAA86F,GAAAp1D,GACA,IAAAxjC,EAAAwjC,EAAAi1D,IAEA,GAAAz4F,EAAA,QAKAw4F,GAAAx4F,GAGA,WACAwjC,EAAAi1D,IACG,MAAAl1F,GACHigC,EAAAwyD,gBACAxyD,EAAAwyD,gBAAAyC,IAGAj1D,EAAAi1D,IAAA,OAuBA,SAAAI,GAAAnoC,EAAA5sD,GACA,IAAAsH,EAAAstF,GAAAhoC,GAGA,IAAAtlD,EAAA0tF,SAAAh1F,GAAAhG,gBACAsN,EAAA0tF,SAAAh1F,GAKA4sD,EAAAj6B,oBACAi6B,EAAAj6B,oBAAA3yB,EAAAsH,EAAA2tF,YAAA,GACKroC,EAAAsoC,aACLtoC,EAAAsoC,YAAA,KAAAl1F,EAAAsH,EAAA2tF,aAKA18F,OAAAw4F,oBAAAzpF,EAAA0tF,UAAAh7F,QAAA,WACAsN,EAAA0tF,gBACA1tF,EAAA2tF,kBACA3tF,EAAA+9B,UAIA,IAAA9sC,OAAAw4F,oBAAAzpF,GAAAtN,QACA86F,GAAAloC,GAmBA,SAAAuoC,GAAAne,EAAApqB,EAAA+N,EAAA3/D,GACA2/D,EAAA12C,QAAA,SAAAjkB,GAEAg3E,EAAApqB,EAAA5sD,EAAAhF,KAaA,SAAAo6F,GAAAtzE,GAEA,SAAAuzE,IACA,SAGA,SAAAC,IACA,SAQA,IAAAxzE,MAAAyzE,qBAAA,CACA,IAAAC,EAAA1zE,GAAA1iB,EAAA0iB,MAQA,QAAA1oB,KANA0oB,KAMA0zE,EAIA,WAAAp8F,GAAA,WAAAA,GAAA,gBAAAA,GAAA,oBAAAA,GAAA,oBAAAA,IAGA,gBAAAA,GAAAo8F,EAAAC,iBACA3zE,EAAA1oB,GAAAo8F,EAAAp8F,KAmDA,GA7CA0oB,EAAAhR,SACAgR,EAAAhR,OAAAgR,EAAA4zE,YAAAv1F,GAIA2hB,EAAA6zE,gBACA7zE,EAAA6zE,cAAA7zE,EAAA8zE,cAAA9zE,EAAAhR,OAAAgR,EAAA+zE,UAAA/zE,EAAA8zE,aAIA9zE,EAAA2zE,eAAA,WACAD,EAAAC,gBACAD,EAAAC,iBAEA3zE,EAAAg0E,aAAA,EACAN,EAAAM,aAAA,EACAh0E,EAAAi0E,kBAAA,GAGAj0E,EAAAi0E,kBAAA,EAGAj0E,EAAAk0E,gBAAA,WACAR,EAAAQ,iBACAR,EAAAQ,kBAEAl0E,EAAAm0E,cAAA,EACAT,EAAAS,cAAA,EACAn0E,EAAAyzE,qBAAAF,GAGAvzE,EAAAyzE,qBAAAD,EAGAxzE,EAAAo0E,yBAAA,WACAV,EAAAU,0BACAV,EAAAU,2BAEAp0E,EAAAq0E,8BAAAd,EACAvzE,EAAAk0E,mBAGAl0E,EAAAq0E,8BAAAb,EAGA,OAAAxzE,EAAAs0E,cAAA1xF,IAAAod,EAAAs0E,QAAA,CACA,IAAAC,EAAAl2F,EAAA2rF,gBACA2G,EAAAtyF,EAAAsyF,KAEA3wE,EAAA8xE,MAAA9xE,EAAAs0E,SAAAC,KAAApD,YAAAR,KAAAQ,YAAA,IAAAoD,KAAArD,YAAAP,KAAAO,YAAA,GACAlxE,EAAA6xE,MAAA7xE,EAAAw0E,SAAAD,KAAAjD,WAAAX,KAAAW,WAAA,IAAAiD,KAAAlD,WAAAV,KAAAU,WAAA,GAIArxE,EAAAy0E,MAAAz0E,EAAA7gB,UAAA6gB,EAAA00E,QAIA,OAAA10E,EAAAqyE,aAAAzvF,IAAAod,EAAAqyE,SAKAryE,EAAAqyE,OAAA,EAAAryE,EAAAqyE,OAAA,IAAAryE,EAAAqyE,OAAA,IAAAryE,EAAAqyE,OAAA,KAMA,OAAAryE,EAMA,IAAA20E,IAAA,GAEA,WACA,IACA,IAAA9uB,EAAApvE,OAAAC,kBAAuC,WACvCE,IAAA,WACA+9F,IAAA,KAIAr3F,EAAA0sB,iBAAA,YAAA67C,GACAvoE,EAAAuzB,oBAAA,YAAAg1C,GACG,MAAAloE,MAVH,GAkBA,IAAAi3F,IAAA,0BAiBA,SAAA9gF,GAAAg3C,EAAA5sD,EAAAg3E,GACA,GAAAxkE,MAAA8O,QAAAthB,GACA,OAAAm1F,GAAAv/E,GAAAg3C,EAAA5sD,EAAAg3E,GAGA,IAAA1vE,EAAAstF,GAAAhoC,GAiDA,GA9CAtlD,EAAA0tF,WACA1tF,EAAA0tF,aAGA1tF,EAAA0tF,SAAAh1F,KACAsH,EAAA0tF,SAAAh1F,OAGAg3E,EAAA2f,OACA3f,EAAA2f,KAAAlC,MAGAntF,EAAA0tF,SAAAh1F,GAAAc,KAAAk2E,GAEA1vE,EAAA2tF,aACA3tF,EAAA+9B,UAAA,EAEA/9B,EAAA2tF,WAAA,SAAAnzE,EAAA80E,GAEA,IAAAtvF,EAAA+9B,SAAA,CAIAvjB,EAAAszE,GAAAtzE,GAEA,IAAAkzE,EAAA1tF,EAAA0tF,SAAAlzE,EAAA9hB,MAEA,GAAAg1F,EAIA,IAFA,IAAA6B,EAAA7B,EAAAlmF,MAAA,GAEA7W,EAAA,EAAAqB,EAAAu9F,EAAA78F,OAAgD/B,EAAAqB,EAAOrB,IAAA,CACvD,GAAA6pB,EAAAq0E,gCACA,MAEA,IACAU,EAAA5+F,GAAAD,KAAA40D,EAAA9qC,EAAA80E,GACa,MAAAn3F,GACbuwF,EAAA5gE,MAAA3vB,QAQA,IAAA6H,EAAA0tF,SAAAh1F,GAAAhG,OACA,GAAA4yD,EAAA9gC,iBAAA,CACA,IAAA/O,GAAA,EAEA05E,IAAAC,GAAAnsF,QAAAvK,IAAA,IACA+c,GAAmB+5E,SAAA,IAEnBlqC,EAAA9gC,iBAAA9rB,EAAAsH,EAAA2tF,WAAAl4E,QACK6vC,EAAAmqC,aACLnqC,EAAAmqC,YAAA,KAAA/2F,EAAAsH,EAAA2tF,YAkBA,SAAAn/E,GAAA82C,EAAA5sD,EAAAg3E,GAEA,GAAA6d,GAAAjoC,GAAA,CAIA,IAAAtlD,EAAAstF,GAAAhoC,GAGA,GAAAtlD,EAAA0tF,SAAA,CAIA,GAAAxiF,MAAA8O,QAAAthB,GACA,OAAAm1F,GAAAr/E,GAAA82C,EAAA5sD,EAAAg3E,GAIA,IAAAggB,EAAA,SAAAt3D,EAAA3mC,GACAuO,EAAA0tF,SAAAj8F,MACAg8F,GAAAr1D,EAAA3mC,IAIA,QAAA2L,IAAA1E,EAAA,CASA,IAAAg1F,EAAA1tF,EAAA0tF,SAAAh1F,GAGA,GAAAg1F,EAKA,GAAAhe,EAAA,CAMA,GAAAA,EAAA2f,KACA,QAAAr9F,EAAA,EAAmBA,EAAA07F,EAAAh7F,OAAqBV,IACxC07F,EAAA17F,GAAAq9F,OAAA3f,EAAA2f,MACA3B,EAAAj/E,OAAAzc,IAAA,GAKAy7F,GAAAnoC,EAAA5sD,QAbAg3F,EAAApqC,EAAA5sD,QAjBA,QAAAjH,KAAAuO,EAAA0tF,SACAz8F,OAAAkB,UAAAC,eAAA1B,KAAAsP,EAAA0tF,aAAkEj8F,IAClEi+F,EAAApqC,EAAA7zD,KA+CA,SAAAqV,GAAAw+C,EAAA9qC,EAAA80E,GAIA,IAAAK,EAAApC,GAAAjoC,GAAAgoC,GAAAhoC,MACAltC,EAAAktC,EAAAlsD,YAAAksD,EAAAsqC,cAqBA,GAhBA,kBAAAp1E,EACAA,GAAa9hB,KAAA8hB,EAAAhR,OAAA87C,GACV9qC,EAAAhR,SACHgR,EAAAhR,OAAA87C,GAIA9qC,EAAAszE,GAAAtzE,GAGAm1E,EAAAhC,YACAgC,EAAAhC,WAAAj9F,KAAA40D,EAAA9qC,EAAA80E,GAKAl3E,IAAAoC,EAAAyzE,yBAAA,IAAAzzE,EAAAyN,QACAnhB,GAAApW,KAAA,KAAA0nB,EAAAoC,EAAA80E,QAGG,IAAAl3E,IAAAoC,EAAAi0E,iBAAA,CACH,IAAAoB,EAAAvC,GAAA9yE,EAAAhR,QAGAgR,EAAAhR,OAAAgR,EAAA9hB,QAEAm3F,EAAA9xD,UAAA,EAEA,oBAAAvjB,EAAAhR,OAAAgR,EAAA9hB,OACA8hB,EAAAhR,OAAAgR,EAAA9hB,QAGAm3F,EAAA9xD,UAAA,GAKA,OAAAvjB,EAAAi0E,iBAeA,SAAA5mE,GAAAy9B,EAAA5sD,EAAAg3E,GACA,GAAAxkE,MAAA8O,QAAAthB,GACA,OAAAm1F,GAAAhmE,GAAAy9B,EAAA5sD,EAAAg3E,GAEA,IAAAzJ,EAAA,SAAAA,IACAz3D,GAAA82C,EAAA5sD,EAAAutE,GACAyJ,EAAApnE,MAAAnY,KAAAsC,YAIAwzE,EAAAopB,KAAA3f,EAAA2f,KAAA3f,EAAA2f,MAAAlC,KACA7+E,GAAAg3C,EAAA5sD,EAAAutE,GAGA,IAAA6pB,IAAA7+F,OAAA+1F,QAAA/1F,SACA68F,YACAx/E,MACAE,OACA1H,WACA+gB,SASAkoE,IAAA,EACAC,QAAA,EAKAC,GAAA,WAGA,GAAArJ,OAAA,IAAAoJ,GAAAv6E,QAAAw6E,UAAA,CAWA,IAAAC,EAAAr3F,EAAA4rF,qBAAA,SACA0L,EAAAt3F,EAAA4rF,qBAAA,SACA2L,EAAAv3F,EAAA4rF,qBAAA,YACA4L,KAEA,GAAAH,KAAAx9F,OAAA,EACA,QAAAnC,EAAA,EAAA4H,EAAA+3F,EAAAx9F,OAAoCnC,EAAA4H,EAAO5H,IAC3C8/F,EAAA72F,KAAA02F,EAAA3/F,IAIA,GAAA4/F,KAAAz9F,OAAA,EACA,QAAAknB,EAAA,EAAAF,EAAAy2E,EAAAz9F,OAAwCknB,EAAAF,EAASE,IACjDy2E,EAAA72F,KAAA22F,EAAAv2E,IAIA,GAAAw2E,KAAA19F,OAAA,EACA,QAAA49F,EAAA,EAAAC,EAAAH,EAAA19F,OAAwC49F,EAAAC,EAAWD,IACnDD,EAAA72F,KAAA42F,EAAAE,IAKA,GAAAD,KAAA39F,OAAA,EAEA,QAAA89F,EAAA,EAAAC,EAAAJ,EAAA39F,OAA4C89F,EAAAC,EAAWD,IAAA,CACvD,IAAAE,EAAAL,EAAAG,GAKA,IAAAE,MAAA1F,aAeO,CACP2F,GAAA,GACA,MAdA,QAAAvzF,IAAAszF,EAAAz5E,OAAA,CACA,IAAAxB,EAAAi7E,EAAA1F,aAAA,cAIA,OAAAv1E,GAEAu6E,GAAAU,SAYGX,IACHY,GAAA,KAcA,SAAAA,GAAAC,EAAAC,GACAA,IACAb,GAAAa,GAGA/4F,EAAAs8B,WAAA67D,GAAAW,GAGAhK,MAAA,aAAA/tF,EAAA+wB,WACAmmE,IAAA,EAOAloE,GAAA/vB,EAAA,kBACAi4F,IAAA,IAiBA,IAAAe,GAAA,SAAAv3F,GACA,IAAAwF,EAAAlG,EAAAJ,cAAA,SAIA,OAFAsG,EAAAxF,YAEAwF,GAYAgyF,GAAA,SAAA34D,EAAAg2B,GACAh2B,EAAA44D,WACA54D,EAAA44D,WAAAC,QAAA7iC,EAEAh2B,EAAAh+B,YAAAg0D,GAwBAr8D,GAAA,SAAAkmB,EAAAy3D,EAAAwhB,GAEAxhB,EAAA2f,OACA3f,EAAA2f,KAAAlC,MAIA,IAAAgE,EAAA,WACA,OAAAzhB,EAAApnE,MAAA2P,EAAAxlB,YAWA,OAFA0+F,EAAA9B,KAAA6B,IAAA,IAAAxhB,EAAA2f,KAAA3f,EAAA2f,KAEA8B,GAeAC,GAAA,SAAA1hB,EAAAkhB,GACA,IAAAS,EAAAr2E,KAAA4P,MAEA0mE,EAAA,WACA,IAAA1mE,EAAA5P,KAAA4P,MAEAA,EAAAymE,GAAAT,IACAlhB,EAAApnE,WAAAlL,EAAA3K,WACA4+F,EAAAzmE,IAIA,OAAA0mE,GA4BAC,GAAA,SAAAtrB,EAAA2qB,EAAAY,GACA,IAAAv5E,EAAAxlB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,GAAAqF,EAEAqsB,OAAA,EAGA,kBACA,IAAAj0B,EAAAC,KACAwe,EAAAlc,UAEAg/F,EAAA,WACAttE,EAAA,KACAstE,EAAA,KACAD,GACAvrB,EAAA39D,MAAApY,EAAAye,KAIAwV,GAAAqtE,GACAvrB,EAAA39D,MAAApY,EAAAye,GAGAsJ,EAAAic,aAAA/P,GACAA,EAAAlM,EAAAmc,WAAAq9D,EAAAb,KAgBAzkE,GAAA,aA+BAA,GAAAh6B,UAAAu/F,kBAYAvlE,GAAAh6B,UAAAmc,GAAA,SAAA5V,EAAAg3E,GAGA,IAAAiiB,EAAAxhG,KAAAq0B,iBAEAr0B,KAAAq0B,iBAAA,aACAlW,GAAAne,KAAAuI,EAAAg3E,GACAv/E,KAAAq0B,iBAAAmtE,GAUAxlE,GAAAh6B,UAAAqyB,iBAAA2H,GAAAh6B,UAAAmc,GAaA6d,GAAAh6B,UAAAqc,IAAA,SAAA9V,EAAAg3E,GACAlhE,GAAAre,KAAAuI,EAAAg3E,IAUAvjD,GAAAh6B,UAAAk5B,oBAAAc,GAAAh6B,UAAAqc,IAaA2d,GAAAh6B,UAAA01B,IAAA,SAAAnvB,EAAAg3E,GAGA,IAAAiiB,EAAAxhG,KAAAq0B,iBAEAr0B,KAAAq0B,iBAAA,aACAqD,GAAA13B,KAAAuI,EAAAg3E,GACAv/E,KAAAq0B,iBAAAmtE,GAmBAxlE,GAAAh6B,UAAA2U,QAAA,SAAA0T,GACA,IAAA9hB,EAAA8hB,EAAA9hB,MAAA8hB,EAEA,kBAAAA,IACAA,GAAa9hB,SAEb8hB,EAAAszE,GAAAtzE,GAEArqB,KAAAuhG,eAAAh5F,IAAAvI,KAAA,KAAAuI,IACAvI,KAAA,KAAAuI,GAAA8hB,GAGA1T,GAAA3W,KAAAqqB,IAUA2R,GAAAh6B,UAAAy/F,cAAAzlE,GAAAh6B,UAAA2U,QAeA,IAAA+qF,GAAA,SAAA5/F,GACA,OAAAA,aAAAk6B,MAAAl6B,EAAA6/F,cAAA,4BAAApjB,MAAA,SAAA16E,GACA,0BAAA/B,EAAA+B,MAcA+9F,GAAA,SAAAr5F,GACA,MAGA,kBAAAA,GAAA,KAAA/B,KAAA+B,IAAAwS,MAAA8O,QAAAthB,QAAAhG,QAcAs/F,GAAA,SAAAxoF,GACA,IAAAA,EAAAyoF,WAAAJ,GAAAroF,GACA,UAAA7W,MAAA,0DAcAu/F,GAAA,SAAAx5F,GACA,IAAAq5F,GAAAr5F,GACA,UAAA/F,MAAA,6DAcAw/F,GAAA,SAAA5jF,GACA,uBAAAA,EACA,UAAA5b,MAAA,0CAmBAy/F,GAAA,SAAAliG,EAAAye,GAIA,IAAA0jF,EAAA1jF,EAAAjc,OAAA,GAAAic,EAAA,KAAAze,GAAAye,EAAA,KAAAze,EAAA4hG,YACAtoF,OAAA,EACA9Q,OAAA,EACA6V,OAAA,EAyBA,OAvBA8jF,GACA7oF,EAAAtZ,EAAA4hG,YAIAnjF,EAAAjc,QAAA,GACAic,EAAAm8B,QAGApyC,EAAAiW,EAAA,GACAJ,EAAAI,EAAA,KAEAnF,EAAAmF,EAAA,GACAjW,EAAAiW,EAAA,GACAJ,EAAAI,EAAA,IAGAqjF,GAAAxoF,GACA0oF,GAAAx5F,GACAy5F,GAAA5jF,GAEAA,EAAAxc,GAAA7B,EAAAqe,IAEU8jF,kBAAA7oF,SAAA9Q,OAAA6V,aAoBV+jF,GAAA,SAAA9oF,EAAA4I,EAAA1Z,EAAA6V,GACAyjF,GAAAxoF,GAEAA,EAAAyoF,SACAnC,GAAA19E,GAAA5I,EAAA9Q,EAAA6V,GAEA/E,EAAA4I,GAAA1Z,EAAA6V,IAUAgkF,IAyBAjkF,GAAA,WAGA,IAFA,IAAA2B,EAAA9f,KAEA0pF,EAAApnF,UAAAC,OAAAic,EAAAzD,MAAA2uE,GAAArpE,EAAA,EAAmEA,EAAAqpE,EAAarpE,IAChF7B,EAAA6B,GAAA/d,UAAA+d,GAGA,IAAAgiF,EAAAJ,GAAAjiG,KAAAwe,GACA0jF,EAAAG,EAAAH,gBACA7oF,EAAAgpF,EAAAhpF,OACA9Q,EAAA85F,EAAA95F,KACA6V,EAAAikF,EAAAjkF,SAKA,GAHA+jF,GAAA9oF,EAAA,KAAA9Q,EAAA6V,IAGA8jF,EAAA,CAGA,IAAAI,EAAA,WACA,OAAAxiF,EAAAzB,IAAAhF,EAAA9Q,EAAA6V,IAKAkkF,EAAApD,KAAA9gF,EAAA8gF,KAKA,IAAAqD,EAAA,WACA,OAAAziF,EAAAzB,IAAA,UAAAikF,IAKAC,EAAArD,KAAA9gF,EAAA8gF,KAEAiD,GAAAniG,KAAA,eAAAsiG,GACAH,GAAA9oF,EAAA,eAAAkpF,KA4BA7qE,IAAA,WAGA,IAFA,IAAA1B,EAAAh2B,KAEAi4F,EAAA31F,UAAAC,OAAAic,EAAAzD,MAAAk9E,GAAAC,EAAA,EAAsEA,EAAAD,EAAeC,IACrF15E,EAAA05E,GAAA51F,UAAA41F,GAGA,IAAAsK,EAAAP,GAAAjiG,KAAAwe,GACA0jF,EAAAM,EAAAN,gBACA7oF,EAAAmpF,EAAAnpF,OACA9Q,EAAAi6F,EAAAj6F,KACA6V,EAAAokF,EAAApkF,SAKA,GAAA8jF,EACAC,GAAA9oF,EAAA,MAAA9Q,EAAA6V,OAGK,CACL,IAAA0+D,EAAA,SAAAA,IACA,QAAAqb,EAAA71F,UAAAC,OAAAkgG,EAAA1nF,MAAAo9E,GAAAC,EAAA,EAA2EA,EAAAD,EAAeC,IAC1FqK,EAAArK,GAAA91F,UAAA81F,GAGApiE,EAAA3X,IAAAhF,EAAA9Q,EAAAu0E,GACA1+D,EAAAjG,MAAA,KAAAsqF,IAKA3lB,EAAAoiB,KAAA9gF,EAAA8gF,KACAiD,GAAA9oF,EAAA,MAAA9Q,EAAAu0E,KAwBAz+D,IAAA,SAAAqkF,EAAAC,EAAAvkF,GAGA,IAAAskF,GAAAd,GAAAc,GACArkF,GAAAre,KAAA2hG,YAAAe,EAAAC,OAGK,CACL,IAAAtpF,EAAAqpF,EACAn6F,EAAAo6F,EAGAd,GAAAxoF,GACA0oF,GAAAx5F,GACAy5F,GAAA5jF,GAGAA,EAAAxc,GAAA5B,KAAAoe,GAIApe,KAAAqe,IAAA,UAAAD,GAEA/E,EAAAyoF,UACAzjF,GAAAhF,EAAA9Q,EAAA6V,GACAC,GAAAhF,EAAA,UAAA+E,IACOsjF,GAAAroF,KACPA,EAAAgF,IAAA9V,EAAA6V,GACA/E,EAAAgF,IAAA,UAAAD,MAkBAzH,QAAA,SAAA0T,EAAA80E,GACA,OAAAxoF,GAAA3W,KAAA2hG,YAAAt3E,EAAA80E,KAqBA,SAAAyD,GAAAvpF,GACA,IAAAiM,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAugG,EAAAv9E,EAAAu9E,YAIA,GAAAA,EAAA,CACA,IAAAxpF,EAAAwpF,GAAAf,SACA,UAAAt/F,MAAA,oBAAAqgG,EAAA,mCAEAxpF,EAAAsoF,YAAAtoF,EAAAwpF,QAEAxpF,EAAAsoF,YAAAtI,GAAA,QAA2CjwF,UAAA,kBAa3C,OAVA0V,EAAAzF,EAAA+oF,IAGA/oF,EAAA8E,GAAA,qBACA9E,EAAAgF,MACA1W,EAAAs8B,WAAA,WACA5qB,EAAAsoF,YAAA,MACK,KAGLtoF,EAaA,IAAAypF,IAQA3xF,SAeA4xF,SAAA,SAAAC,GACA,IAAAljF,EAAA9f,KAGA,oBAAAgjG,IACAA,OAGA,IAAAC,OAAA,EAuCA,OArCA7L,EAAA4L,EAAA,SAAA3hG,EAAAM,GAIAme,EAAA3O,MAAAxP,KAAAN,IACA4hG,QACAA,EAAAthG,IACAiqF,KAAA9rE,EAAA3O,MAAAxP,GACAuhG,GAAA7hG,IAIAye,EAAA3O,MAAAxP,GAAAN,IAMA4hG,GAAAvB,GAAA1hG,OAaAA,KAAA2W,SACAssF,UACA16F,KAAA,iBAIA06F,IAsBA,SAAAE,GAAA9pF,EAAA+pF,GAYA,OAXAtkF,EAAAzF,EAAAypF,IAIAzpF,EAAAlI,MAAA2N,KAA0BzF,EAAAlI,MAAAiyF,GAG1B,oBAAA/pF,EAAAgqF,oBAAA3B,GAAAroF,IACAA,EAAA8E,GAAA,eAAA9E,EAAAgqF,oBAGAhqF,EAiBA,SAAAiqF,GAAAtc,GACA,wBAAAA,EACAA,EAGAA,EAAAuc,OAAA,GAAA1L,cAAA7Q,EAAA3vE,MAAA,GAeA,SAAAmsF,GAAAC,EAAAC,GACA,OAAAJ,GAAAG,KAAAH,GAAAI,GAiBA,SAAAhuE,KAGA,IAFA,IAAA5tB,KAEA4hF,EAAApnF,UAAAC,OAAA4jB,EAAApL,MAAA2uE,GAAArpE,EAAA,EAAoEA,EAAAqpE,EAAarpE,IACjF8F,EAAA9F,GAAA/d,UAAA+d,GAsBA,OAnBA8F,EAAAqG,QAAA,SAAAzN,GACAA,GAIAq4E,EAAAr4E,EAAA,SAAA1d,EAAAM,GACA21F,EAAAj2F,IAKAi2F,EAAAxvF,EAAAnG,MACAmG,EAAAnG,OAGAmG,EAAAnG,GAAA+zB,GAAA5tB,EAAAnG,GAAAN,IARAyG,EAAAnG,GAAAN,MAYAyG,EAiBA,IAAA+6E,GAAA,WA2BA,SAAAA,EAAA/7D,EAAAxB,EAAAE,GAqBA,GApBAsxE,EAAA92F,KAAA6iF,IAIA/7D,GAAA9mB,KAAA45B,KACA55B,KAAAqzE,QAAAvsD,EAAA9mB,KAEAA,KAAAqzE,QAAAvsD,EAIA9mB,KAAAijF,SAAAvtD,MAAmC11B,KAAAijF,UAGnC39D,EAAAtlB,KAAAijF,SAAAvtD,GAAA11B,KAAAijF,SAAA39D,GAGAtlB,KAAA2jG,IAAAr+E,EAAA7gB,IAAA6gB,EAAA2iB,IAAA3iB,EAAA2iB,GAAAxjC,IAGAzE,KAAA2jG,IAAA,CAEA,IAAAl/F,EAAAqiB,KAAAriB,IAAAqiB,EAAAriB,MAAA,YAEAzE,KAAA2jG,IAAAl/F,EAAA,cAAAu4F,KAGAh9F,KAAA67D,MAAAv2C,EAAA3kB,MAAA,KAGA2kB,EAAA2iB,GACAjoC,KAAAy6E,IAAAn1D,EAAA2iB,IACK,IAAA3iB,EAAA+zE,WACLr5F,KAAAy6E,IAAAz6E,KAAAq5F,aAIA,IAAA/zE,EAAAs9E,SAEAA,GAAA5iG,MAAqB6iG,YAAA7iG,KAAAy6E,IAAA,aAErB0oB,GAAAnjG,UAAAkG,YAAAk9F,cAEApjG,KAAA4jG,aACA5jG,KAAA6jG,eACA7jG,KAAA8jG,oBAGA,IAAAx+E,EAAAy+E,cACA/jG,KAAA+jG,eAGA/jG,KAAAwlB,UAIA,IAAAF,EAAA0+E,qBACAhkG,KAAAikG,sBAwgDA,OA7/CAphB,EAAA7gF,UAAAyc,QAAA,WAeA,GAHAze,KAAA2W,SAAkBpO,KAAA,UAAAuvB,SAAA,IAGlB93B,KAAA4jG,UACA,QAAAxjG,EAAAJ,KAAA4jG,UAAArhG,OAAA,EAA6CnC,GAAA,EAAQA,IACrDJ,KAAA4jG,UAAAxjG,GAAAqe,SACAze,KAAA4jG,UAAAxjG,GAAAqe,UAMAze,KAAA4jG,UAAA,KACA5jG,KAAA6jG,YAAA,KACA7jG,KAAA8jG,gBAAA,KAEA9jG,KAAAy6E,MAEAz6E,KAAAy6E,IAAAxxE,YACAjJ,KAAAy6E,IAAAxxE,WAAAwH,YAAAzQ,KAAAy6E,KAGA4iB,GAAAr9F,KAAAy6E,KACAz6E,KAAAy6E,IAAA,MAIAz6E,KAAAqzE,QAAA,MAWAwP,EAAA7gF,UAAA8kB,OAAA,WACA,OAAA9mB,KAAAqzE,SAkBAwP,EAAA7gF,UAAAsjB,QAAA,SAAAhZ,GAGA,OAFAisF,EAAA9lE,KAAA,kFAEAnmB,GAIAtM,KAAAijF,SAAAvtD,GAAA11B,KAAAijF,SAAA32E,GACAtM,KAAAijF,UAJAjjF,KAAAijF,UAeAJ,EAAA7gF,UAAAimC,GAAA,WACA,OAAAjoC,KAAAy6E,KAoBAoI,EAAA7gF,UAAAq3F,SAAA,SAAA5wF,EAAA0vB,EAAArW,GACA,OAAAu3E,GAAA5wF,EAAA0vB,EAAArW,IA2CA+gE,EAAA7gF,UAAAkiG,SAAA,SAAAld,EAAAmd,GACA,IAAAC,EAAA9hG,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,GAAA0kF,EAEApkF,EAAA5C,KAAAqzE,QAAA/vD,UAAAtjB,KAAAqzE,QAAA/vD,WACA+gF,EAAArkG,KAAAqzE,QAAAgxB,WAAArkG,KAAAqzE,QAAAgxB,YACA/gF,EAAA+gF,KAAAzhG,GACA0hG,EAAA1hG,KAAAe,MAAA,QACA4gG,EAAAF,KAAAC,GAEAE,EAAAJ,EAqBA,OAnBA9gF,KAAA0jE,GACAwd,EAAAlhF,EAAA0jE,GACKud,KAAAvd,KACLwd,EAAAD,EAAAvd,IAGAmd,IACAK,IAAArhG,QAAA,aAA0D,SAAAD,EAAA4U,GAC1D,IAAAzW,EAAA8iG,EAAArsF,EAAA,GACApI,EAAArO,EAMA,MAJA,qBAAAA,IACAqO,EAAAxM,GAGAwM,KAIA80F,GAYA3hB,EAAA7gF,UAAAyiG,UAAA,WACA,OAAAzkG,KAAA0kG,YAAA1kG,KAAAy6E,KAWAoI,EAAA7gF,UAAAyC,GAAA,WACA,OAAAzE,KAAA2jG,KAYA9gB,EAAA7gF,UAAArB,KAAA,WACA,OAAAX,KAAA67D,OAWAgnB,EAAA7gF,UAAA2iG,SAAA,WACA,OAAA3kG,KAAA4jG,WAcA/gB,EAAA7gF,UAAA4iG,aAAA,SAAAngG,GACA,OAAAzE,KAAA6jG,YAAAp/F,IAcAo+E,EAAA7gF,UAAA6iG,SAAA,SAAAlkG,GACA,GAAAA,EAMA,OAFAA,EAAA2iG,GAAA3iG,GAEAX,KAAA8jG,gBAAAnjG,IAuBAkiF,EAAA7gF,UAAA8iG,SAAA,SAAAlL,GACA,IAAAt0E,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAwV,EAAAxV,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,GAAAtC,KAAA4jG,UAAArhG,OAEAsmB,OAAA,EACAk8E,OAAA,EAGA,qBAAAnL,EAAA,CACAmL,EAAAzB,GAAA1J,GAEA,IAAAoL,EAAA1/E,EAAA2/E,gBAAAF,EAGAz/E,EAAA3kB,KAAAokG,EAIA,IAAAG,EAAAriB,EAAAC,aAAAkiB,GAEA,IAAAE,EACA,UAAA1iG,MAAA,aAAAwiG,EAAA,mBAOA,uBAAAE,EACA,YAGAr8E,EAAA,IAAAq8E,EAAAllG,KAAAqzE,SAAArzE,KAAAslB,QAIAuD,EAAA+wE,EAmBA,GAhBA55F,KAAA4jG,UAAAtlF,OAAAxG,EAAA,EAAA+Q,GAEA,oBAAAA,EAAApkB,KACAzE,KAAA6jG,YAAAh7E,EAAApkB,MAAAokB,GAKAk8E,KAAAl8E,EAAAloB,MAAA2iG,GAAAz6E,EAAAloB,QAEAokG,IACA/kG,KAAA8jG,gBAAAiB,GAAAl8E,GAKA,oBAAAA,EAAAof,IAAApf,EAAAof,KAAA,CACA,IAAAn+B,EAAA9J,KAAAykG,YAAAE,SACAQ,EAAAr7F,EAAAgO,IAAA,KAEA9X,KAAAykG,YAAA5K,aAAAhxE,EAAAof,KAAAk9D,GAIA,OAAAt8E,GAYAg6D,EAAA7gF,UAAAyO,YAAA,SAAAoY,GAKA,GAJA,kBAAAA,IACAA,EAAA7oB,KAAA6kG,SAAAh8E,IAGAA,GAAA7oB,KAAA4jG,UAAA,CAMA,IAFA,IAAAwB,GAAA,EAEAhlG,EAAAJ,KAAA4jG,UAAArhG,OAAA,EAA2CnC,GAAA,EAAQA,IACnD,GAAAJ,KAAA4jG,UAAAxjG,KAAAyoB,EAAA,CACAu8E,GAAA,EACAplG,KAAA4jG,UAAAtlF,OAAAle,EAAA,GACA,MAIA,GAAAglG,EAAA,CAIAplG,KAAA6jG,YAAAh7E,EAAApkB,MAAA,KACAzE,KAAA8jG,gBAAAj7E,EAAAloB,QAAA,KAEA,IAAA0kG,EAAAx8E,EAAAof,KAEAo9D,KAAAp8F,aAAAjJ,KAAAykG,aACAzkG,KAAAykG,YAAAh0F,YAAAoY,EAAAof,SASA46C,EAAA7gF,UAAA+hG,aAAA,WACA,IAAAjkF,EAAA9f,KAEA2kG,EAAA3kG,KAAAijF,SAAA0hB,SAEA,GAAAA,EAAA,CAEA,IAAAW,EAAAtlG,KAAAijF,SAEAsiB,EAAA,SAAA3L,GACA,IAAAj5F,EAAAi5F,EAAAj5F,KACAuvE,EAAA0pB,EAAA1pB,KAWA,QANAjjE,IAAAq4F,EAAA3kG,KACAuvE,EAAAo1B,EAAA3kG,KAKA,IAAAuvE,EAAA,EAMA,IAAAA,IACAA,MAMAA,EAAA3qD,cAAAzF,EAAAmjE,SAAA19D,cAMA,IAAAigF,EAAA1lF,EAAAglF,SAAAnkG,EAAAuvE,GAEAs1B,IACA1lF,EAAAnf,GAAA6kG,KAKAC,OAAA,EACAC,EAAA7iB,EAAAC,aAAA,QAGA2iB,EADA1qF,MAAA8O,QAAA86E,GACAA,EAEA7jG,OAAAyrB,KAAAo4E,GAGAc,EAGAnuF,OAAAxW,OAAAyrB,KAAAvsB,KAAAijF,UAAAvxD,OAAA,SAAAkoE,GACA,OAAA6L,EAAAh3D,KAAA,SAAAk3D,GACA,wBAAAA,EACA/L,IAAA+L,EAEA/L,IAAA+L,EAAAhlG,UAEOyX,IAAA,SAAAwhF,GACP,IAAAj5F,OAAA,EACAuvE,OAAA,EAUA,MARA,kBAAA0pB,GACAj5F,EAAAi5F,EACA1pB,EAAAy0B,EAAAhkG,IAAAmf,EAAAmjE,SAAAtiF,SAEAA,EAAAi5F,EAAAj5F,KACAuvE,EAAA0pB,IAGgBj5F,OAAAuvE,UACTx+C,OAAA,SAAAkoE,GAIP,IAAAn5F,EAAAoiF,EAAAC,aAAA8W,EAAA1pB,KAAA+0B,gBAAA3B,GAAA1J,EAAAj5F,OAEA,OAAAF,IAAAilG,EAAAE,OAAAnlG,KACO+rB,QAAA+4E,KAcP1iB,EAAA7gF,UAAA6jG,cAAA,WAGA,UAaAhjB,EAAA7gF,UAAAwjB,MAAA,SAAA+5D,GACA,IAAAumB,EAAAxjG,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,IAAAA,UAAA,GAEA,GAAAi9E,EAIA,OAAAv/E,KAAA+lG,cAMAD,EACAvmB,EAAAh/E,KAAAP,MAGAA,KAAAikC,WAAAs7C,EAAA,KATAv/E,KAAAgmG,YAAAhmG,KAAAgmG,qBACAhmG,KAAAgmG,YAAA38F,KAAAk2E,KAmBAsD,EAAA7gF,UAAAikG,aAAA,WACAjmG,KAAA+lG,UAAA,EAGA/lG,KAAAikC,WAAA,WACA,IAAAiiE,EAAAlmG,KAAAgmG,YAGAhmG,KAAAgmG,eAEAE,KAAA3jG,OAAA,GACA2jG,EAAA15E,QAAA,SAAA+yD,GACAA,EAAAh/E,KAAAP,OACSA,MAUTA,KAAA2W,QAAA,UACK,IAuBLksE,EAAA7gF,UAAA46F,EAAA,SAAAzD,EAAArxE,GACA,OAAA80E,GAAAzD,EAAArxE,GAAA9nB,KAAAykG,cAuBA5hB,EAAA7gF,UAAA66F,GAAA,SAAA1D,EAAArxE,GACA,OAAA+0E,GAAA1D,EAAArxE,GAAA9nB,KAAAykG,cAeA5hB,EAAA7gF,UAAA83F,SAAA,SAAAC,GACA,OAAAD,GAAA95F,KAAAy6E,IAAAsf,IAWAlX,EAAA7gF,UAAAi4F,SAAA,SAAAC,GACAD,GAAAj6F,KAAAy6E,IAAAyf,IAWArX,EAAA7gF,UAAAm4F,YAAA,SAAAC,GACAD,GAAAn6F,KAAAy6E,IAAA2f,IAgBAvX,EAAA7gF,UAAAq4F,YAAA,SAAAC,EAAAlsD,GACAisD,GAAAr6F,KAAAy6E,IAAA6f,EAAAlsD,IASAy0C,EAAA7gF,UAAAmkG,KAAA,WACAnmG,KAAAm6F,YAAA,eASAtX,EAAA7gF,UAAAokG,KAAA,WACApmG,KAAAi6F,SAAA,eAWApX,EAAA7gF,UAAAqkG,YAAA,WACArmG,KAAAi6F,SAAA,qBAWApX,EAAA7gF,UAAAskG,cAAA,WACAtmG,KAAAm6F,YAAA,qBAoBAtX,EAAA7gF,UAAA64F,aAAA,SAAAC,GACA,OAAAD,GAAA76F,KAAAy6E,IAAAqgB,IAgBAjY,EAAA7gF,UAAAw3F,aAAA,SAAAsB,EAAAz5F,GACAm4F,GAAAx5F,KAAAy6E,IAAAqgB,EAAAz5F,IAaAwhF,EAAA7gF,UAAAy4F,gBAAA,SAAAK,GACAL,GAAAz6F,KAAAy6E,IAAAqgB,IAmBAjY,EAAA7gF,UAAAiK,MAAA,SAAA8gC,EAAAw5D,GACA,OAAAvmG,KAAAwmG,UAAA,QAAAz5D,EAAAw5D,IAmBA1jB,EAAA7gF,UAAAkK,OAAA,SAAA6gC,EAAAw5D,GACA,OAAAvmG,KAAAwmG,UAAA,SAAAz5D,EAAAw5D,IAcA1jB,EAAA7gF,UAAAykG,WAAA,SAAAx6F,EAAAC,GAEAlM,KAAAiM,SAAA,GACAjM,KAAAkM,WAiCA22E,EAAA7gF,UAAAwkG,UAAA,SAAAE,EAAA35D,EAAAw5D,GACA,QAAAt5F,IAAA8/B,EA0BA,OAxBA,OAAAA,WACAA,EAAA,IAIA,QAAAA,GAAAj6B,QAAA,eAAAi6B,GAAAj6B,QAAA,MACA9S,KAAAy6E,IAAA7rE,MAAA83F,GAAA35D,EAEA/sC,KAAAy6E,IAAA7rE,MAAA83F,GADO,SAAA35D,EACP,GAEAA,EAAA,UAIAw5D,GAOAvmG,KAAA2W,QAAA,oBAQA,IAAA3W,KAAAy6E,IACA,SAIA,IAAA5rE,EAAA7O,KAAAy6E,IAAA7rE,MAAA83F,GACAC,EAAA93F,EAAAiE,QAAA,MAEA,WAAA6zF,EAEAlgG,SAAAoI,EAAAwI,MAAA,EAAAsvF,GAAA,IAMAlgG,SAAAzG,KAAAy6E,IAAA,SAAA6oB,GAAAoD,IAAA,KAgBA7jB,EAAA7gF,UAAA4kG,iBAAA,SAAAF,GACA,IAAAG,EAAA,EAEA,aAAAH,GAAA,WAAAA,EACA,UAAAlkG,MAAA,uDAGA,uBAAAmF,EAAAugC,iBAAA,CACA,IAAAswD,EAAA7wF,EAAAugC,iBAAAloC,KAAAy6E,KAEAosB,EAAArO,EAAAsO,iBAAAJ,IAAAlO,EAAAkO,GASA,GALAG,EAAAngG,WAAAmgG,GAKA,IAAAA,EAAA,CACA,IAAAE,EAAA,SAAAzD,GAAAoD,GAEAG,EAAA7mG,KAAAy6E,IAAAssB,GAGA,OAAAF,GAyBAhkB,EAAA7gF,UAAAglG,kBAAA,WACA,OACA/6F,MAAAjM,KAAA4mG,iBAAA,SACA16F,OAAAlM,KAAA4mG,iBAAA,YAYA/jB,EAAA7gF,UAAAilG,aAAA,WACA,OAAAjnG,KAAA4mG,iBAAA,UAWA/jB,EAAA7gF,UAAAklG,cAAA,WACA,OAAAlnG,KAAA4mG,iBAAA,WAQA/jB,EAAA7gF,UAAAi5F,MAAA,WACAj7F,KAAAy6E,IAAAwgB,SAQApY,EAAA7gF,UAAAmlG,KAAA,WACAnnG,KAAAy6E,IAAA0sB,QAkBAtkB,EAAA7gF,UAAAolG,cAAA,WAEA,IAAAC,EAAA,EACAC,EAAA,KAKAC,EAAA,GAGAC,EAAA,IAEAC,OAAA,EAEAznG,KAAAme,GAAA,sBAAAkM,GAEA,IAAAA,EAAAq9E,QAAAnlG,SAEA+kG,GACAnL,MAAA9xE,EAAAq9E,QAAA,GAAAvL,MACAD,MAAA7xE,EAAAq9E,QAAA,GAAAxL,OAGAmL,GAAA,IAAAx8E,MAAAuwB,UAEAqsD,GAAA,KAIAznG,KAAAme,GAAA,qBAAAkM,GAEA,GAAAA,EAAAq9E,QAAAnlG,OAAA,EACAklG,GAAA,OACO,GAAAH,EAAA,CAGP,IAAAK,EAAAt9E,EAAAq9E,QAAA,GAAAvL,MAAAmL,EAAAnL,MACAyL,EAAAv9E,EAAAq9E,QAAA,GAAAxL,MAAAoL,EAAApL,MACA2L,EAAA/6F,KAAAg7F,KAAAH,IAAAC,KAEAC,EAAAN,IACAE,GAAA,MAKA,IAAAM,EAAA,WACAN,GAAA,GAIAznG,KAAAme,GAAA,aAAA4pF,GACA/nG,KAAAme,GAAA,cAAA4pF,GAIA/nG,KAAAme,GAAA,oBAAAkM,GAGA,GAFAi9E,EAAA,MAEA,IAAAG,EAAA,CAEA,IAAAO,GAAA,IAAAn9E,MAAAuwB,UAAAisD,EAGAW,EAAAR,IAEAn9E,EAAA2zE,iBAOAh+F,KAAA2W,QAAA,YAkCAksE,EAAA7gF,UAAAiiG,oBAAA,WAEA,GAAAjkG,KAAA8mB,UAAA9mB,KAAA8mB,SAAAmhF,mBAAA,CAKA,IAAAC,EAAAtmG,GAAA5B,KAAA8mB,SAAA9mB,KAAA8mB,SAAAmhF,oBAEAE,OAAA,EAEAnoG,KAAAme,GAAA,wBACA+pF,IAIAloG,KAAAooG,cAAAD,GAEAA,EAAAnoG,KAAAqoG,YAAAH,EAAA,OAGA,IAAAI,EAAA,SAAAj+E,GACA69E,IAEAloG,KAAAooG,cAAAD,IAGAnoG,KAAAme,GAAA,YAAA+pF,GACAloG,KAAAme,GAAA,WAAAmqF,GACAtoG,KAAAme,GAAA,cAAAmqF,KAsCAzlB,EAAA7gF,UAAAiiC,WAAA,SAAAs7C,EAAAvrD,GACA,IAIAu0E,EAAAC,EAJAxyE,EAAAh2B,KAqBA,OAfAu/E,EAAA39E,GAAA5B,KAAAu/E,GAEAgpB,EAAA5gG,EAAAs8B,WAAA,WACAjO,EAAA3X,IAAA,UAAAmqF,GACAjpB,KACKvrD,GAELw0E,EAAA,WACA,OAAAxyE,EAAA+N,aAAAwkE,IAGAC,EAAAtJ,KAAA,eAAAqJ,EAEAvoG,KAAAme,GAAA,UAAAqqF,GAEAD,GAoBA1lB,EAAA7gF,UAAA+hC,aAAA,SAAAwkE,GACA5gG,EAAAo8B,aAAAwkE,GAEA,IAAAC,EAAA,aAMA,OAJAA,EAAAtJ,KAAA,eAAAqJ,EAEAvoG,KAAAqe,IAAA,UAAAmqF,GAEAD,GAyBA1lB,EAAA7gF,UAAAqmG,YAAA,SAAA9oB,EAAAkpB,GACA,IAAAlwE,EAAAv4B,KAEAu/E,EAAA39E,GAAA5B,KAAAu/E,GAEA,IAAAmpB,EAAA/gG,EAAA0gG,YAAA9oB,EAAAkpB,GAEAD,EAAA,WACA,OAAAjwE,EAAA6vE,cAAAM,IAOA,OAJAF,EAAAtJ,KAAA,gBAAAwJ,EAEA1oG,KAAAme,GAAA,UAAAqqF,GAEAE,GAoBA7lB,EAAA7gF,UAAAomG,cAAA,SAAAM,GACA/gG,EAAAygG,cAAAM,GAEA,IAAAF,EAAA,aAMA,OAJAA,EAAAtJ,KAAA,gBAAAwJ,EAEA1oG,KAAAqe,IAAA,UAAAmqF,GAEAE,GA8BA7lB,EAAA7gF,UAAA2mG,sBAAA,SAAAppB,GACA,IAIA96E,EAAA+jG,EAJAnvE,EAAAr5B,KAMA,OAAAA,KAAA4oG,cACArpB,EAAA39E,GAAA5B,KAAAu/E,GAEA96E,EAAAkD,EAAAghG,sBAAA,WACAtvE,EAAAhb,IAAA,UAAAmqF,GACAjpB,MAGAipB,EAAA,WACA,OAAAnvE,EAAAwvE,qBAAApkG,IAGA+jG,EAAAtJ,KAAA,WAAAz6F,EACAzE,KAAAme,GAAA,UAAAqqF,GAEA/jG,GAIAzE,KAAAikC,WAAAs7C,EAAA,SAqBAsD,EAAA7gF,UAAA6mG,qBAAA,SAAApkG,GACA,GAAAzE,KAAA4oG,aAAA,CACAjhG,EAAAkhG,qBAAApkG,GAEA,IAAA+jG,EAAA,aAMA,OAJAA,EAAAtJ,KAAA,WAAAz6F,EAEAzE,KAAAqe,IAAA,UAAAmqF,GAEA/jG,EAIA,OAAAzE,KAAA+jC,aAAAt/B,IAwBAo+E,EAAA2C,kBAAA,SAAA7kF,EAAAmoG,GACA,qBAAAnoG,MACA,UAAA6B,MAAA,4BAAA7B,EAAA,kCAGA,IAAA+kG,EAAA7iB,EAAAC,aAAA,QAGA8iB,EAAAF,KAAAE,OAAAkD,GACAC,EAAAlmB,IAAAimB,GAAAjmB,EAAA7gF,UAAAgnG,cAAAF,EAAA9mG,WAEA,GAAA4jG,IAAAmD,EAAA,CACA,IAAAE,OAAA,EAQA,MALAA,EADArD,EACA,qDAEA,+BAGA,IAAApjG,MAAA,uBAAA7B,EAAA,MAAyDsoG,EAAA,KAGzDtoG,EAAA2iG,GAAA3iG,GAEAkiF,EAAAqmB,cACArmB,EAAAqmB,gBAGA,IAAAC,EAAAtmB,EAAAC,aAAA,UAEA,cAAAniF,GAAAwoG,KAAAhlB,QAAA,CACA,IAAAA,EAAAglB,EAAAhlB,QACAilB,EAAAtoG,OAAAyrB,KAAA43D,GAMA,GAAAA,GAAAilB,EAAA7mG,OAAA,GAAA6mG,EAAAhxF,IAAA,SAAAixF,GACA,OAAAllB,EAAAklB,KACO9qB,MAAA+qB,SACP,UAAA9mG,MAAA,oEAMA,OAFAqgF,EAAAqmB,YAAAvoG,GAAAmoG,EAEAA,GAmBAjmB,EAAAC,aAAA,SAAAniF,GACA,GAAAA,EAMA,OAFAA,EAAA2iG,GAAA3iG,GAEAkiF,EAAAqmB,aAAArmB,EAAAqmB,YAAAvoG,GACAkiF,EAAAqmB,YAAAvoG,QADA,GAKAkiF,EA7lDA,GAiqDA,SAAA0mB,GAAAC,EAAA1xF,EAAA2xF,GACA,qBAAA3xF,KAAA,GAAAA,EAAA2xF,EACA,UAAAjnG,MAAA,sBAAAgnG,EAAA,0CAAA1xF,EAAA,wCAAA2xF,EAAA,MA2BA,SAAAC,GAAAF,EAAAG,EAAAr8E,EAAAs8E,GAEA,OADAL,GAAAC,EAAAI,EAAAt8E,EAAA/qB,OAAA,GACA+qB,EAAAs8E,GAAAD,GASA,SAAAE,GAAAv8E,GACA,YAAArgB,IAAAqgB,GAAA,IAAAA,EAAA/qB,QAEAA,OAAA,EACAiD,MAAA,WACA,UAAAhD,MAAA,oCAEAmD,IAAA,WACA,UAAAnD,MAAA,sCAKAD,OAAA+qB,EAAA/qB,OACAiD,MAAAkkG,GAAA9nG,KAAA,eAAA0rB,GACA3nB,IAAA+jG,GAAA9nG,KAAA,aAAA0rB,IAeA,SAAAkH,GAAAhvB,EAAAG,GACA,OAAAoV,MAAA8O,QAAArkB,GACAqkG,GAAArkG,QACGyH,IAAAzH,QAAAyH,IAAAtH,EACHkkG,KAEAA,KAAArkG,EAAAG,KAmBA,SAAAmkG,GAAApxE,EAAA7W,GACA,IAAAkoF,EAAA,EACAvkG,OAAA,EACAG,OAAA,EAEA,IAAAkc,EACA,SAGA6W,KAAAn2B,SACAm2B,EAAAlE,GAAA,MAGA,QAAAp0B,EAAA,EAAiBA,EAAAs4B,EAAAn2B,OAAqBnC,IACtCoF,EAAAkzB,EAAAlzB,MAAApF,GACAuF,EAAA+yB,EAAA/yB,IAAAvF,GAGAuF,EAAAkc,IACAlc,EAAAkc,GAGAkoF,GAAApkG,EAAAH,EAGA,OAAAukG,EAAAloF,EA/KAghE,GAAA7gF,UAAA4mG,aAAA,oBAAAjhG,EAAAghG,uBAAA,oBAAAhhG,EAAAkhG,qBAEAhmB,GAAA2C,kBAAA,YAAA3C,IA6MA,IAjBA,IAAAmnB,MAGAC,KAAA,oHAEA,wJAEA,gKAEA,wIAEA,gIAEAC,GAAAD,GAAA,GACAE,QAAA,EAGA/pG,GAAA,EAAeA,GAAA6pG,GAAA1nG,OAAmBnC,KAElC,GAAA6pG,GAAA7pG,IAAA,KAAAsI,EAAA,CACAyhG,GAAAF,GAAA7pG,IACA,MAKA,GAAA+pG,GACA,QAAA1gF,GAAA,EAAkBA,GAAA0gF,GAAA5nG,OAAwBknB,KAC1CugF,GAAAE,GAAAzgF,KAAA0gF,GAAA1gF,IAwBA,SAAA2gF,GAAA/oG,GAIA,GAAAA,aAAA+oG,GACA,OAAA/oG,EAGA,kBAAAA,EACArB,KAAA4C,KAAAvB,EACG,kBAAAA,EAEHrB,KAAA2C,QAAAtB,EACGmoF,EAAAnoF,KAIH,kBAAAA,EAAAuB,OACA5C,KAAA4C,KAAAvB,EAAAuB,MAGAkc,EAAA9e,KAAAqB,IAGArB,KAAA2C,UACA3C,KAAA2C,QAAAynG,GAAAC,gBAAArqG,KAAA4C,OAAA,IASAwnG,GAAApoG,UAAAY,KAAA,EAQAwnG,GAAApoG,UAAAW,QAAA,GAWAynG,GAAApoG,UAAAw+B,OAAA,KAeA4pE,GAAAE,YAAA,mIAQAF,GAAAC,iBACAp/E,EAAA,iCACAe,EAAA,8DACAuB,EAAA,8HACAQ,EAAA,qHACAQ,EAAA,qEAKA,QAAAg8E,GAAA,EAAoBA,GAAAH,GAAAE,WAAA/nG,OAAuCgoG,KAC3DH,MAAAE,WAAAC,QAEAH,GAAApoG,UAAAooG,GAAAE,WAAAC,QAYA,SAAAC,GAAAnpG,GACA,YAAA4L,IAAA5L,GAAA,OAAAA,GAAA,oBAAAA,EAAAw4B,KAYA,SAAA4wE,GAAAppG,GACAmpG,GAAAnpG,IACAA,EAAAw4B,KAAA,cAAA7xB,MAsBA,IAAA0iG,GAAA,SAAArgG,GACA,IAAAqF,GAAA,+EAAAgI,OAAA,SAAA86E,EAAA7jF,EAAAvO,GAMA,OAJAiK,EAAAsE,KACA6jF,EAAA7jF,GAAAtE,EAAAsE,IAGA6jF,IAEAliF,KAAAjG,EAAAiG,MAAAyK,MAAA/Y,UAAAoW,IAAA7X,KAAA8J,EAAAiG,KAAA,SAAAtM,GACA,OACA+B,UAAA/B,EAAA+B,UACAE,QAAAjC,EAAAiC,QACA4D,KAAA7F,EAAA6F,KACApF,GAAAT,EAAAS,QAKA,OAAAiL,GAeAi7F,GAAA,SAAAx3E,GAEA,IAAAy3E,EAAAz3E,EAAA0pE,GAAA,SAEAgO,EAAA9vF,MAAA/Y,UAAAoW,IAAA7X,KAAAqqG,EAAA,SAAAtpG,GACA,OAAAA,EAAA+I,QAEA0zB,EAAAhjB,MAAA/Y,UAAAoW,IAAA7X,KAAAqqG,EAAA,SAAAE,GACA,IAAAnW,EAAA+V,GAAAI,EAAAzgG,OAKA,OAHAygG,EAAAzkF,MACAsuE,EAAAtuE,IAAAykF,EAAAzkF,KAEAsuE,IAGA,OAAA52D,EAAAzmB,OAAAyD,MAAA/Y,UAAA0vB,OAAAnxB,KAAA4yB,EAAAmgD,aAAA,SAAAjpE,GACA,WAAAwgG,EAAA/3F,QAAAzI,KACG+N,IAAAsyF,MAcHK,GAAA,SAAApW,EAAAxhE,GAWA,OAVAwhE,EAAAnoE,QAAA,SAAAniB,GACA,IAAA2gG,EAAA73E,EAAAyB,mBAAAvqB,UAEAA,EAAAgc,KAAAhc,EAAAiG,MACAjG,EAAAiG,KAAAkc,QAAA,SAAAxoB,GACA,OAAAgnG,EAAAt/E,OAAA1nB,OAKAmvB,EAAAmgD,cAGA23B,IAA0BN,oBAAAI,oBAAAL,iBAK1BQ,GAAA,mBACAC,GAAA,GAYAC,GAAA,SAAApoB,GAmCA,SAAAooB,EAAAtkF,EAAAxB,GACAwxE,EAAA92F,KAAAorG,GAEA,IAAAtrF,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAxB,IAwBA,OAtBAxF,EAAAurF,QAAAvrF,EAAAwrF,eAAAxrF,EAAAyrF,gBAAA,EAEAzrF,EAAA0rF,WAAA1rF,EAAAmjE,SAAAwoB,aACA3rF,EAAAm+C,QAAAn+C,EAAAmjE,SAAAhlB,SAKAn+C,EAAA4kF,WAAArL,GAAA,OACAjwF,UAAA8hG,GAAA,aAEAhjB,KAAA,aAGApoE,EAAA4rF,QAAArS,GAAA,KACAjwF,UAAA8hG,GAAA,gCACAzmG,GAAAqb,EAAAmoB,KAAA4yD,aAAA,sBAGA5wF,GAAA6V,EAAA4rF,QAAA5rF,EAAAqhD,eACArhD,EAAA26D,IAAA3xE,YAAAgX,EAAA4rF,SACA5rF,EAAA26D,IAAA3xE,YAAAgX,EAAA4kF,YACA5kF,EAidA,OA9gBAi3E,EAAAqU,EAAApoB,GAwEAooB,EAAAppG,UAAAq3F,SAAA,WACA,OAAArW,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAApJ,KAAA6lG,gBACA8F,UAAA,IAEAC,mBAAA5rG,KAAAyE,KAAA,eACAonG,cAAA,OACAC,aAAA9rG,KAAA80B,QACAozD,KAAA,YAIAkjB,EAAAppG,UAAAyc,QAAA,WACAze,KAAA0kG,WAAA,KACA1kG,KAAA0rG,QAAA,KACA1rG,KAAA+rG,oBAAA,KAEA/oB,EAAAhhF,UAAAyc,QAAAle,KAAAP,OAWAorG,EAAAppG,UAAA6jG,cAAA,WACA,OAAAqF,GAAA,eAAAloB,EAAAhhF,UAAA6jG,cAAAtlG,KAAAP,OAcAorG,EAAAppG,UAAAgqG,eAAA,SAAAhkG,GACAA,EAAA82F,QAAAqM,IAAAnrG,KAAAwrG,aACAxrG,KAAAisG,SAYAb,EAAAppG,UAAA8yB,MAAA,WACA,OAAA90B,KAAAkkG,SAAAlkG,KAAAijF,SAAAnuD,OAAA,iBAYAs2E,EAAAppG,UAAAm/D,YAAA,WACA,IAAAryC,EAAA9uB,KAAAijF,SAAA9hB,aAAAnhE,KAAAkkG,SAAA,2BAOA,OAJAlkG,KAAAwrG,cACA18E,GAAA,IAAA9uB,KAAAkkG,SAAA,wFAGAp1E,GAWAs8E,EAAAppG,UAAAg6E,KAAA,WACA,IAAAh8E,KAAAqrG,QAAA,CACA,IAAAvkF,EAAA9mB,KAAA8mB,SAQA9mB,KAAA2W,QAAA,mBACA3W,KAAAqrG,SAAA,GAIArrG,KAAAijF,SAAAipB,aAAAlsG,KAAAsrG,iBAAAtrG,KAAAurG,iBACAvrG,KAAAmsG,OAKAnsG,KAAAosG,aAAAtlF,EAAAwQ,SAEAt3B,KAAAijF,SAAAopB,aAAArsG,KAAAosG,aACAtlF,EAAA+Q,QAGA73B,KAAAwrG,aACAxrG,KAAAme,GAAAne,KAAAy6E,IAAAglB,cAAA,UAAA79F,GAAA5B,UAAAgsG,iBAIAhsG,KAAAssG,aAAAxlF,EAAAylF,WACAzlF,EAAAylF,UAAA,GAEAvsG,KAAAmmG,OACAnmG,KAAAwsG,oBACAxsG,KAAAioC,KAAAuxD,aAAA,uBAQAx5F,KAAA2W,QAAA,aACA3W,KAAAsrG,gBAAA,IAeAF,EAAAppG,UAAAyqG,OAAA,SAAAprG,GAIA,MAHA,mBAAAA,GACArB,KAAAqB,EAAA,kBAEArB,KAAAqrG,SAYAD,EAAAppG,UAAAiqG,MAAA,WACA,GAAAjsG,KAAAqrG,QAAA,CAGA,IAAAvkF,EAAA9mB,KAAA8mB,SAQA9mB,KAAA2W,QAAA,oBACA3W,KAAAqrG,SAAA,EAEArrG,KAAAosG,aAAApsG,KAAAijF,SAAAopB,aACAvlF,EAAA8S,OAGA55B,KAAAwrG,aACAxrG,KAAAqe,IAAAre,KAAAy6E,IAAAglB,cAAA,UAAA79F,GAAA5B,UAAAgsG,iBAGAhsG,KAAAssG,cACAxlF,EAAAylF,UAAA,GAGAvsG,KAAAomG,OACApmG,KAAAioC,KAAAuxD,aAAA,sBAQAx5F,KAAA2W,QAAA,cACA3W,KAAA0sG,mBAEA1sG,KAAAijF,SAAA0pB,WACA3sG,KAAAye,YAeA2sF,EAAAppG,UAAAwpG,UAAA,SAAAnqG,GACA,sBAAAA,EAAA,CACA,IAAAmqG,EAAAxrG,KAAA4sG,aAAAvrG,EACA4qG,EAAAjsG,KAAA6kG,SAAA,eAGA,GAAA2G,IAAAS,EAAA,CAIA,IAAA9+D,EAAAntC,KAAA0kG,WAEA1kG,KAAA0kG,WAAA1kG,KAAAy6E,IACAwxB,EAAAjsG,KAAA8kG,SAAA,eAA8C+H,YAAA,uBAC9C7sG,KAAA0kG,WAAAv3D,EACAntC,KAAAme,GAAA8tF,EAAA,QAAAjsG,KAAAisG,QAIAT,GAAAS,IACAjsG,KAAAqe,IAAA4tF,EAAA,QAAAjsG,KAAAisG,OACAjsG,KAAAyQ,YAAAw7F,GACAA,EAAAxtF,WAGA,OAAAze,KAAA4sG,YASAxB,EAAAppG,UAAAmqG,KAAA,WACAnsG,KAAA8sG,SAAA9sG,KAAAi+D,YAeAmtC,EAAAppG,UAAA8qG,SAAA,SAAA7uC,GACA,IAAAwmC,EAAAzkG,KAAAykG,YACAsI,EAAAtI,EAAAx7F,WACA+jG,EAAAvI,EAAAwI,YAQAjtG,KAAA2W,QAAA,mBACA3W,KAAAurG,gBAAA,EAIAwB,EAAAt8F,YAAAg0F,GACAzkG,KAAAs+C,QACAk+C,GAAAiI,EAAAxmC,GAOAj+D,KAAA2W,QAAA,aAGAq2F,EACAD,EAAAlT,aAAA4K,EAAAuI,GAEAD,EAAAjkG,YAAA27F,GAIA,IAAAyI,EAAAltG,KAAA6kG,SAAA,eAEAqI,GACAH,EAAAjkG,YAAAokG,EAAAzyB,MAYA2wB,EAAAppG,UAAAs8C,MAAA,WAOAt+C,KAAA2W,QAAA,oBACA2lF,GAAAt8F,KAAAykG,aAQAzkG,KAAA2W,QAAA,eAoBAy0F,EAAAppG,UAAAi8D,QAAA,SAAA58D,GAIA,MAHA,qBAAAA,IACArB,KAAAmtG,SAAA9rG,GAEArB,KAAAmtG,UAUA/B,EAAAppG,UAAAwqG,kBAAA,WACA,IAAAY,EAAA1kG,EAAA2kG,cACAC,EAAAttG,KAAAqzE,QAAAoH,IAEAz6E,KAAA+rG,oBAAA,MAEAuB,EAAAxpB,SAAAspB,IAAAE,IAAAF,KACAptG,KAAA+rG,oBAAAqB,EAEAptG,KAAAi7F,QAEAj7F,KAAAme,GAAAzV,EAAA,UAAA1I,KAAAutG,iBAWAnC,EAAAppG,UAAA0qG,iBAAA,WACA1sG,KAAA+rG,sBACA/rG,KAAA+rG,oBAAA9Q,QACAj7F,KAAA+rG,oBAAA,MAGA/rG,KAAAqe,IAAA3V,EAAA,UAAA1I,KAAAutG,gBAUAnC,EAAAppG,UAAAurG,cAAA,SAAAljF,GAEA,OAAAA,EAAAy0E,MAAA,CAQA,IAJA,IAAA0O,EAAAxtG,KAAAytG,gBACAL,EAAAptG,KAAAy6E,IAAAH,cAAA,UACAozB,OAAA,EAEAttG,EAAA,EAAmBA,EAAAotG,EAAAjrG,OAAyBnC,IAC5C,GAAAgtG,IAAAI,EAAAptG,GAAA,CACAstG,EAAAttG,EACA,MAIAsI,EAAA2kG,gBAAArtG,KAAAy6E,MACAizB,EAAA,GAGArjF,EAAAsjF,UAAA,IAAAD,GACAF,IAAAjrG,OAAA,GAAA04F,QACA5wE,EAAA2zE,kBACK3zE,EAAAsjF,UAAAD,IAAAF,EAAAjrG,OAAA,IACLirG,EAAA,GAAAvS,QACA5wE,EAAA2zE,oBAWAoN,EAAAppG,UAAAyrG,cAAA,WACA,IAAAG,EAAA5tG,KAAAy6E,IAAAozB,iBAAA,KAEA,OAAA9yF,MAAA/Y,UAAA0vB,OAAAnxB,KAAAqtG,EAAA,SAAAhU,GACA,OAAAA,aAAAjyF,EAAAmmG,mBAAAlU,aAAAjyF,EAAAomG,kBAAAnU,EAAA7uD,aAAA,UAAA6uD,aAAAjyF,EAAAqmG,kBAAApU,aAAAjyF,EAAAsmG,mBAAArU,aAAAjyF,EAAAumG,qBAAAtU,aAAAjyF,EAAAwmG,qBAAAvU,EAAA7uD,aAAA,aAAA6uD,aAAAjyF,EAAAymG,mBAAAxU,aAAAjyF,EAAA0mG,mBAAAzU,aAAAjyF,EAAA2mG,kBAAA1U,EAAA7uD,aAAA,kBAAA6uD,EAAAiB,aAAA,aAAAjB,EAAA7uD,aAAA,sBAIAqgE,EA/gBA,CAghBCvoB,IAUDuoB,GAAAppG,UAAAihF,UACAopB,aAAA,EACAM,WAAA,GAGA9pB,GAAA2C,kBAAA,cAAA4lB,IAYA,IAAAmD,GAAA,SAAA7nE,GAcA,SAAA6nE,IACA,IAEAhwD,EAFAxgB,EAAAz7B,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAIA4uD,EAAA5uD,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,QACAw0F,EAAA92F,KAAAuuG,GAEA,IAAAzuF,EAAAk3E,EAAAh3F,KAAA0mC,EAAAnmC,KAAAP,OAEA,IAAAkxD,IACAA,EAAApxC,EACAu2E,GAEA,QAAA1nF,KADAuiD,EAAAxoD,EAAAJ,cAAA,UACAimG,EAAAvsG,UACA,gBAAA2M,IACAuiD,EAAAviD,GAAA4/F,EAAAvsG,UAAA2M,IAMAuiD,EAAAs9C,WAQA1tG,OAAAC,eAAAmwD,EAAA,UACAjwD,IAAA,WACA,OAAAjB,KAAAwuG,QAAAjsG,UAIA,QAAAnC,EAAA,EAAmBA,EAAA29B,EAAAx7B,OAAmBnC,IACtC8wD,EAAApyB,SAAAf,EAAA39B,IAKA,OAAAm+C,EAAA2S,EAAA8lC,EAAAl3E,EAAAy+B,GA+GA,OAtKAw4C,EAAAwX,EAAA7nE,GAoEA6nE,EAAAvsG,UAAA88B,SAAA,SAAAz0B,GACA,IAAAyN,EAAA9X,KAAAwuG,QAAAjsG,OAEA,GAAAuV,KAAA9X,MACAc,OAAAC,eAAAf,KAAA8X,GACA7W,IAAA,WACA,OAAAjB,KAAAwuG,QAAA12F,OAMA,IAAA9X,KAAAwuG,QAAA17F,QAAAzI,KACArK,KAAAwuG,QAAAnlG,KAAAgB,GASArK,KAAA2W,SACAtM,QACA9B,KAAA,eAeAgmG,EAAAvsG,UAAAysG,YAAA,SAAAC,GAGA,IAFA,IAAArkG,OAAA,EAEAjK,EAAA,EAAAC,EAAAL,KAAAuC,OAAoCnC,EAAAC,EAAOD,IAC3C,GAAAJ,KAAAI,KAAAsuG,EAAA,CACArkG,EAAArK,KAAAI,GACAiK,EAAAgU,KACAhU,EAAAgU,MAGAre,KAAAwuG,QAAAlwF,OAAAle,EAAA,GAEA,MAIAiK,GAYArK,KAAA2W,SACAtM,QACA9B,KAAA,iBAcAgmG,EAAAvsG,UAAAuxE,aAAA,SAAA9uE,GAGA,IAFA,IAAAqD,EAAA,KAEA1H,EAAA,EAAAC,EAAAL,KAAAuC,OAAoCnC,EAAAC,EAAOD,IAAA,CAC3C,IAAAiK,EAAArK,KAAAI,GAEA,GAAAiK,EAAA5F,OAAA,CACAqD,EAAAuC,EACA,OAIA,OAAAvC,GAGAymG,EAvKA,CAwKCvyE,IAwBD,QAAA3R,MAPAkkF,GAAAvsG,UAAAu/F,gBACAoN,OAAA,SACAC,SAAA,WACAC,YAAA,eAIAN,GAAAvsG,UAAAu/F,eACAgN,GAAAvsG,UAAA,KAAAqoB,IAAA,KAkBA,IAAAykF,GAAA,SAAA59C,EAAA7mD,GACA,QAAAjK,EAAA,EAAiBA,EAAA8wD,EAAA3uD,OAAiBnC,IAClCU,OAAAyrB,KAAA2kC,EAAA9wD,IAAAmC,QAAA8H,EAAA5F,KAAAysD,EAAA9wD,GAAAqE,KAIAysD,EAAA9wD,GAAA69B,SAAA,IAWA8wE,GAAA,SAAAC,GASA,SAAAD,IACA,IAAAjvF,EAAAy+B,EAEAxgB,EAAAz7B,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAw0F,EAAA92F,KAAA+uG,GAMA,IAJA,IAAA79C,OAAA,EAIA9wD,EAAA29B,EAAAx7B,OAAA,EAAmCnC,GAAA,EAAQA,IAC3C,GAAA29B,EAAA39B,GAAA69B,QAAA,CACA6wE,GAAA/wE,IAAA39B,IACA,MAMA,GAAAi2F,EAAA,CAEA,QAAA1nF,KADAuiD,EAAAxoD,EAAAJ,cAAA,UACAimG,GAAAvsG,UACA,gBAAA2M,IACAuiD,EAAAviD,GAAA4/F,GAAAvsG,UAAA2M,IAGA,QAAAsgG,KAAAF,EAAA/sG,UACA,gBAAAitG,IACA/9C,EAAA+9C,GAAAF,EAAA/sG,UAAAitG,IAQA,OAHAnvF,EAAAk3E,EAAAh3F,KAAAgvG,EAAAzuG,KAAAP,KAAA+9B,EAAAmzB,MAAApxC,EACAoxC,EAAAg+C,WAAA,EAEA3wD,EAAA2S,EAAA8lC,EAAAl3E,EAAAy+B,GA4CA,OAxFAw4C,EAAAgY,EAAAC,GAyDAD,EAAA/sG,UAAA88B,SAAA,SAAAz0B,GACA,IAAA2rB,EAAAh2B,KAEAqK,EAAA4zB,SACA6wE,GAAA9uG,KAAAqK,GAGA2kG,EAAAhtG,UAAA88B,SAAAv+B,KAAAP,KAAAqK,GAEAA,EAAAgqB,kBAQAhqB,EAAAgqB,iBAAA,2BAIA2B,EAAAk5E,YAGAl5E,EAAAk5E,WAAA,EACAJ,GAAA94E,EAAA3rB,GACA2rB,EAAAk5E,WAAA,EACAl5E,EAAArf,QAAA,cAIAo4F,EAzFA,CA0FCR,IAgBDY,GAAA,SAAAj+C,EAAA7mD,GACA,QAAAjK,EAAA,EAAiBA,EAAA8wD,EAAA3uD,OAAiBnC,IAClCU,OAAAyrB,KAAA2kC,EAAA9wD,IAAAmC,QAAA8H,EAAA5F,KAAAysD,EAAA9wD,GAAAqE,KAIAysD,EAAA9wD,GAAAgvG,UAAA,IAWAC,GAAA,SAAAL,GASA,SAAAK,IACA,IAAAvvF,EAAAy+B,EAEAxgB,EAAAz7B,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAw0F,EAAA92F,KAAAqvG,GAMA,IAJA,IAAAn+C,OAAA,EAIA9wD,EAAA29B,EAAAx7B,OAAA,EAAmCnC,GAAA,EAAQA,IAC3C,GAAA29B,EAAA39B,GAAAgvG,SAAA,CACAD,GAAApxE,IAAA39B,IACA,MAMA,GAAAi2F,EAAA,CAEA,QAAA1nF,KADAuiD,EAAAxoD,EAAAJ,cAAA,UACAimG,GAAAvsG,UACA,gBAAA2M,IACAuiD,EAAAviD,GAAA4/F,GAAAvsG,UAAA2M,IAGA,QAAAsgG,KAAAI,EAAArtG,UACA,gBAAAitG,IACA/9C,EAAA+9C,GAAAI,EAAArtG,UAAAitG,IAwBA,OAnBAnvF,EAAAk3E,EAAAh3F,KAAAgvG,EAAAzuG,KAAAP,KAAA+9B,EAAAmzB,MAAApxC,EACAoxC,EAAAg+C,WAAA,EAMApuG,OAAAC,eAAAmwD,EAAA,iBACAjwD,IAAA,WACA,QAAAwoB,EAAA,EAAwBA,EAAAzpB,KAAAuC,OAAkBknB,IAC1C,GAAAzpB,KAAAypB,GAAA2lF,SACA,OAAA3lF,EAGA,UAEA/kB,IAAA,eAGA65C,EAAA2S,EAAA8lC,EAAAl3E,EAAAy+B,GAyCA,OArGAw4C,EAAAsY,EAAAL,GAyEAK,EAAArtG,UAAA88B,SAAA,SAAAz0B,GACA,IAAA2rB,EAAAh2B,KAEAqK,EAAA+kG,UACAD,GAAAnvG,KAAAqK,GAGA2kG,EAAAhtG,UAAA88B,SAAAv+B,KAAAP,KAAAqK,GAEAA,EAAAgqB,kBAQAhqB,EAAAgqB,iBAAA,4BACA2B,EAAAk5E,YAGAl5E,EAAAk5E,WAAA,EACAC,GAAAn5E,EAAA3rB,GACA2rB,EAAAk5E,WAAA,EACAl5E,EAAArf,QAAA,cAIA04F,EAtGA,CAuGCd,IAYDe,GAAA,SAAAN,GASA,SAAAM,IACA,IAAAxvF,EAAAy+B,EAEAxgB,EAAAz7B,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAw0F,EAAA92F,KAAAsvG,GAEA,IAAAp+C,OAAA,EAIA,GAAAmlC,EAAA,CAEA,QAAA1nF,KADAuiD,EAAAxoD,EAAAJ,cAAA,UACAimG,GAAAvsG,UACA,gBAAA2M,IACAuiD,EAAAviD,GAAA4/F,GAAAvsG,UAAA2M,IAGA,QAAAsgG,KAAAK,EAAAttG,UACA,gBAAAitG,IACA/9C,EAAA+9C,GAAAK,EAAAttG,UAAAitG,IAMA,OADAnvF,EAAAk3E,EAAAh3F,KAAAgvG,EAAAzuG,KAAAP,KAAA+9B,EAAAmzB,MAAApxC,EACAy+B,EAAA2S,EAAA8lC,EAAAl3E,EAAAy+B,GAiCA,OAlEAw4C,EAAAuY,EAAAN,GA8CAM,EAAAttG,UAAA88B,SAAA,SAAAz0B,GACA2kG,EAAAhtG,UAAA88B,SAAAv+B,KAAAP,KAAAqK,GAMAA,EAAAgqB,iBAAA,aAAAzyB,GAAA5B,KAAA,WACAA,KAAA2W,QAAA,aAGA,IAAA44F,GAAA,wBAEA,IAAAA,EAAAz8F,QAAAzI,EAAAwqB,OACAxqB,EAAAgqB,iBAAA,aAAAzyB,GAAA5B,KAAA,WACAA,KAAA2W,QAAA,8BAKA24F,EAnEA,CAoECf,IAUDiB,GAAA,WAQA,SAAAA,IACA,IAAAC,EAAAntG,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAw0F,EAAA92F,KAAAwvG,GAEA,IAAAt+C,EAAAlxD,KAEA,GAAAq2F,EAGA,QAAA1nF,KAFAuiD,EAAAxoD,EAAAJ,cAAA,UAEAknG,EAAAxtG,UACA,gBAAA2M,IACAuiD,EAAAviD,GAAA6gG,EAAAxtG,UAAA2M,IAKAuiD,EAAAw+C,kBAQA5uG,OAAAC,eAAAmwD,EAAA,UACAjwD,IAAA,WACA,OAAAjB,KAAA0vG,eAAAntG,UAIA,QAAAnC,EAAA,EAAAmC,EAAAktG,EAAAltG,OAAkDnC,EAAAmC,EAAYnC,IAC9D8wD,EAAAy+C,iBAAAF,EAAArvG,IAGA,GAAAi2F,EACA,OAAAnlC,EA+EA,OAjEAs+C,EAAAxtG,UAAA2tG,iBAAA,SAAAC,GACA,IAAA93F,EAAA9X,KAAA0vG,eAAAntG,OAEA,GAAAuV,KAAA9X,MACAc,OAAAC,eAAAf,KAAA8X,GACA7W,IAAA,WACA,OAAAjB,KAAA0vG,eAAA53F,OAMA,IAAA9X,KAAA0vG,eAAA58F,QAAA88F,IACA5vG,KAAA0vG,eAAArmG,KAAAumG,IAkBAJ,EAAAxtG,UAAA6tG,wBAAA,SAAAxlG,GAGA,IAFA,IAAAylG,OAAA,EAEA1vG,EAAA,EAAAmC,EAAAvC,KAAA0vG,eAAAntG,OAAwDnC,EAAAmC,EAAYnC,IACpE,GAAAiK,IAAArK,KAAA0vG,eAAAtvG,GAAAiK,MAAA,CACAylG,EAAA9vG,KAAA0vG,eAAAtvG,GAEA,MAIA,OAAA0vG,GAaAN,EAAAxtG,UAAA+tG,oBAAA,SAAAH,GACA,QAAAxvG,EAAA,EAAAmC,EAAAvC,KAAA0vG,eAAAntG,OAAwDnC,EAAAmC,EAAYnC,IACpE,GAAAwvG,IAAA5vG,KAAA0vG,eAAAtvG,GAAA,CACAJ,KAAA0vG,eAAApxF,OAAAle,EAAA,GAEA,QAKAovG,EA1HA,GAwJAQ,GAAA,WAQA,SAAAA,EAAA1/F,GACAwmF,EAAA92F,KAAAgwG,GAEA,IAAA9+C,EAAAlxD,KAEA,GAAAq2F,EAGA,QAAA1nF,KAFAuiD,EAAAxoD,EAAAJ,cAAA,UAEA0nG,EAAAhuG,UACA,gBAAA2M,IACAuiD,EAAAviD,GAAAqhG,EAAAhuG,UAAA2M,IAmBA,GAdAqhG,EAAAhuG,UAAAiuG,SAAA1vG,KAAA2wD,EAAA5gD,GAQAxP,OAAAC,eAAAmwD,EAAA,UACAjwD,IAAA,WACA,OAAAjB,KAAAkwG,WAIA7Z,EACA,OAAAnlC,EAoEA,OArDA8+C,EAAAhuG,UAAAiuG,SAAA,SAAA3/F,GACA,IAAA6/F,EAAAnwG,KAAAuC,QAAA,EACAnC,EAAA,EACAC,EAAAiQ,EAAA/N,OAEAvC,KAAAowG,MAAA9/F,EACAtQ,KAAAkwG,QAAA5/F,EAAA/N,OAEA,IAAA8tG,EAAA,SAAAv4F,GACA,GAAAA,KAAA9X,MACAc,OAAAC,eAAAf,KAAA,GAAA8X,GACA7W,IAAA,WACA,OAAAjB,KAAAowG,MAAAt4F,OAMA,GAAAq4F,EAAA9vG,EAGA,IAFAD,EAAA+vG,EAEY/vG,EAAAC,EAAOD,IACnBiwG,EAAA9vG,KAAAP,KAAAI,IAgBA4vG,EAAAhuG,UAAAsuG,WAAA,SAAA7rG,GAGA,IAFA,IAAAqD,EAAA,KAEA1H,EAAA,EAAAC,EAAAL,KAAAuC,OAAoCnC,EAAAC,EAAOD,IAAA,CAC3C,IAAA4D,EAAAhE,KAAAI,GAEA,GAAA4D,EAAAS,OAAA,CACAqD,EAAA9D,EACA,OAIA,OAAA8D,GAGAkoG,EA1GA,GAwHAO,IACAC,YAAA,cACAnjD,SAAA,WACA/2B,KAAA,OACAm6E,KAAA,OACAC,UAAA,YACAC,WAAA,cAUAC,IACAJ,YAAA,cACAK,aAAA,eACAv6E,KAAA,OACAw6E,YAAA,YACAC,YAAA,cACAJ,WAAA,cAUAK,IACAN,UAAA,YACArjD,SAAA,WACAwjD,aAAA,eACAI,SAAA,WACA1jD,SAAA,YAUA2jD,IACAtjE,SAAA,WACAujE,OAAA,SACAC,QAAA,WAiBAC,GAAA,SAAA3qE,GAuBA,SAAA2qE,IACA,IAAA9yD,EAEAj5B,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAw0F,EAAA92F,KAAAqxG,GAEA,IAAAvxF,EAAAk3E,EAAAh3F,KAAA0mC,EAAAnmC,KAAAP,OAEAqK,EAAAyV,EAEA,GAAAu2E,EAEA,QAAA1nF,KADAtE,EAAA3B,EAAAJ,cAAA,UACA+oG,EAAArvG,UACA,gBAAA2M,IACAtE,EAAAsE,GAAA0iG,EAAArvG,UAAA2M,IAKA,IAAA2iG,GACA7sG,GAAA6gB,EAAA7gB,IAAA,aAAAu4F,KACAnoE,KAAAvP,EAAAuP,MAAA,GACAC,MAAAxP,EAAAwP,OAAA,GACAxR,SAAAgC,EAAAhC,UAAA,IAwCA05D,EAAA,SAAAr7E,GACAb,OAAAC,eAAAsJ,EAAA1I,GACAV,IAAA,WACA,OAAAqwG,EAAA3vG,IAEA+C,IAAA,gBAIA,QAAA/C,KAAA2vG,EACAt0B,EAAAr7E,GAGA,OAAA48C,EAAAl0C,EAAA2sF,EAAAl3E,EAAAy+B,GAGA,OArGAw4C,EAAAsa,EAAA3qE,GAqGA2qE,EAtGA,CAuGCr1E,IAwCDu1E,GAAA,SAAAr+E,GACA,IAAA5Z,GAAA,gEAGA/S,EAAAmC,EAAAJ,cAAA,KAEA/B,EAAAmhC,KAAAxU,EAKA,IAAAs+E,EAAA,KAAAjrG,EAAAkrG,MAAA,UAAAlrG,EAAAmrG,SACAjmG,OAAA,EAEA+lG,IACA/lG,EAAA/C,EAAAJ,cAAA,OACAmD,EAAAkmG,UAAA,YAAAz+E,EAAA,SACA3sB,EAAAkF,EAAA+E,WAEA/E,EAAA+tF,aAAA,4CACA9wF,EAAAsyF,KAAAlyF,YAAA2C,IAQA,IAFA,IAAAmmG,KAEAxxG,EAAA,EAAiBA,EAAAkZ,EAAA/W,OAAkBnC,IACnCwxG,EAAAt4F,EAAAlZ,IAAAmG,EAAA+S,EAAAlZ,IAqBA,MAhBA,UAAAwxG,EAAAF,WACAE,EAAAH,KAAAG,EAAAH,KAAAtuG,QAAA,YAGA,WAAAyuG,EAAAF,WACAE,EAAAH,KAAAG,EAAAH,KAAAtuG,QAAA,aAGAyuG,EAAAF,WACAE,EAAAF,SAAA/pG,EAAA8/B,SAAAiqE,UAGAF,GACA9oG,EAAAsyF,KAAAvqF,YAAAhF,GAGAmmG,GAeAC,GAAA,SAAA3+E,GAEA,IAAAA,EAAAhwB,MAAA,iBAEA,IAAAuI,EAAA/C,EAAAJ,cAAA,OAEAmD,EAAAkmG,UAAA,YAAAz+E,EAAA,UACAA,EAAAznB,EAAA+E,WAAAk3B,KAGA,OAAAxU,GAcA4+E,GAAA,SAAA96F,GACA,qBAAAA,EAAA,CACA,IAAA+6F,EAAA,0EACAnhC,EAAAmhC,EAAA5nF,KAAAnT,GAEA,GAAA45D,EACA,OAAAA,EAAA5nE,MAAA6K,cAIA,UAYAm+F,GAAA,SAAA9+E,GACA,IAAA++E,EAAAtqG,EAAA8/B,SACAyqE,EAAAX,GAAAr+E,GAGAi/E,EAAA,MAAAD,EAAAR,SAAAO,EAAAP,SAAAQ,EAAAR,SAIAU,EAAAD,EAAAD,EAAAT,OAAAQ,EAAAP,SAAAO,EAAAR,KAEA,OAAAW,GAGAC,IAAAvxG,OAAA+1F,QAAA/1F,SACAywG,YACAM,kBACAC,oBACAE,mBAiBAM,GAAA,SAAAC,EAAAloG,GACA,IAAA48B,EAAA,IAAAt/B,EAAA+G,OAAAsC,OAAArJ,IAAAsJ,MAAAtJ,EAAA+G,OAAAiB,iBACA8xB,KAEAwF,EAAAj0B,MAAA,SAAAhP,GACAqG,EAAAqhB,OAAA1nB,IAGAijC,EAAA11B,eAAA,SAAAomB,GACA8J,EAAAp4B,KAAAsuB,IAGAsP,EAAA/zB,QAAA,WACA7I,EAAAsM,SACApO,KAAA,aACA8Q,OAAAhP,KAIA48B,EAAAz1B,MAAA+gG,GACA9wE,EAAAl/B,OAAA,IACAoF,EAAA85D,SAAA95D,EAAA85D,QAAA+wC,gBACA7qG,EAAA85D,QAAA+wC,eAAA,iCAAAnoG,EAAAgc,KAEAob,EAAAjV,QAAA,SAAAmL,GACA,OAAA4gE,EAAA5gE,WAEAhwB,EAAA85D,SAAA95D,EAAA85D,QAAAgxC,UACA9qG,EAAA85D,QAAAgxC,YAIAxrE,EAAAh0B,SAcAy/F,GAAA,SAAArsF,EAAAhc,GACA,IAAA6lE,GACAhuD,IAAAmE,GAEA+rF,EAAAJ,GAAA3rF,GAEA+rF,IACAliC,EAAAyiC,KAAAP,GAGAprF,EAAAkpD,EAAAtuE,GAAA5B,KAAA,SAAA4pB,EAAAgX,EAAAgyE,GACA,GAAAhpF,EACA,OAAA2uE,EAAA5gE,MAAA/N,EAAAgX,GAOA,GAJAv2B,EAAAwoG,SAAA,EAIA,oBAAAlrG,EAAA+G,QACA,GAAArE,EAAA0c,MAAA,CACA,IAAAy3B,EAAA,WACA,OAAA8zD,GAAAM,EAAAvoG,IAGAA,EAAA0c,MAAA5I,GAAA,cAAAqgC,GACAn0C,EAAA0c,MAAA5I,GAAA,wBACAo6E,EAAA5gE,MAAA,oDAAAttB,EAAAgc,KACAhc,EAAA0c,MAAA1I,IAAA,cAAAmgC,WAIA8zD,GAAAM,EAAAvoG,OAYAyoG,GAAA,SAAAC,GAqCA,SAAAD,IACA,IAAAhzF,EAAAy+B,EAEAj5B,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAGA,GAFAw0F,EAAA92F,KAAA8yG,IAEAxtF,EAAA6N,KACA,UAAA3wB,MAAA,4BAGA,IAAAgC,EAAAkxB,GAAApQ,GACAuP,KAAAm8E,GAAA1rF,EAAAuP,OAAA,YACAvR,SAAAgC,EAAAhC,UAAAgC,EAAA0tF,SAAA,KAEAzxG,EAAA2vG,GAAA1sG,EAAAjD,OAAA,WACA0xG,EAAAzuG,EAAA,WAEA,aAAAA,EAAAqwB,MAAA,aAAArwB,EAAAqwB,OACAtzB,EAAA,UAIA,IAAA2xG,GAAApzF,EAAAk3E,EAAAh3F,KAAA+yG,EAAAxyG,KAAAP,KAAAwE,IAAAsb,GAIA,GAFAozF,EAAAnsF,MAAAviB,EAAA2uB,KAEAkjE,EACA,QAAA1nF,KAAAmkG,EAAA9wG,UACA,gBAAA2M,IACAukG,EAAAvkG,GAAAmkG,EAAA9wG,UAAA2M,IAKAukG,EAAA9C,SACA8C,EAAAC,eAEA,IAAA7iG,EAAA,IAAA0/F,GAAAkD,EAAA9C,OACAgD,EAAA,IAAApD,GAAAkD,EAAAC,aACAE,GAAA,EACAC,EAAA1xG,GAAAsxG,EAAA,WAMAlzG,KAAAozG,WAAApzG,KAAAozG,WACAC,IACArzG,KAAA2W,QAAA,aACA08F,GAAA,KA8IA,MA1IA,aAAA9xG,GACA2xG,EAAAnsF,MAAAvB,MAAA,WACA0tF,EAAAnsF,MAAA5I,GAAA,aAAAm1F,KACO,GAYPxyG,OAAAC,eAAAmyG,EAAA,WACAjyG,IAAA,WACA,OAAAgyG,GAEAvuG,IAAA,eAYA5D,OAAAC,eAAAmyG,EAAA,QACAjyG,IAAA,WACA,OAAAM,GAEAmD,IAAA,SAAA6uG,GACA,IAAAv9E,EAAAh2B,KAEAkxG,GAAAqC,KAGAhyG,EAAAgyG,EACA,YAAAhyG,GAEAvB,KAAA+mB,MAAAvB,MAAA,WACAwQ,EAAAjP,MAAA5I,GAAA,aAAAm1F,KACW,GAWXtzG,KAAA2W,QAAA,kBAUA7V,OAAAC,eAAAmyG,EAAA,QACAjyG,IAAA,WACA,OAAAjB,KAAA6yG,QAIAviG,EAHA,MAKA5L,IAAA,eASA5D,OAAAC,eAAAmyG,EAAA,cACAjyG,IAAA,WACA,IAAAjB,KAAA6yG,QACA,YAIA,OAAA7yG,KAAAsQ,KAAA/N,OACA,OAAA6wG,EAMA,IAHA,IAAAI,EAAAxzG,KAAA+mB,MAAAkO,cACAw+E,KAEArzG,EAAA,EAAAC,EAAAL,KAAAsQ,KAAA/N,OAA6CnC,EAAAC,EAAOD,IAAA,CACpD,IAAA4D,EAAAhE,KAAAsQ,KAAAlQ,GAEA4D,EAAA+B,WAAAytG,GAAAxvG,EAAAiC,SAAAutG,EACAC,EAAApqG,KAAArF,GACWA,EAAA+B,YAAA/B,EAAAiC,SAAAjC,EAAA+B,WAAAytG,GAAAxvG,EAAA+B,UAAA,IAAAytG,GACXC,EAAApqG,KAAArF,GAMA,GAFAqvG,GAAA,EAEAI,EAAAlxG,SAAAvC,KAAAmzG,YAAA5wG,OACA8wG,GAAA,OAEA,QAAA5pF,EAAA,EAA0BA,EAAAgqF,EAAAlxG,OAAoBknB,KAC9C,IAAAzpB,KAAAmzG,YAAArgG,QAAA2gG,EAAAhqF,MACA4pF,GAAA,GAQA,OAHArzG,KAAAmzG,YAAAM,EACAL,EAAAnD,SAAAjwG,KAAAmzG,aAEAC,GAKA1uG,IAAA,eAGAF,EAAA6hB,KACA6sF,EAAA7sF,IAAA7hB,EAAA6hB,IACAqsF,GAAAluG,EAAA6hB,IAAA6sF,IAEAA,EAAAL,SAAA,EAGAt0D,EAAA20D,EAAAlc,EAAAl3E,EAAAy+B,GA8DA,OAjSAw4C,EAAA+b,EAAAC,GA8OAD,EAAA9wG,UAAA0pB,OAAA,SAAAgoF,GACA,IAAA1vG,EAAA0vG,EAEA,GAAA/rG,EAAAsJ,SAAAyiG,aAAA/rG,EAAAsJ,MAAA4B,QAAA,CAGA,QAAAlE,KAFA3K,EAAA,IAAA2D,EAAAsJ,MAAA4B,OAAA6gG,EAAA3tG,UAAA2tG,EAAAztG,QAAAytG,EAAA7pG,MAEA6pG,EACA/kG,KAAA3K,IACAA,EAAA2K,GAAA+kG,EAAA/kG,IAKA3K,EAAAS,GAAAivG,EAAAjvG,GACAT,EAAA2vG,aAAAD,EAKA,IAFA,IAAA31E,EAAA/9B,KAAA+mB,MAAAusD,aAEAlzE,EAAA,EAAmBA,EAAA29B,EAAAx7B,OAAmBnC,IACtC29B,EAAA39B,KAAAJ,MACA+9B,EAAA39B,GAAA06E,UAAA92E,GAIAhE,KAAAowG,MAAA/mG,KAAArF,GACAhE,KAAAsQ,KAAA2/F,SAAAjwG,KAAAowG,QAWA0C,EAAA9wG,UAAA84E,UAAA,SAAA84B,GACA,IAAAxzG,EAAAJ,KAAAowG,MAAA7tG,OAEA,MAAAnC,IAAA,CACA,IAAA4D,EAAAhE,KAAAowG,MAAAhwG,GAEA,GAAA4D,IAAA4vG,GAAA5vG,EAAA2vG,cAAA3vG,EAAA2vG,eAAAC,EAAA,CACA5zG,KAAAowG,MAAA9xF,OAAAle,EAAA,GACAJ,KAAAsQ,KAAA2/F,SAAAjwG,KAAAowG,OACA,SAKA0C,EAlSA,CAmSCzB,IAODyB,GAAA9wG,UAAAu/F,gBACAsS,UAAA,aAWA,IAAAv1E,GAAA,SAAAy0E,GAyBA,SAAAz0E,IACA,IAAAxe,EAAAy+B,EAEAj5B,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAw0F,EAAA92F,KAAAs+B,GAEA,IAAA95B,EAAAkxB,GAAApQ,GACAuP,KAAA+7E,GAAAtrF,EAAAuP,OAAA,KAIAxqB,GAAAyV,EAAAk3E,EAAAh3F,KAAA+yG,EAAAxyG,KAAAP,KAAAwE,IAAAsb,GACAme,GAAA,EAEA,GAAAo4D,EACA,QAAA1nF,KAAA2vB,EAAAt8B,UACA,gBAAA2M,IACAtE,EAAAsE,GAAA2vB,EAAAt8B,UAAA2M,IA8CA,OAjCA7N,OAAAC,eAAAsJ,EAAA,WACApJ,IAAA,WACA,OAAAg9B,GAEAv5B,IAAA,SAAAovG,GAEA,mBAAAA,OAAA71E,IAGAA,EAAA61E,EAYA9zG,KAAA2W,QAAA,qBAOAnS,EAAAy5B,UACA5zB,EAAA4zB,QAAAz5B,EAAAy5B,SAEA5zB,EAAAwoG,SAAA,EAEAt0D,EAAAl0C,EAAA2sF,EAAAl3E,EAAAy+B,GAGA,OA1FAw4C,EAAAz4D,EAAAy0E,GA0FAz0E,EA3FA,CA4FC+yE,IASD0C,GAAA,SAAAhB,GAwBA,SAAAgB,IACA,IAAAj0F,EAAAy+B,EAEAj5B,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAw0F,EAAA92F,KAAA+zG,GAEA,IAAAvvG,EAAAkxB,GAAApQ,GACAuP,KAAA07E,GAAAjrF,EAAAuP,OAAA,KAKAxqB,GAAAyV,EAAAk3E,EAAAh3F,KAAA+yG,EAAAxyG,KAAAP,KAAAwE,IAAAsb,GACAsvF,GAAA,EAEA,GAAA/Y,EACA,QAAA1nF,KAAAolG,EAAA/xG,UACA,gBAAA2M,IACAtE,EAAAsE,GAAAolG,EAAA/xG,UAAA2M,IA8CA,OAhCA7N,OAAAC,eAAAsJ,EAAA,YACApJ,IAAA,WACA,OAAAmuG,GAEA1qG,IAAA,SAAAsvG,GAEA,mBAAAA,OAAA5E,IAGAA,EAAA4E,EAYAh0G,KAAA2W,QAAA,sBAOAnS,EAAA4qG,WACA/kG,EAAA+kG,SAAA5qG,EAAA4qG,UAGA7wD,EAAAl0C,EAAA2sF,EAAAl3E,EAAAy+B,GAGA,OA1FAw4C,EAAAgd,EAAAhB,GA0FAgB,EA3FA,CA4FC1C,IAWD4C,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EASAC,GAAA,SAAA3tE,GAqCA,SAAA2tE,IACA,IAAA/uF,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAw0F,EAAA92F,KAAAq0G,GAEA,IAAAv0F,EAAAk3E,EAAAh3F,KAAA0mC,EAAAnmC,KAAAP,OAEAy5B,OAAA,EACAm2E,EAAA9vF,EAEA,GAAAu2E,EAGA,QAAA1nF,KAFAihG,EAAAlnG,EAAAJ,cAAA,UAEA+rG,EAAAryG,UACA,gBAAA2M,IACAihG,EAAAjhG,GAAA0lG,EAAAryG,UAAA2M,IAKA,IAiDA4vC,EAjDAl0C,EAAA,IAAAyoG,GAAAxtF,GAgDA,OA9CAsqF,EAAA/6E,KAAAxqB,EAAAwqB,KACA+6E,EAAAvpF,IAAAhc,EAAAgc,IACAupF,EAAAoD,QAAA3oG,EAAAiZ,SACAssF,EAAA96E,MAAAzqB,EAAAyqB,MACA86E,EAAA,WAAAvlG,EAAA,WAQAvJ,OAAAC,eAAA6uG,EAAA,cACA3uG,IAAA,WACA,OAAAw4B,KAWA34B,OAAAC,eAAA6uG,EAAA,SACA3uG,IAAA,WACA,OAAAoJ,KAIAovB,EAAAw6E,GAMA5pG,EAAAgqB,iBAAA,wBACAoF,EAAA06E,GAEAvE,EAAAj5F,SACApO,KAAA,OACA8Q,OAAAu2F,MAIAvZ,GAGA93C,EAAAqxD,EAAA5Y,EAAAl3E,EAAAy+B,IAEAz+B,EAGA,OA/GAi3E,EAAAsd,EAAA3tE,GA+GA2tE,EAhHA,CAiHCr4E,IAEDq4E,GAAAryG,UAAAu/F,gBACAxrE,KAAA,QAGAs+E,GAAAJ,QACAI,GAAAH,WACAG,GAAAF,UACAE,GAAAD,SAOA,IAAAE,IACA1hF,OACA2hF,UAAAxF,GACAyF,WAAAl2E,GACAm2E,YAAA,SAEA9hF,OACA4hF,UAAAlF,GACAmF,WAAAT,GACAU,YAAA,SAEA5qG,MACA0qG,UAAAjF,GACAkF,WAAA1B,GACA2B,YAAA,SAIA3zG,OAAAyrB,KAAA+nF,IAAA9nF,QAAA,SAAAjkB,GACA+rG,GAAA/rG,GAAAmsG,WAAAnsG,EAAA,SACA+rG,GAAA/rG,GAAAosG,YAAApsG,EAAA,YAGA,IAAAqsG,IACAC,YACAN,UAAAjF,GACAkF,WAAA1B,GACA2B,YAAA,aACAC,WAAA,mBACAC,YAAA,qBAEAG,cACAP,UAAA/E,GACAgF,WAAAH,GACAI,YAAA,qBACAC,WAAA,qBACAC,YAAA,wBAIAI,GAAAr/E,GAAA4+E,GAAAM,IAgDA,SAAAI,GAAAj1G,EAAA80B,EAAAC,EAAAxR,GACA,IAAAgC,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAEAy7B,EAAAh+B,EAAAuzE,aAEAhuD,EAAAuP,OAEAC,IACAxP,EAAAwP,SAEAxR,IACAgC,EAAAhC,YAEAgC,EAAA6N,KAAApzB,EAEA,IAAAsK,EAAA,IAAA0qG,GAAAlrG,KAAA2qG,WAAAlvF,GAIA,OAFAyY,EAAAe,SAAAz0B,GAEAA,EAjEAuqG,GAAAK,MAAAn0G,OAAAyrB,KAAAqoF,IACAN,GAAAW,MAAAn0G,OAAAyrB,KAAA+nF,IACAS,GAAAE,SAAA39F,OAAAs9F,GAAAK,OAAA39F,OAAAg9F,GAAAW,OAyEA,IAAAvP,GAAA,SAAA1iB,GAYA,SAAA0iB,IACA,IAAApgF,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAkjB,EAAAljB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,gBACAw0F,EAAA92F,KAAA0lG,GAIApgF,EAAA0+E,qBAAA,EAIA,IAAAlkF,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA,KAAAslB,EAAAE,IAwDA,OAtDA1F,EAAAo1F,aAAA,EACAp1F,EAAA3B,GAAA,qBACAne,KAAAk1G,aAAA,IAEAp1F,EAAA3B,GAAA,uBACAne,KAAAk1G,aAAA,IAGAH,GAAAE,MAAAzoF,QAAA,SAAA7rB,GACA,IAAA2Y,EAAAy7F,GAAAp0G,GAEA2kB,KAAAhM,EAAAo7F,cACA50F,EAAAxG,EAAAq7F,aAAArvF,EAAAhM,EAAAo7F,eAKA50F,EAAAq1F,wBACAr1F,EAAAs1F,mBAIAt1F,EAAAu1F,0BACAv1F,EAAAw1F,uBAGA,wBAAA9oF,QAAA,SAAAniB,IACA,IAAAib,EAAA,SAAAjb,EAAA,YACAyV,EAAA,iBAAAzV,EAAA,iBAIA,IAAAib,EAAAiwF,iBAAA,IAAAjwF,EAAAkwF,iBACA11F,EAAA21F,0BAAA,GACK,IAAAnwF,EAAAiwF,iBAAA,IAAAjwF,EAAAkwF,mBACL11F,EAAA21F,0BAAA,GAGA31F,EAAA21F,0BACA31F,EAAA41F,oBAGA51F,EAAA61F,sBAAA,IAAAZ,GAAAlrG,KAAA0qG,UAEAz0F,EAAA81F,qBAGAtwF,EAAAuwF,wBACA/1F,EAAAsnF,gBAGAtnF,EAAA5Z,cACA4Z,EAAA+7C,MAAA/7C,EAAA5Z,YAAAvF,MAAA,gBAEAmf,EAs1BA,OAp6BAi3E,EAAA2O,EAAA1iB,GA0FA0iB,EAAA1jG,UAAA8zG,iBAAA,SAAAzvF,GACA,IAAA2P,EAAAh2B,KAEAA,KAAA+lG,UAGA/lG,KAAA03B,IAAA,mBACA,OAAA1B,EAAAiO,WAAA,WACA,OAAAjO,EAAA8/E,iBAAAzvF,IACS,KAYTrmB,KAAA2W,SACA0P,MACA9d,KAAA,eAcAm9F,EAAA1jG,UAAAozG,iBAAA,WACAp1G,KAAAme,GAAA,iBAAAne,KAAA+1G,kBAEA/1G,KAAAg2G,gBAAA,EAGAh2G,KAAA03B,IAAA,QAAA13B,KAAAi2G,gBASAvQ,EAAA1jG,UAAAk0G,kBAAA,WACAl2G,KAAAg2G,gBAAA,EACAh2G,KAAAm2G,uBAEAn2G,KAAAqe,IAAA,iBAAAre,KAAA+1G,mBAkBArQ,EAAA1jG,UAAAi0G,cAAA,SAAA5rF,GACArqB,KAAAm2G,uBACAn2G,KAAAo2G,iBAAAp2G,KAAAqoG,YAAAzmG,GAAA5B,KAAA,WAGA,IAAAq2G,EAAAr2G,KAAA8pG,kBAEA9pG,KAAAs2G,mBAAAD,GAOAr2G,KAAA2W,QAAA,YAGA3W,KAAAs2G,iBAAAD,EAEA,IAAAA,GACAr2G,KAAAm2G,yBAEK,MAcLzQ,EAAA1jG,UAAA+zG,iBAAA,SAAA1rF,GACArqB,KAAAq0C,UAAAr0C,KAAA6hB,YAWA6jF,EAAA1jG,UAAA02B,SAAA,WACA,OAAAlE,GAAA,MAaAkxE,EAAA1jG,UAAA8nG,gBAAA,WACA,OAAAA,GAAA9pG,KAAA04B,WAAA14B,KAAAq0C,YAWAqxD,EAAA1jG,UAAAm0G,qBAAA,WACAn2G,KAAAooG,cAAApoG,KAAAo2G,mBAUA1Q,EAAA1jG,UAAAszG,oBAAA,WACAt1G,KAAAu2G,mBAAA,EAEAv2G,KAAAme,GAAA,OAAAne,KAAAw2G,kBACAx2G,KAAAme,GAAA,QAAAne,KAAAy2G,0BASA/Q,EAAA1jG,UAAA00G,qBAAA,WACA12G,KAAAu2G,mBAAA,EACAv2G,KAAAy2G,0BACAz2G,KAAAqe,IAAA,OAAAre,KAAAw2G,kBACAx2G,KAAAqe,IAAA,QAAAre,KAAAy2G,0BAYA/Q,EAAA1jG,UAAAw0G,iBAAA,WACAx2G,KAAA22G,qBACA32G,KAAAy2G,0BAEAz2G,KAAA22G,oBAAA32G,KAAAqoG,YAAA,WAOAroG,KAAA2W,SAAoBpO,KAAA,aAAA8Q,OAAArZ,KAAA42G,mBAAA,KAGf,MAWLlR,EAAA1jG,UAAAy0G,wBAAA,WACAz2G,KAAAooG,cAAApoG,KAAA22G,qBAIA32G,KAAA2W,SAAkBpO,KAAA,aAAA8Q,OAAArZ,KAAA42G,mBAAA,KAWlBlR,EAAA1jG,UAAAyc,QAAA,WAGAze,KAAA6+B,YAAAy1E,GAAAW,OAGAj1G,KAAAg2G,gBACAh2G,KAAAk2G,oBAGAl2G,KAAAu2G,mBACAv2G,KAAA02G,uBAGA1zB,EAAAhhF,UAAAyc,QAAAle,KAAAP,OAeA0lG,EAAA1jG,UAAA68B,YAAA,SAAAqkC,GACA,IAAA3qC,EAAAv4B,KAEAkjE,KAAA5rD,OAAA4rD,GAEAA,EAAA12C,QAAA,SAAAjkB,GACA,IAAA2oD,EAAA34B,EAAAhwB,EAAA,gBACAnI,EAAA8wD,EAAA3uD,OAEA,MAAAnC,IAAA,CACA,IAAAiK,EAAA6mD,EAAA9wD,GAEA,SAAAmI,GACAgwB,EAAAs+E,sBAAAxsG,GAEA6mD,EAAAu9C,YAAApkG,OAWAq7F,EAAA1jG,UAAA80G,sBAAA,WACA,IAAA5lD,EAAAlxD,KAAA21G,0BACAv1G,EAAA8wD,EAAA3uD,OAEA,MAAAnC,IAAA,CACA,IAAAiK,EAAA6mD,EAAA9wD,GAEAJ,KAAA62G,sBAAAxsG,KAWAq7F,EAAA1jG,UAAAk1C,MAAA,aAaAwuD,EAAA1jG,UAAA21B,MAAA,SAAA/N,GAKA,YAJA3c,IAAA2c,IACA5pB,KAAA20C,OAAA,IAAAy1D,GAAAxgF,GACA5pB,KAAA2W,QAAA,UAEA3W,KAAA20C,QAeA+wD,EAAA1jG,UAAA+0G,OAAA,WACA,OAAA/2G,KAAAk1G,YACA1gF,GAAA,KAEAA,MAWAkxE,EAAA1jG,UAAAo3B,eAAA,WAEAp5B,KAAAu2G,mBAOAv2G,KAAA2W,SAAoBpO,KAAA,aAAA8Q,OAAArZ,KAAA42G,mBAAA,KAgBpBlR,EAAA1jG,UAAA4zG,mBAAA,WACA,IAAAv8E,EAAAr5B,KAsBAs0G,GAAAW,MAAAzoF,QAAA,SAAA7rB,GACA,IAAA2Y,EAAAg7F,GAAA3zG,GACAq2G,EAAA,WACA39E,EAAA1iB,QAAAhW,EAAA,gBAGAo9B,EAAA1E,EAAA/f,EAAAo7F,cAEA32E,EAAA1J,iBAAA,cAAA2iF,GACAj5E,EAAA1J,iBAAA,WAAA2iF,GAEA39E,EAAAlb,GAAA,qBACA4f,EAAA7C,oBAAA,cAAA87E,GACAj5E,EAAA7C,oBAAA,WAAA87E,QAaAtR,EAAA1jG,UAAAi1G,iBAAA,WACA,IAAAn8E,EAAA96B,KAEA,IAAA2H,EAAA+G,OAOA,GAAAhG,EAAAsyF,KAAAlX,SAAA9jF,KAAAioC,MAAA,CAKA,IAAAjoC,KAAAijF,SAAA,WAAAqU,EAAApC,IAAAp0F,OAAAyrB,KAAA2oE,GAAA3yF,OAAA,EAEA,YADAvC,KAAA2W,QAAA,eAMA,IAAAugG,EAAAxuG,EAAAJ,cAAA,UAEA4uG,EAAA7wF,IAAArmB,KAAAijF,SAAA,4DACAi0B,EAAAC,OAAA,WAOAr8E,EAAAnkB,QAAA,gBAEAugG,EAAAE,QAAA,WAOAt8E,EAAAnkB,QAAA,eAEA3W,KAAAme,GAAA,qBACA+4F,EAAAC,OAAA,KACAD,EAAAE,QAAA,OAIAzvG,EAAA+G,QAAA,EACA1O,KAAAioC,KAAAh/B,WAAAH,YAAAouG,QAEAl3G,KAAAwlB,MAAAxlB,KAAAi3G,mBAUAvR,EAAA1jG,UAAA0zG,kBAAA,WACA,IAAAv6E,EAAAn7B,KAEA+9B,EAAA/9B,KAAAszE,aACA+jC,EAAAr3G,KAAA4+B,mBACA04E,EAAA,SAAAtvG,GACA,OAAA+1B,EAAAe,SAAA92B,EAAAqC,QAEAktG,EAAA,SAAAvvG,GACA,OAAA+1B,EAAA0wE,YAAAzmG,EAAAqC,QAGAgtG,EAAAl5F,GAAA,WAAAm5F,GACAD,EAAAl5F,GAAA,cAAAo5F,GAEAv3G,KAAAi3G,mBAEA,IAAAO,EAAA,WACA,OAAAr8E,EAAAxkB,QAAA,oBAGA8gG,EAAA,WACAD,IAEA,QAAAp3G,EAAA,EAAqBA,EAAA29B,EAAAx7B,OAAmBnC,IAAA,CACxC,IAAAiK,EAAA0zB,EAAA39B,GAEAiK,EAAA6wB,oBAAA,YAAAs8E,GACA,YAAAntG,EAAA9I,MACA8I,EAAAgqB,iBAAA,YAAAmjF,KAKAC,IACA15E,EAAA1J,iBAAA,SAAAojF,GACA15E,EAAA1J,iBAAA,WAAAojF,GACA15E,EAAA1J,iBAAA,cAAAojF,GAEAz3G,KAAAme,GAAA,qBACAk5F,EAAAh5F,IAAA,WAAAi5F,GACAD,EAAAh5F,IAAA,cAAAk5F,GACAx5E,EAAA7C,oBAAA,SAAAu8E,GACA15E,EAAA7C,oBAAA,WAAAu8E,GACA15E,EAAA7C,oBAAA,cAAAu8E,GAEA,QAAAr3G,EAAA,EAAqBA,EAAA29B,EAAAx7B,OAAmBnC,IAAA,CACxC,IAAAiK,EAAA0zB,EAAA39B,GAEAiK,EAAA6wB,oBAAA,YAAAs8E,OAsBA9R,EAAA1jG,UAAA6xB,aAAA,SAAAgB,EAAAC,EAAAxR,GACA,IAAAuR,EACA,UAAAryB,MAAA,mDAGA,OAAAwyG,GAAAh1G,KAAA60B,EAAAC,EAAAxR,IA0BAoiF,EAAA1jG,UAAA01G,sBAAA,SAAApyF,GACA,IAAAjb,EAAAqrB,GAAApQ,GACA6N,KAAAnzB,OAGA,WAAA40G,GAAAE,aAAAN,WAAAnqG,IAyBAq7F,EAAA1jG,UAAA4yB,mBAAA,WACA,IAAA+iF,EAAA33G,KAEAslB,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAs1G,EAAAt1G,UAAA,GAEAu1G,EAAA73G,KAAA03G,sBAAApyF,GAmBA,OAjBA,IAAAsyF,IAAA,IAAAA,IAEArf,EAAA9lE,KAAA,oKACAmlF,GAAA,GAIA53G,KAAA83G,qBAAAnI,iBAAAkI,GACA73G,KAAA4+B,mBAAAE,SAAA+4E,EAAAxtG,QAEA,IAAAutG,GAEA53G,KAAAwlB,MAAA,WACA,OAAAmyF,EAAAhC,sBAAA72E,SAAA+4E,EAAAxtG,SAIAwtG,GAWAnS,EAAA1jG,UAAA60G,sBAAA,SAAAxsG,GACA,IAAAulG,EAAA5vG,KAAA83G,qBAAAjI,wBAAAxlG,GAGArK,KAAA83G,qBAAA/H,oBAAAH,GACA5vG,KAAA4+B,mBAAA6vE,YAAApkG,GACArK,KAAA21G,sBAAAlH,YAAApkG,IAgBAq7F,EAAA1jG,UAAA+1G,wBAAA,WACA,UAUArS,EAAA1jG,UAAAg2G,UAAA,aASAtS,EAAA1jG,UAAAi2G,YAAA,aASAvS,EAAA1jG,UAAAk2G,eAAA,aAoBAxS,EAAA1jG,UAAA4gF,YAAA,WACA,UAeA8iB,EAAA9iB,YAAA,WACA,UAaA8iB,EAAAnjB,cAAA,SAAA2C,EAAA5/D,GACA,OAAAogF,EAAA9iB,YAAAsC,EAAA38E,OAiBAm9F,EAAAE,OAAA,SAAA/8E,GACA,OAAAA,EAAA7mB,qBAAA0jG,GAAA78E,aAAA68E,GAAA78E,IAAA68E,GAcAA,EAAAyS,aAAA,SAAAx3G,EAAAwyB,GAKA,GAJAuyE,EAAA0S,SACA1S,EAAA0S,YAGA1S,EAAAE,OAAAzyE,GACA,UAAA3wB,MAAA,QAAA7B,EAAA,mBAGA,IAAA+kG,EAAA9iB,YACA,UAAApgF,MAAA,uDAEA,IAAAkjG,EAAAnjB,cACA,UAAA//E,MAAA,yDAUA,OAPA7B,EAAA2iG,GAAA3iG,GAEA+kG,EAAA0S,OAAAz3G,GAAAwyB,EACA,SAAAxyB,GAEA+kG,EAAA2S,kBAAAhvG,KAAA1I,GAEAwyB,GAcAuyE,EAAAvpB,QAAA,SAAAx7E,GACA,GAAAA,EAMA,OAFAA,EAAA2iG,GAAA3iG,GAEA+kG,EAAA0S,QAAA1S,EAAA0S,OAAAz3G,GACA+kG,EAAA0S,OAAAz3G,GAGAgH,KAAAge,SAAAhe,EAAAge,QAAAhlB,IACA43F,EAAA9lE,KAAA,OAAA9xB,EAAA,6GACAgH,EAAAge,QAAAhlB,SAFA,GAMA+kG,EAr6BA,CAs6BC7iB,IAqCDkyB,GAAAE,MAAAzoF,QAAA,SAAA7rB,GACA,IAAA2Y,EAAAy7F,GAAAp0G,GAEA+kG,GAAA1jG,UAAAsX,EAAAo7F,YAAA,WAEA,OADA10G,KAAAsZ,EAAAq7F,aAAA30G,KAAAsZ,EAAAq7F,cAAA,IAAAr7F,EAAAi7F,UACAv0G,KAAAsZ,EAAAq7F,gBAkCAjP,GAAA1jG,UAAAs2G,uBAAA,EAQA5S,GAAA1jG,UAAAu2G,qBAAA,EASA7S,GAAA1jG,UAAAw2G,0BAAA,EAWA9S,GAAA1jG,UAAAy2G,sBAAA,EAUA/S,GAAA1jG,UAAAmzG,wBAAA,EAYAzP,GAAA1jG,UAAA02G,mBAAA,EAUAhT,GAAA1jG,UAAAqzG,0BAAA,EASA3P,GAAA1jG,UAAAyzG,0BAAA,EAcA/P,GAAAiT,mBAAA,SAAAC,GAWAA,EAAAtzB,sBAAA,SAAAuzB,EAAA/gG,GACA,IAAAylF,EAAAqb,EAAAE,eAEAvb,IACAA,EAAAqb,EAAAE,wBAGA7rG,IAAA6K,IAEAA,EAAAylF,EAAAh7F,QAGAg7F,EAAAj/E,OAAAxG,EAAA,EAAA+gG,IAaAD,EAAAh2B,YAAA,SAAAr6E,GAIA,IAHA,IAAAg1F,EAAAqb,EAAAE,mBACAC,OAAA,EAEA34G,EAAA,EAAmBA,EAAAm9F,EAAAh7F,OAAqBnC,IAGxC,GAFA24G,EAAAxb,EAAAn9F,GAAAwiF,YAAAr6E,GAEAwwG,EACA,OAAAA,EAIA,UAkBAH,EAAAI,oBAAA,SAAAj6F,EAAAuG,GAIA,IAHA,IAAAi4E,EAAAqb,EAAAE,mBACAC,OAAA,EAEA34G,EAAA,EAAmBA,EAAAm9F,EAAAh7F,OAAqBnC,IAGxC,GAFA24G,EAAAxb,EAAAn9F,GAAA6kF,gBAAAlmE,EAAAuG,GAEAyzF,EACA,OAAAxb,EAAAn9F,GAIA,aAeAw4G,EAAAr2B,cAAA,SAAA2C,EAAA5/D,GACA,IAAA2zF,EAAAL,EAAAI,oBAAA9zB,EAAA5/D,GAEA,OAAA2zF,EACAA,EAAAh0B,gBAAAC,EAAA5/D,GAGA,IAOA,IAAA4zF,GAAA,iCAgBAA,EAAA1sF,QAAA,SAAAg9E,GACA,IAAA2P,EAAAn5G,KAAAwpG,GAEA,oBAAA2P,IAIAn5G,KAAAwpG,GAAA,WACA,OAAAxpG,KAAAo5G,gBAAAp5G,KAAAo5G,eAAA5P,GACAxpG,KAAAo5G,eAAA5P,GAAArxF,MAAAnY,KAAAo5G,eAAA92G,WAEA62G,EAAAhhG,MAAAnY,KAAAsC,cAEGs2G,EAAA52G,WAUH42G,EAAA52G,UAAA4uC,UAAA,SAAA7xB,GACA,IAAAk6F,EAAAL,EAAAI,oBAAAj6F,EAAA/e,KAAAijF,UAEAg2B,IAGAL,EAAAS,oBACAJ,EAAAL,EAAAS,oBAEA9gB,EAAA5gE,MAAA,mDAKA33B,KAAAs5G,uBACAt5G,KAAAqe,IAAA,UAAAre,KAAAs5G,sBAEAL,IAAAL,EAAAS,sBACAr5G,KAAAuwC,eAAAxxB,GAGA/e,KAAAo5G,eAAAH,EAAA9zB,aAAApmE,EAAA/e,UAAAijF,UACAjjF,KAAAme,GAAA,UAAAne,KAAAs5G,uBAQAV,EAAA52G,UAAAs3G,qBAAA,WAIAt5G,KAAAuwC,iBACAvwC,KAAA6+B,aAAA,kBACA7+B,KAAAuwC,eAAA,MAIAvwC,KAAA82G,wBAEA92G,KAAAo5G,iBAEAp5G,KAAAo5G,eAAA36F,SACAze,KAAAo5G,eAAA36F,UAGAze,KAAAo5G,eAAA,QAOAv2B,GAAA2C,kBAAA,OAAAkgB,IACAA,GAAAyS,aAAA,OAAAzS,IAOAA,GAAA2S,qBAEA,IAAAkB,MACAC,MAEAC,MAEA,SAAAl0B,GAAAh9E,EAAAmxG,GACAH,GAAAhxG,GAAAgxG,GAAAhxG,OACAgxG,GAAAhxG,GAAAc,KAAAqwG,GAKA,SAAA9oE,GAAA9pB,EAAAT,EAAAsD,GACA7C,EAAAmd,WAAA,WACA,OAAA01E,GAAAtzF,EAAAkzF,GAAAlzF,EAAA9d,MAAAohB,EAAA7C,IACG,GAGH,SAAA8yF,GAAAF,EAAAvmF,GACAumF,EAAAltF,QAAA,SAAAqtF,GACA,OAAAA,EAAAD,SAAAC,EAAAD,QAAAzmF,KAQA,SAAA2mF,GAAAJ,EAAAvmF,EAAAlR,GACA,OAAAy3F,EAAAK,YAAAC,GAAA/3F,GAAAkR,EAAAlR,MAOA,SAAAg4F,GAAAP,EAAAvmF,EAAAlR,EAAAkkE,GACA,OAAAhzD,EAAAlR,GAAAy3F,EAAAhiG,OAAAsiG,GAAA/3F,GAAAkkE,IASA,SAAA+zB,GAAAR,EAAAvmF,EAAAlR,GACA,IAAAkkE,EAAA7jF,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,QAEA63G,EAAA,OAAA7W,GAAArhF,GACAm4F,EAAAV,EAAAhiG,OAAAsiG,GAAAG,GAAAh0B,GACAk0B,EAAAD,IAAAX,GACApb,EAAAgc,EAAA,KAAAlnF,EAAAlR,GAAAm4F,GAIA,OAFAE,GAAAZ,EAAAz3F,EAAAo8E,EAAAgc,GAEAhc,EAGA,IAAAkc,IACA7hF,SAAA,EACAzD,YAAA,EACApT,SAAA,EACAqT,SAAA,EACA6hF,OAAA,EACAz/E,OAAA,GAGAkjF,IACAphF,eAAA,GAGAqhF,IACA7gF,KAAA,EACA/B,MAAA,GAGA,SAAAmiF,GAAA/3F,GACA,gBAAA5gB,EAAAw4G,GAEA,OAAAx4G,IAAAo4G,GACAA,GAGAI,EAAA53F,GACA43F,EAAA53F,GAAA5gB,GAGAA,GAIA,SAAAi5G,GAAAI,EAAAz4F,EAAA5gB,EAAAg5G,GACA,QAAAj6G,EAAAs6G,EAAAn4G,OAAA,EAA8BnC,GAAA,EAAQA,IAAA,CACtC,IAAAy5G,EAAAa,EAAAt6G,GAEAy5G,EAAA53F,IACA43F,EAAA53F,GAAAo4F,EAAAh5G,IAKA,SAAAs5G,GAAA7zF,GACA0yF,GAAA1yF,EAAAriB,MAAA,KAQA,SAAAm2G,GAAA9zF,EAAA+zF,GACA,IAAAH,EAAAlB,GAAA1yF,EAAAriB,MACAo1G,EAAA,KAEA,QAAA5sG,IAAAytG,GAAA,OAAAA,EAGA,OAFAb,EAAAgB,EAAA/zF,GACA0yF,GAAA1yF,EAAAriB,QAAAo2G,EAAAhB,IACAA,EAGA,QAAAz5G,EAAA,EAAiBA,EAAAs6G,EAAAn4G,OAAgBnC,IAAA,CACjC,IAAA06G,EAAAJ,EAAAt6G,GACA26G,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAGAC,IAAAF,IAIAhB,EAAAmB,GAQA,OALA,OAAAnB,IACAA,EAAAgB,EAAA/zF,GACA4zF,EAAArxG,MAAAwxG,EAAAhB,KAGAA,EAGA,SAAAF,KACA,IAAAtzF,EAAA/jB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAo3G,EAAAp3G,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAqnB,EAAArnB,UAAA,GACAwkB,EAAAxkB,UAAA,GACAkwF,EAAAlwF,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACA24G,EAAA34G,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,IAAAA,UAAA,GACAu4G,EAAAnB,EAAA,GACAwB,EAAAxB,EAAAriG,MAAA,GAIA,qBAAAwjG,EACAlB,GAAAtzF,EAAAkzF,GAAAsB,GAAAlxF,EAAA7C,EAAA0rE,EAAAyoB,QAIG,GAAAJ,EAAA,CACH,IAAAhB,EAAAe,GAAA9zF,EAAA+zF,GAGA,IAAAhB,EAAAjpE,UAEA,OADA4hD,EAAAnpF,KAAAwwG,GACAF,GAAAtzF,EAAA60F,EAAAvxF,EAAA7C,EAAA0rE,EAAAyoB,GAGApB,EAAAjpE,UAAA9xB,KAA0BuH,GAAA,SAAAuD,EAAAq6D,GAI1B,GAAAr6D,EACA,OAAA+vF,GAAAtzF,EAAA60F,EAAAvxF,EAAA7C,EAAA0rE,EAAAyoB,GAIAzoB,EAAAnpF,KAAAwwG,GAIAF,GAAA11B,EAAA59D,EAAA9d,OAAA07E,EAAA17E,KAAA2yG,EAAA3B,GAAAt1B,EAAA17E,MAAAohB,EAAA7C,EAAA0rE,EAAAyoB,UAEGC,EAAA34G,OACHo3G,GAAAtzF,EAAA60F,EAAAvxF,EAAA7C,EAAA0rE,EAAAyoB,GACGA,EACHtxF,EAAAtD,EAAAmsE,GAEAmnB,GAAAtzF,EAAAkzF,GAAA,KAAA5vF,EAAA7C,EAAA0rE,GAAA,GAWA,IAAA2oB,IACAC,KAAA,YACAC,IAAA,YACAh0C,IAAA,YACAi0C,IAAA,YACAC,IAAA,YACAC,IAAA,mBACAC,IAAA,aACA1uC,IAAA,YACA2uC,IAAA,YACAj2B,KAAA,yBAYAk2B,GAAA,WACA,IAAAt1F,EAAA/jB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAEAs5G,EAAA9J,GAAAzrF,GACAw1F,EAAAV,GAAAS,EAAA/nG,eAEA,OAAAgoG,GAAA,IAgBAC,GAAA,SAAAh1F,EAAAT,GACA,IAAAA,EACA,SAIA,GAAAS,EAAAi1F,OAAAh9F,OAAAsH,SAAAS,EAAAi1F,OAAAh9F,OAAAxW,KACA,OAAAue,EAAAi1F,OAAAh9F,OAAAxW,KAIA,IAAAyzG,EAAAl1F,EAAAi1F,OAAA51F,QAAAuL,OAAA,SAAAvvB,GACA,OAAAA,EAAAkkB,UAGA,GAAA21F,EAAAz5G,OACA,OAAAy5G,EAAA,GAAAzzG,KAMA,IAFA,IAAA4d,EAAAW,EAAA+1E,GAAA,UAEAz8F,EAAA,EAAiBA,EAAA+lB,EAAA5jB,OAAoBnC,IAAA,CACrC,IAAA+B,EAAAgkB,EAAA/lB,GAEA,GAAA+B,EAAAoG,MAAApG,EAAAkkB,KAAAlkB,EAAAkkB,QACA,OAAAlkB,EAAAoG,KAKA,OAAAozG,GAAAt1F,IAmBA41F,GAAA,SAAAA,EAAA51F,GAEA,GAAAtL,MAAA8O,QAAAxD,GAAA,CACA,IAAA61F,KAEA71F,EAAAmG,QAAA,SAAA2vF,GACAA,EAAAF,EAAAE,GAEAphG,MAAA8O,QAAAsyF,GACAD,IAAA5kG,OAAA6kG,GACO3yB,EAAA2yB,IACPD,EAAA7yG,KAAA8yG,KAIA91F,EAAA61F,OAGA71F,EAFG,kBAAAA,KAAA1d,QAEHyzG,IAAsB/1F,SACnBmjE,EAAAnjE,IAAA,kBAAAA,oBAAA1d,QAEHyzG,GAAA/1F,OAMA,OAAAA,GAWA,SAAA+1F,GAAA/1F,GACA,IAAAw1F,EAAAF,GAAAt1F,OAMA,OAJAA,EAAA9d,MAAAszG,IACAx1F,EAAA9d,KAAAszG,GAGAx1F,EAaA,IAAAg2F,GAAA,SAAAr5B,GAeA,SAAAq5B,EAAAv1F,EAAAxB,EAAAE,GACAsxE,EAAA92F,KAAAq8G,GAGA,IAAAp5B,EAAAvtD,IAAiC2jE,UAAA,GAAkB/zE,GAKnDxF,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAm8D,EAAAz9D,IAEA,GAAAF,EAAAC,cAAAY,SAAA,IAAAb,EAAAC,cAAAY,QAAA5jB,OAsBAukB,EAAAT,IAAAf,EAAAC,cAAAY,cArBA,QAAA/lB,EAAA,EAAA+sB,EAAA7H,EAAAC,cAAA+2F,UAA0Dl8G,EAAA+sB,EAAA5qB,OAAcnC,IAAA,CACxE,IAAAm8G,EAAAjZ,GAAAn2E,EAAA/sB,IACA+yB,EAAAuyE,GAAAvpB,QAAAogC,GASA,GALAA,IACAppF,EAAA0vD,GAAAC,aAAAy5B,IAIAppF,KAAAsvD,cAAA,CACA37D,EAAA01F,UAAAD,GACA,OAUA,OAAAz8F,EAGA,OApDAi3E,EAAAslB,EAAAr5B,GAoDAq5B,EArDA,CAsDCx5B,IAEDA,GAAA2C,kBAAA,cAAA62B,IAYA,IAAAI,GAAA,SAAAz5B,GAYA,SAAAy5B,EAAA31F,EAAAxB,GACAwxE,EAAA92F,KAAAy8G,GAEA,IAAA38F,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAxB,IAKA,OAHAxF,EAAAsnF,gBAEAtnF,EAAAyxB,SACAzxB,EAoPA,OAvQAi3E,EAAA0lB,EAAAz5B,GAuCAy5B,EAAAz6G,UAAAq3F,SAAA,WACA,IAAAj4E,EAAA9e,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,SACAgX,EAAAhX,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAwf,EAAAxf,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAEAgX,EAAAwF,GACA6yF,UAAA,gEACAvoG,UAAApJ,KAAA6lG,gBACA8F,SAAA,GACKryF,GAEL,WAAA8H,GACAm3E,EAAA5gE,MAAA,yDAAAvW,EAAA,4CAIAU,EAAAhD,GACAopE,KAAA,UACKpmE,GAEL9hB,KAAA08G,UAAApjG,EAAAqyF,SAEA,IAAA1jE,EAAA+6C,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAAohB,EAAA9H,EAAAwI,GAIA,OAFA9hB,KAAA28G,oBAAA10E,GAEAA,GAGAw0E,EAAAz6G,UAAAyc,QAAA,WAEAze,KAAA48G,eAAA,KAEA55B,EAAAhhF,UAAAyc,QAAAle,KAAAP,OAcAy8G,EAAAz6G,UAAA26G,oBAAA,SAAA10E,GAcA,OAbAjoC,KAAA48G,eAAAvjB,GAAA,QACAjwF,UAAA,qBAGAyzG,YAAA,WAGA50E,GACAA,EAAAn/B,YAAA9I,KAAA48G,gBAGA58G,KAAA6sG,YAAA7sG,KAAA88G,aAAA70E,GAEAjoC,KAAA48G,gBAiBAH,EAAAz6G,UAAA6qG,YAAA,SAAAhjG,GACA,IAAAo+B,EAAA3lC,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,GAAAtC,KAAAioC,KAEA,QAAAh7B,IAAApD,EACA,OAAA7J,KAAA88G,cAAA,YAGA,IAAAC,EAAA/8G,KAAAkkG,SAAAr6F,GAEA7J,KAAA88G,aAAAjzG,EACAI,GAAAjK,KAAA48G,eAAAG,GACA/8G,KAAAg9G,gBAEA/0E,EAAAuxD,aAAA,QAAAujB,IAYAN,EAAAz6G,UAAA6jG,cAAA,WACA,gCAAA7iB,EAAAhhF,UAAA6jG,cAAAtlG,KAAAP,OAQAy8G,EAAAz6G,UAAAuvC,OAAA,WACAvxC,KAAAi9G,WACAj9G,KAAAi9G,UAAA,EACAj9G,KAAAm6F,YAAA,gBACAn6F,KAAAy6E,IAAA+e,aAAA,yBACA,qBAAAx5F,KAAA08G,WACA18G,KAAAy6E,IAAA+e,aAAA,WAAAx5F,KAAA08G,WAEA18G,KAAAme,IAAA,eAAAne,KAAAk9G,aACAl9G,KAAAme,GAAA,QAAAne,KAAAm9G,aACAn9G,KAAAme,GAAA,OAAAne,KAAAo9G,cASAX,EAAAz6G,UAAAg2F,QAAA,WACAh4F,KAAAi9G,UAAA,EACAj9G,KAAAi6F,SAAA,gBACAj6F,KAAAy6E,IAAA+e,aAAA,wBACA,qBAAAx5F,KAAA08G,WACA18G,KAAAy6E,IAAAggB,gBAAA,YAEAz6F,KAAAqe,KAAA,eAAAre,KAAAk9G,aACAl9G,KAAAqe,IAAA,QAAAre,KAAAm9G,aACAn9G,KAAAqe,IAAA,OAAAre,KAAAo9G,aA2BAX,EAAAz6G,UAAAk7G,YAAA,SAAA7yF,KAcAoyF,EAAAz6G,UAAAm7G,YAAA,SAAA9yF,GACAlM,GAAAzV,EAAA,UAAA9G,GAAA5B,UAAAgsG,kBAcAyQ,EAAAz6G,UAAAgqG,eAAA,SAAA3hF,GAGA,KAAAA,EAAAy0E,OAAA,KAAAz0E,EAAAy0E,OACAz0E,EAAA2zE,iBACAh+F,KAAA2W,QAAA,UACKqsE,EAAAhhF,UAAAgqG,gBAGLhpB,EAAAhhF,UAAAgqG,eAAAzrG,KAAAP,KAAAqqB,IAeAoyF,EAAAz6G,UAAAo7G,WAAA,SAAA/yF,GACAhM,GAAA3V,EAAA,UAAA9G,GAAA5B,UAAAgsG,kBAGAyQ,EAxQA,CAyQC55B,IAEDA,GAAA2C,kBAAA,qBAAAi3B,IAWA,IAAAY,GAAA,SAAAC,GAYA,SAAAD,EAAAv2F,EAAAxB,GACAwxE,EAAA92F,KAAAq9G,GAEA,IAAAv9F,EAAAk3E,EAAAh3F,KAAAs9G,EAAA/8G,KAAAP,KAAA8mB,EAAAxB,IAIA,OAFAxF,EAAA8lB,SACA9e,EAAA3I,GAAA,eAAAvc,GAAAke,IAAA8lB,SACA9lB,EAmHA,OArIAi3E,EAAAsmB,EAAAC,GA0BAD,EAAAr7G,UAAAyc,QAAA,WACAze,KAAA8mB,SAAAzI,IAAA,eAAAre,KAAA4lC,QACA03E,EAAAt7G,UAAAyc,QAAAle,KAAAP,OAWAq9G,EAAAr7G,UAAAq3F,SAAA,WACA,IAAApxD,EAAAoxD,GAAA,OACAjwF,UAAA,aAGAuiG,UAAA,IAYA,OALA/U,IACA52F,KAAAu9G,aAAAlkB,GAAA,OACApxD,EAAAn/B,YAAA9I,KAAAu9G,eAGAt1E,GAaAo1E,EAAAr7G,UAAA4jC,OAAA,SAAAvb,GACA,IAAA6I,EAAAlzB,KAAA8mB,SAAAF,SAEA5mB,KAAAw9G,OAAAtqF,GAIAA,EACAlzB,KAAAmmG,OAEAnmG,KAAAomG,QAYAiX,EAAAr7G,UAAAw7G,OAAA,SAAAtqF,GACA,GAAAlzB,KAAAu9G,aACAv9G,KAAAu9G,aAAAl3F,IAAA6M,MACK,CACL,IAAAuqF,EAAA,GAIAvqF,IACAuqF,EAAA,QAAAvqF,EAAA,MAGAlzB,KAAAy6E,IAAA7rE,MAAA6uG,oBAiBAJ,EAAAr7G,UAAAk7G,YAAA,SAAA7yF,GAEArqB,KAAAqzE,QAAAk5B,aAIAvsG,KAAAqzE,QAAA/7C,SACAmzE,GAAAzqG,KAAAqzE,QAAAz5C,QAEA55B,KAAAqzE,QAAAx7C,UAIAwlF,EAtIA,CAuICZ,IAED55B,GAAA2C,kBAAA,cAAA63B,IAKA,IAAAK,GAAA,OACAC,GAAA,OACAC,IACAC,UAAA,YACAC,UAAA,aACAC,MAAA,QACAC,mBAAA,6CACAC,eAAA,2BACAC,sBAAA,aACAC,kBAAA,QACAC,OAAA,mCACAlH,OAAA,8BACAmH,UAAA,0DAeA,SAAAC,GAAAtzG,EAAAuzG,GACA,IAAAtxF,OAAA,EAEA,OAAAjiB,EAAAzI,OAEA0qB,EAAAjiB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,OACG,QAAAA,EAAAzI,OAIH,UAAAC,MAAA,gCAAAwI,EAAA,gDAFAiiB,EAAAjiB,EAAAqM,MAAA,GAIA,cAAA5Q,SAAAwmB,EAAA5V,MAAA,aAAA5Q,SAAAwmB,EAAA5V,MAAA,aAAA5Q,SAAAwmB,EAAA5V,MAAA,aAAAknG,EAAA,IAkBA,SAAAC,GAAAv2E,EAAAr5B,EAAAm4F,GACA,IACA9+D,EAAAr5B,SAAAm4F,EACG,MAAA/+F,GAGH,QAUA,IAAAy2G,GAAA,SAAAz7B,GAeA,SAAAy7B,EAAA33F,EAAAxB,EAAAE,GACAsxE,EAAA92F,KAAAy+G,GAEA,IAAA3+F,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAxB,EAAAE,IA0BA,OAxBAsB,EAAA3I,GAAA,YAAAvc,GAAAke,IAAA4+F,gBACA53F,EAAA3I,GAAA,kBAAAvc,GAAAke,IAAA03F,gBACA1wF,EAAA3I,GAAA,YAAAvc,GAAAke,IAAA6+F,iBAMA73F,EAAAtB,MAAA5jB,GAAAke,EAAA,WACA,GAAAgH,EAAAC,OAAAD,EAAAC,MAAA0uF,yBACAz1G,KAAAomG,WADA,CAKAt/E,EAAA3I,GAAA,mBAAAvc,GAAA5B,UAAAw3G,gBAIA,IAFA,IAAAz5E,EAAA/9B,KAAAijF,SAAA19D,cAAAwY,WAEA39B,EAAA,EAAqBA,EAAA29B,EAAAx7B,OAAmBnC,IACxCJ,KAAAqzE,QAAAz+C,mBAAAmJ,EAAA39B,IAAA,GAGAJ,KAAA2+G,qBAEA7+F,EAgPA,OA3RAi3E,EAAA0nB,EAAAz7B,GAyDAy7B,EAAAz8G,UAAA28G,eAAA,WAQA,IAPA,IAAAC,GAAiBvxD,SAAA,EAAAqjD,UAAA,GACjBlmG,EAAAxK,KAAAqzE,QAAAC,aACAurC,EAAA7+G,KAAAqzE,QAAA0oC,OAAA+C,iBACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EAEA7+G,EAAA,EAAmBA,EAAAoK,EAAAjI,OAAsBnC,IAAA,CACzC,IAAAiK,EAAAG,EAAApK,GAEAy+G,KAAA5gF,SAAA4gF,EAAAv7F,WAAAjZ,EAAAiZ,SAEAjZ,EAAAwqB,OAAAgqF,EAAAhqF,KACAoqF,EAAA50G,EAES40G,IACTA,EAAA50G,GAIOw0G,MAAA5gF,SACPghF,EAAA,KACAF,EAAA,KACAC,EAAA,MACO30G,EAAA,aACP,iBAAAA,EAAAwqB,MAAAkqF,EAES10G,EAAAwqB,QAAA+pF,IAAAI,IACTA,EAAA30G,GAFA00G,EAAA10G,GAWA40G,EACAA,EAAA19G,KAAA,UACKy9G,EACLA,EAAAz9G,KAAA,UACKw9G,IACLA,EAAAx9G,KAAA,YAcAk9G,EAAAz8G,UAAA08G,cAAA,WACA1+G,KAAAqzE,QAAAtsD,OAAA/mB,KAAAqzE,QAAAtsD,MAAA0uF,yBACAz1G,KAAAomG,OAEApmG,KAAAmmG,QAYAsY,EAAAz8G,UAAAq3F,SAAA,WACA,OAAArW,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,2BAEAyzG,YAAA,MACAqC,cAAA,UASAT,EAAAz8G,UAAAm9G,aAAA,WACA,oBAAAx3G,EAAA+G,QACA/G,EAAA+G,OAAA2B,YAAA1I,KAAA3H,KAAAy6E,MAaAgkC,EAAAz8G,UAAAw1G,cAAA,WACA,IAAAz5E,EAAA/9B,KAAAqzE,QAAAC,aAEAtzE,KAAAm/G,eAMA,IAAAC,EAAA,KACAC,EAAA,KACAj/G,EAAA29B,EAAAx7B,OAEA,MAAAnC,IAAA,CACA,IAAAiK,EAAA0zB,EAAA39B,GAEA,YAAAiK,EAAA9I,OACA,iBAAA8I,EAAAwqB,KACAuqF,EAAA/0G,EAEAg1G,EAAAh1G,GAKAg1G,GACA,QAAAr/G,KAAA66F,aAAA,cACA76F,KAAAw5F,aAAA,mBAEAx5F,KAAAs/G,eAAAD,IACKD,IACL,cAAAp/G,KAAA66F,aAAA,cACA76F,KAAAw5F,aAAA,yBAEAx5F,KAAAs/G,eAAAF,KAYAX,EAAAz8G,UAAAs9G,eAAA,SAAAj1G,GACA,uBAAA1C,EAAA+G,QAAArE,EAAA+oG,WAAA,CAMA,IAFA,IAAA9iG,KAEAmZ,EAAA,EAAoBA,EAAApf,EAAA+oG,WAAA7wG,OAA8BknB,IAClDnZ,EAAAjH,KAAAgB,EAAA+oG,WAAA3pF,IAKA,GAFA9hB,EAAA+G,OAAA2B,YAAA1I,EAAA2I,EAAAtQ,KAAAy6E,KAEAz6E,KAAAqzE,QAAAksC,kBAAA,CAIA,IAAAC,EAAAx/G,KAAAqzE,QAAAksC,kBAAAE,YAEAr/G,EAAAkQ,EAAA/N,OAEA,MAAAnC,IAAA,CACA,IAAA4D,EAAAsM,EAAAlQ,GAEA,GAAA4D,EAAA,CAIA,IAAA2F,EAAA3F,EAAA6M,aAgCA,GA9BA2uG,EAAAx0G,QACArB,EAAA6G,WAAA5B,MAAA5D,MAAAw0G,EAAAx0G,OAEAw0G,EAAAE,aACAlB,GAAA70G,EAAA6G,WAAA,QAAA8tG,GAAAkB,EAAAx0G,OAAA,OAAAw0G,EAAAE,cAEAF,EAAAv0G,kBACAtB,EAAA6G,WAAA5B,MAAA3D,gBAAAu0G,EAAAv0G,iBAEAu0G,EAAAG,mBACAnB,GAAA70G,EAAA6G,WAAA,kBAAA8tG,GAAAkB,EAAAv0G,iBAAA,OAAAu0G,EAAAG,oBAEAH,EAAAI,cACAJ,EAAAK,cACArB,GAAA70G,EAAA,kBAAA20G,GAAAkB,EAAAI,YAAAJ,EAAAK,gBAEAl2G,EAAAiF,MAAA3D,gBAAAu0G,EAAAI,aAGAJ,EAAAM,YACA,eAAAN,EAAAM,UACAn2G,EAAA6G,WAAA5B,MAAAmxG,WAAA,eAAArC,GAAA,iBAAAA,GAAA,iBAAAA,GACS,WAAA8B,EAAAM,UACTn2G,EAAA6G,WAAA5B,MAAAmxG,WAAA,WAAArC,GAAA,aAAAA,GAAA,aAAAA,GACS,cAAA8B,EAAAM,UACTn2G,EAAA6G,WAAA5B,MAAAmxG,WAAA,WAAApC,GAAA,WAAAA,GAAA,eAAAD,GAAA,YAAAA,GACS,YAAA8B,EAAAM,YACTn2G,EAAA6G,WAAA5B,MAAAmxG,WAAA,WAAArC,GAAA,aAAAA,GAAA,aAAAA,GAAA,aAAAA,KAGA8B,EAAAQ,aAAA,IAAAR,EAAAQ,YAAA,CACA,IAAAjvG,EAAApJ,EAAAjB,WAAAiD,EAAAiF,MAAAmC,UAEApH,EAAAiF,MAAAmC,WAAAyuG,EAAAQ,YAAA,KACAr2G,EAAAiF,MAAA1C,OAAA,OACAvC,EAAAiF,MAAAzD,IAAA,OACAxB,EAAAiF,MAAAxD,OAAA,MAEAo0G,EAAAS,YAAA,YAAAT,EAAAS,aACA,eAAAT,EAAAS,WACAt2G,EAAA6G,WAAA5B,MAAAsxG,YAAA,aAEAv2G,EAAA6G,WAAA5B,MAAAqxG,WAAArC,GAAA4B,EAAAS,kBAMAxB,EA5RA,CA6RC57B,IAEDA,GAAA2C,kBAAA,mBAAAi5B,IAWA,IAAA0B,GAAA,SAAAn9B,GAGA,SAAAm9B,IAEA,OADArpB,EAAA92F,KAAAmgH,GACAnpB,EAAAh3F,KAAAgjF,EAAA7qE,MAAAnY,KAAAsC,YA2BA,OA/BAy0F,EAAAopB,EAAAn9B,GAaAm9B,EAAAn+G,UAAAq3F,SAAA,WACA,IAAA+mB,EAAApgH,KAAAqzE,QAAA+sC,UACAC,EAAArgH,KAAAkkG,SAAAkc,EAAA,+BACAvT,EAAAxT,GAAA,QACAjwF,UAAA,mBACAuoG,UAAA3xG,KAAAkkG,SAAA,mBAAmCmc,MAGnCp4E,EAAA+6C,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,sBACAwK,IAAA,QAKA,OAFAq0B,EAAAn/B,YAAA+jG,GAEA5kE,GAGAk4E,EAhCA,CAiCCt9B,IAEDA,GAAA2C,kBAAA,iBAAA26B,IAWA,IAAAG,GAAA,SAAAhD,GAGA,SAAAgD,IAEA,OADAxpB,EAAA92F,KAAAsgH,GACAtpB,EAAAh3F,KAAAs9G,EAAAnlG,MAAAnY,KAAAsC,YAqHA,OAzHAy0F,EAAAupB,EAAAhD,GAuBAgD,EAAAt+G,UAAAq3F,SAAA,SAAAj4E,GACA,IAAA9H,EAAAhX,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAwf,EAAAxf,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAEA8e,EAAA,SAEA9H,EAAAwF,GACA6yF,UAAA,gEACAvoG,UAAApJ,KAAA6lG,iBACKvsF,GAGLwI,EAAAhD,GAGAvW,KAAA,UACKuZ,GAEL,IAAAmmB,EAAA46C,GAAA7gF,UAAAq3F,SAAA94F,KAAAP,KAAAohB,EAAA9H,EAAAwI,GAIA,OAFA9hB,KAAA28G,oBAAA10E,GAEAA,GAqBAq4E,EAAAt+G,UAAA8iG,SAAA,SAAAlL,GACA,IAAAt0E,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAEA8G,EAAApJ,KAAAkG,YAAAvF,KAKA,OAHA43F,EAAA9lE,KAAA,+DAAArpB,EAAA,yDAGAy5E,GAAA7gF,UAAA8iG,SAAAvkG,KAAAP,KAAA45F,EAAAt0E,IASAg7F,EAAAt+G,UAAAuvC,OAAA,WACA+rE,EAAAt7G,UAAAuvC,OAAAhxC,KAAAP,MACAA,KAAAy6E,IAAAggB,gBAAA,aASA6lB,EAAAt+G,UAAAg2F,QAAA,WACAslB,EAAAt7G,UAAAg2F,QAAAz3F,KAAAP,MACAA,KAAAy6E,IAAA+e,aAAA,wBAcA8mB,EAAAt+G,UAAAgqG,eAAA,SAAA3hF,GAGA,KAAAA,EAAAy0E,OAAA,KAAAz0E,EAAAy0E,OAKAwe,EAAAt7G,UAAAgqG,eAAAzrG,KAAAP,KAAAqqB,IAGAi2F,EA1HA,CA2HC7D,IAED55B,GAAA2C,kBAAA,SAAA86B,IAYA,IAAAC,GAAA,SAAAC,GAGA,SAAAD,EAAAz5F,EAAAxB,GACAwxE,EAAA92F,KAAAugH,GAEA,IAAAzgG,EAAAk3E,EAAAh3F,KAAAwgH,EAAAjgH,KAAAP,KAAA8mB,EAAAxB,IAKA,OAHAxF,EAAA2gG,YAAA,EAEA3gG,EAAA3B,GAAA,YAAA2B,EAAA4gG,iBACA5gG,EAkEA,OA5EAi3E,EAAAwpB,EAAAC,GAqBAD,EAAAv+G,UAAA6jG,cAAA,WACA,6BAgBA0a,EAAAv+G,UAAAk7G,YAAA,SAAA7yF,GACA,IAAAsP,EAAA35B,KAAAqzE,QAAAz5C,OAGA,GAAA55B,KAAAygH,YAAAp2F,EAAAs0E,SAAAt0E,EAAAw0E,QACA4L,GAAA9wE,OADA,CAKA,IAAAgnF,EAAA3gH,KAAAqzE,QAAAwxB,SAAA,cACA+b,EAAAD,KAAA9b,SAAA,cAEA,GAAA+b,EAAA,CAKA,IAAAC,EAAA,WACA,OAAAD,EAAA3lB,SAGAuP,GAAA7wE,GACAA,EAAAE,KAAAgnF,EAAA,cAEA7gH,KAAAikC,WAAA48E,EAAA,QAXA7gH,KAAAqzE,QAAA4nB,UAeAslB,EAAAv+G,UAAAgqG,eAAA,SAAA3hF,GACArqB,KAAAygH,YAAA,EAEAD,EAAAx+G,UAAAgqG,eAAAzrG,KAAAP,KAAAqqB,IAGAk2F,EAAAv+G,UAAA0+G,gBAAA,SAAAr2F,GACArqB,KAAAygH,YAAA,GAGAF,EA7EA,CA8ECD,IAUDC,GAAAv+G,UAAA86G,aAAA,aAEAj6B,GAAA2C,kBAAA,gBAAA+6B,IAYA,IAAAO,GAAA,SAAAN,GAYA,SAAAM,EAAAh6F,EAAAxB,GACAwxE,EAAA92F,KAAA8gH,GAEA,IAAAhhG,EAAAk3E,EAAAh3F,KAAAwgH,EAAAjgH,KAAAP,KAAA8mB,EAAAxB,IAGA,OADAxF,EAAA+sF,YAAAvnF,KAAAunF,aAAA/sF,EAAAokF,SAAA,UACApkF,EA6CA,OA9DAi3E,EAAA+pB,EAAAN,GA4BAM,EAAA9+G,UAAA6jG,cAAA,WACA,0BAAA2a,EAAAx+G,UAAA6jG,cAAAtlG,KAAAP,OAkBA8gH,EAAA9+G,UAAAk7G,YAAA,SAAA7yF,GAYArqB,KAAA2W,SAAkBpO,KAAA,QAAAuvB,SAAA,KAGlBgpF,EA/DA,CAgECR,IAEDz9B,GAAA2C,kBAAA,cAAAs7B,IAWA,IAAAC,GAAA,SAAAP,GAYA,SAAAO,EAAAj6F,EAAAxB,GACAwxE,EAAA92F,KAAA+gH,GAEA,IAAAjhG,EAAAk3E,EAAAh3F,KAAAwgH,EAAAjgH,KAAAP,KAAA8mB,EAAAxB,IAKA,OAHAxF,EAAA3B,GAAA2I,EAAA,OAAAhH,EAAAkhG,YACAlhG,EAAA3B,GAAA2I,EAAA,QAAAhH,EAAAmhG,aACAnhG,EAAA3B,GAAA2I,EAAA,QAAAhH,EAAAohG,aACAphG,EAgHA,OAnIAi3E,EAAAgqB,EAAAP,GA8BAO,EAAA/+G,UAAA6jG,cAAA,WACA,0BAAA2a,EAAAx+G,UAAA6jG,cAAAtlG,KAAAP,OAgBA+gH,EAAA/+G,UAAAk7G,YAAA,SAAA7yF,GACArqB,KAAAqzE,QAAA/7C,SACAt3B,KAAAqzE,QAAAz5C,OAEA55B,KAAAqzE,QAAAx7C,SAeAkpF,EAAA/+G,UAAAm/G,aAAA,SAAA92F,GACArqB,KAAAm6F,YAAA,aAEAn6F,KAAAqzE,QAAA/7C,SACAt3B,KAAAihH,YAAA52F,GAEArqB,KAAAghH,WAAA32F,IAcA02F,EAAA/+G,UAAAg/G,WAAA,SAAA32F,GACArqB,KAAAm6F,YAAA,aACAn6F,KAAAm6F,YAAA,cACAn6F,KAAAi6F,SAAA,eAEAj6F,KAAA6sG,YAAA,UAaAkU,EAAA/+G,UAAAi/G,YAAA,SAAA52F,GACArqB,KAAAm6F,YAAA,eACAn6F,KAAAi6F,SAAA,cAEAj6F,KAAA6sG,YAAA,SAaAkU,EAAA/+G,UAAAk/G,YAAA,SAAA72F,GACArqB,KAAAm6F,YAAA,eACAn6F,KAAAi6F,SAAA,aAEAj6F,KAAA6sG,YAAA,UAGA7sG,KAAA03B,IAAA13B,KAAAqzE,QAAA,SAAArzE,KAAAmhH,eAGAJ,EApIA,CAqICT,IAUDS,GAAA/+G,UAAA86G,aAAA,OAEAj6B,GAAA2C,kBAAA,aAAAu7B,IAoBA,IAAAK,GAAA,SAAAzyC,EAAA0yC,GACA1yC,IAAA,IAAAA,EACA,IAAAxsE,EAAA2K,KAAAuzB,MAAAsuC,EAAA,IACAnuE,EAAAsM,KAAAuzB,MAAAsuC,EAAA,OACA3rE,EAAA8J,KAAAuzB,MAAAsuC,EAAA,MACA2yC,EAAAx0G,KAAAuzB,MAAAghF,EAAA,OACAE,EAAAz0G,KAAAuzB,MAAAghF,EAAA,MAmBA,OAhBAvxE,MAAA6+B,QAAAh2D,OAGA3V,EAAAxC,EAAA2B,EAAA,KAIAa,IAAA,GAAAu+G,EAAA,EAAAv+G,EAAA,OAIAxC,IAAAwC,GAAAs+G,GAAA,KAAA9gH,EAAA,OAAAA,KAAA,IAGA2B,IAAA,OAAAA,IAEAa,EAAAxC,EAAA2B,GAGAq/G,GAAAJ,GASA,SAAAK,GAAAC,GACAF,GAAAE,EAMA,SAAAC,KACAH,GAAAJ,GAGA,IAAAQ,GAAA,SAAAjzC,GACA,IAAA0yC,EAAA/+G,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,GAAAqsE,EAEA,OAAA6yC,GAAA7yC,EAAA0yC,IAYAQ,GAAA,SAAA7+B,GAYA,SAAA6+B,EAAA/6F,EAAAxB,GACAwxE,EAAA92F,KAAA6hH,GAEA,IAAA/hG,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAxB,IAIA,OAFAxF,EAAAgiG,uBAAA7gB,GAAAr/F,GAAAke,IAAAiiG,eAAA,IACAjiG,EAAA3B,GAAA2I,EAAA,aAAAhH,EAAAgiG,wBACAhiG,EA8GA,OAhIAi3E,EAAA8qB,EAAA7+B,GA6BA6+B,EAAA7/G,UAAAq3F,SAAA,SAAA2oB,GACA,IAAA54G,EAAApJ,KAAA6lG,gBACA59D,EAAA+6C,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,YAAA,gCACAuoG,UAAA,kCAAA3xG,KAAAkkG,SAAAlkG,KAAAiiH,YAAA,aAYA,OATAjiH,KAAA0kG,WAAArL,GAAA,QACAjwF,YAAA,aAGAyzG,YAAA,QAGA78G,KAAAkiH,kBACAj6E,EAAAn/B,YAAA9I,KAAA0kG,YACAz8D,GAGA45E,EAAA7/G,UAAAyc,QAAA,WACAze,KAAA0kG,WAAA,KACA1kG,KAAAmiH,UAAA,KAEAn/B,EAAAhhF,UAAAyc,QAAAle,KAAAP,OAWA6hH,EAAA7/G,UAAAkgH,gBAAA,WACA,GAAAliH,KAAA0kG,WAAA,CAIA,MAAA1kG,KAAA0kG,WAAAl0F,WACAxQ,KAAA0kG,WAAAj0F,YAAAzQ,KAAA0kG,WAAAl0F,YAGAxQ,KAAAmiH,UAAAz5G,EAAAK,eAAA/I,KAAAoiH,gBAAApiH,KAAAqiH,YAAA,IACAriH,KAAA0kG,WAAA57F,YAAA9I,KAAAmiH,aAgBAN,EAAA7/G,UAAAqgH,YAAA,SAAA70E,GACA,OAAAo0E,GAAAp0E,IAcAq0E,EAAA7/G,UAAAsgH,qBAAA,SAAA90E,GACA,IAAA+0E,EAAAviH,KAAAqiH,YAAA70E,GAEA+0E,IAAAviH,KAAAoiH,iBAIApiH,KAAAoiH,eAAAG,EACAviH,KAAA2oG,sBAAA3oG,KAAAkiH,mBAcAL,EAAA7/G,UAAA+/G,cAAA,SAAA13F,KAEAw3F,EAjIA,CAkICh/B,IAUDg/B,GAAA7/G,UAAAigH,WAAA,OAUAJ,GAAA7/G,UAAA86G,aAAA,OAEAj6B,GAAA2C,kBAAA,cAAAq8B,IAWA,IAAAW,GAAA,SAAAC,GAYA,SAAAD,EAAA17F,EAAAxB,GACAwxE,EAAA92F,KAAAwiH,GAEA,IAAA1iG,EAAAk3E,EAAAh3F,KAAAyiH,EAAAliH,KAAAP,KAAA8mB,EAAAxB,IAGA,OADAxF,EAAA3B,GAAA2I,EAAA,QAAAhH,EAAAohG,aACAphG,EAmDA,OApEAi3E,EAAAyrB,EAAAC,GA4BAD,EAAAxgH,UAAA6jG,cAAA,WACA,0BAaA2c,EAAAxgH,UAAA+/G,cAAA,SAAA13F,GAEA,IAAAmjB,EAAAxtC,KAAAqzE,QAAAqvC,YAAA1iH,KAAAqzE,QAAAsvC,WAAA1tF,YAAAj1B,KAAAqzE,QAAAp+C,cAEAj1B,KAAAsiH,qBAAA90E,IAeAg1E,EAAAxgH,UAAAk/G,YAAA,SAAA72F,GACArqB,KAAAqzE,QAAAxxD,YAGA7hB,KAAAsiH,qBAAAtiH,KAAAqzE,QAAAxxD,aAGA2gG,EArEA,CAsECX,IAUDW,GAAAxgH,UAAAigH,WAAA,eAUAO,GAAAxgH,UAAA86G,aAAA,eAEAj6B,GAAA2C,kBAAA,qBAAAg9B,IAWA,IAAAI,GAAA,SAAAH,GAYA,SAAAG,EAAA97F,EAAAxB,GACAwxE,EAAA92F,KAAA4iH,GAKA,IAAA9iG,EAAAk3E,EAAAh3F,KAAAyiH,EAAAliH,KAAAP,KAAA8mB,EAAAxB,IAQA,OANAxF,EAAA3B,GAAA2I,EAAA,iBAAAhH,EAAAiiG,eAKAjiG,EAAA3B,GAAA2I,EAAA,iBAAAhH,EAAAgiG,wBACAhiG,EAqCA,OA9DAi3E,EAAA6rB,EAAAH,GAoCAG,EAAA5gH,UAAA6jG,cAAA,WACA,sBAgBA+c,EAAA5gH,UAAA+/G,cAAA,SAAA13F,GACA,IAAAxI,EAAA7hB,KAAAqzE,QAAAxxD,WAEAA,GAAA7hB,KAAAq0C,YAAAxyB,IACA7hB,KAAAq0C,UAAAxyB,EACA7hB,KAAAsiH,qBAAAzgG,KAIA+gG,EA/DA,CAgECf,IAUDe,GAAA5gH,UAAAigH,WAAA,WAUAW,GAAA5gH,UAAA86G,aAAA,WAEAj6B,GAAA2C,kBAAA,kBAAAo9B,IAYA,IAAAC,GAAA,SAAA7/B,GAGA,SAAA6/B,IAEA,OADA/rB,EAAA92F,KAAA6iH,GACA7rB,EAAAh3F,KAAAgjF,EAAA7qE,MAAAnY,KAAAsC,YAgBA,OApBAy0F,EAAA8rB,EAAA7/B,GAaA6/B,EAAA7gH,UAAAq3F,SAAA,WACA,OAAArW,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,oCACAuoG,UAAA,+BAIAkR,EArBA,CAsBChgC,IAEDA,GAAA2C,kBAAA,cAAAq9B,IAWA,IAAAC,GAAA,SAAAL,GAYA,SAAAK,EAAAh8F,EAAAxB,GACAwxE,EAAA92F,KAAA8iH,GAEA,IAAAhjG,EAAAk3E,EAAAh3F,KAAAyiH,EAAAliH,KAAAP,KAAA8mB,EAAAxB,IAIA,OAFAxF,EAAA3B,GAAA2I,EAAA,iBAAAhH,EAAAgiG,wBACAhiG,EAAA3B,GAAA2I,EAAA,QAAAhH,EAAAohG,aACAphG,EA6EA,OA/FAi3E,EAAA+rB,EAAAL,GA6BAK,EAAA9gH,UAAA6jG,cAAA,WACA,4BAgBAid,EAAA9gH,UAAAqgH,YAAA,SAAA70E,GAEA,UAAAi1E,EAAAzgH,UAAAqgH,YAAA9hH,KAAAP,KAAAwtC,IAcAs1E,EAAA9gH,UAAA+/G,cAAA,SAAA13F,GACArqB,KAAAqzE,QAAAxxD,aAMA7hB,KAAAqzE,QAAA0vC,qBACA/iH,KAAAsiH,qBAAAtiH,KAAAqzE,QAAA0vC,wBAEA/iH,KAAAsiH,qBAAAtiH,KAAAqzE,QAAA2vC,mBAgBAF,EAAA9gH,UAAAk/G,YAAA,SAAA72F,GACArqB,KAAAqzE,QAAAxxD,YAGA7hB,KAAAsiH,qBAAA,IAGAQ,EAhGA,CAiGCjB,IAUDiB,GAAA9gH,UAAAigH,WAAA,iBAUAa,GAAA9gH,UAAA86G,aAAA,iBAEAj6B,GAAA2C,kBAAA,uBAAAs9B,IAaA,IAAAG,GAAA,SAAAjgC,GAYA,SAAAigC,EAAAn8F,EAAAxB,GACAwxE,EAAA92F,KAAAijH,GAEA,IAAAnjG,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAxB,IAIA,OAFAxF,EAAAojG,gBACApjG,EAAA3B,GAAA2B,EAAAgH,SAAA,iBAAAhH,EAAAojG,eACApjG,EAoDA,OAtEAi3E,EAAAksB,EAAAjgC,GA6BAigC,EAAAjhH,UAAAq3F,SAAA,WACA,IAAApxD,EAAA+6C,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,iCAWA,OARApJ,KAAA0kG,WAAArL,GAAA,OACAjwF,UAAA,mBACAuoG,UAAA,kCAAA3xG,KAAAkkG,SAAA,0BAAAlkG,KAAAkkG,SAAA,UAEA2Y,YAAA,QAGA50E,EAAAn/B,YAAA9I,KAAA0kG,YACAz8D,GAGAg7E,EAAAjhH,UAAAyc,QAAA,WACAze,KAAA0kG,WAAA,KAEA1hB,EAAAhhF,UAAAyc,QAAAle,KAAAP,OAcAijH,EAAAjhH,UAAAkhH,cAAA,SAAA74F,GACArqB,KAAA8mB,SAAAjF,aAAAlJ,IACA3Y,KAAAmmG,OAEAnmG,KAAAomG,QAIA6c,EAvEA,CAwECpgC,IAEDA,GAAA2C,kBAAA,cAAAy9B,IAYA,IAAAE,GAAA,SAAAngC,GAYA,SAAAmgC,EAAAr8F,EAAAxB,GACAwxE,EAAA92F,KAAAmjH,GAGA,IAAArjG,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAxB,IAQA,OANAxF,EAAAsjG,IAAAtjG,EAAA+kF,SAAA/kF,EAAAmjE,SAAAogC,SAGAvjG,EAAA7a,WAAA6a,EAAAmjE,SAAAh+E,UAEA6a,EAAAyxB,SACAzxB,EAmXA,OA1YAi3E,EAAAosB,EAAAngC,GAkCAmgC,EAAAnhH,UAAAi8B,QAAA,WACA,OAAAj+B,KAAAi9G,UAQAkG,EAAAnhH,UAAAuvC,OAAA,WACAvxC,KAAAi+B,YAIAj+B,KAAAme,GAAA,YAAAne,KAAA0gH,iBACA1gH,KAAAme,GAAA,aAAAne,KAAA0gH,iBACA1gH,KAAAme,GAAA,QAAAne,KAAAm9G,aACAn9G,KAAAme,GAAA,OAAAne,KAAAo9G,YACAp9G,KAAAme,GAAA,QAAAne,KAAAk9G,aAEAl9G,KAAAme,GAAAne,KAAAqzE,QAAA,kBAAArzE,KAAA4lC,QAEA5lC,KAAAsjH,aACAtjH,KAAAme,GAAAne,KAAAqzE,QAAArzE,KAAAsjH,YAAAtjH,KAAA4lC,QAGA5lC,KAAAm6F,YAAA,YACAn6F,KAAAw5F,aAAA,cAEAx5F,KAAAi9G,UAAA,IAQAkG,EAAAnhH,UAAAg2F,QAAA,WACA,GAAAh4F,KAAAi+B,UAAA,CAGA,IAAA2gE,EAAA5+F,KAAAojH,IAAA3oC,IAAAglB,cAEAz/F,KAAAqe,IAAA,YAAAre,KAAA0gH,iBACA1gH,KAAAqe,IAAA,aAAAre,KAAA0gH,iBACA1gH,KAAAqe,IAAA,QAAAre,KAAAm9G,aACAn9G,KAAAqe,IAAA,OAAAre,KAAAo9G,YACAp9G,KAAAqe,IAAA,QAAAre,KAAAk9G,aACAl9G,KAAAqe,IAAAre,KAAAqzE,QAAA,kBAAArzE,KAAA4lC,QACA5lC,KAAAqe,IAAAugF,EAAA,YAAA5+F,KAAAujH,iBACAvjH,KAAAqe,IAAAugF,EAAA,UAAA5+F,KAAAwjH,eACAxjH,KAAAqe,IAAAugF,EAAA,YAAA5+F,KAAAujH,iBACAvjH,KAAAqe,IAAAugF,EAAA,WAAA5+F,KAAAwjH,eACAxjH,KAAAy6F,gBAAA,YAEAz6F,KAAAi6F,SAAA,YAEAj6F,KAAAsjH,aACAtjH,KAAAqe,IAAAre,KAAAqzE,QAAArzE,KAAAsjH,YAAAtjH,KAAA4lC,QAEA5lC,KAAAi9G,UAAA,IAoBAkG,EAAAnhH,UAAAq3F,SAAA,SAAA9wF,GACA,IAAA+Q,EAAAhX,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAwf,EAAAxf,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAgBA,OAbAgX,EAAAlQ,UAAAkQ,EAAAlQ,UAAA,cACAkQ,EAAAwF,GACA6sF,SAAA,GACKryF,GAELwI,EAAAhD,GACAopE,KAAA,SACAu7B,gBAAA,EACAC,gBAAA,EACAC,gBAAA,IACAhY,SAAA,GACK7pF,GAELkhE,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAAuI,EAAA+Q,EAAAwI,IAeAqhG,EAAAnhH,UAAA0+G,gBAAA,SAAAr2F,GACA,IAAAu0E,EAAA5+F,KAAAojH,IAAA3oC,IAAAglB,cAEA,cAAAp1E,EAAA9hB,MACA8hB,EAAA2zE,iBAMA,eAAA3zE,EAAA9hB,MAAA4tF,GACA9rE,EAAA2zE,iBAEAjD,KAEA/6F,KAAAi6F,SAAA,eAOAj6F,KAAA2W,QAAA,gBAEA3W,KAAAme,GAAAygF,EAAA,YAAA5+F,KAAAujH,iBACAvjH,KAAAme,GAAAygF,EAAA,UAAA5+F,KAAAwjH,eACAxjH,KAAAme,GAAAygF,EAAA,YAAA5+F,KAAAujH,iBACAvjH,KAAAme,GAAAygF,EAAA,WAAA5+F,KAAAwjH,eAEAxjH,KAAAujH,gBAAAl5F,IAkBA84F,EAAAnhH,UAAAuhH,gBAAA,SAAAl5F,KAcA84F,EAAAnhH,UAAAwhH,cAAA,WACA,IAAA5kB,EAAA5+F,KAAAojH,IAAA3oC,IAAAglB,cAEAtE,KAEAn7F,KAAAm6F,YAAA,eAOAn6F,KAAA2W,QAAA,kBAEA3W,KAAAqe,IAAAugF,EAAA,YAAA5+F,KAAAujH,iBACAvjH,KAAAqe,IAAAugF,EAAA,UAAA5+F,KAAAwjH,eACAxjH,KAAAqe,IAAAugF,EAAA,YAAA5+F,KAAAujH,iBACAvjH,KAAAqe,IAAAugF,EAAA,WAAA5+F,KAAAwjH,eAEAxjH,KAAA4lC,UAYAu9E,EAAAnhH,UAAA4jC,OAAA,WAKA,GAAA5lC,KAAAy6E,IAAA,CAQA,IAAAmpC,EAAA5jH,KAAA6jH,aACAT,EAAApjH,KAAAojH,IAGA,GAAAA,EAAA,EAKA,kBAAAQ,YAAA,GAAAA,IAAAjrG,OACAirG,EAAA,GAIA,IAAAl2G,GAAA,IAAAk2G,GAAAE,QAAA,OACAl1G,EAAAw0G,EAAAn7E,KAAAr5B,MASA,OANA5O,KAAAiF,WACA2J,EAAA1C,OAAAwB,EAEAkB,EAAA3C,MAAAyB,EAGAk2G,KAgBAT,EAAAnhH,UAAA+hH,kBAAA,SAAA15F,GACA,IAAA9kB,EAAAs2F,GAAA77F,KAAAy6E,IAAApwD,GAEA,OAAArqB,KAAAiF,WACAM,EAAA+J,EAEA/J,EAAA6J,GAaA+zG,EAAAnhH,UAAAm7G,YAAA,WACAn9G,KAAAme,GAAAne,KAAAojH,IAAA3oC,IAAAglB,cAAA,UAAAz/F,KAAAgsG,iBAeAmX,EAAAnhH,UAAAgqG,eAAA,SAAA3hF,GAEA,KAAAA,EAAAy0E,OAAA,KAAAz0E,EAAAy0E,OACAz0E,EAAA2zE,iBACAh+F,KAAAgkH,YAGK,KAAA35F,EAAAy0E,OAAA,KAAAz0E,EAAAy0E,QACLz0E,EAAA2zE,iBACAh+F,KAAAikH,gBAaAd,EAAAnhH,UAAAo7G,WAAA,WACAp9G,KAAAqe,IAAAre,KAAAojH,IAAA3oC,IAAAglB,cAAA,UAAAz/F,KAAAgsG,iBAYAmX,EAAAnhH,UAAAk7G,YAAA,SAAA7yF,GACAA,EAAAo0E,2BACAp0E,EAAA2zE,kBAgBAmlB,EAAAnhH,UAAAiD,SAAA,SAAAi/G,GACA,QAAAj3G,IAAAi3G,EACA,OAAAlkH,KAAAmkH,YAAA,EAGAnkH,KAAAmkH,YAAAD,EAEAlkH,KAAAmkH,UACAnkH,KAAAi6F,SAAA,uBAEAj6F,KAAAi6F,SAAA,0BAIAkpB,EA3YA,CA4YCtgC,IAEDA,GAAA2C,kBAAA,SAAA29B,IAWA,IAAAiB,GAAA,SAAAphC,GAYA,SAAAohC,EAAAt9F,EAAAxB,GACAwxE,EAAA92F,KAAAokH,GAEA,IAAAtkG,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAxB,IAIA,OAFAxF,EAAAukG,YACAvkG,EAAA3B,GAAA2I,EAAA,WAAAhH,EAAA8lB,QACA9lB,EA0EA,OA5FAi3E,EAAAqtB,EAAAphC,GA6BAohC,EAAApiH,UAAAq3F,SAAA,WACA,OAAArW,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,oBACAuoG,UAAA,wCAAA3xG,KAAAkkG,SAAA,kCAIAkgB,EAAApiH,UAAAyc,QAAA,WACAze,KAAAqkH,SAAA,KAEArhC,EAAAhhF,UAAAyc,QAAAle,KAAAP,OAaAokH,EAAApiH,UAAA4jC,OAAA,SAAAvb,GACA,IAAAqO,EAAA14B,KAAAqzE,QAAA36C,WACA7W,EAAA7hB,KAAAqzE,QAAAxxD,WACAwY,EAAAr6B,KAAAqzE,QAAAh5C,cACAsqE,EAAA3kG,KAAAqkH,SAGAC,EAAA,SAAA92E,EAAA7nC,GAEA,IAAAX,EAAAwoC,EAAA7nC,GAAA,EAEA,YAAAX,GAAA,IAAAA,GAAA,KAIAhF,KAAAy6E,IAAA7rE,MAAA3C,MAAAq4G,EAAAjqF,EAAAxY,GAGA,QAAAzhB,EAAA,EAAmBA,EAAAs4B,EAAAn2B,OAAqBnC,IAAA,CACxC,IAAAoF,EAAAkzB,EAAAlzB,MAAApF,GACAuF,EAAA+yB,EAAA/yB,IAAAvF,GACAkrD,EAAAq5C,EAAAvkG,GAEAkrD,IACAA,EAAAtrD,KAAAy6E,IAAA3xE,YAAAuwF,MACAsL,EAAAvkG,GAAAkrD,GAIAA,EAAA18C,MAAAnJ,KAAA6+G,EAAA9+G,EAAA60B,GACAixB,EAAA18C,MAAA3C,MAAAq4G,EAAA3+G,EAAAH,EAAA60B,GAIA,QAAA5Q,EAAAk7E,EAAApiG,OAAkCknB,EAAAiP,EAAAn2B,OAAsBknB,IACxDzpB,KAAAy6E,IAAAhqE,YAAAk0F,EAAAl7E,EAAA,IAEAk7E,EAAApiG,OAAAm2B,EAAAn2B,QAGA6hH,EA7FA,CA8FCvhC,IAEDA,GAAA2C,kBAAA,kBAAA4+B,IAWA,IAAAG,GAAA,SAAAvhC,GAGA,SAAAuhC,IAEA,OADAztB,EAAA92F,KAAAukH,GACAvtB,EAAAh3F,KAAAgjF,EAAA7qE,MAAAnY,KAAAsC,YA2EA,OA/EAy0F,EAAAwtB,EAAAvhC,GAaAuhC,EAAAviH,UAAAq3F,SAAA,WACA,OAAArW,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,sBAgBAm7G,EAAAviH,UAAA4jC,OAAA,SAAA4+E,EAAAC,EAAAxmD,GACA,IAAAymD,EAAA73G,GAAA7M,KAAAy6E,KACAkqC,EAAA93G,GAAA7M,KAAAqzE,QAAAprC,MACA28E,EAAAJ,EAAAv4G,MAAAw4G,EAIA,GAAAE,GAAAD,EAAA,CAQA,IAAAG,EAAAL,EAAA/+G,KAAAk/G,EAAAl/G,KAAAm/G,EAMAE,EAAAN,EAAAv4G,MAAA24G,GAAAD,EAAA/+G,MAAA4+G,EAAA5+G,OAIAm/G,EAAAL,EAAAz4G,MAAA,EAIA44G,EAAAE,EACAA,KAAAF,EACKC,EAAAC,IACLA,EAAAD,GAMAC,EAAA,EACAA,EAAA,EACKA,EAAAL,EAAAz4G,QACL84G,EAAAL,EAAAz4G,OAGAjM,KAAAy6E,IAAA7rE,MAAAhJ,MAAA,IAAAm/G,EAAA,KACA96G,GAAAjK,KAAAy6E,IAAAxc,KAGAsmD,EAhFA,CAiFC1hC,IAEDA,GAAA2C,kBAAA,cAAA++B,IAYA,IAAAS,GAAA,SAAAhiC,GAGA,SAAAgiC,IAEA,OADAluB,EAAA92F,KAAAglH,GACAhuB,EAAAh3F,KAAAgjF,EAAA7qE,MAAAnY,KAAAsC,YAiDA,OArDAy0F,EAAAiuB,EAAAhiC,GAaAgiC,EAAAhjH,UAAAq3F,SAAA,WACA,OAAArW,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,mCACAuoG,UAAA,wCAAA3xG,KAAAkkG,SAAA,oCAiBA8gB,EAAAhjH,UAAA4jC,OAAA,SAAA4+E,EAAAC,GACA,IAAAzuF,EAAAh2B,KAGAA,KAAAilH,QACAjlH,KAAA6oG,qBAAA7oG,KAAAilH,QAGAjlH,KAAAilH,OAAAjlH,KAAA2oG,sBAAA,WACA,IAAAn7D,EAAAxX,EAAAq9C,QAAAqvC,YAAA1sF,EAAAq9C,QAAAsvC,WAAA1tF,YAAAe,EAAAq9C,QAAAp+C,cAEAgpC,EAAA2jD,GAAAp0E,EAAAxX,EAAAq9C,QAAAxxD,YACAqjG,EAAAlvF,EAAA6uE,SAAA,eAEAqgB,GACAA,EAAAt/E,OAAA4+E,EAAAC,EAAAxmD,MAKA+mD,EAtDA,CAuDCniC,IAUDmiC,GAAAhjH,UAAAihF,UACA0hB,aAIAnrE,OAAA,IAAAi8D,GAAAE,GACAqvB,GAAAhjH,UAAAihF,SAAA0hB,SAAAt7F,KAAA,eAGAw5E,GAAA2C,kBAAA,kBAAAw/B,IAcA,IAAAG,GAAA,SAAAniC,GAYA,SAAAmiC,EAAAr+F,EAAAxB,GACAwxE,EAAA92F,KAAAmlH,GAEA,IAAArlG,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAxB,IAGA,OADAxF,EAAA8lB,OAAAq7D,GAAAr/F,GAAAke,IAAA8lB,QAAA,IACA9lB,EA+CA,OAhEAi3E,EAAAouB,EAAAniC,GA4BAmiC,EAAAnjH,UAAAq3F,SAAA,WACA,OAAArW,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,uBAiBA+7G,EAAAnjH,UAAA4jC,OAAA,SAAA4+E,EAAAC,GACA,IAAAzuF,EAAAh2B,KAGAA,KAAAilH,QACAjlH,KAAA6oG,qBAAA7oG,KAAAilH,QAGAjlH,KAAAilH,OAAAjlH,KAAA2oG,sBAAA,WACA,IAAA9mF,EAAAmU,EAAAq9C,QAAAxxD,WACAo8C,EAAA2jD,GAAA6C,EAAA5iG,KAEAmU,EAAAykD,IAAA7rE,MAAAnJ,KAAA++G,EAAAv4G,MAAAw4G,EAAA,KACAzuF,EAAA6uE,SAAA,eAAAj/D,OAAA4+E,EAAAC,EAAAxmD,MAIAknD,EAjEA,CAkECtiC,IAUDsiC,GAAAnjH,UAAAihF,UACA0hB,UAAA,gBAGA9hB,GAAA2C,kBAAA,mBAAA2/B,IAMA,IAAAC,GAAA,EAGAC,GAAA,GASAC,GAAA,SAAAC,GAYA,SAAAD,EAAAx+F,EAAAxB,GACAwxE,EAAA92F,KAAAslH,GAEA,IAAAxlG,EAAAk3E,EAAAh3F,KAAAulH,EAAAhlH,KAAAP,KAAA8mB,EAAAxB,IAGA,OADAxF,EAAA0lG,oBACA1lG,EAuTA,OAxUAi3E,EAAAuuB,EAAAC,GA2BAD,EAAAtjH,UAAAwjH,kBAAA,WACA,IAAAxvF,EAAAh2B,KAEAA,KAAA4lC,OAAAq7D,GAAAr/F,GAAA5B,UAAA4lC,QAAAy/E,IAEArlH,KAAAme,GAAAne,KAAAqzE,QAAA,aAAArzE,KAAA4lC,QACA5lC,KAAAme,GAAAne,KAAAqzE,QAAA,QAAArzE,KAAAkhH,aAIAlhH,KAAAylH,eAAA,KAEAzlH,KAAAme,GAAAne,KAAAqzE,SAAA,sBACAr9C,EAAAoyE,cAAApyE,EAAAyvF,gBAEAzvF,EAAAyvF,eAAAzvF,EAAAqyE,YAAA,WACAryE,EAAA2yE,sBAAA,WACA3yE,EAAA4P,YAEOy/E,MAGPrlH,KAAAme,GAAAne,KAAAqzE,SAAA,sCACAr9C,EAAAoyE,cAAApyE,EAAAyvF,kBAGAzlH,KAAAme,GAAAne,KAAAqzE,SAAA,sBAAArzE,KAAA4lC,SAWA0/E,EAAAtjH,UAAAq3F,SAAA,WACA,OAAAksB,EAAAvjH,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,wBAEA0iG,aAAA9rG,KAAAkkG,SAAA,mBAkBAohB,EAAAtjH,UAAA0jH,QAAA,SAAAzwF,EAAAjwB,GACA,IAAA6c,EAAA7hB,KAAAqzE,QAAAxxD,WAGA7hB,KAAAy6E,IAAA+e,aAAA,qBAAAx0F,GAAA8+G,QAAA,IAGA9jH,KAAAy6E,IAAA+e,aAAA,iBAAAx5F,KAAAkkG,SAAA,qDAA4G0d,GAAA3sF,EAAApT,GAAA+/F,GAAA//F,MAAA,eAG5G7hB,KAAAojH,IAAAx9E,OAAA/4B,GAAA7M,KAAAy6E,KAAAz1E,IAgBAsgH,EAAAtjH,UAAA4jC,OAAA,SAAAvb,GACA,IAAArlB,EAAAugH,EAAAvjH,UAAA4jC,OAAArlC,KAAAP,MAGA,OADAA,KAAA0lH,QAAA1lH,KAAA2lH,kBAAA3gH,GACAA,GAcAsgH,EAAAtjH,UAAA2jH,gBAAA,WACA,OAAA3lH,KAAAqzE,QAAAqvC,YAAA1iH,KAAAqzE,QAAAsvC,WAAA1tF,YAAAj1B,KAAAqzE,QAAAp+C,eAcAqwF,EAAAtjH,UAAAk/G,YAAA,SAAA72F,GACArqB,KAAA0lH,QAAA1lH,KAAAqzE,QAAAxxD,WAAA,IAWAyjG,EAAAtjH,UAAA6hH,WAAA,WACA,IAAA7+G,EAAAhF,KAAA2lH,kBAAA3lH,KAAAqzE,QAAAxxD,WAEA,OAAA7c,GAAA,IAAAA,GAaAsgH,EAAAtjH,UAAA0+G,gBAAA,SAAAr2F,GACAoyE,GAAApyE,KAKAA,EAAAk0E,kBACAv+F,KAAAqzE,QAAAqvC,WAAA,GAEA1iH,KAAA4lH,iBAAA5lH,KAAAqzE,QAAA/7C,SACAt3B,KAAAqzE,QAAAx7C,QAEA0tF,EAAAvjH,UAAA0+G,gBAAAngH,KAAAP,KAAAqqB,KAaAi7F,EAAAtjH,UAAAuhH,gBAAA,SAAAl5F,GACA,GAAAoyE,GAAApyE,GAAA,CAIA,IAAAw7F,EAAA7lH,KAAA+jH,kBAAA15F,GAAArqB,KAAAqzE,QAAAxxD,WAGAgkG,IAAA7lH,KAAAqzE,QAAAxxD,aACAgkG,GAAA,IAIA7lH,KAAAqzE,QAAAp+C,YAAA4wF,KAGAP,EAAAtjH,UAAAuvC,OAAA,WACAg0E,EAAAvjH,UAAAuvC,OAAAhxC,KAAAP,MACA,IAAA8lH,EAAA9lH,KAAA6kG,SAAA,oBAEAihB,GAIAA,EAAA3f,QAGAmf,EAAAtjH,UAAAg2F,QAAA,WACAutB,EAAAvjH,UAAAg2F,QAAAz3F,KAAAP,MACA,IAAA8lH,EAAA9lH,KAAA6kG,SAAA,oBAEAihB,GAIAA,EAAA1f,QAaAkf,EAAAtjH,UAAAwhH,cAAA,SAAAn5F,GACAk7F,EAAAvjH,UAAAwhH,cAAAjjH,KAAAP,KAAAqqB,GAGAA,GACAA,EAAAk0E,kBAEAv+F,KAAAqzE,QAAAqvC,WAAA,GASA1iH,KAAAqzE,QAAA18D,SAA0BpO,KAAA,aAAA8Q,OAAArZ,KAAA42G,mBAAA,IAC1B52G,KAAA4lH,iBACAnb,GAAAzqG,KAAAqzE,QAAAz5C,SASA0rF,EAAAtjH,UAAAiiH,YAAA,WACAjkH,KAAAqzE,QAAAp+C,YAAAj1B,KAAAqzE,QAAAp+C,cAAAmwF,KAQAE,EAAAtjH,UAAAgiH,SAAA,WACAhkH,KAAAqzE,QAAAp+C,YAAAj1B,KAAAqzE,QAAAp+C,cAAAmwF,KAaAE,EAAAtjH,UAAA+jH,aAAA,SAAA17F,GACArqB,KAAAqzE,QAAA/7C,SACAt3B,KAAAqzE,QAAAz5C,OAEA55B,KAAAqzE,QAAAx7C,SAeAytF,EAAAtjH,UAAAgqG,eAAA,SAAA3hF,GAGA,KAAAA,EAAAy0E,OAAA,KAAAz0E,EAAAy0E,OACAz0E,EAAA2zE,iBACAh+F,KAAA+lH,aAAA17F,IACKk7F,EAAAvjH,UAAAgqG,gBAGLuZ,EAAAvjH,UAAAgqG,eAAAzrG,KAAAP,KAAAqqB,IAIAi7F,EAzUA,CA0UCnC,IAUDmC,GAAAtjH,UAAAihF,UACA0hB,UAAA,qCACA0e,QAAA,mBAIA7pF,OAAA,IAAAi8D,GAAAE,GACA2vB,GAAAtjH,UAAAihF,SAAA0hB,SAAArmF,OAAA,wBAQAgnG,GAAAtjH,UAAAshH,YAAA,aAEAzgC,GAAA2C,kBAAA,UAAA8/B,IAYA,IAAAU,GAAA,SAAAhjC,GAYA,SAAAgjC,EAAAl/F,EAAAxB,GACAwxE,EAAA92F,KAAAgmH,GAEA,IAAAlmG,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAxB,IAMA,OAJAxF,EAAAyjG,gBAAAtiB,GAAAr/F,GAAAke,IAAAyjG,iBAAA,IACAzjG,EAAAmmG,yBAAAhlB,GAAAr/F,GAAAke,IAAAomG,iBAAA,IAEApmG,EAAAyxB,SACAzxB,EA4LA,OAhNAi3E,EAAAivB,EAAAhjC,GA+BAgjC,EAAAhkH,UAAAq3F,SAAA,WACA,OAAArW,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,sCAeA48G,EAAAhkH,UAAAuhH,gBAAA,SAAAl5F,GACA,IAAA87F,EAAAnmH,KAAA6kG,SAAA,WAEA,GAAAshB,EAAA,CACA,IAAAL,EAAAK,EAAAthB,SAAA,oBACAuhB,EAAAD,EAAAl+E,KACAu8E,EAAA33G,GAAAu5G,GACA3B,EAAA5oB,GAAAuqB,EAAA/7F,GAAAjb,EAKAq1G,EAAA,EACAA,EAAA,EACOA,EAAA,IACPA,EAAA,GAGAqB,GACAA,EAAAlgF,OAAA4+E,EAAAC,KA2BAuB,EAAAhkH,UAAAkkH,gBAAA,SAAA77F,GACA,IAAA87F,EAAAnmH,KAAA6kG,SAAA,WAEAshB,GACAA,EAAA5C,gBAAAl5F,IAYA27F,EAAAhkH,UAAAi8B,QAAA,WACA,OAAAj+B,KAAAi9G,UAQA+I,EAAAhkH,UAAAg2F,QAAA,WACAh4F,KAAA2kG,WAAAn4E,QAAA,SAAAotE,GACA,OAAAA,EAAA5B,SAAA4B,EAAA5B,YAGAh4F,KAAAi+B,YAIAj+B,KAAAqe,KAAA,0BAAAre,KAAA0gH,iBACA1gH,KAAAqe,IAAAre,KAAAy6E,IAAA,YAAAz6E,KAAAujH,iBACAvjH,KAAAwjH,gBAEAxjH,KAAAi6F,SAAA,YAEAj6F,KAAAi9G,UAAA,IAQA+I,EAAAhkH,UAAAuvC,OAAA,WACAvxC,KAAA2kG,WAAAn4E,QAAA,SAAAotE,GACA,OAAAA,EAAAroD,QAAAqoD,EAAAroD,WAGAvxC,KAAAi+B,YAIAj+B,KAAAme,IAAA,0BAAAne,KAAA0gH,iBACA1gH,KAAAme,GAAAne,KAAAy6E,IAAA,YAAAz6E,KAAAujH,iBACAvjH,KAAAm6F,YAAA,YAEAn6F,KAAAi9G,UAAA,IAcA+I,EAAAhkH,UAAA0+G,gBAAA,SAAAr2F,GACA,IAAAu0E,EAAA5+F,KAAAy6E,IAAAglB,cACA0mB,EAAAnmH,KAAA6kG,SAAA,WAEAshB,GACAA,EAAAzF,gBAAAr2F,GAGArqB,KAAAme,GAAAygF,EAAA,YAAA5+F,KAAAimH,0BACAjmH,KAAAme,GAAAygF,EAAA,YAAA5+F,KAAAimH,0BACAjmH,KAAAme,GAAAygF,EAAA,UAAA5+F,KAAAwjH,eACAxjH,KAAAme,GAAAygF,EAAA,WAAA5+F,KAAAwjH,gBAcAwC,EAAAhkH,UAAAwhH,cAAA,SAAAn5F,GACA,IAAAu0E,EAAA5+F,KAAAy6E,IAAAglB,cACA0mB,EAAAnmH,KAAA6kG,SAAA,WAEAshB,GACAA,EAAA3C,cAAAn5F,GAGArqB,KAAAqe,IAAAugF,EAAA,YAAA5+F,KAAAimH,0BACAjmH,KAAAqe,IAAAugF,EAAA,YAAA5+F,KAAAimH,0BACAjmH,KAAAqe,IAAAugF,EAAA,UAAA5+F,KAAAwjH,eACAxjH,KAAAqe,IAAAugF,EAAA,WAAA5+F,KAAAwjH,gBAGAwC,EAjNA,CAkNCnjC,IAUDmjC,GAAAhkH,UAAAihF,UACA0hB,UAAA,YAGA9hB,GAAA2C,kBAAA,kBAAAwgC,IAWA,IAAAK,GAAA,SAAA7F,GAYA,SAAA6F,EAAAv/F,EAAAxB,GACAwxE,EAAA92F,KAAAqmH,GAEA,IAAAvmG,EAAAk3E,EAAAh3F,KAAAwgH,EAAAjgH,KAAAP,KAAA8mB,EAAAxB,IAOA,OALAxF,EAAA3B,GAAA2I,EAAA,mBAAAhH,EAAAwmG,yBAEA,IAAA59G,EAAAshG,GAAAuc,oBACAzmG,EAAAk4E,UAEAl4E,EAuDA,OA5EAi3E,EAAAsvB,EAAA7F,GAgCA6F,EAAArkH,UAAA6jG,cAAA,WACA,gCAAA2a,EAAAx+G,UAAA6jG,cAAAtlG,KAAAP,OAcAqmH,EAAArkH,UAAAskH,uBAAA,SAAAj8F,GACArqB,KAAAqzE,QAAAmzC,eACAxmH,KAAA6sG,YAAA,kBAEA7sG,KAAA6sG,YAAA,eAiBAwZ,EAAArkH,UAAAk7G,YAAA,SAAA7yF,GACArqB,KAAAqzE,QAAAmzC,eAGAxmH,KAAAqzE,QAAAozC,iBAFAzmH,KAAAqzE,QAAAqzC,qBAMAL,EA7EA,CA8EC/F,IAUD+F,GAAArkH,UAAA86G,aAAA,aAEAj6B,GAAA2C,kBAAA,mBAAA6gC,IAcA,IAAAM,GAAA,SAAA5mH,EAAA+mB,GAEAA,EAAAC,QAAAD,EAAAC,MAAAuxF,uBACAv4G,EAAAk6F,SAAA,cAGAl6F,EAAAoe,GAAA2I,EAAA,uBACAA,EAAAC,MAAAuxF,sBAGAv4G,EAAAo6F,YAAA,cAFAp6F,EAAAk6F,SAAA,iBAgBA2sB,GAAA,SAAA5jC,GAGA,SAAA4jC,IAEA,OADA9vB,EAAA92F,KAAA4mH,GACA5vB,EAAAh3F,KAAAgjF,EAAA7qE,MAAAnY,KAAAsC,YAgBA,OApBAy0F,EAAA6vB,EAAA5jC,GAaA4jC,EAAA5kH,UAAAq3F,SAAA,WACA,OAAArW,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,mBACAuoG,UAAA,4CAIAiV,EArBA,CAsBC/jC,IAEDA,GAAA2C,kBAAA,cAAAohC,IAYA,IAAAC,GAAA,SAAAtB,GAYA,SAAAsB,EAAA//F,EAAAxB,GACAwxE,EAAA92F,KAAA6mH,GAEA,IAAA/mG,EAAAk3E,EAAAh3F,KAAAulH,EAAAhlH,KAAAP,KAAA8mB,EAAAxB,IAOA,OALAxF,EAAA3B,GAAA,eAAA2B,EAAAgnG,mBACAhnG,EAAA3B,GAAA2I,EAAA,eAAAhH,EAAAinG,sBACAjgG,EAAAtB,MAAA,WACA,OAAA1F,EAAAinG,yBAEAjnG,EAyJA,OA9KAi3E,EAAA8vB,EAAAtB,GAgCAsB,EAAA7kH,UAAAq3F,SAAA,WACA,OAAAksB,EAAAvjH,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,kCAEA0iG,aAAA9rG,KAAAkkG,SAAA,gBACA2Y,YAAA,YAcAgK,EAAA7kH,UAAA0+G,gBAAA,SAAAr2F,GACAoyE,GAAApyE,IAIAk7F,EAAAvjH,UAAA0+G,gBAAAngH,KAAAP,KAAAqqB,IAaAw8F,EAAA7kH,UAAAuhH,gBAAA,SAAAl5F,GACAoyE,GAAApyE,KAIArqB,KAAAgnH,aACAhnH,KAAAqzE,QAAA4zC,OAAAjnH,KAAA+jH,kBAAA15F,MAQAw8F,EAAA7kH,UAAAglH,WAAA,WACAhnH,KAAAqzE,QAAA6zC,SACAlnH,KAAAqzE,QAAA6zC,OAAA,IAYAL,EAAA7kH,UAAA6hH,WAAA,WACA,OAAA7jH,KAAAqzE,QAAA6zC,QACA,EAEAlnH,KAAAqzE,QAAA4zC,UAQAJ,EAAA7kH,UAAAiiH,YAAA,WACAjkH,KAAAgnH,aACAhnH,KAAAqzE,QAAA4zC,OAAAjnH,KAAAqzE,QAAA4zC,SAAA,KAQAJ,EAAA7kH,UAAAgiH,SAAA,WACAhkH,KAAAgnH,aACAhnH,KAAAqzE,QAAA4zC,OAAAjnH,KAAAqzE,QAAA4zC,SAAA,KAaAJ,EAAA7kH,UAAA+kH,qBAAA,SAAA18F,GACA,IAAA88F,EAAAnnH,KAAAqzE,QAAA6zC,QAAA,EAAAlnH,KAAAonH,sBAEApnH,KAAAy6E,IAAA+e,aAAA,gBAAA2tB,GACAnnH,KAAAy6E,IAAA+e,aAAA,iBAAA2tB,EAAA,MAUAN,EAAA7kH,UAAAolH,oBAAA,WACA,OAAAt6G,KAAAoB,MAAA,IAAAlO,KAAAqzE,QAAA4zC,WAaAJ,EAAA7kH,UAAA8kH,kBAAA,WACA,IAAA9wF,EAAAh2B,KAEAqnH,EAAArnH,KAAAqzE,QAAA4zC,SAEAjnH,KAAA03B,IAAA,4BACA,IAAA1B,EAAAq9C,QAAA4zC,UACAjxF,EAAAq9C,QAAAi0C,YAAAD,MAKAR,EA/KA,CAgLC1D,IAUD0D,GAAA7kH,UAAAihF,UACA0hB,UAAA,eACA0e,QAAA,eAQAwD,GAAA7kH,UAAAshH,YAAA,eAEAzgC,GAAA2C,kBAAA,YAAAqhC,IAYA,IAAAU,GAAA,SAAAvkC,GAYA,SAAAukC,EAAAzgG,GACA,IAAAxB,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAw0F,EAAA92F,KAAAunH,GAEAjiG,EAAArgB,SAAAqgB,EAAArgB,WAAA,GAIA,qBAAAqgB,EAAAkiG,WAAAlwB,EAAAhyE,EAAAkiG,cACAliG,EAAAkiG,UAAAliG,EAAAkiG,cACAliG,EAAAkiG,UAAAviH,SAAAqgB,EAAArgB,UAIA,IAAA6a,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAxB,IAsBA,OApBAqhG,GAAA7mG,EAAAgH,GAEAhH,EAAA2nG,yBAAAxmB,GAAAr/F,GAAAke,IAAAyjG,iBAAA,IAEAzjG,EAAA3B,GAAA,YAAA2B,EAAA4gG,iBACA5gG,EAAA3B,GAAA,aAAA2B,EAAA4gG,iBAIA5gG,EAAA3B,GAAA2B,EAAA0nG,WAAA,mCACA1nG,EAAA0nG,UAAAvtB,SAAA,qBACAn6E,EAAAm6E,SAAA,qBACAn6E,EAAAnJ,QAAA,kBAGAmJ,EAAA3B,GAAA2B,EAAA0nG,WAAA,oCACA1nG,EAAA0nG,UAAArtB,YAAA,qBACAr6E,EAAAq6E,YAAA,qBACAr6E,EAAAnJ,QAAA,oBAEAmJ,EA8EA,OA7HAi3E,EAAAwwB,EAAAvkC,GA0DAukC,EAAAvlH,UAAAq3F,SAAA,WACA,IAAAquB,EAAA,wBAMA,OAJA1nH,KAAAijF,SAAAh+E,WACAyiH,EAAA,uBAGA1kC,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,kCAAAs+G,KAeAH,EAAAvlH,UAAA0+G,gBAAA,SAAAr2F,GACA,IAAAu0E,EAAA5+F,KAAAy6E,IAAAglB,cAEAz/F,KAAAme,GAAAygF,EAAA,YAAA5+F,KAAAynH,0BACAznH,KAAAme,GAAAygF,EAAA,YAAA5+F,KAAAynH,0BACAznH,KAAAme,GAAAygF,EAAA,UAAA5+F,KAAAwjH,eACAxjH,KAAAme,GAAAygF,EAAA,WAAA5+F,KAAAwjH,gBAcA+D,EAAAvlH,UAAAwhH,cAAA,SAAAn5F,GACA,IAAAu0E,EAAA5+F,KAAAy6E,IAAAglB,cAEAz/F,KAAAqe,IAAAugF,EAAA,YAAA5+F,KAAAynH,0BACAznH,KAAAqe,IAAAugF,EAAA,YAAA5+F,KAAAynH,0BACAznH,KAAAqe,IAAAugF,EAAA,UAAA5+F,KAAAwjH,eACAxjH,KAAAqe,IAAAugF,EAAA,WAAA5+F,KAAAwjH,gBAcA+D,EAAAvlH,UAAAuhH,gBAAA,SAAAl5F,GACArqB,KAAAwnH,UAAAjE,gBAAAl5F,IAGAk9F,EA9HA,CA+HC1kC,IAUD0kC,GAAAvlH,UAAAihF,UACA0hB,UAAA,cAGA9hB,GAAA2C,kBAAA,gBAAA+hC,IAcA,IAAAI,GAAA,SAAA5nH,EAAA+mB,GAEAA,EAAAC,QAAAD,EAAAC,MAAAwxF,qBACAx4G,EAAAk6F,SAAA,cAGAl6F,EAAAoe,GAAA2I,EAAA,uBACAA,EAAAC,MAAAwxF,oBAGAx4G,EAAAo6F,YAAA,cAFAp6F,EAAAk6F,SAAA,iBAgBA2tB,GAAA,SAAApH,GAYA,SAAAoH,EAAA9gG,EAAAxB,GACAwxE,EAAA92F,KAAA4nH,GAGA,IAAA9nG,EAAAk3E,EAAAh3F,KAAAwgH,EAAAjgH,KAAAP,KAAA8mB,EAAAxB,IAKA,OAHAqiG,GAAA7nG,EAAAgH,GAEAhH,EAAA3B,GAAA2I,GAAA,4BAAAhH,EAAA8lB,QACA9lB,EAqHA,OAzIAi3E,EAAA6wB,EAAApH,GA+BAoH,EAAA5lH,UAAA6jG,cAAA,WACA,0BAAA2a,EAAAx+G,UAAA6jG,cAAAtlG,KAAAP,OAgBA4nH,EAAA5lH,UAAAk7G,YAAA,SAAA7yF,GACA,IAAAw9F,EAAA7nH,KAAAqzE,QAAA4zC,SACAa,EAAA9nH,KAAAqzE,QAAAi0C,cAEA,OAAAO,EAAA,CACA,IAAAE,EAAAD,EAAA,MAAAA,EAEA9nH,KAAAqzE,QAAA4zC,OAAAc,GACA/nH,KAAAqzE,QAAA6zC,OAAA,QAEAlnH,KAAAqzE,QAAA6zC,OAAAlnH,KAAAqzE,QAAA6zC,UAiBAU,EAAA5lH,UAAA4jC,OAAA,SAAAvb,GACArqB,KAAAgoH,cACAhoH,KAAAioH,sBAgBAL,EAAA5lH,UAAAgmH,YAAA,WACA,IAAAH,EAAA7nH,KAAAqzE,QAAA4zC,SACA1vB,EAAA,EAKA9B,GACAz1F,KAAAqzE,QAAA6zC,MAAAlnH,KAAAqzE,QAAAtsD,MAAA0zD,IAAAysC,OAGA,IAAAW,GAAA7nH,KAAAqzE,QAAA6zC,QACA3vB,EAAA,EACKswB,EAAA,IACLtwB,EAAA,EACKswB,EAAA,MACLtwB,EAAA,GAIA,QAAAn3F,EAAA,EAAmBA,EAAA,EAAOA,IAC1B+5F,GAAAn6F,KAAAy6E,IAAA,WAAAr6E,GAEA65F,GAAAj6F,KAAAy6E,IAAA,WAAA8c,IAYAqwB,EAAA5lH,UAAAimH,mBAAA,WACA,IAAAC,EAAAloH,KAAAqzE,QAAA6zC,SAAA,IAAAlnH,KAAAqzE,QAAA4zC,SACAp9G,EAAAq+G,EAAA,gBAEAloH,KAAA6sG,gBAAAhjG,GACA7J,KAAA6sG,YAAAhjG,IAIA+9G,EA1IA,CA2ICtH,IAUDsH,GAAA5lH,UAAA86G,aAAA,OAEAj6B,GAAA2C,kBAAA,aAAAoiC,IAaA,IAAAO,GAAA,SAAAnlC,GAYA,SAAAmlC,EAAArhG,GACA,IAAAxB,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAw0F,EAAA92F,KAAAmoH,GAEA,qBAAA7iG,EAAA8iG,OACA9iG,EAAA8iG,OAAA9iG,EAAA8iG,OAEA9iG,EAAA8iG,QAAA,GAKA,qBAAA9iG,EAAA+iG,eAAA/wB,EAAAhyE,EAAA+iG,kBACA/iG,EAAA+iG,cAAA/iG,EAAA+iG,kBACA/iG,EAAA+iG,cAAApjH,UAAAqgB,EAAA8iG,QAGA,IAAAtoG,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAxB,IASA,OAPAxF,EAAA3B,GAAA2I,GAAA,aAAAhH,EAAAwoG,mBAIAxoG,EAAA3B,GAAA2B,EAAAuoG,eAAA,gBAAAvoG,EAAAyoG,eAEAzoG,EAAA3B,GAAA2B,EAAAuoG,eAAA,kBAAAvoG,EAAA0oG,iBACA1oG,EAsEA,OA3GAi3E,EAAAoxB,EAAAnlC,GAgDAmlC,EAAAnmH,UAAAumH,cAAA,WACAvoH,KAAAi6F,SAAA,sBAWAkuB,EAAAnmH,UAAAwmH,gBAAA,WACAxoH,KAAAm6F,YAAA,sBAYAguB,EAAAnmH,UAAAsmH,kBAAA,WAGAtoH,KAAAqoH,cAAAvuB,SAAA,eAAA95F,KAAAyoH,WAAA3uB,SAAA,eACA95F,KAAAi6F,SAAA,cAKAj6F,KAAAqoH,cAAAvuB,SAAA,gBAAA95F,KAAAyoH,WAAA3uB,SAAA,eACA95F,KAAAi6F,SAAA,yBAYAkuB,EAAAnmH,UAAAq3F,SAAA,WACA,IAAAquB,EAAA,8BAMA,OAJA1nH,KAAAijF,SAAAmlC,SACAV,EAAA,6BAGA1kC,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,gCAAAs+G,KAIAS,EA5GA,CA6GCtlC,IAUDslC,GAAAnmH,UAAAihF,UACA0hB,UAAA,+BAGA9hB,GAAA2C,kBAAA,cAAA2iC,IAYA,IAAAO,GAAA,SAAA1lC,GAaA,SAAA0lC,EAAA5hG,EAAAxB,GACAwxE,EAAA92F,KAAA0oH,GAEA,IAAA5oG,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAxB,IASA,OAPAA,IACAxF,EAAA6oG,YAAArjG,EAAAsjG,YAGA9oG,EAAA+oG,eAAA,EAEA/oG,EAAA3B,GAAA,UAAA2B,EAAAksF,gBACAlsF,EAsJA,OA9KAi3E,EAAA2xB,EAAA1lC,GAoCA0lC,EAAA1mH,UAAA8mH,QAAA,SAAAjgG,GACA7oB,KAAA8kG,SAAAj8E,GACAA,EAAA1K,GAAA,QAAAvc,GAAA5B,KAAA,SAAAqqB,GAEArqB,KAAA2oH,cACA3oH,KAAA2oH,YAAAI,gBAIA,4BAAAlgG,EAAAloB,QACAX,KAAA2oH,YAAA1tB,aAcAytB,EAAA1mH,UAAAq3F,SAAA,WACA,IAAA2vB,EAAAhpH,KAAAijF,SAAA+lC,eAAA,KAEAhpH,KAAA0kG,WAAArL,GAAA2vB,GACA5/G,UAAA,qBAGApJ,KAAA0kG,WAAAlL,aAAA,eAEA,IAAAvxD,EAAA+6C,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAipH,OAAAjpH,KAAA0kG,WACAt7F,UAAA,aAYA,OATA6+B,EAAAn/B,YAAA9I,KAAA0kG,YAIAvmF,GAAA8pB,EAAA,iBAAA5d,GACAA,EAAA2zE,iBACA3zE,EAAAo0E,6BAGAx2D,GAGAygF,EAAA1mH,UAAAyc,QAAA,WACAze,KAAA0kG,WAAA,KAEA1hB,EAAAhhF,UAAAyc,QAAAle,KAAAP,OAaA0oH,EAAA1mH,UAAAgqG,eAAA,SAAA3hF,GAEA,KAAAA,EAAAy0E,OAAA,KAAAz0E,EAAAy0E,OACAz0E,EAAA2zE,iBACAh+F,KAAAikH,eAGK,KAAA55F,EAAAy0E,OAAA,KAAAz0E,EAAAy0E,QACLz0E,EAAA2zE,iBACAh+F,KAAAgkH,aASA0E,EAAA1mH,UAAAiiH,YAAA,WACA,IAAAiF,EAAA,OAEAj8G,IAAAjN,KAAA6oH,gBACAK,EAAAlpH,KAAA6oH,cAAA,GAEA7oH,KAAAi7F,MAAAiuB,IAQAR,EAAA1mH,UAAAgiH,SAAA,WACA,IAAAkF,EAAA,OAEAj8G,IAAAjN,KAAA6oH,gBACAK,EAAAlpH,KAAA6oH,cAAA,GAEA7oH,KAAAi7F,MAAAiuB,IAWAR,EAAA1mH,UAAAi5F,MAAA,WACA,IAAAkuB,EAAA7mH,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,KAEAqiG,EAAA3kG,KAAA2kG,WAAAttF,QACA+xG,EAAAzkB,EAAApiG,QAAAoiG,EAAA,GAAAv7F,WAAA,iBAAA5C,KAAAm+F,EAAA,GAAAv7F,WAEAggH,GACAzkB,EAAAhqD,QAGAgqD,EAAApiG,OAAA,IACA4mH,EAAA,EACAA,EAAA,EACOA,GAAAxkB,EAAApiG,SACP4mH,EAAAxkB,EAAApiG,OAAA,GAGAvC,KAAA6oH,cAAAM,EAEAxkB,EAAAwkB,GAAA1uC,IAAAwgB,UAIAytB,EA/KA,CAgLC7lC,IAEDA,GAAA2C,kBAAA,OAAAkjC,IAWA,IAAAW,GAAA,SAAArmC,GAYA,SAAAqmC,EAAAviG,GACA,IAAAxB,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAw0F,EAAA92F,KAAAqpH,GAEA,IAAAvpG,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAxB,IAEAxF,EAAA6oG,YAAA,IAAArI,GAAAx5F,EAAAxB,GAEAxF,EAAA6oG,YAAA9b,YAAA/sF,EAAAg9F,cACAh9F,EAAA6oG,YAAAluC,IAAA+e,aAAA,wBAGA,IAAA8vB,EAAAhJ,GAAAt+G,UAAA6jG,gBAiBA,OAfA/lF,EAAA6oG,YAAAluC,IAAArxE,UAAA0W,EAAA+lF,gBAAA,IAAAyjB,EACAxpG,EAAA6oG,YAAAxuB,YAAA,eAEAr6E,EAAAglF,SAAAhlF,EAAA6oG,aAEA7oG,EAAA8lB,SAEA9lB,EAAAm9F,UAAA,EAEAn9F,EAAA3B,GAAA2B,EAAA6oG,YAAA,MAAA7oG,EAAAo9F,aACAp9F,EAAA3B,GAAA2B,EAAA6oG,YAAA,QAAA7oG,EAAAo9F,aACAp9F,EAAA3B,GAAA2B,EAAA6oG,YAAA,QAAA7oG,EAAAq9F,aACAr9F,EAAA3B,GAAA2B,EAAA6oG,YAAA,OAAA7oG,EAAAs9F,YAEAt9F,EAAA3B,GAAA,UAAA2B,EAAAypG,uBACAzpG,EAmXA,OA3ZAi3E,EAAAsyB,EAAArmC,GAgDAqmC,EAAArnH,UAAA4jC,OAAA,WACA,IAAA4jF,EAAAxpH,KAAAypH,aAEAzpH,KAAAwpH,OACAxpH,KAAAwpH,KAAA/qG,UACAze,KAAAyQ,YAAAzQ,KAAAwpH,OAGAxpH,KAAAwpH,OACAxpH,KAAA8kG,SAAA0kB,GAQAxpH,KAAA0pH,gBAAA,EACA1pH,KAAA2oH,YAAAluC,IAAA+e,aAAA,yBAEAx5F,KAAA2pH,OAAA3pH,KAAA2pH,MAAApnH,QAAAvC,KAAA4pH,eACA5pH,KAAAomG,OAEApmG,KAAAmmG,QAYAkjB,EAAArnH,UAAAynH,WAAA,WACA,IAAAD,EAAA,IAAAd,GAAA1oH,KAAAqzE,SAAuCu1C,WAAA5oH,OAavC,GAHAA,KAAA4pH,eAAA,EAGA5pH,KAAAijF,SAAA34D,MAAA,CACA,IAAAA,EAAA+uE,GAAA,MACAjwF,UAAA,iBACAuoG,UAAArO,GAAAtjG,KAAAijF,SAAA34D,OACAqhF,UAAA,IAGA3rG,KAAA4pH,gBAAA,EAEAJ,EAAA5lB,UAAAj6B,QAAAr/C,GACAqvE,GAAArvE,EAAAk/F,EAAA/kB,aAKA,GAFAzkG,KAAA2pH,MAAA3pH,KAAA6pH,cAEA7pH,KAAA2pH,MAEA,QAAAvpH,EAAA,EAAqBA,EAAAJ,KAAA2pH,MAAApnH,OAAuBnC,IAC5CopH,EAAAV,QAAA9oH,KAAA2pH,MAAAvpH,IAIA,OAAAopH,GAUAH,EAAArnH,UAAA6nH,YAAA,aAUAR,EAAArnH,UAAAq3F,SAAA,WACA,OAAArW,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAApJ,KAAA8pH,6BAYAT,EAAArnH,UAAA8nH,qBAAA,WACA,IAAAC,EAAA,mBAGA,IAAA/pH,KAAAijF,SAAAmlC,OACA2B,GAAA,UAEAA,GAAA,SAIA,IAAAT,EAAAhJ,GAAAt+G,UAAA6jG,gBAEA,yBAAAkkB,EAAA,IAAAT,EAAA,IAAAtmC,EAAAhhF,UAAA6jG,cAAAtlG,KAAAP,OAWAqpH,EAAArnH,UAAA6jG,cAAA,WACA,IAAAkkB,EAAA,kBASA,OANA,IAAA/pH,KAAAijF,SAAAmlC,OACA2B,GAAA,UAEAA,GAAA,SAGA,mBAAAA,EAAA,IAAA/mC,EAAAhhF,UAAA6jG,cAAAtlG,KAAAP,OAmBAqpH,EAAArnH,UAAA6qG,YAAA,SAAAhjG,GACA,IAAAo+B,EAAA3lC,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,GAAAtC,KAAA2oH,YAAA1gF,KAEA,OAAAjoC,KAAA2oH,YAAA9b,YAAAhjG,EAAAo+B,IAgBAohF,EAAArnH,UAAAk7G,YAAA,SAAA7yF,GAKArqB,KAAA03B,IAAA13B,KAAAwpH,KAAA/kB,YAAA,aAAA7iG,GAAA5B,KAAA,SAAAgI,GACAhI,KAAA+oH,gBACA/oH,KAAAy6E,IAAA0sB,UAEAnnG,KAAA0pH,eACA1pH,KAAA+oH,gBAEA/oH,KAAAgqH,eASAX,EAAArnH,UAAAi5F,MAAA,WACAj7F,KAAA2oH,YAAA1tB,SAQAouB,EAAArnH,UAAAmlG,KAAA,WACAnnG,KAAA2oH,YAAAxhB,QAeAkiB,EAAArnH,UAAAm7G,YAAA,WACAh/F,GAAAzV,EAAA,UAAA9G,GAAA5B,UAAAgsG,kBAcAqd,EAAArnH,UAAAo7G,WAAA,WACA/+F,GAAA3V,EAAA,UAAA9G,GAAA5B,UAAAgsG,kBAcAqd,EAAArnH,UAAAgqG,eAAA,SAAA3hF,GAGA,KAAAA,EAAAy0E,OAAA,IAAAz0E,EAAAy0E,OACA9+F,KAAA0pH,gBACA1pH,KAAA+oH,gBAGA,IAAA1+F,EAAAy0E,QACAz0E,EAAA2zE,iBAEAh+F,KAAA2oH,YAAAluC,IAAAwgB,UAGK,KAAA5wE,EAAAy0E,OAAA,KAAAz0E,EAAAy0E,OACL9+F,KAAA0pH,iBACA1pH,KAAAgqH,cACA3/F,EAAA2zE,mBAgBAqrB,EAAArnH,UAAAunH,sBAAA,SAAAl/F,GAGA,KAAAA,EAAAy0E,OAAA,IAAAz0E,EAAAy0E,QACA9+F,KAAA0pH,gBACA1pH,KAAA+oH,gBAGA,IAAA1+F,EAAAy0E,QACAz0E,EAAA2zE,iBAEAh+F,KAAA2oH,YAAAluC,IAAAwgB,WAUAouB,EAAArnH,UAAAgoH,YAAA,WACA,GAAAhqH,KAAAi9G,SAAA,CAOA,GANAj9G,KAAA0pH,gBAAA,EACA1pH,KAAAwpH,KAAAnjB,cACArmG,KAAA2oH,YAAAluC,IAAA+e,aAAA,wBAIA/D,GAAAwD,KAEA,OAGAj5F,KAAAwpH,KAAAvuB,UASAouB,EAAArnH,UAAA+mH,cAAA,WACA/oH,KAAAi9G,WACAj9G,KAAA0pH,gBAAA,EACA1pH,KAAAwpH,KAAAljB,gBACAtmG,KAAA2oH,YAAAluC,IAAA+e,aAAA,2BASA6vB,EAAArnH,UAAAg2F,QAAA,WACAh4F,KAAA+oH,gBAEA/oH,KAAAi9G,UAAA,EACAj9G,KAAAi6F,SAAA,gBAEAj6F,KAAA2oH,YAAA3wB,WAQAqxB,EAAArnH,UAAAuvC,OAAA,WACAvxC,KAAAi9G,UAAA,EACAj9G,KAAAm6F,YAAA,gBAEAn6F,KAAA2oH,YAAAp3E,UAGA83E,EA5ZA,CA6ZCxmC,IAEDA,GAAA2C,kBAAA,aAAA6jC,IAWA,IAAAY,GAAA,SAAAC,GAYA,SAAAD,EAAAnjG,EAAAxB,GACAwxE,EAAA92F,KAAAiqH,GAEA,IAAAlsF,EAAAzY,EAAAyY,OAEAje,EAAAk3E,EAAAh3F,KAAAkqH,EAAA3pH,KAAAP,KAAA8mB,EAAAxB,IAMA,GAJAxF,EAAA6pG,MAAApnH,QAAA,GACAud,EAAAsmF,QAGAroE,EACA,OAAAi5D,EAAAl3E,GAGA,IAAAqqG,EAAAvoH,GAAAke,IAAA8lB,QAUA,OARA7H,EAAA1J,iBAAA,cAAA81F,GACApsF,EAAA1J,iBAAA,WAAA81F,GACArqG,EAAAuzD,QAAAl1D,GAAA,QAAAgsG,GAEArqG,EAAAuzD,QAAAl1D,GAAA,qBACA4f,EAAA7C,oBAAA,cAAAivF,GACApsF,EAAA7C,oBAAA,WAAAivF,KAEArqG,EAGA,OAvCAi3E,EAAAkzB,EAAAC,GAuCAD,EAxCA,CAyCCZ,IAEDxmC,GAAA2C,kBAAA,cAAAykC,IAWA,IAAAG,GAAA,SAAA9M,GAaA,SAAA8M,EAAAtjG,EAAAxB,GACAwxE,EAAA92F,KAAAoqH,GAEA,IAAAtqG,EAAAk3E,EAAAh3F,KAAAs9G,EAAA/8G,KAAAP,KAAA8mB,EAAAxB,IAiBA,OAfAxF,EAAAuqG,WAAA/kG,EAAA+kG,WACAvqG,EAAAwqG,YAAAhlG,EAAA8pF,WAAA,EACAtvF,EAAAyqG,gBAAAjlG,EAAAilG,gBAEAzqG,EAAAsvF,SAAAtvF,EAAAwqG,aAEAxqG,EAAAuqG,WACAvqG,EAAAyqG,gBACAzqG,EAAA26D,IAAA+e,aAAA,2BAEA15E,EAAA26D,IAAA+e,aAAA,wBAGA15E,EAAA26D,IAAA+e,aAAA,mBAEA15E,EA2EA,OA3GAi3E,EAAAqzB,EAAA9M,GAoDA8M,EAAApoH,UAAAq3F,SAAA,SAAA9wF,EAAA+Q,EAAA+L,GAIA,OAFArlB,KAAAg9G,gBAAA,EAEAM,EAAAt7G,UAAAq3F,SAAA94F,KAAAP,KAAA,KAAA8e,GACA1V,UAAA,gBACAuoG,UAAA,oCAAA3xG,KAAAkkG,SAAAlkG,KAAAijF,SAAAnuD,OAAA,UACA62E,UAAA,GACKryF,GAAA+L,IAgBL+kG,EAAApoH,UAAAk7G,YAAA,SAAA7yF,GACArqB,KAAAovG,UAAA,IAWAgb,EAAApoH,UAAAotG,SAAA,SAAAob,GACAxqH,KAAAqqH,aACAG,GACAxqH,KAAAi6F,SAAA,gBACAj6F,KAAAy6E,IAAA+e,aAAA,uBAGAx5F,KAAA6sG,YAAA,cACA7sG,KAAAsqH,aAAA,IAEAtqH,KAAAm6F,YAAA,gBACAn6F,KAAAy6E,IAAA+e,aAAA,wBAEAx5F,KAAA6sG,YAAA,IACA7sG,KAAAsqH,aAAA,KAKAF,EA5GA,CA6GC3N,IAED55B,GAAA2C,kBAAA,WAAA4kC,IAWA,IAAAK,GAAA,SAAAC,GAYA,SAAAD,EAAA3jG,EAAAxB,GACAwxE,EAAA92F,KAAAyqH,GAEA,IAAApgH,EAAAib,EAAAjb,MACA0zB,EAAAjX,EAAAwsD,aAGAhuD,EAAAwP,MAAAzqB,EAAAyqB,OAAAzqB,EAAAiZ,UAAA,UACAgC,EAAA8pF,SAAA,YAAA/kG,EAAA9I,KAEA,IAAAue,EAAAk3E,EAAAh3F,KAAA0qH,EAAAnqH,KAAAP,KAAA8mB,EAAAxB,IAEAxF,EAAAzV,QACA,IAAAsgH,EAAA,WACA,QAAAjhC,EAAApnF,UAAAC,OAAAic,EAAAzD,MAAA2uE,GAAArpE,EAAA,EAAqEA,EAAAqpE,EAAarpE,IAClF7B,EAAA6B,GAAA/d,UAAA+d,GAGAP,EAAA8qG,mBAAAzyG,MAAA2H,EAAAtB,IAEAqsG,EAAA,WACA,QAAA5yB,EAAA31F,UAAAC,OAAAic,EAAAzD,MAAAk9E,GAAAC,EAAA,EAAwEA,EAAAD,EAAeC,IACvF15E,EAAA05E,GAAA51F,UAAA41F,GAGAp4E,EAAAgrG,6BAAA3yG,MAAA2H,EAAAtB,IAkBA,GAfAsI,EAAA3I,IAAA,+BAAAwsG,GACA5sF,EAAA1J,iBAAA,SAAAs2F,GACA5sF,EAAA1J,iBAAA,yBAAAw2F,GACA/qG,EAAA3B,GAAA,qBACA2I,EAAAzI,KAAA,+BAAAssG,GACA5sF,EAAA7C,oBAAA,SAAAyvF,GACA5sF,EAAA7C,oBAAA,yBAAA2vF,UASA59G,IAAA8wB,EAAAgtF,SAAA,CACA,IAAA1gG,OAAA,EAEAvK,EAAA3B,IAAA,0BACA,cAAAorE,EAAA5hF,EAAAqjH,OAEA,IACA3gG,EAAA,IAAA1iB,EAAAqjH,MAAA,UACW,MAAAphG,IAKXS,IACAA,EAAA3hB,EAAAuiH,YAAA,SACA5gG,EAAA6gG,UAAA,iBAGAntF,EAAA0jE,cAAAp3E,KAMA,OADAvK,EAAA8qG,qBACA9qG,EAwFA,OAtKAi3E,EAAA0zB,EAAAC,GA8FAD,EAAAzoH,UAAAk7G,YAAA,SAAA7yF,GACA,IAAAwK,EAAA70B,KAAAqK,MAAAwqB,KACAs2F,EAAAnrH,KAAAqK,MAAA8gH,MACAptF,EAAA/9B,KAAAqzE,QAAAC,aAQA,GANA63C,IACAA,GAAAt2F,IAGA61F,EAAA1oH,UAAAk7G,YAAA38G,KAAAP,KAAAqqB,GAEA0T,EAIA,QAAA39B,EAAA,EAAmBA,EAAA29B,EAAAx7B,OAAmBnC,IAAA,CACtC,IAAAiK,EAAA0zB,EAAA39B,GAEAiK,IAAArK,KAAAqK,OAAA8gH,EAAAr4G,QAAAzI,EAAAwqB,OAAA,EACA,YAAAxqB,EAAA9I,OACA8I,EAAA9I,KAAA,WAEO,aAAA8I,EAAA9I,OACP8I,EAAA9I,KAAA,cAeAkpH,EAAAzoH,UAAA4oH,mBAAA,SAAAvgG,GACA,IAAA+gG,EAAA,YAAAprH,KAAAqK,MAAA9I,KAIA6pH,IAAAprH,KAAAsqH,aACAtqH,KAAAovG,SAAAgc,IAIAX,EAAAzoH,UAAA8oH,6BAAA,SAAAzgG,GACA,eAAArqB,KAAAqK,MAAA9I,KAAA,CACA,IAAAu9G,EAAA9+G,KAAAqzE,QAAA0oC,OAAA+C,iBAGA,GAAAA,KAAA7gF,SAAA6gF,EAAAx7F,WAAAtjB,KAAAqK,MAAAiZ,UAAAw7F,EAAAjqF,OAAA70B,KAAAqK,MAAAwqB,KACA,OAGA70B,KAAAqzE,QAAA0oC,OAAA+C,kBACA7gF,SAAA,EACA3a,SAAAtjB,KAAAqK,MAAAiZ,SACAuR,KAAA70B,KAAAqK,MAAAwqB,QAKA41F,EAAAzoH,UAAAyc,QAAA,WAEAze,KAAAqK,MAAA,KAEAqgH,EAAA1oH,UAAAyc,QAAAle,KAAAP,OAGAyqH,EAvKA,CAwKCL,IAEDvnC,GAAA2C,kBAAA,oBAAAilC,IAWA,IAAAY,GAAA,SAAAC,GAYA,SAAAD,EAAAvkG,EAAAxB,GA4BA,OA3BAwxE,EAAA92F,KAAAqrH,GAIA/lG,EAAAjb,OACAyc,SACA+N,KAAAvP,EAAAuP,KACAs2F,MAAA7lG,EAAA6lG,MACArxG,SAAA,EACAvY,KAAA,YAGA+jB,EAAA6lG,QACA7lG,EAAA6lG,OAAA7lG,EAAAuP,OAGAvP,EAAAwP,MACAxP,EAAAjb,MAAAyqB,MAAAxP,EAAAwP,MAEAxP,EAAAjb,MAAAyqB,MAAAxP,EAAA6lG,MAAAr+F,KAAA,gBAIAxH,EAAA+kG,YAAA,EAEA/kG,EAAAilG,iBAAA,EAEAvzB,EAAAh3F,KAAAsrH,EAAA/qH,KAAAP,KAAA8mB,EAAAxB,IAmDA,OA1FAyxE,EAAAs0B,EAAAC,GAkDAD,EAAArpH,UAAA4oH,mBAAA,SAAAvgG,GAIA,IAHA,IAAA0T,EAAA/9B,KAAA8mB,SAAAwsD,aACA83C,GAAA,EAEAhrH,EAAA,EAAAC,EAAA09B,EAAAx7B,OAAsCnC,EAAAC,EAAOD,IAAA,CAC7C,IAAAiK,EAAA0zB,EAAA39B,GAEA,GAAAJ,KAAAijF,SAAAkoC,MAAAr4G,QAAAzI,EAAAwqB,OAAA,eAAAxqB,EAAA9I,KAAA,CACA6pH,GAAA,EACA,OAMAA,IAAAprH,KAAAsqH,aACAtqH,KAAAovG,SAAAgc,IAIAC,EAAArpH,UAAA8oH,6BAAA,SAAAzgG,GAIA,IAHA,IAAA0T,EAAA/9B,KAAA8mB,SAAAwsD,aACAi4C,GAAA,EAEAnrH,EAAA,EAAAC,EAAA09B,EAAAx7B,OAAsCnC,EAAAC,EAAOD,IAAA,CAC7C,IAAAiK,EAAA0zB,EAAA39B,GAEA,2CAAA0S,QAAAzI,EAAAwqB,OAAA,eAAAxqB,EAAA9I,KAAA,CACAgqH,GAAA,EACA,OAIAA,IACAvrH,KAAAqzE,QAAA0oC,OAAA+C,kBACA7gF,SAAA,KAKAotF,EA3FA,CA4FCZ,IAED5nC,GAAA2C,kBAAA,uBAAA6lC,IAWA,IAAAG,GAAA,SAAAC,GAYA,SAAAD,EAAA1kG,GACA,IAAAxB,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAKA,OAJAw0F,EAAA92F,KAAAwrH,GAEAlmG,EAAAyY,OAAAjX,EAAAwsD,aAEA0jB,EAAAh3F,KAAAyrH,EAAAlrH,KAAAP,KAAA8mB,EAAAxB,IA+DA,OAhFAyxE,EAAAy0B,EAAAC,GA+BAD,EAAAxpH,UAAA6nH,YAAA,WACA,IAAAF,EAAArnH,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAopH,EAAAppH,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,GAAAmoH,GAKA31F,OAAA,EAEA90B,KAAA2rH,SACA72F,EAAA90B,KAAA2rH,OAAA,QAGAhC,EAAAtgH,KAAA,IAAAgiH,GAAArrH,KAAAqzE,SACA83C,MAAAnrH,KAAA4rH,OACA/2F,KAAA70B,KAAA6rH,MACA/2F,WAGA90B,KAAA4pH,gBAAA,EAEA,IAAA7rF,EAAA/9B,KAAAqzE,QAAAC,aAEAv4D,MAAA8O,QAAA7pB,KAAA4rH,UACA5rH,KAAA4rH,QAAA5rH,KAAA6rH,QAGA,QAAAzrH,EAAA,EAAmBA,EAAA29B,EAAAx7B,OAAmBnC,IAAA,CACtC,IAAAiK,EAAA0zB,EAAA39B,GAGA,GAAAJ,KAAA4rH,OAAA94G,QAAAzI,EAAAwqB,OAAA,GAEA,IAAAs0F,EAAA,IAAAuC,EAAA1rH,KAAAqzE,SACAhpE,QAEAggH,YAAA,EAEAE,iBAAA,IAGApB,EAAAlvB,SAAA,OAAA5vF,EAAAwqB,KAAA,cACA80F,EAAAtgH,KAAA8/G,IAIA,OAAAQ,GAGA6B,EAjFA,CAkFCvB,IAEDpnC,GAAA2C,kBAAA,kBAAAgmC,IAWA,IAAAM,GAAA,SAAApB,GAYA,SAAAoB,EAAAhlG,EAAAxB,GACAwxE,EAAA92F,KAAA8rH,GAEA,IAAAzhH,EAAAib,EAAAjb,MACArG,EAAAshB,EAAAthB,IACAixB,EAAAnO,EAAAmO,cAGA3P,EAAA+kG,YAAA,EACA/kG,EAAAilG,iBAAA,EACAjlG,EAAAwP,MAAA9wB,EAAA6F,KACAyb,EAAA8pF,SAAAprG,EAAA+B,WAAAkvB,KAAAjxB,EAAAiC,QAEA,IAAA6Z,EAAAk3E,EAAAh3F,KAAA0qH,EAAAnqH,KAAAP,KAAA8mB,EAAAxB,IAKA,OAHAxF,EAAAzV,QACAyV,EAAA9b,MACAqG,EAAAgqB,iBAAA,YAAAzyB,GAAAke,IAAA8lB,SACA9lB,EAwCA,OArEAi3E,EAAA+0B,EAAApB,GA6CAoB,EAAA9pH,UAAAk7G,YAAA,SAAA7yF,GACAqgG,EAAA1oH,UAAAk7G,YAAA38G,KAAAP,MACAA,KAAAqzE,QAAAp+C,YAAAj1B,KAAAgE,IAAA+B,WACA/F,KAAA4lC,OAAA5lC,KAAAgE,IAAA+B,YAaA+lH,EAAA9pH,UAAA4jC,OAAA,SAAAvb,GACA,IAAArmB,EAAAhE,KAAAgE,IACAixB,EAAAj1B,KAAAqzE,QAAAp+C,cAGAj1B,KAAAovG,SAAAprG,EAAA+B,WAAAkvB,KAAAjxB,EAAAiC,UAGA6lH,EAtEA,CAuEC1B,IAEDvnC,GAAA2C,kBAAA,wBAAAsmC,IAaA,IAAAC,GAAA,SAAAC,GAeA,SAAAD,EAAAjlG,EAAAxB,EAAAE,GAEA,OADAsxE,EAAA92F,KAAA+rH,GACA/0B,EAAAh3F,KAAAgsH,EAAAzrH,KAAAP,KAAA8mB,EAAAxB,EAAAE,IAkKA,OAlLAuxE,EAAAg1B,EAAAC,GA2BAD,EAAA/pH,UAAA6jG,cAAA,WACA,6BAAAmmB,EAAAhqH,UAAA6jG,cAAAtlG,KAAAP,OAGA+rH,EAAA/pH,UAAA8nH,qBAAA,WACA,6BAAAkC,EAAAhqH,UAAA8nH,qBAAAvpH,KAAAP,OAeA+rH,EAAA/pH,UAAA4jC,OAAA,SAAAvb,GACArqB,KAAAisH,UAAA5hG,GAAA,aAAAA,EAAA9hB,MAAA,gBAAA8hB,EAAA9hB,OACAvI,KAAAksH,SAAAlsH,KAAAmsH,qBAEAH,EAAAhqH,UAAA4jC,OAAArlC,KAAAP,OAYA+rH,EAAA/pH,UAAAkqH,SAAA,SAAA7hH,GACA,GAAArK,KAAAisH,SAAA5hH,EAAA,CASA,GALArK,KAAAosH,iBACApsH,KAAAosH,eAAApsH,KAAA4lC,OAAAhkC,KAAA5B,OAIAA,KAAAisH,OAAA,CACA,IAAAI,EAAArsH,KAAAqzE,QAAAykC,qBAAAjI,wBAAA7vG,KAAAisH,QAEAI,GACAA,EAAAnxF,oBAAA,OAAAl7B,KAAAosH,gBAGApsH,KAAAisH,OAAA,KAMA,GAHAjsH,KAAAisH,OAAA5hH,EAGArK,KAAAisH,OAAA,CACAjsH,KAAAisH,OAAA1qH,KAAA,SAEA,IAAA+qH,EAAAtsH,KAAAqzE,QAAAykC,qBAAAjI,wBAAA7vG,KAAAisH,QAEAK,GACAA,EAAAj4F,iBAAA,OAAAr0B,KAAAosH,mBAaAL,EAAA/pH,UAAAmqH,kBAAA,WAGA,IAFA,IAAApuF,EAAA/9B,KAAAqzE,QAAAC,iBAEAlzE,EAAA29B,EAAAx7B,OAAA,EAAmCnC,GAAA,EAAQA,IAAA,CAE3C,IAAAiK,EAAA0zB,EAAA39B,GAEA,GAAAiK,EAAAwqB,OAAA70B,KAAA6rH,MACA,OAAAxhH,IAcA0hH,EAAA/pH,UAAAuqH,eAAA,WACA,OAAAvsH,KAAAisH,QAAAjsH,KAAAisH,OAAAn3F,MACA90B,KAAAisH,OAAAn3F,MAEA90B,KAAAkkG,SAAAZ,GAAAtjG,KAAA6rH,SAWAE,EAAA/pH,UAAAynH,WAAA,WAEA,OADAzpH,KAAAijF,SAAA34D,MAAAtqB,KAAAusH,iBACAP,EAAAhqH,UAAAynH,WAAAlpH,KAAAP,OAWA+rH,EAAA/pH,UAAA6nH,YAAA,WACA,IAAAF,KAEA,IAAA3pH,KAAAisH,OACA,OAAAtC,EAGA,IAAAr5G,EAAAtQ,KAAAisH,OAAA37G,KAEA,IAAAA,EACA,OAAAq5G,EAGA,QAAAvpH,EAAA,EAAAC,EAAAiQ,EAAA/N,OAAoCnC,EAAAC,EAAOD,IAAA,CAC3C,IAAA4D,EAAAsM,EAAAlQ,GACAosH,EAAA,IAAAV,GAAA9rH,KAAAqzE,SAAwDhpE,MAAArK,KAAAisH,OAAAjoH,QAExD2lH,EAAAtgH,KAAAmjH,GAGA,OAAA7C,GAGAoC,EAnLA,CAoLCP,IAUDO,GAAA/pH,UAAA6pH,MAAA,WAQAE,GAAA/pH,UAAA86G,aAAA,WAEAj6B,GAAA2C,kBAAA,iBAAAumC,IAWA,IAAAU,GAAA,SAAAT,GAeA,SAAAS,EAAA3lG,EAAAxB,EAAAE,GACAsxE,EAAA92F,KAAAysH,GAEA,IAAA3sG,EAAAk3E,EAAAh3F,KAAAgsH,EAAAzrH,KAAAP,KAAA8mB,EAAAxB,EAAAE,IAEAuY,EAAAjX,EAAAwsD,aACAq3C,EAAA/oH,GAAAke,IAAA8qG,oBAMA,OAJA7sF,EAAA1J,iBAAA,SAAAs2F,GACA7qG,EAAA3B,GAAA,qBACA4f,EAAA7C,oBAAA,SAAAyvF,KAEA7qG,EAmDA,OA7EAi3E,EAAA01B,EAAAT,GAuCAS,EAAAzqH,UAAA4oH,mBAAA,SAAAvgG,GAKA,IAJA,IAAA0T,EAAA/9B,KAAA8mB,SAAAwsD,aACA1lC,GAAA,EAGAxtC,EAAA,EAAAC,EAAA09B,EAAAx7B,OAAsCnC,EAAAC,EAAOD,IAAA,CAC7C,IAAAiK,EAAA0zB,EAAA39B,GAEA,GAAAiK,EAAAwqB,OAAA70B,KAAA6rH,OAAA,YAAAxhH,EAAA9I,KAAA,CACAqsC,GAAA,EACA,OAKAA,EACA5tC,KAAAg4F,UAEAh4F,KAAAuxC,UAYAk7E,EAAAzqH,UAAA6jG,cAAA,WACA,iCAAAmmB,EAAAhqH,UAAA6jG,cAAAtlG,KAAAP,OAGAysH,EAAAzqH,UAAA8nH,qBAAA,WACA,iCAAAkC,EAAAhqH,UAAA8nH,qBAAAvpH,KAAAP,OAGAysH,EA9EA,CA+ECjB,IAUDiB,GAAAzqH,UAAA6pH,MAAA,eAQAY,GAAAzqH,UAAA86G,aAAA,eAEAj6B,GAAA2C,kBAAA,qBAAAinC,IAWA,IAAAC,GAAA,SAAAV,GAeA,SAAAU,EAAA5lG,EAAAxB,EAAAE,GAEA,OADAsxE,EAAA92F,KAAA0sH,GACA11B,EAAAh3F,KAAAgsH,EAAAzrH,KAAAP,KAAA8mB,EAAAxB,EAAAE,IAmBA,OAnCAuxE,EAAA21B,EAAAV,GA2BAU,EAAA1qH,UAAA6jG,cAAA,WACA,8BAAAmmB,EAAAhqH,UAAA6jG,cAAAtlG,KAAAP,OAGA0sH,EAAA1qH,UAAA8nH,qBAAA,WACA,8BAAAkC,EAAAhqH,UAAA8nH,qBAAAvpH,KAAAP,OAGA0sH,EApCA,CAqCClB,IAUDkB,GAAA1qH,UAAA6pH,MAAA,YAQAa,GAAA1qH,UAAA86G,aAAA,YAEAj6B,GAAA2C,kBAAA,kBAAAknC,IAWA,IAAAC,GAAA,SAAArB,GAYA,SAAAqB,EAAA7lG,EAAAxB,GACAwxE,EAAA92F,KAAA2sH,GAEArnG,EAAAjb,OACAyc,SACA+N,KAAAvP,EAAAuP,KACAC,MAAAxP,EAAAuP,KAAA,YACAw1F,YAAA,EACAvwG,SAAA,EACAvY,KAAA,YAIA+jB,EAAA+kG,YAAA,EAEA/kG,EAAA3kB,KAAA,0BAEA,IAAAmf,EAAAk3E,EAAAh3F,KAAAsrH,EAAA/qH,KAAAP,KAAA8mB,EAAAxB,IAIA,OAFAxF,EAAAm6E,SAAA,0BACAn6E,EAAA+sF,YAAA,WAAAvnF,EAAAuP,KAAA,oBACA/U,EAoBA,OApDAi3E,EAAA41B,EAAArB,GAgDAqB,EAAA3qH,UAAAk7G,YAAA,SAAA7yF,GACArqB,KAAA8mB,SAAA+9E,SAAA,qBAAA7oB,QAGA2wC,EArDA,CAsDClC,IAED5nC,GAAA2C,kBAAA,0BAAAmnC,IAWA,IAAAC,GAAA,SAAAZ,GAeA,SAAAY,EAAA9lG,EAAAxB,EAAAE,GAEA,OADAsxE,EAAA92F,KAAA4sH,GACA51B,EAAAh3F,KAAAgsH,EAAAzrH,KAAAP,KAAA8mB,EAAAxB,EAAAE,IAuCA,OAvDAuxE,EAAA61B,EAAAZ,GA2BAY,EAAA5qH,UAAA6jG,cAAA,WACA,6BAAAmmB,EAAAhqH,UAAA6jG,cAAAtlG,KAAAP,OAGA4sH,EAAA5qH,UAAA8nH,qBAAA,WACA,6BAAAkC,EAAAhqH,UAAA8nH,qBAAAvpH,KAAAP,OAWA4sH,EAAA5qH,UAAA6nH,YAAA,WACA,IAAAF,KAQA,OANA3pH,KAAA8mB,SAAAC,OAAA/mB,KAAA8mB,SAAAC,MAAA0uF,2BAAAz1G,KAAA8mB,SAAA+9E,SAAA,uBACA8kB,EAAAtgH,KAAA,IAAAsjH,GAAA3sH,KAAAqzE,SAA4Dx+C,KAAA70B,KAAA6rH,SAE5D7rH,KAAA4pH,gBAAA,GAGAoC,EAAAhqH,UAAA6nH,YAAAtpH,KAAAP,KAAA2pH,IAGAiD,EAxDA,CAyDCpB,IAUDoB,GAAA5qH,UAAA6pH,MAAA,WAQAe,GAAA5qH,UAAA86G,aAAA,WAEAj6B,GAAA2C,kBAAA,iBAAAonC,IAYA,IAAAC,GAAA,SAAAvB,GAGA,SAAAuB,IAEA,OADA/1B,EAAA92F,KAAA6sH,GACA71B,EAAAh3F,KAAAsrH,EAAAnzG,MAAAnY,KAAAsC,YAmBA,OAvBAy0F,EAAA81B,EAAAvB,GAOAuB,EAAA7qH,UAAAq3F,SAAA,SAAA9wF,EAAA+Q,EAAA+L,GACA,IAAAssF,EAAA,oCAAA3xG,KAAAkkG,SAAAlkG,KAAAijF,SAAAnuD,OAEA,aAAA90B,KAAAijF,SAAA54E,MAAAwqB,OACA88E,GAAA,oHAAA3xG,KAAAkkG,SAAA,+BAGAyN,GAAA,UAEA,IAAA1pE,EAAAqjF,EAAAtpH,UAAAq3F,SAAA94F,KAAAP,KAAAuI,EAAAuW,GACA6yF,aACKr4F,GAAA+L,GAEL,OAAA4iB,GAGA4kF,EAxBA,CAyBCpC,IAED5nC,GAAA2C,kBAAA,mBAAAqnC,IAWA,IAAAC,GAAA,SAAAd,GAGA,SAAAc,EAAAhmG,GACA,IAAAxB,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAw0F,EAAA92F,KAAA8sH,GAIA,IAAAhtG,EAAAk3E,EAAAh3F,KAAAgsH,EAAAzrH,KAAAP,KAAA8mB,EAAAxB,IAOA,OALAxF,EAAA6rG,OAAA,aACA,8BAAA74G,QAAAgN,EAAAuzD,QAAA05C,YAAA,IACAjtG,EAAA6rG,OAAA,YAEA7rG,EAAA6oG,YAAA9b,YAAAvJ,GAAAxjF,EAAA6rG,SACA7rG,EAwCA,OAvDAi3E,EAAA+1B,EAAAd,GA0BAc,EAAA9qH,UAAA6jG,cAAA,WACA,8BAAAmmB,EAAAhqH,UAAA6jG,cAAAtlG,KAAAP,OAGA8sH,EAAA9qH,UAAA8nH,qBAAA,WACA,8BAAAkC,EAAAhqH,UAAA8nH,qBAAAvpH,KAAAP,OAWA8sH,EAAA9qH,UAAA6nH,YAAA,WACA,IAAAF,KASA,OAPA3pH,KAAA8mB,SAAAC,OAAA/mB,KAAA8mB,SAAAC,MAAA0uF,2BAAAz1G,KAAA8mB,SAAA+9E,SAAA,uBACA8kB,EAAAtgH,KAAA,IAAAsjH,GAAA3sH,KAAAqzE,SAA4Dx+C,KAAA70B,KAAA2rH,UAE5D3rH,KAAA4pH,gBAAA,GAGAD,EAAAqC,EAAAhqH,UAAA6nH,YAAAtpH,KAAAP,KAAA2pH,EAAAkD,IACAlD,GAGAmD,EAxDA,CAyDCtB,IAUDsB,GAAA9qH,UAAA4pH,QAAA,wBASAkB,GAAA9qH,UAAA86G,aAAA,YAEAj6B,GAAA2C,kBAAA,iBAAAsnC,IAWA,IAAAE,GAAA,SAAAtC,GAYA,SAAAsC,EAAAlmG,EAAAxB,GACAwxE,EAAA92F,KAAAgtH,GAEA,IAAA3iH,EAAAib,EAAAjb,MACA0zB,EAAAjX,EAAA6X,cAGArZ,EAAAwP,MAAAzqB,EAAAyqB,OAAAzqB,EAAAiZ,UAAA,UACAgC,EAAA8pF,SAAA/kG,EAAA4zB,QAEA,IAAAne,EAAAk3E,EAAAh3F,KAAA0qH,EAAAnqH,KAAAP,KAAA8mB,EAAAxB,IAEAxF,EAAAzV,QAEAyV,EAAAm6E,SAAA,OAAA5vF,EAAAwqB,KAAA,cAEA,IAAA81F,EAAA,WACA,QAAAjhC,EAAApnF,UAAAC,OAAAic,EAAAzD,MAAA2uE,GAAArpE,EAAA,EAAqEA,EAAAqpE,EAAarpE,IAClF7B,EAAA6B,GAAA/d,UAAA+d,GAGAP,EAAA8qG,mBAAAzyG,MAAA2H,EAAAtB,IAOA,OAJAuf,EAAA1J,iBAAA,SAAAs2F,GACA7qG,EAAA3B,GAAA,qBACA4f,EAAA7C,oBAAA,SAAAyvF,KAEA7qG,EA0DA,OAjGAi3E,EAAAi2B,EAAAtC,GA0CAsC,EAAAhrH,UAAAq3F,SAAA,SAAA9wF,EAAA+Q,EAAA+L,GACA,IAAAssF,EAAA,oCAAA3xG,KAAAkkG,SAAAlkG,KAAAijF,SAAAnuD,OAEA,cAAA90B,KAAAijF,SAAA54E,MAAAwqB,OACA88E,GAAA,oHAAA3xG,KAAAkkG,SAAA,mCAGAyN,GAAA,UAEA,IAAA1pE,EAAAyiF,EAAA1oH,UAAAq3F,SAAA94F,KAAAP,KAAAuI,EAAAuW,GACA6yF,aACKr4F,GAAA+L,GAEL,OAAA4iB,GAgBA+kF,EAAAhrH,UAAAk7G,YAAA,SAAA7yF,GACA,IAAA0T,EAAA/9B,KAAAqzE,QAAA10C,cAEA+rF,EAAA1oH,UAAAk7G,YAAA38G,KAAAP,KAAAqqB,GAEA,QAAAjqB,EAAA,EAAmBA,EAAA29B,EAAAx7B,OAAmBnC,IAAA,CACtC,IAAAiK,EAAA0zB,EAAA39B,GAEAiK,EAAA4zB,QAAA5zB,IAAArK,KAAAqK,QAcA2iH,EAAAhrH,UAAA4oH,mBAAA,SAAAvgG,GACArqB,KAAAovG,SAAApvG,KAAAqK,MAAA4zB,UAGA+uF,EAlGA,CAmGC5C,IAEDvnC,GAAA2C,kBAAA,qBAAAwnC,IAWA,IAAAC,GAAA,SAAAxB,GAYA,SAAAwB,EAAAnmG,GACA,IAAAxB,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAKA,OAJAw0F,EAAA92F,KAAAitH,GAEA3nG,EAAAyY,OAAAjX,EAAA6X,cAEAq4D,EAAAh3F,KAAAyrH,EAAAlrH,KAAAP,KAAA8mB,EAAAxB,IAqDA,OAtEAyxE,EAAAk2B,EAAAxB,GA4BAwB,EAAAjrH,UAAA6jG,cAAA,WACA,0BAAA4lB,EAAAzpH,UAAA6jG,cAAAtlG,KAAAP,OAGAitH,EAAAjrH,UAAA8nH,qBAAA,WACA,0BAAA2B,EAAAzpH,UAAA8nH,qBAAAvpH,KAAAP,OAcAitH,EAAAjrH,UAAA6nH,YAAA,WACA,IAAAF,EAAArnH,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAGAtC,KAAA4pH,eAAA,EAIA,IAFA,IAAA7rF,EAAA/9B,KAAAqzE,QAAA10C,cAEAv+B,EAAA,EAAmBA,EAAA29B,EAAAx7B,OAAmBnC,IAAA,CACtC,IAAAiK,EAAA0zB,EAAA39B,GAEAupH,EAAAtgH,KAAA,IAAA2jH,GAAAhtH,KAAAqzE,SACAhpE,QAEAggH,YAAA,EAEAE,iBAAA,KAIA,OAAAZ,GAGAsD,EAvEA,CAwEChD,IAUDgD,GAAAjrH,UAAA86G,aAAA,cACAj6B,GAAA2C,kBAAA,mBAAAynC,IAWA,IAAAC,GAAA,SAAAxC,GAYA,SAAAwC,EAAApmG,EAAAxB,GACAwxE,EAAA92F,KAAAktH,GAEA,IAAAp4F,EAAAxP,EAAAyW,KACAA,EAAAr1B,WAAAouB,EAAA,IAGAxP,EAAAwP,QACAxP,EAAA8pF,SAAA,IAAArzE,EACAzW,EAAA+kG,YAAA,EACA/kG,EAAAilG,iBAAA,EAEA,IAAAzqG,EAAAk3E,EAAAh3F,KAAA0qH,EAAAnqH,KAAAP,KAAA8mB,EAAAxB,IAMA,OAJAxF,EAAAgV,QACAhV,EAAAic,OAEAjc,EAAA3B,GAAA2I,EAAA,aAAAhH,EAAA8lB,QACA9lB,EAmCA,OAhEAi3E,EAAAm2B,EAAAxC,GA6CAwC,EAAAlrH,UAAAk7G,YAAA,SAAA7yF,GACAqgG,EAAA1oH,UAAAk7G,YAAA38G,KAAAP,MACAA,KAAA8mB,SAAAkpB,aAAAhwC,KAAA+7B,OAaAmxF,EAAAlrH,UAAA4jC,OAAA,SAAAvb,GACArqB,KAAAovG,SAAApvG,KAAA8mB,SAAAkpB,iBAAAhwC,KAAA+7B,OAGAmxF,EAjEA,CAkEC9C,IAUD8C,GAAAlrH,UAAAgnH,cAAA,SAEAnmC,GAAA2C,kBAAA,uBAAA0nC,IAWA,IAAAC,GAAA,SAAAjD,GAYA,SAAAiD,EAAArmG,EAAAxB,GACAwxE,EAAA92F,KAAAmtH,GAEA,IAAArtG,EAAAk3E,EAAAh3F,KAAAkqH,EAAA3pH,KAAAP,KAAA8mB,EAAAxB,IAOA,OALAxF,EAAAstG,mBACAttG,EAAAutG,cAEAvtG,EAAA3B,GAAA2I,EAAA,YAAAhH,EAAAstG,kBACAttG,EAAA3B,GAAA2I,EAAA,aAAAhH,EAAAutG,aACAvtG,EAsKA,OA3LAi3E,EAAAo2B,EAAAjD,GAgCAiD,EAAAnrH,UAAAq3F,SAAA,WACA,IAAApxD,EAAAiiF,EAAAloH,UAAAq3F,SAAA94F,KAAAP,MASA,OAPAA,KAAAstH,SAAAj0B,GAAA,OACAjwF,UAAA,0BACAuoG,UAAA,OAGA1pE,EAAAn/B,YAAA9I,KAAAstH,UAEArlF,GAGAklF,EAAAnrH,UAAAyc,QAAA,WACAze,KAAAstH,SAAA,KAEApD,EAAAloH,UAAAyc,QAAAle,KAAAP,OAWAmtH,EAAAnrH,UAAA6jG,cAAA,WACA,2BAAAqkB,EAAAloH,UAAA6jG,cAAAtlG,KAAAP,OAGAmtH,EAAAnrH,UAAA8nH,qBAAA,WACA,2BAAAI,EAAAloH,UAAA8nH,qBAAAvpH,KAAAP,OAWAmtH,EAAAnrH,UAAAynH,WAAA,WACA,IAAAD,EAAA,IAAAd,GAAA1oH,KAAA8mB,UACAymG,EAAAvtH,KAAAwtH,gBAEA,GAAAD,EACA,QAAAntH,EAAAmtH,EAAAhrH,OAAA,EAAoCnC,GAAA,EAAQA,IAC5CopH,EAAA1kB,SAAA,IAAAooB,GAAAltH,KAAA8mB,UAA+DiV,KAAAwxF,EAAAntH,GAAA,OAI/D,OAAAopH,GAQA2D,EAAAnrH,UAAA+kH,qBAAA,WAEA/mH,KAAAioC,KAAAuxD,aAAA,gBAAAx5F,KAAA8mB,SAAAkpB,iBAgBAm9E,EAAAnrH,UAAAk7G,YAAA,SAAA7yF,GAQA,IANA,IAAAojG,EAAAztH,KAAA8mB,SAAAkpB,eACAu9E,EAAAvtH,KAAAwtH,gBAGAE,EAAAH,EAAA,GAEAntH,EAAA,EAAmBA,EAAAmtH,EAAAhrH,OAAkBnC,IACrC,GAAAmtH,EAAAntH,GAAAqtH,EAAA,CACAC,EAAAH,EAAAntH,GACA,MAGAJ,KAAA8mB,SAAAkpB,aAAA09E,IAWAP,EAAAnrH,UAAAwrH,cAAA,WACA,OAAAxtH,KAAAijF,SAAAuqC,eAAAxtH,KAAAijF,SAAA19D,eAAAvlB,KAAAijF,SAAA19D,cAAAioG,eAYAL,EAAAnrH,UAAA2rH,sBAAA,WACA,OAAA3tH,KAAA8mB,SAAAC,OAAA/mB,KAAA8mB,SAAAC,MAAA0xF,sBAAAz4G,KAAAwtH,iBAAAxtH,KAAAwtH,gBAAAjrH,OAAA,GAaA4qH,EAAAnrH,UAAAorH,iBAAA,SAAA/iG,GACArqB,KAAA2tH,wBACA3tH,KAAAm6F,YAAA,cAEAn6F,KAAAi6F,SAAA,eAcAkzB,EAAAnrH,UAAAqrH,YAAA,SAAAhjG,GACArqB,KAAA2tH,0BACA3tH,KAAAstH,SAAA3b,UAAA3xG,KAAA8mB,SAAAkpB,eAAA,MAIAm9E,EA5LA,CA6LC9D,IAUD8D,GAAAnrH,UAAA86G,aAAA,gBAEAj6B,GAAA2C,kBAAA,yBAAA2nC,IAYA,IAAAS,GAAA,SAAA5qC,GAGA,SAAA4qC,IAEA,OADA92B,EAAA92F,KAAA4tH,GACA52B,EAAAh3F,KAAAgjF,EAAA7qE,MAAAnY,KAAAsC,YA2BA,OA/BAy0F,EAAA62B,EAAA5qC,GAaA4qC,EAAA5rH,UAAA6jG,cAAA,WACA,oBAAA7iB,EAAAhhF,UAAA6jG,cAAAtlG,KAAAP,OAWA4tH,EAAA5rH,UAAAq3F,SAAA,WACA,OAAArW,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAApJ,KAAA6lG,mBAIA+nB,EAhCA,CAiCC/qC,IAEDA,GAAA2C,kBAAA,SAAAooC,IAWA,IAAAC,GAAA,SAAAC,GAGA,SAAAD,IAEA,OADA/2B,EAAA92F,KAAA6tH,GACA72B,EAAAh3F,KAAA8tH,EAAA31G,MAAAnY,KAAAsC,YAgCA,OApCAy0F,EAAA82B,EAAAC,GAaAD,EAAA7rH,UAAA6jG,cAAA,WACA,mCAAAioB,EAAA9rH,UAAA6jG,cAAAtlG,KAAAP,OAWA6tH,EAAA7rH,UAAAq3F,SAAA,WACA,IAAApxD,EAAA6lF,EAAA9rH,UAAAq3F,SAAA94F,KAAAP,MACAoJ,UAAApJ,KAAA6lG,kBAMA,OADA59D,EAAA0pE,UAAA,IACA1pE,GAGA4lF,EArCA,CAsCCD,IAED/qC,GAAA2C,kBAAA,sBAAAqoC,IAYA,IAAAE,GAAA,SAAA/qC,GAGA,SAAA+qC,IAEA,OADAj3B,EAAA92F,KAAA+tH,GACA/2B,EAAAh3F,KAAAgjF,EAAA7qE,MAAAnY,KAAAsC,YAgBA,OApBAy0F,EAAAg3B,EAAA/qC,GAaA+qC,EAAA/rH,UAAAq3F,SAAA,WACA,OAAArW,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,kBACAwK,IAAA,SAIAm6G,EArBA,CAsBClrC,IAUDkrC,GAAA/rH,UAAAihF,UACA0hB,UAAA,qRAGA9hB,GAAA2C,kBAAA,aAAAuoC,IAYA,IAAAC,GAAA,SAAAC,GAYA,SAAAD,EAAAlnG,EAAAxB,GACAwxE,EAAA92F,KAAAguH,GAEA,IAAAluG,EAAAk3E,EAAAh3F,KAAAiuH,EAAA1tH,KAAAP,KAAA8mB,EAAAxB,IAGA,OADAxF,EAAA3B,GAAA2I,EAAA,QAAAhH,EAAAk8D,MACAl8D,EA+BA,OAhDAi3E,EAAAi3B,EAAAC,GA8BAD,EAAAhsH,UAAA6jG,cAAA,WACA,2BAAAooB,EAAAjsH,UAAA6jG,cAAAtlG,KAAAP,OAWAguH,EAAAhsH,UAAAi8D,QAAA,WACA,IAAAtmC,EAAA33B,KAAA8mB,SAAA6Q,QAEA,OAAAA,EAAA33B,KAAAkkG,SAAAvsE,EAAAh1B,SAAA,IAGAqrH,EAjDA,CAkDC5iB,IASD4iB,GAAAhsH,UAAAihF,SAAAvtD,GAAA01E,GAAAppG,UAAAihF,UACAopB,aAAA,EACAH,YAAA,EACAS,WAAA,EACAlB,aAAA,IAGA5oB,GAAA2C,kBAAA,eAAAwoC,IAKA,IAAAE,GAAA,0BAEAC,IAAA,gBACAC,IAAA,eACAC,IAAA,eACAC,IAAA,gBACAC,IAAA,kBACAC,IAAA,cACAC,IAAA,gBACAC,IAAA,iBAEAC,IAAA,cACAC,IAAA,0BACAC,IAAA,mBAaAC,IACA7jH,iBACAkuF,SAAA,yBACA10F,GAAA,+BACAqwB,MAAA,QACAxP,SAAA6oG,GAAAM,GAAAD,GAAAF,GAAAF,GAAAM,GAAAH,GAAAF,KAGA1O,mBACAxmB,SAAA,2BACA10F,GAAA,iCACAqwB,MAAA,eACAxP,SAAAqpG,GAAAC,GAAAC,KAGA7jH,OACAmuF,SAAA,yBACA10F,GAAA,+BACAqwB,MAAA,QACAxP,SAAAmpG,GAAAN,GAAAK,GAAAF,GAAAF,GAAAM,GAAAH,GAAAF,KAGAvO,WACA3mB,SAAA,2BACA10F,GAAA,KACAqwB,MAAA,kBACAxP,UAAA,iHAGA26F,YACA9mB,SAAA,4BACA10F,GAAA,0BACAqwB,MAAA,cACAxP,UAAA,uPAGA06F,aACA7mB,SAAA,6BACA10F,GAAA,wBACAqwB,MAAA,YACAxP,UAAA,8IACAxL,QAAA,EACAmtB,OAAA,SAAAnjC,GACA,eAAAA,EAAA,KAAA8kC,OAAA9kC,KAIA47G,aACAvmB,SAAA,6BACA10F,GAAA,iCACAqwB,MAAA,eACAxP,SAAAqpG,GAAAC,KAIAhP,aACAzmB,SAAA,6BACA10F,GAAA,2BACAqwB,MAAA,SAIA+qF,eACA1mB,SAAA,+BACA10F,GAAA,6BACAqwB,MAAA,eACAxP,SAAAupG,GAAAD,GAAAD,MAsBA,SAAAI,GAAA1tH,EAAA4lC,GAKA,GAJAA,IACA5lC,EAAA4lC,EAAA5lC,IAGAA,GAAA,SAAAA,EACA,OAAAA,EAoBA,SAAA2tH,GAAA/mF,EAAAhB,GACA,IAAA5lC,EAAA4mC,EAAA3iB,QAAA2iB,EAAA3iB,QAAA68D,eAAA9gF,MAEA,OAAA0tH,GAAA1tH,EAAA4lC,GAkBA,SAAAgoF,GAAAhnF,EAAA5mC,EAAA4lC,GACA,GAAA5lC,EAIA,QAAAjB,EAAA,EAAiBA,EAAA6nC,EAAA3iB,QAAA/iB,OAAuBnC,IACxC,GAAA2uH,GAAA9mF,EAAA3iB,QAAAllB,GAAAiB,MAAA4lC,KAAA5lC,EAAA,CACA4mC,EAAAk6C,cAAA/hF,EACA,OAzEA0uH,GAAAlP,YAAAt6F,QAAAwpG,GAAA7jH,gBAAAqa,QAoFA,IAAA4pG,GAAA,SAAAjB,GAYA,SAAAiB,EAAApoG,EAAAxB,GACAwxE,EAAA92F,KAAAkvH,GAEA5pG,EAAAqnF,WAAA,EAEA,IAAA7sF,EAAAk3E,EAAAh3F,KAAAiuH,EAAA1tH,KAAAP,KAAA8mB,EAAAxB,IAsCA,OApCAxF,EAAA03F,cAAA51G,GAAAke,IAAA03F,eAGA13F,EAAAqsF,OACArsF,EAAAwrF,eAAAxrF,EAAAyrF,gBAAA,EAEAzrF,EAAAqvG,UAAA91B,GAAA,KACAjwF,UAAA,mBACAa,YAAA6V,EAAAokF,SAAA,2BAEApkF,EAAAmoB,KAAAn/B,YAAAgX,EAAAqvG,WAEArvG,EAAAsvG,mBAGAniH,IAAAqY,EAAA+pG,2BACAvvG,EAAAmjE,SAAAosC,yBAAAvvG,EAAAmjE,SAAA19D,cAAA8pG,0BAGAvvG,EAAA3B,GAAA2B,EAAA88E,EAAA,uCACA98E,EAAAwvG,eACAxvG,EAAAmsF,UAGAnsF,EAAA3B,GAAA2B,EAAA88E,EAAA,0CACA98E,EAAAsvG,cACAtvG,EAAA03F,kBAGApgB,EAAA03B,GAAA,SAAAjmE,GACA/oC,EAAA3B,GAAA2B,EAAA88E,EAAA/zC,EAAAswC,UAAA,SAAAr5E,EAAA03F,iBAGA13F,EAAAmjE,SAAAosC,0BACAvvG,EAAAyvG,kBAEAzvG,EA8RA,OApVAi3E,EAAAm4B,EAAAjB,GAyDAiB,EAAAltH,UAAAyc,QAAA,WACAze,KAAAmvH,UAAA,KAEAlB,EAAAjsH,UAAAyc,QAAAle,KAAAP,OAgBAkvH,EAAAltH,UAAAwtH,gBAAA,SAAA7tH,GACA,IAAAq0B,EAAAh2B,KAEAyvH,EAAAntH,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAiG,EAAAjG,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,WAEAumD,EAAAimE,GAAAntH,GACA8C,EAAAokD,EAAApkD,GAAAtB,QAAA,KAAAnD,KAAA2jG,KACA+rB,GAAAD,EAAAhrH,GAAAqoB,KAAA,KAAAnkB,OAEA,WAAAJ,EAAA,QAAA9D,EAAA,uBAAA8D,EAAA,qBAAAvI,KAAAkkG,SAAAr7C,EAAA/zB,OAAA,KAAAvsB,EAAA,gCAAAmnH,EAAA,MAAAp4G,OAAAuxC,EAAAvjC,QAAAlN,IAAA,SAAAvX,GACA,IAAA8uH,EAAAlrH,EAAA,IAAA5D,EAAA,GAAAsC,QAAA,WAEA,sBAAAwsH,EAAA,YAAA9uH,EAAA,4BAAA6uH,EAAA,IAAAC,EAAA,KAAA35F,EAAAkuE,SAAArjG,EAAA,iBAAAisB,KAAA,OACKxV,OAAA,aAAAwV,KAAA,KAaLoiG,EAAAltH,UAAA4tH,iBAAA,WACA,IAAAH,EAAA,wBAAAzvH,KAAA2jG,IAEA,0EAAA8rB,EAAA,KAAAzvH,KAAAkkG,SAAA,oBAAAlkG,KAAAwvH,gBAAA,QAAAC,GAAA,8CAAAzvH,KAAAwvH,gBAAA,cAAAC,GAAA,yBAAA3iG,KAAA,KAaAoiG,EAAAltH,UAAA6tH,iBAAA,WACA,IAAAJ,EAAA,uBAAAzvH,KAAA2jG,IAEA,0EAAA8rB,EAAA,KAAAzvH,KAAAkkG,SAAA,0BAAAlkG,KAAAwvH,gBAAA,kBAAAC,GAAA,4CAAAzvH,KAAAwvH,gBAAA,oBAAAC,GAAA,yBAAA3iG,KAAA,KAaAoiG,EAAAltH,UAAA8tH,kBAAA,WACA,IAAAL,EAAA,mBAAAzvH,KAAA2jG,IAEA,8EAAA8rB,EAAA,KAAAzvH,KAAAkkG,SAAA,sBAAAlkG,KAAAwvH,gBAAA,cAAAC,GAAA,gDAAAzvH,KAAAwvH,gBAAA,gBAAAC,GAAA,yBAAA3iG,KAAA,KAaAoiG,EAAAltH,UAAA+tH,gBAAA,WACA,OAAA12B,GAAA,OACAjwF,UAAA,4BACAuoG,WAAA3xG,KAAA4vH,mBAAA5vH,KAAA6vH,mBAAA7vH,KAAA8vH,qBAAAhjG,KAAA,OAcAoiG,EAAAltH,UAAAguH,cAAA,WACA,OAAA32B,GAAA,OACAjwF,UAAA,0BACAuoG,WAAA,wDAAA3xG,KAAAwvH,gBAAA,+FAAAxvH,KAAAwvH,gBAAA,8FAAAxvH,KAAAwvH,gBAAA,yCAAA1iG,KAAA,OAcAoiG,EAAAltH,UAAAiuH,kBAAA,WACA,IAAAC,EAAAlwH,KAAAkkG,SAAA,8CAEA,OAAA7K,GAAA,OACAjwF,UAAA,8BACAuoG,WAAA,6CAAAue,EAAA,KAAAlwH,KAAAkkG,SAAA,4CAAAgsB,EAAA,yDAAAlwH,KAAAkkG,SAAA,qBAAAp3E,KAAA,OAIAoiG,EAAAltH,UAAAi8D,QAAA,WACA,OAAAj+D,KAAA+vH,kBAAA/vH,KAAAgwH,gBAAAhwH,KAAAiwH,sBAGAf,EAAAltH,UAAA8yB,MAAA,WACA,OAAA90B,KAAAkkG,SAAA,4BAGAgrB,EAAAltH,UAAAm/D,YAAA,WACA,OAAAnhE,KAAAkkG,SAAA,yEAGAgrB,EAAAltH,UAAA6jG,cAAA,WACA,OAAAooB,EAAAjsH,UAAA6jG,cAAAtlG,KAAAP,MAAA,4BAWAkvH,EAAAltH,UAAAy9G,UAAA,WACA,IAAAlnF,EAAAv4B,KAEA,OAAA0X,EAAAo3G,GAAA,SAAAz3B,EAAAxuC,EAAAlnD,GACA,IAAAN,EAAA2tH,GAAAz2F,EAAAqkE,EAAA/zC,EAAAswC,UAAAtwC,EAAA5hB,QAMA,YAJAh6B,IAAA5L,IACAg2F,EAAA11F,GAAAN,GAGAg2F,QAYA63B,EAAAltH,UAAAmuH,UAAA,SAAA9sH,GACA,IAAAg2B,EAAAr5B,KAEAo3F,EAAA03B,GAAA,SAAAjmE,EAAAlnD,GACAstH,GAAA51F,EAAAujE,EAAA/zC,EAAAswC,UAAA91F,EAAA1B,GAAAknD,EAAA5hB,WASAioF,EAAAltH,UAAAotH,YAAA,WACA,IAAAt0F,EAAA96B,KAEAo3F,EAAA03B,GAAA,SAAAjmE,GACA,IAAA/wC,EAAA+wC,EAAA5mD,eAAA,WAAA4mD,EAAA,aAEA/tB,EAAA8hE,EAAA/zC,EAAAswC,UAAAhX,cAAArqE,KASAo3G,EAAAltH,UAAAutH,gBAAA,WACA,IAAAlsH,OAAA,EAEA,IACAA,EAAAm2C,KAAAhoC,MAAA7J,EAAAyoH,aAAAC,QAAAnC,KACK,MAAAtkG,GACL2uE,EAAA9lE,KAAA7I,GAGAvmB,GACArD,KAAAmwH,UAAA9sH,IASA6rH,EAAAltH,UAAAstH,aAAA,WACA,GAAAtvH,KAAAijF,SAAAosC,yBAAA,CAIA,IAAAhsH,EAAArD,KAAAy/G,YAEA,IACA3+G,OAAAyrB,KAAAlpB,GAAAd,OACAoF,EAAAyoH,aAAAE,QAAApC,GAAA10E,KAAAC,UAAAp2C,IAEAsE,EAAAyoH,aAAAG,WAAArC,IAEK,MAAAtkG,GACL2uE,EAAA9lE,KAAA7I,MASAslG,EAAAltH,UAAAw1G,cAAA,WACA,IAAAgZ,EAAAxwH,KAAAqzE,QAAAwxB,SAAA,oBAEA2rB,GACAA,EAAAhZ,iBAWA0X,EAAAltH,UAAA0qG,iBAAA,WACA1sG,KAAA+rG,oBAAA,KACA/rG,KAAAqe,IAAA3V,EAAA,UAAA1I,KAAAutG,eAEA,IAAAoT,EAAA3gH,KAAAqzE,QAAA/sD,WACAmqG,EAAA9P,KAAA+P,eACAC,EAAAhQ,KAAAiQ,eAEAH,EACAA,EAAAx1B,QACK01B,GACLA,EAAA11B,SAIAi0B,EArVA,CAsVC9jB,IAEDvoB,GAAA2C,kBAAA,oBAAA0pC,IAsBA,IAAA2B,GAAA,SAAA7tC,GAgBA,SAAA6tC,EAAA/pG,EAAAxB,GACAwxE,EAAA92F,KAAA6wH,GAEA,IAAAC,EAAAxrG,EAAAyrG,gBAAAppH,EAAAopH,eAGA,OAAAzrG,EAAAyrG,iBACAD,GAAA,GAIA,IAAA7tC,EAAAvtD,IAAiC2jE,UAAAy3B,GAAuCxrG,GAExExF,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAm8D,IAsBA,OApBAnjE,EAAAixG,eAAAzrG,EAAAyrG,gBAAAppH,EAAAopH,eACAjxG,EAAAkxG,cAAA,KACAlxG,EAAAmxG,gBAAA,KACAnxG,EAAAoxG,kBAAA9vB,GAAA,WACAthF,EAAAqxG,iBACK,OAAArqG,GAELgqG,GACAhxG,EAAAmxG,gBAAA,IAAAnxG,EAAAixG,eAAAjxG,EAAAoxG,mBACApxG,EAAAmxG,gBAAAG,QAAAtqG,EAAAmhB,QAEAnoB,EAAAkxG,cAAA,WACAlxG,EAAA26D,IAAA42C,eACAlzG,GAAA2B,EAAA26D,IAAA42C,cAAA,SAAAvxG,EAAAoxG,mBAEApxG,EAAAzB,IAAA,OAAAyB,EAAAkxG,gBAGAlxG,EAAA3B,GAAA,OAAA2B,EAAAkxG,gBAEAlxG,EAgDA,OAlGAi3E,EAAA85B,EAAA7tC,GAqDA6tC,EAAA7uH,UAAAq3F,SAAA,WACA,OAAArW,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,UACAoJ,UAAA,wBAWAynH,EAAA7uH,UAAAmvH,cAAA,WAOAnxH,KAAAqzE,QAAA18D,QAAA,iBAGAk6G,EAAA7uH,UAAAyc,QAAA,WACAze,KAAAixH,kBACAjxH,KAAAqzE,QAAAprC,MACAjoC,KAAAixH,gBAAAK,UAAAtxH,KAAAqzE,QAAAprC,MAEAjoC,KAAAixH,gBAAAM,cAGAvxH,KAAAy6E,KAAAz6E,KAAAy6E,IAAA42C,eACAhzG,GAAAre,KAAAy6E,IAAA42C,cAAA,SAAArxH,KAAAkxH,mBAGAlxH,KAAAgxH,eACAhxH,KAAAqe,IAAA,OAAAre,KAAAgxH,eAGAhxH,KAAA+wH,eAAA,KACA/wH,KAAAwxH,eAAA,KACAxxH,KAAAkxH,kBAAA,KACAlxH,KAAAgxH,cAAA,MAGAH,EAnGA,CAoGChuC,IAEDA,GAAA2C,kBAAA,gBAAAqrC,IAeA,IAAAY,GAAA,SAAAt+F,GACA,IAAA8U,EAAA9U,EAAA8U,KAGA,GAAAA,EAAA8C,aAAA,OAEA,OADA5X,EAAA2iF,iBAAA7tE,EAAA5hB,MACA,EAeA,IAAAF,EAAAgN,EAAA0pE,GAAA,UACA60B,KACArrG,EAAA,GAGA,IAAAF,EAAA5jB,OACA,SAIA,QAAAnC,EAAA,EAAiBA,EAAA+lB,EAAA5jB,OAAoBnC,IAAA,CACrC,IAAA8yB,EAAA/M,EAAA/lB,GAAAimB,IAEA6M,IAAA,IAAAw+F,EAAA5+G,QAAAogB,IACAw+F,EAAAroH,KAAA6pB,GAKA,QAAAw+F,EAAAnvH,SAMA,IAAAmvH,EAAAnvH,SACA8jB,EAAAqrG,EAAA,IAGAv+F,EAAA2iF,iBAAAzvF,IACA,IAOAsrG,MAEAt7B,IACAs7B,GAAA7wH,OAAAC,kBAAwD,aACxDE,IAAA,WACA,OAAAjB,KAAA4xH,WAAA,GAAAjgB,WAEAjtG,IAAA,SAAAZ,GAEA,IAAA+tH,EAAAnpH,EAAAJ,cAAAtI,KAAA8hG,SAAAjuF,eAGAg+G,EAAAlgB,UAAA7tG,EAGA,IAAAguH,EAAAppH,EAAAqpH,yBAIA,MAAAF,EAAA/nH,WAAAvH,OACAuvH,EAAAhpH,YAAA+oH,EAAA/nH,WAAA,IAWA,OAPA9J,KAAAkK,UAAA,GAIAvC,EAAAqqH,QAAAhwH,UAAA8G,YAAAvI,KAAAP,KAAA8xH,GAGA9xH,KAAA2xG,cAQA,IAAAsgB,GAAA,SAAAC,EAAAvjH,GAGA,IAFA,IAAA4K,KAEAnZ,EAAA,EAAiBA,EAAA8xH,EAAA3vH,OAAqBnC,IAGtC,GAFAmZ,EAAAzY,OAAAiuB,yBAAAmjG,EAAA9xH,GAAAuO,GAEA4K,KAAA7U,KAAA6U,EAAAtY,IACA,MAOA,OAHAsY,EAAAvY,YAAA,EACAuY,EAAAC,cAAA,EAEAD,GAGA44G,GAAA,SAAAh/F,GACA,OAAA8+F,IAAA9+F,EAAA8U,KAAAtgC,EAAAyqH,iBAAApwH,UAAA2F,EAAAqqH,QAAAhwH,UAAA2vH,IAAA,cAqBAU,GAAA,SAAAl/F,GACA,IAAA8U,EAAA9U,EAAA8U,KAGA,IAAAA,EAAAqqF,kBAAA,CAIA,IAAAv0B,KACAw0B,EAAAJ,GAAAh/F,GACAq/F,EAAA,SAAAC,GACA,kBACA,QAAA/oC,EAAApnF,UAAAC,OAAAic,EAAAzD,MAAA2uE,GAAArpE,EAAA,EAAqEA,EAAAqpE,EAAarpE,IAClF7B,EAAA6B,GAAA/d,UAAA+d,GAGA,IAAAqyG,EAAAD,EAAAt6G,MAAA8vB,EAAAzpB,GAIA,OAFAizG,GAAAt+F,GAEAu/F,KAIA,6CAAAlmG,QAAA,SAAA3oB,GACAokC,EAAApkC,KAKAk6F,EAAAl6F,GAAAokC,EAAApkC,GAIAokC,EAAApkC,GAAA2uH,EAAAz0B,EAAAl6F,OAGA/C,OAAAC,eAAAknC,EAAA,YAAAvS,GAAA68F,GACA7tH,IAAA8tH,EAAAD,EAAA7tH,QAGAujC,EAAAqqF,kBAAA,WACArqF,EAAAqqF,kBAAA,KACAxxH,OAAAyrB,KAAAwxE,GAAAvxE,QAAA,SAAA3oB,GACAokC,EAAApkC,GAAAk6F,EAAAl6F,KAGA/C,OAAAC,eAAAknC,EAAA,YAAAsqF,IAIAp/F,EAAAuE,IAAA,YAAAuQ,EAAAqqF,qBAQAK,MAEAt8B,IACAs8B,GAAA7xH,OAAAC,kBAAkD,OAClDE,IAAA,WACA,OAAAjB,KAAA+qC,aAAA,OACA8mE,GAAAlqG,EAAAqqH,QAAAhwH,UAAA64F,aAAAt6F,KAAAP,KAAA,QAGA,IAEA0E,IAAA,SAAAZ,GAGA,OAFA6D,EAAAqqH,QAAAhwH,UAAAw3F,aAAAj5F,KAAAP,KAAA,MAAA8D,GAEAA,MAKA,IAAA8uH,GAAA,SAAAz/F,GACA,OAAA8+F,IAAA9+F,EAAA8U,KAAAtgC,EAAAyqH,iBAAApwH,UAAA2wH,IAAA,QAkBAE,GAAA,SAAA1/F,GACA,GAAAA,EAAAulF,kBAAA,CAIA,IAAAzwE,EAAA9U,EAAA8U,KAGA,IAAAA,EAAA6qF,gBAAA,CAIA,IAAAC,EAAAH,GAAAz/F,GACA6/F,EAAA/qF,EAAAuxD,aACAy5B,EAAAhrF,EAAAlS,KAEAj1B,OAAAC,eAAAknC,EAAA,MAAAvS,GAAAq9F,GACAruH,IAAA,SAAAZ,GACA,IAAA4uH,EAAAK,EAAAruH,IAAAnE,KAAA0nC,EAAAnkC,GAKA,OAFAqvB,EAAA2iF,iBAAA7tE,EAAA5hB,KAEAqsG,MAIAzqF,EAAAuxD,aAAA,SAAA33F,EAAAiC,GACA,IAAA4uH,EAAAM,EAAAzyH,KAAA0nC,EAAApmC,EAAAiC,GAMA,MAJA,OAAA0C,KAAA3E,IACAsxB,EAAA2iF,iBAAA7tE,EAAA5hB,KAGAqsG,GAGAzqF,EAAAlS,KAAA,WACA,IAAA28F,EAAAO,EAAA1yH,KAAA0nC,GAWA,OALAwpF,GAAAt+F,KACAA,EAAA2iF,iBAAA,IACAuc,GAAAl/F,IAGAu/F,GAGAzqF,EAAAirF,WACA//F,EAAA2iF,iBAAA7tE,EAAAirF,YACGzB,GAAAt+F,IACHk/F,GAAAl/F,GAGA8U,EAAA6qF,gBAAA,WACA7qF,EAAA6qF,gBAAA,KACA7qF,EAAAlS,KAAAk9F,EACAhrF,EAAAuxD,aAAAw5B,EACAlyH,OAAAC,eAAAknC,EAAA,MAAA8qF,GACA9qF,EAAAqqF,mBACArqF,EAAAqqF,wBAKAa,GAAAl8B,GAAA,8SAYAm8B,GAAA,SAAAxa,GAYA,SAAAwa,EAAA9tG,EAAAE,GACAsxE,EAAA92F,KAAAozH,GAEA,IAAAtzG,EAAAk3E,EAAAh3F,KAAA44G,EAAAr4G,KAAAP,KAAAslB,EAAAE,IAEAzG,EAAAuG,EAAAvG,OACAs0G,GAAA,EAiBA,GAXAt0G,IAAAe,EAAA26D,IAAAy4C,aAAAn0G,EAAAsH,KAAAf,EAAAlE,KAAA,IAAAkE,EAAAlE,IAAAkyG,mBACAxzG,EAAA8wB,UAAA7xB,GAEAe,EAAAyzG,gBAAAzzG,EAAA26D,KAIAn1D,EAAAkuG,iBACA1zG,EAAA2zG,0BAGA3zG,EAAA26D,IAAAi5C,gBAAA,CAEA,IAAAC,EAAA7zG,EAAA26D,IAAA3wE,WACA8pH,EAAAD,EAAApxH,OACAsxH,KAEA,MAAAD,IAAA,CACA,IAAA1qH,EAAAyqH,EAAAC,GACA9xB,EAAA54F,EAAA44F,SAAAjuF,cAEA,UAAAiuF,IACAhiF,EAAA21F,0BAQA31F,EAAAg4F,qBAAAnI,iBAAAzmG,GACA4W,EAAA8e,mBAAAE,SAAA51B,EAAAmB,OACAyV,EAAAwzD,aAAAx0C,SAAA51B,EAAAmB,OACAgpH,GAAAvzG,EAAA26D,IAAA1vC,aAAA,iBAAAinE,GAAA9oG,EAAAmd,OACAgtG,GAAA,IAPAQ,EAAAxqH,KAAAH,IAaA,QAAA9I,EAAA,EAAqBA,EAAAyzH,EAAAtxH,OAAwBnC,IAC7C0f,EAAA26D,IAAAhqE,YAAAojH,EAAAzzH,IAyBA,OArBA0f,EAAAg0G,qBACAh0G,EAAA21F,0BAAA4d,GACA96B,EAAA9lE,KAAAuiE,EAAAm+B,KAIArzG,EAAAi0G,2CAMAv9B,GAAAjB,GAAAS,KAAA,IAAA1wE,EAAAuwF,wBACA/1F,EAAAk0G,aAAA,GAKAl0G,EAAAm0G,yBAEAn0G,EAAAmmF,eACAnmF,EAguBA,OAzzBAi3E,EAAAq8B,EAAAxa,GAiGAwa,EAAApxH,UAAAyc,QAAA,WACAze,KAAAy6E,KAAAz6E,KAAAy6E,IAAAq4C,iBACA9yH,KAAAy6E,IAAAq4C,kBAEAM,EAAAc,oBAAAl0H,KAAAy6E,KACAz6E,KAAAijF,SAAA,KAGA21B,EAAA52G,UAAAyc,QAAAle,KAAAP,OASAozH,EAAApxH,UAAAyxH,wBAAA,WACAZ,GAAA7yH,OAaAozH,EAAApxH,UAAA+xH,wCAAA,WACA,IAAAzgD,EAAAtzE,KAAAszE,aACA6gD,OAAA,EAGAC,EAAA,WACAD,KAEA,QAAA/zH,EAAA,EAAqBA,EAAAkzE,EAAA/wE,OAAuBnC,IAAA,CAC5C,IAAAiK,EAAAipE,EAAAlzE,GAEA,aAAAiK,EAAAwqB,MACAs/F,EAAA9qH,MACAgB,QACAgqH,WAAAhqH,EAAA9I,SAQA6yH,IACA9gD,EAAAj/C,iBAAA,SAAA+/F,GAEAp0H,KAAAme,GAAA,qBACA,OAAAm1D,EAAAp4C,oBAAA,SAAAk5F,KAGA,IAAAE,EAAA,SAAAA,IACA,QAAAl0H,EAAA,EAAqBA,EAAA+zH,EAAA5xH,OAA6CnC,IAAA,CAClE,IAAAm0H,EAAAJ,EAAA/zH,GAEA,aAAAm0H,EAAAlqH,MAAA9I,MAAAgzH,EAAAlqH,MAAA9I,OAAAgzH,EAAAF,aACAE,EAAAlqH,MAAA9I,KAAAgzH,EAAAF,YAIA/gD,EAAAp4C,oBAAA,SAAAo5F,IAKAt0H,KAAAme,GAAA,mCACAm1D,EAAAp4C,oBAAA,SAAAk5F,GAGA9gD,EAAAp4C,oBAAA,SAAAo5F,GACAhhD,EAAAj/C,iBAAA,SAAAigG,KAIAt0H,KAAAme,GAAA,iCAEAm1D,EAAAp4C,oBAAA,SAAAk5F,GACA9gD,EAAAj/C,iBAAA,SAAA+/F,GAGA9gD,EAAAp4C,oBAAA,SAAAo5F,MAYAlB,EAAApxH,UAAA8xH,mBAAA,WACA,IAAA99F,EAAAh2B,KAEAs0G,GAAAW,MAAAzoF,QAAA,SAAA7rB,GACA,IAAA2Y,EAAAg7F,GAAA3zG,GACA6zH,EAAAx+F,EAAAiS,KAAA3uB,EAAAo7F,YACA+f,EAAAz+F,EAAA1c,EAAAo7F,cAEA,GAAA1+E,EAAA,iBAAA1c,EAAAm7F,YAAA,WAAA+f,KAAAngG,iBAAA,CAGA,IAAAnW,GACAywF,OAAA,SAAA3mG,GACAysH,EAAA99G,SACApO,KAAA,SACA8Q,OAAAo7G,EACAC,cAAAD,EACAx2B,WAAAw2B,KAGA7lB,SAAA,SAAA5mG,GACAysH,EAAA31F,SAAA92B,EAAAqC,QAEAwkG,YAAA,SAAA7mG,GACAysH,EAAAhmB,YAAAzmG,EAAAqC,SAGAsqH,EAAA,WAGA,IAFA,IAAAC,KAEAx0H,EAAA,EAAuBA,EAAAq0H,EAAAlyH,OAAuBnC,IAAA,CAG9C,IAFA,IAAAy0H,GAAA,EAEA1nG,EAAA,EAAyBA,EAAAqnG,EAAAjyH,OAAqB4qB,IAC9C,GAAAqnG,EAAArnG,KAAAsnG,EAAAr0H,GAAA,CACAy0H,GAAA,EACA,MAIAA,GACAD,EAAAvrH,KAAAorH,EAAAr0H,IAIA,MAAAw0H,EAAAryH,OACAkyH,EAAAhmB,YAAAmmB,EAAAj6E,UAIA75C,OAAAyrB,KAAArO,GAAAsO,QAAA,SAAA6tD,GACA,IAAAj8D,EAAAF,EAAAm8D,GAEAm6C,EAAAngG,iBAAAgmD,EAAAj8D,GACA4X,EAAA7X,GAAA,mBAAAnW,GACA,OAAAwsH,EAAAt5F,oBAAAm/C,EAAAj8D,OAKA4X,EAAA7X,GAAA,YAAAw2G,GACA3+F,EAAA7X,GAAA,mBAAAnW,GACA,OAAAguB,EAAA3X,IAAA,YAAAs2G,SAaAvB,EAAApxH,UAAAq3F,SAAA,WACA,IAAApxD,EAAAjoC,KAAAijF,SAAA7hE,IAMA,IAAA6mB,IAAAjoC,KAAAijF,SAAA6xC,iBAAA90H,KAAA+0H,wBAAA,CAGA,GAAA9sF,EAAA,CACA,IAAA+sF,EAAA/sF,EAAA2pF,WAAA,GAEA3pF,EAAAh/B,YACAg/B,EAAAh/B,WAAA4wF,aAAAm7B,EAAA/sF,GAEAmrF,EAAAc,oBAAAjsF,GACAA,EAAA+sF,MACO,CACP/sF,EAAAv/B,EAAAJ,cAAA,SAGA,IAAA2sH,EAAAj1H,KAAAijF,SAAA7hE,KAAAs5E,GAAA16F,KAAAijF,SAAA7hE,KACAU,EAAA4T,MAAwCu/F,GAExCz+B,IAAA,IAAAx2F,KAAAijF,SAAA4yB,+BACA/zF,EAAAyqF,SAGAhS,GAAAtyD,EAAAnpB,EAAAgD,GACArd,GAAAzE,KAAAijF,SAAAiyC,OACAC,MAAA,cAIAltF,EAAAi7C,SAAAljF,KAAAijF,SAAAC,SAGA,qBAAAljF,KAAAijF,SAAA9sD,SACAqjE,GAAAvxD,EAAA,UAAAjoC,KAAAijF,SAAA9sD,SAQA,IAFA,IAAAi/F,GAAA,yCAEAh1H,EAAA,EAAmBA,EAAAg1H,EAAA7yH,OAA0BnC,IAAA,CAC7C,IAAA8pB,EAAAkrG,EAAAh1H,GACAiB,EAAArB,KAAAijF,SAAA/4D,GAEA,qBAAA7oB,IACAA,EACAm4F,GAAAvxD,EAAA/d,KAEAuwE,GAAAxyD,EAAA/d,GAEA+d,EAAA/d,GAAA7oB,GAIA,OAAA4mC,GAkBAmrF,EAAApxH,UAAAuxH,gBAAA,SAAAtrF,GACA,OAAAA,EAAAotF,cAAA,IAAAptF,EAAAotF,aAAA,CAMA,OAAAptF,EAAAxO,WAAA,CAWA,IAAA67F,GAAA,EACAC,EAAA,WACAD,GAAA,GAGAt1H,KAAAme,GAAA,YAAAo3G,GAEA,IAAAC,EAAA,WAGAF,GACAt1H,KAAA2W,QAAA,cAgBA,OAZA3W,KAAAme,GAAA,iBAAAq3G,QAEAx1H,KAAAwlB,MAAA,WACAxlB,KAAAqe,IAAA,YAAAk3G,GACAv1H,KAAAqe,IAAA,iBAAAm3G,GAEAF,GAEAt1H,KAAA2W,QAAA,eAWA,IAAA8+G,GAAA,aAGAA,EAAApsH,KAAA,kBAGA4+B,EAAAxO,YAAA,GACAg8F,EAAApsH,KAAA,cAIA4+B,EAAAxO,YAAA,GACAg8F,EAAApsH,KAAA,WAIA4+B,EAAAxO,YAAA,GACAg8F,EAAApsH,KAAA,kBAIArJ,KAAAwlB,MAAA,WACAiwG,EAAAjpG,QAAA,SAAAjkB,GACAvI,KAAA2W,QAAApO,IACOvI,UAYPozH,EAAApxH,UAAAo3B,eAAA,SAAAu1C,GACA,IACA3uE,KAAAy6E,IAAAxlD,YAAA05C,EACK,MAAA3mE,GACLuwF,EAAAvwF,EAAA,oCAaAorH,EAAApxH,UAAA6f,SAAA,WACA,IAAA0W,EAAAv4B,KAMA,GAAAA,KAAAy6E,IAAA54D,WAAAlJ,KAAAg9E,GAAAQ,GAAA,IAAAn2F,KAAAy6E,IAAAxlD,YAAA,CAGA,IAAAygG,EAAA,SAAAA,IACAn9F,EAAAkiD,IAAAxlD,YAAA,IAEAsD,EAAAkiD,IAAA54D,WAAAlJ,KACA4f,EAAA5hB,QAAA,kBAEA4hB,EAAAla,IAAA,aAAAq3G,KAKA,OADA11H,KAAAme,GAAA,aAAAu3G,GACA7nF,IAEA,OAAA7tC,KAAAy6E,IAAA54D,UAAAgsB,KAWAulF,EAAApxH,UAAAiK,MAAA,WACA,OAAAjM,KAAAy6E,IAAAhuE,aAWA2mH,EAAApxH,UAAAkK,OAAA,WACA,OAAAlM,KAAAy6E,IAAAjuE,cAeA4mH,EAAApxH,UAAAiyH,uBAAA,WACA,IAAA56F,EAAAr5B,KAEA,kCAAAA,KAAAy6E,IAAA,CAIA,IAAAk7C,EAAA,WACA31H,KAAA2W,QAAA,oBAAwC6vG,cAAA,KAGxCoP,EAAA,WACA,2BAAA51H,KAAAy6E,KAAA,uBAAAz6E,KAAAy6E,IAAAo7C,yBACA71H,KAAA03B,IAAA,sBAAAi+F,GAEA31H,KAAA2W,QAAA,oBAA0C6vG,cAAA,MAI1CxmH,KAAAme,GAAA,wBAAAy3G,GACA51H,KAAAme,GAAA,qBACAkb,EAAAhb,IAAA,wBAAAu3G,GACAv8F,EAAAhb,IAAA,sBAAAs3G,OAaAvC,EAAApxH,UAAA8zH,mBAAA,WACA,uBAAA91H,KAAAy6E,IAAAs7C,sBAAA,CACA,IAAAhrH,EAAApD,EAAAmD,WAAAnD,EAAAmD,UAAAC,WAAA,GAGA,aAAAvE,KAAAuE,KAAA,uBAAAvE,KAAAuE,GACA,SAGA,UAQAqoH,EAAApxH,UAAAg0H,gBAAA,WACA,IAAArjG,EAAA3yB,KAAAy6E,IAEA9nD,EAAA2E,QAAA3E,EAAA0iG,cAAA1iG,EAAAsjG,eAGAj2H,KAAAy6E,IAAA7gD,OAIA55B,KAAAikC,WAAA,WACAtR,EAAAkF,QACAlF,EAAAojG,yBACO,IAEPpjG,EAAAojG,yBASA3C,EAAApxH,UAAAk0H,eAAA,WACAl2H,KAAAy6E,IAAA07C,wBAkBA/C,EAAApxH,UAAAqkB,IAAA,SAAA49D,GACA,QAAAh3E,IAAAg3E,EACA,OAAAjkF,KAAAy6E,IAAAp0D,IAIArmB,KAAAw9G,OAAAv5B,IASAmvC,EAAApxH,UAAAk1C,MAAA,WACAk8E,EAAAgD,kBAAAp2H,KAAAy6E,MAaA24C,EAAApxH,UAAAkxH,WAAA,WACA,OAAAlzH,KAAAuwC,eACAvwC,KAAAuwC,eAAAlqB,IAEArmB,KAAAy6E,IAAAy4C,YAWAE,EAAApxH,UAAAgyH,YAAA,SAAAnlH,GACA7O,KAAAy6E,IAAA8xB,WAAA19F,GAoBAukH,EAAApxH,UAAA6xB,aAAA,SAAAgB,EAAAC,EAAAxR,GACA,OAAAtjB,KAAAy1G,yBAIAz1G,KAAAy6E,IAAA5mD,aAAAgB,EAAAC,EAAAxR,GAHAs1F,EAAA52G,UAAA6xB,aAAAtzB,KAAAP,KAAA60B,EAAAC,EAAAxR,IAoCA8vG,EAAApxH,UAAA01G,sBAAA,SAAApyF,GACA,IAAAtlB,KAAAy1G,yBACA,OAAAmD,EAAA52G,UAAA01G,sBAAAn3G,KAAAP,KAAAslB,GAEA,IAAAuyF,EAAAnvG,EAAAJ,cAAA,SAqBA,OAnBAgd,EAAAuP,OACAgjF,EAAAhjF,KAAAvP,EAAAuP,MAEAvP,EAAAwP,QACA+iF,EAAA/iF,MAAAxP,EAAAwP,QAEAxP,EAAAhC,UAAAgC,EAAA0tF,WACA6E,EAAA7E,QAAA1tF,EAAAhC,UAAAgC,EAAA0tF,SAEA1tF,EAAA,aACAuyF,EAAA,WAAAvyF,EAAA,YAEAA,EAAA7gB,KACAozG,EAAApzG,GAAA6gB,EAAA7gB,IAEA6gB,EAAAe,MACAwxF,EAAAxxF,IAAAf,EAAAe,KAGAwxF,GAiBAub,EAAApxH,UAAA4yB,mBAAA,SAAAtP,EAAAsyF,GACA,IAAAC,EAAAe,EAAA52G,UAAA4yB,mBAAAr0B,KAAAP,KAAAslB,EAAAsyF,GAMA,OAJA53G,KAAAy1G,0BACAz1G,KAAAioC,KAAAn/B,YAAA+uG,GAGAA,GAWAub,EAAApxH,UAAA60G,sBAAA,SAAAxsG,GAGA,GAFAuuG,EAAA52G,UAAA60G,sBAAAt2G,KAAAP,KAAAqK,GAEArK,KAAAy1G,yBAAA,CACA,IAAA13E,EAAA/9B,KAAA68F,GAAA,SAEAz8F,EAAA29B,EAAAx7B,OAEA,MAAAnC,IACAiK,IAAA0zB,EAAA39B,IAAAiK,IAAA0zB,EAAA39B,GAAAiK,OACArK,KAAAioC,KAAAx3B,YAAAstB,EAAA39B,MAiBAgzH,EAAApxH,UAAA+1G,wBAAA,WACA,uBAAA/3G,KAAAioC,KAAA8vE,wBACA,OAAA/3G,KAAAioC,KAAA8vE,0BAGA,IAAAse,KAaA,MAXA,qBAAAr2H,KAAAioC,KAAAquF,yBAAA,qBAAAt2H,KAAAioC,KAAAsuF,0BACAF,EAAAG,mBAAAx2H,KAAAioC,KAAAquF,wBACAD,EAAAI,iBAAAz2H,KAAAioC,KAAAsuF,yBAGA5uH,EAAA+uH,aAAA,oBAAA/uH,EAAA+uH,YAAAj8F,IACA47F,EAAAM,aAAAhvH,EAAA+uH,YAAAj8F,MACK9yB,EAAA+uH,aAAA/uH,EAAA+uH,YAAAE,QAAA,kBAAAjvH,EAAA+uH,YAAAE,OAAAC,kBACLR,EAAAM,aAAAhvH,EAAAkjB,KAAA4P,MAAA9yB,EAAA+uH,YAAAE,OAAAC,iBAGAR,GAGAjD,EA1zBA,CA2zBC1tB,IAID,GAAAjP,KAAA,CASA28B,GAAA0D,SAAApuH,EAAAJ,cAAA,SACA,IAAA+B,GAAA3B,EAAAJ,cAAA,SAEA+B,GAAAwqB,KAAA,WACAxqB,GAAA2oG,QAAA,KACA3oG,GAAAyqB,MAAA,UACAs+F,GAAA0D,SAAAhuH,YAAAuB,IAUA+oH,GAAA3wC,YAAA,WAEA,IACA2wC,GAAA0D,SAAA7P,OAAA,GACG,MAAAj/G,GACH,SAGA,SAAAorH,GAAA0D,WAAA1D,GAAA0D,SAAAl0C,cAUAwwC,GAAAxwC,YAAA,SAAAr6E,GACA,OAAA6qH,GAAA0D,SAAAl0C,YAAAr6E,IAWA6qH,GAAA7wC,cAAA,SAAA2C,EAAA5/D,GACA,OAAA8tG,GAAAxwC,YAAAsC,EAAA38E,OAYA6qH,GAAA2D,iBAAA,WAEA,IACA,IAAA9P,EAAAmM,GAAA0D,SAAA7P,OAGA,OADAmM,GAAA0D,SAAA7P,SAAA,KACAA,IAAAmM,GAAA0D,SAAA7P,OACG,MAAAj/G,GACH,WAaAorH,GAAA4D,cAAA,WACA,IACA,IAAA9P,EAAAkM,GAAA0D,SAAA5P,MAUA,OANAkM,GAAA0D,SAAA5P,SACAkM,GAAA0D,SAAA5P,MACA1tB,GAAA45B,GAAA0D,SAAA,iBAEAr8B,GAAA24B,GAAA0D,SAAA,iBAEA5P,IAAAkM,GAAA0D,SAAA5P,MACG,MAAAl/G,GACH,WAWAorH,GAAA6D,uBAAA,WAGA,GAAAthC,GAAAQ,GAAAC,EAAA,GACA,SAGA,IACA,IAAApmD,EAAAojF,GAAA0D,SAAA9mF,aAGA,OADAojF,GAAA0D,SAAA9mF,eAAA,KACAA,IAAAojF,GAAA0D,SAAA9mF,aACG,MAAAhoC,GACH,WAYAorH,GAAA8D,sBAAA,WACA,GAAA7gC,EACA,SAIA,IACA,IAAA/1E,EAAA,aAEAxf,OAAAC,eAAA2H,EAAAJ,cAAA,gBAAmErH,IAAAqf,EAAA5b,IAAA4b,IACnExf,OAAAC,eAAA2H,EAAAJ,cAAA,gBAAmErH,IAAAqf,EAAA5b,IAAA4b,IACnExf,OAAAC,eAAA2H,EAAAJ,cAAA,sBAAyErH,IAAAqf,EAAA5b,IAAA4b,IACzExf,OAAAC,eAAA2H,EAAAJ,cAAA,sBAAyErH,IAAAqf,EAAA5b,IAAA4b,IACtE,MAAAtY,GACH,SAGA,UAUAorH,GAAA+D,yBAAA,WACA,OAAA5gC,GAAAd,GAAAU,GAUAi9B,GAAAgE,0BAAA,WACA,SAAAhE,GAAA0D,WAAA1D,GAAA0D,SAAAO,cAUAjE,GAAAkE,0BAAA,WACA,SAAAlE,GAAA0D,WAAA1D,GAAA0D,SAAAn4F,cASAy0F,GAAAzzB,QAAA,gQAQAyzB,GAAApxH,UAAAs2G,sBAAA8a,GAAA2D,mBAQA3D,GAAApxH,UAAAu2G,oBAAA6a,GAAA4D,gBAWA5D,GAAApxH,UAAAy2G,qBAAA2a,GAAA6D,yBAQA7D,GAAApxH,UAAA02G,kBAAA0a,GAAA8D,wBAUA9D,GAAApxH,UAAA+yH,yBAAAt/B,EAWA29B,GAAApxH,UAAAw2G,0BAAA,EASA4a,GAAApxH,UAAAmzG,wBAAA,EAQAie,GAAApxH,UAAAqzG,0BAAA,EAQA+d,GAAApxH,UAAAyzG,yBAAA2d,GAAA+D,2BAQA/D,GAAApxH,UAAAwhF,0BAAA4vC,GAAAgE,4BAQAhE,GAAApxH,UAAAyhF,0BAAA2vC,GAAAkE,4BAGA,IAAA10C,GAAAwwC,GAAA0D,UAAA1D,GAAA0D,SAAA5wH,YAAAlE,UAAA4gF,YACAwC,GAAA,4CACAmyC,GAAA,eAEAnE,GAAAoE,iBAAA,WAIA5hC,GAAA,IAAAK,IAAAE,EACAi9B,GAAA0D,SAAA5wH,YAAAlE,UAAA4gF,YAAA,SAAAr6E,GACA,OAAAA,GAAA68E,GAAA5+E,KAAA+B,GACA,QAEAq6E,GAAAriF,KAAAP,KAAAuI,IAIGwtF,IACHq9B,GAAA0D,SAAA5wH,YAAAlE,UAAA4gF,YAAA,SAAAr6E,GACA,OAAAA,GAAAgvH,GAAA/wH,KAAA+B,GACA,QAEAq6E,GAAAriF,KAAAP,KAAAuI,MAKA6qH,GAAAqE,mBAAA,WACA,IAAAv2H,EAAAkyH,GAAA0D,SAAA5wH,YAAAlE,UAAA4gF,YAGA,OADAwwC,GAAA0D,SAAA5wH,YAAAlE,UAAA4gF,eACA1hF,GAIAkyH,GAAAoE,mBAEApE,GAAAc,oBAAA,SAAAjsF,GACA,GAAAA,EAAA,CAIAA,EAAAh/B,YACAg/B,EAAAh/B,WAAAwH,YAAAw3B,GAIA,MAAAA,EAAAyrF,gBACAzrF,EAAAx3B,YAAAw3B,EAAAz3B,YAKAy3B,EAAAwyD,gBAAA,OAIA,oBAAAxyD,EAAAlS,MAEA,WACA,IACAkS,EAAAlS,OACO,MAAA/tB,KAHP,KAUAorH,GAAAgD,kBAAA,SAAAnuF,GACA,GAAAA,EAAA,CAIA,IAAA9hB,EAAA8hB,EAAA4lE,iBAAA,UACAztG,EAAA+lB,EAAA5jB,OAEA,MAAAnC,IACA6nC,EAAAx3B,YAAA0V,EAAA/lB,IAKA6nC,EAAAwyD,gBAAA,OAEA,oBAAAxyD,EAAAlS,MAEA,WACA,IACAkS,EAAAlS,OACO,MAAA/tB,KAHP,MA2BA,QAgBA,eAcA,WAcA,WAiBA,OAeA,eAAAwkB,QAAA,SAAA7d,GACAykH,GAAApxH,UAAA2M,GAAA,WACA,OAAA3O,KAAAy6E,IAAA9rE,IAAA3O,KAAAy6E,IAAA1vC,aAAAp8B,OAoBA,QAaA,eAaA,WAgBA,OAcA,eAAA6d,QAAA,SAAA7d,GACAykH,GAAApxH,UAAA,MAAAshG,GAAA30F,IAAA,SAAA7K,GACA9D,KAAAy6E,IAAA9rE,GAAA7K,EAEAA,EACA9D,KAAAy6E,IAAA+e,aAAA7qF,KAEA3O,KAAAy6E,IAAAggB,gBAAA9rF,OAqBA,SAYA,cAaA,WAaA,SAaA,SAmBA,UAcA,QAcA,UAaA,WAcA,QAeA,eAkBA,sBAaA,SAiBA,eAmBA,aAaA,aAaA,eAAA6d,QAAA,SAAA7d,GACAykH,GAAApxH,UAAA2M,GAAA,WACA,OAAA3O,KAAAy6E,IAAA9rE,OAoBA,SAYA,MAaA,SAmBA,UAeA,eAkBA,uBAAA6d,QAAA,SAAA7d,GACAykH,GAAApxH,UAAA,MAAAshG,GAAA30F,IAAA,SAAA7K,GACA9D,KAAAy6E,IAAA9rE,GAAA7K,MAeA,QASA,OASA,QAAA0oB,QAAA,SAAA7d,GACAykH,GAAApxH,UAAA2M,GAAA,WACA,OAAA3O,KAAAy6E,IAAA9rE,QAIA+2F,GAAAiT,mBAAAya,IAWAA,GAAA/Z,uBAWA+Z,GAAA/Z,oBAAAz2B,YAAA,SAAAr6E,GAGA,IACA,OAAA6qH,GAAA0D,SAAAl0C,YAAAr6E,GACG,MAAAP,GACH,WAgBAorH,GAAA/Z,oBAAAp0B,gBAAA,SAAAlmE,EAAAuG,GAGA,GAAAvG,EAAAxW,KACA,OAAA6qH,GAAA/Z,oBAAAz2B,YAAA7jE,EAAAxW,MAGG,GAAAwW,EAAAsH,IAAA,CACH,IAAAu1F,EAAA9J,GAAA/yF,EAAAsH,KAEA,OAAA+sG,GAAA/Z,oBAAAz2B,YAAA,SAAAg5B,GAGA,UAeAwX,GAAA/Z,oBAAAl0B,aAAA,SAAApmE,EAAAoU,EAAA7N,GACA6N,EAAAqqF,OAAAz+F,EAAAsH,MAMA+sG,GAAA/Z,oBAAA56F,QAAA,aAGA20G,GAAA9tC,sBAAA8tC,GAAA/Z,qBAEA3T,GAAAyS,aAAA,QAAAib,IAEA,IAAAsE,GAAAzgC,GAAA,8VAYA0gC,IAeA,WAgBA,QAgBA,UAgBA,UAeA,UAgBA,iBAgBA,aAgBA,aAgBA,SAgBA,eAgBA,mBAKAC,IACAC,QAAA,UACAC,eAAA,iBACAC,QAAA,UACAC,OAAA,UAcA7uB,GAAA,SAAAnmB,GAeA,SAAAmmB,EAAA/nF,EAAAkE,EAAAE,GA4BA,GA3BAsxE,EAAA92F,KAAAmpG,GAGA/nF,EAAA3c,GAAA2c,EAAA3c,IAAA6gB,EAAA7gB,IAAA,aAAAu4F,KAOA13E,EAAAxG,EAAAqqF,EAAA8uB,eAAA72G,GAAAkE,GAIAA,EAAAy+E,cAAA,EAGAz+E,EAAA+zE,UAAA,EAGA/zE,EAAAs9E,SAAA,EAIAt9E,EAAA0+E,qBAAA,GAGA1+E,EAAAhC,SACA,uBAAAlC,EAAA82G,QAAA,CACA,IAAAA,EAAA92G,EAAA82G,QAAA,UAEAA,KAAAr9B,eACAv1E,EAAAhC,SAAA40G,EAAAr9B,aAAA,aAEO,CACP,IAAAzyF,EAAAgZ,EAEA,MAAAhZ,GAAA,IAAAA,EAAA4wF,SAAA,CACA,GAAA0B,GAAAtyF,GAAAnG,eAAA,SACAqjB,EAAAhC,SAAAlb,EAAAyyF,aAAA,QACA,MAEAzyF,IAAAa,YAQA,IAAA6W,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA,KAAAslB,EAAAE,IAmBA,GAjBA1F,EAAAq4G,mBAAA,EAIAr4G,EAAAs4G,oBAGAt4G,EAAAimF,UAAA,EAGAjmF,EAAAo1F,aAAA,EAGAp1F,EAAAu4G,aAAA,GAIAv4G,EAAAmjE,WAAAnjE,EAAAmjE,SAAAq5B,YAAAx8F,EAAAmjE,SAAAq5B,UAAA/5G,OACA,UAAAC,MAAA,2HAaA,GATAsd,EAAAsB,MAGAtB,EAAAm1G,cAAA7zG,GAAAs5E,GAAAt5E,GAGAtB,EAAAwD,SAAAxD,EAAAmjE,SAAA3/D,UAGAgC,EAAA++E,UAAA,CAEA,IAAAi0B,KAEAx3H,OAAAw4F,oBAAAh0E,EAAA++E,WAAA73E,QAAA,SAAA+rG,GACAD,EAAAC,EAAA1kH,eAAAyR,EAAA++E,UAAAk0B,KAEAz4G,EAAA04G,WAAAF,OAEAx4G,EAAA04G,WAAArvB,EAAAnnG,UAAAihF,SAAAohB,UAIAvkF,EAAAi8F,UAGAj8F,EAAA24G,QAAAnzG,EAAAsB,QAAA,GAGA9G,EAAA44G,YAAApzG,EAAAinF,SAGAzsF,EAAAi8F,OAAA+L,WAAA,EAKA1mG,EAAAmrF,UAAA,EACAnrF,EAAAq5E,gBAAA,YAGAr5E,EAAA2pB,aAAA,YACAjrB,EAAAmjE,SAAAvpD,UAAA,EAIA5Z,EAAA4Z,SAAA5Z,EAAAmjE,SAAAvpD,UASA5Z,EAAA64G,YAAA,EAEA74G,EAAA26D,IAAA36D,EAAAu5E,WAGAv5E,EAAAi8F,OAAA6c,iBAAA94G,EAAA+4G,sBAGAj2B,GAAA9iF,GAAoB+iF,YAAA,QAMpB,IAAAi2B,EAAApjG,GAAA5V,EAAAmjE,UAGA,GAAA39D,EAAAyzG,QAAA,CACA,IAAAA,EAAAzzG,EAAAyzG,QAEAj4H,OAAAyrB,KAAAwsG,GAAAvsG,QAAA,SAAA+rG,GACA,uBAAAv4H,KAAAu4H,GAGA,UAAA/1H,MAAA,WAAA+1H,EAAA,oBAFAv4H,KAAAu4H,GAAAQ,EAAAR,KAIOz4G,GAGPA,EAAAmjE,SAAA19D,cAAAuzG,EAEAh5G,EAAAk5G,eAEAl5G,EAAAikF,eAGAjkF,EAAAsgG,QAAA,UAAAh/F,EAAA0gF,SAAAjuF,eAIAiM,EAAAysF,WACAzsF,EAAAm6E,SAAA,wBAEAn6E,EAAAm6E,SAAA,yBAIAn6E,EAAA26D,IAAA+e,aAAA,iBACA15E,EAAAsgG,UACAtgG,EAAA26D,IAAA+e,aAAA,aAAA15E,EAAAokF,SAAA,iBAEApkF,EAAA26D,IAAA+e,aAAA,aAAA15E,EAAAokF,SAAA,iBAGApkF,EAAAsgG,WACAtgG,EAAAm6E,SAAA,aAGAn6E,EAAAm5G,qBACAn5G,EAAAm6E,SAAA,eAUAxE,GACA31E,EAAAm6E,SAAA,oBAIAkP,EAAAhlB,QAAArkE,EAAA6jF,KAAA7jF,EAGA,IAAAo5G,EAAArhH,EAAAlU,MAAA,QAgBA,OAdAmc,EAAAm6E,SAAA,QAAAi/B,GAIAp5G,EAAAq5G,YAAA,GACAr5G,EAAAmoF,qBAEAnoF,EAAA4X,IAAA,OAAA5X,EAAAs5G,wBACAt5G,EAAA3B,GAAA,mBAAA2B,EAAAu5G,yBACAv5G,EAAA3B,GAAA,aAAA2B,EAAAw5G,mBAEAx5G,EAAAy5G,cAAA,EACAz5G,EAAA05G,sBAAA,EACA15G,EAAA25G,iBAAA,KACA35G,EAw2GA,OAplHAi3E,EAAAoS,EAAAnmB,GAyPAmmB,EAAAnnG,UAAAyc,QAAA,WAOAze,KAAA2W,QAAA,WAEA3W,KAAAqe,IAAA,WAEAre,KAAA05H,UAAA15H,KAAA05H,SAAAzwH,aACAjJ,KAAA05H,SAAAzwH,WAAAwH,YAAAzQ,KAAA05H,UACA15H,KAAA05H,SAAA,MAIAvwB,EAAAhlB,QAAAnkF,KAAA2jG,KAAA,KAEA3jG,KAAAohB,KAAAphB,KAAAohB,IAAA0F,SACA9mB,KAAAohB,IAAA0F,OAAA,MAGA9mB,KAAAy6E,KAAAz6E,KAAAy6E,IAAA3zD,SACA9mB,KAAAy6E,IAAA3zD,OAAA,MAGA9mB,KAAA+mB,QACA/mB,KAAA+mB,MAAAtI,UACAze,KAAAm4H,mBAAA,EACAn4H,KAAAy4H,QAAA,IAGAz4H,KAAA25H,kBACA35H,KAAA25H,gBAAA,MAGA35H,KAAAohB,MACAphB,KAAAohB,IAAA,MAGAu5F,GAAA36G,MAGAgjF,EAAAhhF,UAAAyc,QAAAle,KAAAP,OAWAmpG,EAAAnnG,UAAAq3F,SAAA,WACA,IAAAj4E,EAAAphB,KAAAohB,IACA6mB,OAAA,EACA6sF,EAAA90H,KAAA25H,gBAAAv4G,EAAAnY,YAAAmY,EAAAnY,WAAA8hC,cAAA3pB,EAAAnY,WAAA8hC,aAAA,mBACA6uF,EAAA,aAAA55H,KAAAohB,IAAA3Y,QAAAoL,cAEAihH,EACA7sF,EAAAjoC,KAAAy6E,IAAAr5D,EAAAnY,WACK2wH,IACL3xF,EAAAjoC,KAAAy6E,IAAAuI,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,QAKA,IAAAqlB,EAAAq1E,GAAAt5E,GAEA,GAAAw4G,EAAA,CACA3xF,EAAAjoC,KAAAy6E,IAAAr5D,EACAA,EAAAphB,KAAAohB,IAAA1Y,EAAAJ,cAAA,SACA,MAAA2/B,EAAA08D,SAAApiG,OACA6e,EAAAtY,YAAAm/B,EAAAz3B,YAGAspF,GAAA7xD,EAAA,aACAgyD,GAAAhyD,EAAA,YAGAA,EAAAn/B,YAAAsY,GAEA0zG,EAAA90H,KAAA25H,gBAAA1xF,GAKA,uHAAAzb,QAAA,SAAA7d,GACA,qBAAAs5B,EAAAt5B,KACAyS,EAAAzS,GAAAs5B,EAAAt5B,MAoDA,GA9CAyS,EAAAo4E,aAAA,iBAKAhgE,GACApY,EAAAo4E,aAAA,sBAIAp4E,EAAAq5E,gBAAA,SACAr5E,EAAAq5E,gBAAA,UAEA35F,OAAAw4F,oBAAAj0E,GAAAmH,QAAA,SAAAtC,GAGA,UAAAA,GACA+d,EAAA7+B,WAAA,IAAAic,EAAA6E,GAEA0vG,IACAx4G,EAAAhY,WAAA,IAAAic,EAAA6E,MAGA+d,EAAAuxD,aAAAtvE,EAAA7E,EAAA6E,IAEA0vG,GACAx4G,EAAAo4E,aAAAtvE,EAAA7E,EAAA6E,OAQA9I,EAAA8hE,SAAA9hE,EAAA3c,GACA2c,EAAA3c,IAAA,aACA2c,EAAAhY,UAAA,WAGAgY,EAAA0F,OAAAmhB,EAAAnhB,OAAA9mB,KAEAA,KAAAi6F,SAAA,eAKA,IAAAtyF,EAAAkyH,yBAAA,CACA75H,KAAA05H,SAAA/4B,GAAA,yBACA,IAAAm5B,EAAAl9B,GAAA,wBACA3uC,EAAA2uC,GAAA,QAEA3uC,EAAA4rC,aAAA75F,KAAA05H,SAAAI,IAAA7sB,YAAAh/C,EAAAz9C,YAIAxQ,KAAAiM,MAAAjM,KAAAijF,SAAAh3E,OACAjM,KAAAkM,OAAAlM,KAAAijF,SAAA/2E,QACAlM,KAAA+5H,MAAA/5H,KAAAijF,SAAA82C,OACA/5H,KAAAg6H,YAAAh6H,KAAAijF,SAAA+2C,aAKA,IAFA,IAAAC,EAAA74G,EAAAkzE,qBAAA,KAEAl0F,EAAA,EAAmBA,EAAA65H,EAAA13H,OAAkBnC,IAAA,CACrC,IAAA85H,EAAAD,EAAA9Q,KAAA/oH,GAEA65F,GAAAigC,EAAA,cACAA,EAAA1gC,aAAA,mBA0BA,OArBAp4E,EAAAkyG,kBAAAlyG,EAAAi0G,aAGAj0G,EAAAnY,aAAA6rH,GACA1zG,EAAAnY,WAAA4wF,aAAA5xD,EAAA7mB,GAQAu4E,GAAAv4E,EAAA6mB,GACAjoC,KAAA4jG,UAAAj6B,QAAAvoD,GAIAphB,KAAAy6E,IAAA+e,aAAA,OAAAx5F,KAAA+sH,WAEA/sH,KAAAy6E,IAAAxyC,EAEAA,GAeAkhE,EAAAnnG,UAAAiK,MAAA,SAAA5K,GACA,OAAArB,KAAAwmG,UAAA,QAAAnlG,IAeA8nG,EAAAnnG,UAAAkK,OAAA,SAAA7K,GACA,OAAArB,KAAAwmG,UAAA,SAAAnlG,IAmBA8nG,EAAAnnG,UAAAwkG,UAAA,SAAA2zB,EAAA94H,GACA,IAAA+4H,EAAAD,EAAA,IAEA,QAAAltH,IAAA5L,EACA,OAAArB,KAAAo6H,IAAA,EAGA,QAAA/4H,EAIA,OAFArB,KAAAo6H,QAAAntH,OACAjN,KAAAq6H,iBAIA,IAAAC,EAAA5zH,WAAArF,GAEAyuC,MAAAwqF,GACA/hC,EAAA5gE,MAAA,mBAAAt2B,EAAA,sBAAA84H,IAIAn6H,KAAAo6H,GAAAE,EACAt6H,KAAAq6H,mBAiBAlxB,EAAAnnG,UAAA+3H,MAAA,SAAA7V,GACA,QAAAj3G,IAAAi3G,EACA,QAAAlkH,KAAAu6H,OAGAv6H,KAAAu6H,SAAArW,EAEAA,EACAlkH,KAAAi6F,SAAA,aAEAj6F,KAAAm6F,YAAA,aAGAn6F,KAAAq6H,kBAyBAlxB,EAAAnnG,UAAAg4H,YAAA,SAAAQ,GACA,QAAAvtH,IAAAutH,EACA,OAAAx6H,KAAAy6H,aAIA,iBAAAj0H,KAAAg0H,GACA,UAAAh4H,MAAA,kGAEAxC,KAAAy6H,aAAAD,EAIAx6H,KAAA+5H,OAAA,GAEA/5H,KAAAq6H,kBAWAlxB,EAAAnnG,UAAAq4H,eAAA,WACA,QAAA1yH,EAAAkyH,yBAAA,CAiBA,IAAA5tH,OAAA,EACAC,OAAA,EACA8tH,OAAA,EACAU,OAAA,EAKAV,OAFA/sH,IAAAjN,KAAAy6H,cAAA,SAAAz6H,KAAAy6H,aAEAz6H,KAAAy6H,aACKz6H,KAAA26H,aAAA,EAEL36H,KAAA26H,aAAA,IAAA36H,KAAA46H,cAGA,OAIA,IAAAC,EAAAb,EAAAr2H,MAAA,KACAm3H,EAAAD,EAAA,GAAAA,EAAA,GAIA5uH,OAFAgB,IAAAjN,KAAA+6H,OAEA/6H,KAAA+6H,YACK9tH,IAAAjN,KAAAg7H,QAELh7H,KAAAg7H,QAAAF,EAGA96H,KAAA26H,cAAA,IAKAzuH,OAFAe,IAAAjN,KAAAg7H,QAEAh7H,KAAAg7H,QAGA/uH,EAAA6uH,EAKAJ,EADA,aAAAl0H,KAAAxG,KAAAyE,MACA,cAAAzE,KAAAyE,KAEAzE,KAAAyE,KAAA,cAIAzE,KAAAi6F,SAAAygC,GAEA95B,GAAA5gG,KAAA05H,SAAA,YAAAgB,EAAA,sBAA6DzuH,EAAA,wBAAiCC,EAAA,0BAA4CwuH,EAAA,sCAAsC,IAAAI,EAAA,yBAnEhL,CACA,IAAAt0C,EAAA,kBAAAxmF,KAAA+6H,OAAA/6H,KAAA+6H,OAAA/6H,KAAAijF,SAAAh3E,MACAgvH,EAAA,kBAAAj7H,KAAAg7H,QAAAh7H,KAAAg7H,QAAAh7H,KAAAijF,SAAA/2E,OACAgvH,EAAAl7H,KAAA+mB,OAAA/mB,KAAA+mB,MAAAkhB,KAEAizF,IACA10C,GAAA,IACA00C,EAAAjvH,MAAAu6E,GAEAy0C,GAAA,IACAC,EAAAhvH,OAAA+uH,MA0EA9xB,EAAAnnG,UAAAw6G,UAAA,SAAAD,EAAAx9F,GACA,IAAAiX,EAAAh2B,KAGAA,KAAA+mB,OACA/mB,KAAAm7H,cAGA,IAAAC,EAAA93B,GAAAiZ,GACA8e,EAAA9e,EAAAhZ,OAAA,GAAA1vF,cAAA0oG,EAAAllG,MAAA,GAGA,UAAA+jH,GAAAp7H,KAAAohB,MACAskF,GAAAvpB,QAAA,SAAA+3C,oBAAAl0H,KAAAohB,KACAphB,KAAAohB,IAAA0F,OAAA,KACA9mB,KAAAohB,IAAA,MAGAphB,KAAAs7H,UAAAF,EAGAp7H,KAAA+lG,UAAA,EAIA,IAAArsE,EAAA,kBAAA15B,KAAA05B,YAAA15B,KAAA05B,WAGA6hG,GACAx8G,SACA2a,WACAm8E,uBAAA71G,KAAAijF,SAAA4yB,uBACA3yB,SAAAljF,KAAAyE,KACAywH,OAAAl1H,KAAAyE,KAAA,IAAA22H,EAAA,OACAnjB,YAAAj4G,KAAAijF,SAAAg1B,YACA9hF,QAAAn2B,KAAAijF,SAAA9sD,QACAqlG,KAAAx7H,KAAAijF,SAAAu4C,KACAtU,MAAAlnH,KAAAijF,SAAAikC,MACAtgG,OAAA5mB,KAAA4mB,SACAtD,SAAAtjB,KAAAsjB,WACAwxG,eAAA90H,KAAA25H,kBAAA,EACA8B,SAAAz7H,KAAAijF,SAAA,UACAy4C,oBAAA17H,KAAAijF,SAAA04C,sBACAnI,gBAAAxzH,KAAAijF,SAAAuwC,iBAGAze,GAAAE,MAAAzoF,QAAA,SAAA+rG,GACA,IAAAj/G,EAAAy7F,GAAAwjB,GAEAgD,EAAAjiH,EAAAo7F,YAAA1+E,EAAA1c,EAAAq7F,eAGA71F,EAAAy8G,EAAAv7H,KAAAijF,SAAAm4C,IACAt8G,EAAAy8G,EAAAv7H,KAAAijF,SAAAo4C,IACAv8G,EAAAy8G,EAAAv7H,KAAAijF,SAAAs5B,EAAA1oG,gBAEA7T,KAAAohB,MACAm6G,EAAAn6G,IAAAphB,KAAAohB,KAGArC,KAAAsH,MAAArmB,KAAA+7G,OAAA11F,KAAArmB,KAAA+7G,OAAA9mF,YAAA,IACAsmG,EAAAx1H,UAAA/F,KAAA+7G,OAAA9mF,aAIA,IAAA2mG,EAAAl2B,GAAAvpB,QAAAogC,GAEA,IAAAqf,EACA,UAAAp5H,MAAA,kBAAA44H,EAAA,cAAAA,EAAA,wDAGAp7H,KAAA+mB,MAAA,IAAA60G,EAAAL,GAGAv7H,KAAA+mB,MAAAvB,MAAA5jB,GAAA5B,UAAA67H,mBAAA,GAEA5wB,GAAAF,iBAAA/qG,KAAA87H,oBAAA97H,KAAA+mB,OAGA4wG,GAAAnrG,QAAA,SAAAnC,GACA2L,EAAA7X,GAAA6X,EAAAjP,MAAAsD,EAAA2L,EAAA,aAAAstE,GAAAj5E,GAAA,QAGAvpB,OAAAyrB,KAAAqrG,IAAAprG,QAAA,SAAAnC,GACA2L,EAAA7X,GAAA6X,EAAAjP,MAAAsD,EAAA,SAAA0xG,GACA,IAAA/lG,EAAAjP,MAAAipB,gBAAAha,EAAAjP,MAAAoO,UACAa,EAAAoiG,iBAAA/uH,MACA9F,SAAAyyB,EAAA,aAAA4hG,GAAAvtG,GAAA,KAAAzoB,KAAAo0B,GACA3L,MAAA0xG,IAIA/lG,EAAA,aAAA4hG,GAAAvtG,GAAA,KAAA0xG,OAIA/7H,KAAAme,GAAAne,KAAA+mB,MAAA,YAAA/mB,KAAAg8H,sBACAh8H,KAAAme,GAAAne,KAAA+mB,MAAA,YAAA/mB,KAAAi8H,sBACAj8H,KAAAme,GAAAne,KAAA+mB,MAAA,UAAA/mB,KAAAk8H,oBACAl8H,KAAAme,GAAAne,KAAA+mB,MAAA,QAAA/mB,KAAAm8H,kBACAn8H,KAAAme,GAAAne,KAAA+mB,MAAA,UAAA/mB,KAAAo8H,oBACAp8H,KAAAme,GAAAne,KAAA+mB,MAAA,OAAA/mB,KAAAq8H,iBACAr8H,KAAAme,GAAAne,KAAA+mB,MAAA,YAAA/mB,KAAAs8H,sBACAt8H,KAAAme,GAAAne,KAAA+mB,MAAA,QAAA/mB,KAAAu8H,kBACAv8H,KAAAme,GAAAne,KAAA+mB,MAAA,iBAAA/mB,KAAAw8H,2BACAx8H,KAAAme,GAAAne,KAAA+mB,MAAA,mBAAA/mB,KAAAy8H,6BACAz8H,KAAAme,GAAAne,KAAA+mB,MAAA,QAAA/mB,KAAA08H,kBACA18H,KAAAme,GAAAne,KAAA+mB,MAAA,iBAAA/mB,KAAAq6H,gBACAr6H,KAAAme,GAAAne,KAAA+mB,MAAA,eAAA/mB,KAAA28H,yBACA38H,KAAAme,GAAAne,KAAA+mB,MAAA,WAAA/mB,KAAA48H,qBACA58H,KAAAme,GAAAne,KAAA+mB,MAAA,aAAA/mB,KAAA68H,uBAEA78H,KAAA88H,oBAAA98H,KAAA+8H,SAAA,aAEA/8H,KAAAusG,aAAAvsG,KAAA88H,uBACA98H,KAAAg9H,4BAKAh9H,KAAA+mB,MAAAkhB,KAAAh/B,aAAAjJ,KAAAioC,MAAA,UAAAmzF,GAAAp7H,KAAAohB,KACAu4E,GAAA35F,KAAA+mB,MAAAkhB,KAAAjoC,KAAAioC,MAIAjoC,KAAAohB,MACAphB,KAAAohB,IAAA0F,OAAA,KACA9mB,KAAAohB,IAAA,OAWA+nF,EAAAnnG,UAAAm5H,YAAA,WACA,IAAA5iG,EAAAv4B,KAGA+0G,GAAAE,MAAAzoF,QAAA,SAAA+rG,GACA,IAAAj/G,EAAAy7F,GAAAwjB,GAEAhgG,EAAAjf,EAAAq7F,aAAAp8E,EAAAjf,EAAAo7F,gBAEA10G,KAAA87H,gBAAA7wB,GAAAN,iBAAA3qG,KAAA+mB,OAEA/mB,KAAA+lG,UAAA,EAEA/lG,KAAA+mB,MAAAtI,UAEAze,KAAA+mB,OAAA,EAEA/mB,KAAAm4H,oBACAn4H,KAAAy4H,QAAA,GACAz4H,KAAA2W,QAAA,iBAGA3W,KAAAm4H,mBAAA,GAgBAhvB,EAAAnnG,UAAAmxB,KAAA,SAAA8pG,GAKA,YAJAhwH,IAAAgwH,GACA1kC,EAAA9lE,KAAAuiE,EAAA0iC,KAGA13H,KAAA+mB,OA0BAoiF,EAAAnnG,UAAAg7H,0BAAA,WAEAh9H,KAAAk9H,+BAMAl9H,KAAAme,GAAAne,KAAA+mB,MAAA,YAAA/mB,KAAAm9H,kBAKAn9H,KAAAme,GAAAne,KAAA+mB,MAAA,aAAA/mB,KAAAo9H,uBACAp9H,KAAAme,GAAAne,KAAA+mB,MAAA,YAAA/mB,KAAAq9H,sBACAr9H,KAAAme,GAAAne,KAAA+mB,MAAA,WAAA/mB,KAAAs9H,qBAIAt9H,KAAAme,GAAAne,KAAA+mB,MAAA,MAAA/mB,KAAAu9H,iBAWAp0B,EAAAnnG,UAAAk7H,6BAAA,WAGAl9H,KAAAqe,IAAAre,KAAA+mB,MAAA,MAAA/mB,KAAAu9H,gBACAv9H,KAAAqe,IAAAre,KAAA+mB,MAAA,aAAA/mB,KAAAo9H,uBACAp9H,KAAAqe,IAAAre,KAAA+mB,MAAA,YAAA/mB,KAAAq9H,sBACAr9H,KAAAqe,IAAAre,KAAA+mB,MAAA,WAAA/mB,KAAAs9H,qBACAt9H,KAAAqe,IAAAre,KAAA+mB,MAAA,YAAA/mB,KAAAm9H,mBAUAh0B,EAAAnnG,UAAA65H,iBAAA,WAkBA,GAjBA77H,KAAAimG,eAGAjmG,KAAA+7G,OAAAkL,QACAjnH,KAAAw9H,UAAA,YAAAx9H,KAAA+7G,OAAAkL,QAIAjnH,KAAA28H,0BAGA38H,KAAAw8H,6BAMAx8H,KAAAqmB,OAAArmB,KAAAkzH,eAAAlzH,KAAAohB,KAAAphB,KAAAijF,SAAAvpD,UAAA15B,KAAAs3B,SACA,WAEAt3B,KAAAohB,IAAAwF,OACO,MAAA5e,GACPuwF,EAAA,8CAAAvwF,KAiBAmhG,EAAAnnG,UAAAg6H,qBAAA,WAGAh8H,KAAAm6F,YAAA,aACAn6F,KAAAm6F,YAAA,eAGAn6F,KAAA23B,MAAA,MAKA33B,KAAAs3B,UAWAt3B,KAAAy9H,YAAA,GACAz9H,KAAA2W,QAAA,eALA3W,KAAA2W,QAAA,aACA3W,KAAA2W,QAAA,cASA3W,KAAA09H,gBAAA19H,KAAA05B,aAWAyvE,EAAAnnG,UAAA07H,gBAAA,SAAAn1H,GACA,IAAA8wB,EAAAr5B,KAEA,GAAAA,KAAA+mB,OAAA,kBAAAxe,EAAA,CAIA,IAAA2+G,EAAA,WACA,IAAAyW,EAAAtkG,EAAA6tF,QAEA7tF,EAAA6tF,OAAA,GAEA,IAAAvtF,EAAAN,EAAAO,OAEA,GAAAD,KAAAE,MAAAF,EAAA,SAIA,OAAAA,EAAA,kBAAA3xB,GAEAqxB,EAAA6tF,MAAAyW,MAIAC,OAAA,EAgBA,GAdA,QAAAr1H,GACAq1H,EAAA59H,KAAA45B,OAEAgkG,KAAA/jG,MAAA+jG,EAAA,UACAA,EAAA,oBACA,OAAA1W,OAIA0W,EADK,UAAAr1H,EACL2+G,IAEAlnH,KAAA45B,OAGAgkG,KAAA/jG,MAAA+jG,EAAA,SAIA,OAAAA,EAAA/jG,KAAA,WACAR,EAAA1iB,SAAsBpO,KAAA,mBAAAmxB,SAAAnxB,MACjB,kBAAAP,GACLqxB,EAAA1iB,SAAsBpO,KAAA,mBAAAmxB,SAAAnxB,QAiBtB4gG,EAAAnnG,UAAA67H,oBAAA,WACA,IAAA34C,EAAA5iF,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAGA+jB,EAAA6+D,EACA38E,EAAA,GAUA,GARA,kBAAA8d,IACAA,EAAA6+D,EAAA7+D,IACA9d,EAAA28E,EAAA38E,OAMA,SAAA/B,KAAA6f,GAAA,CAMArmB,KAAA+7G,OAAAh9F,OAAA/e,KAAA+7G,OAAAh9F,WACA/e,KAAA+7G,OAAA51F,QAAAnmB,KAAA+7G,OAAA51F,YAGAE,IAAA9d,IACAA,EAAAuzG,GAAA97G,KAAAqmB,IAIArmB,KAAA+7G,OAAAh9F,OAAA2W,MAAwCwvD,GAAW7+D,MAAA9d,SASnD,IAPA,IAAAyzG,EAAAh8G,KAAA+7G,OAAA51F,QAAAuL,OAAA,SAAAvvB,GACA,OAAAA,EAAAkkB,KAAAlkB,EAAAkkB,UAEAy3G,KACAC,EAAA/9H,KAAA68F,GAAA,UACAmhC,KAEA59H,EAAA,EAAmBA,EAAA29H,EAAAx7H,OAAsBnC,IAAA,CACzC,IAAAkwC,EAAAoqD,GAAAqjC,EAAA39H,IAEA09H,EAAAz0H,KAAAinC,GAEAA,EAAAjqB,KAAAiqB,EAAAjqB,SACA23G,EAAA30H,KAAAinC,EAAAjqB,KAMA23G,EAAAz7H,SAAAy5G,EAAAz5G,OACAvC,KAAA+7G,OAAA51F,QAAA23G,EAGK9hB,EAAAz5G,SACLvC,KAAA+7G,OAAA51F,SAAAnmB,KAAA+7G,OAAAh9F,SAIA/e,KAAA+7G,OAAA11F,QAwCA8iF,EAAAnnG,UAAAi6H,qBAAA,SAAA5xG,GACA,IAAAyQ,EAAA96B,KAIA,IAAAA,KAAAu5H,eAGAv5H,KAAA69H,oBAAAxzG,EAAAhE,MAMAgE,EAAAhE,KAAA,CACA,IAAA43G,EAAA,SAAAA,EAAAj2H,GACA,cAAAA,EAAAO,MACAuyB,EAAA+iG,oBAAA/iG,EAAAiiG,SAAA,eAGAjiG,EAAA/T,MAAA1I,KAAA,yBAAA4/G,IAGAj+H,KAAA+mB,MAAA2Q,KAAA,yBAAAumG,GAIAj+H,KAAA2W,SACA0P,IAAAgE,EAAAhE,IACA9d,KAAA,eAkBA4gG,EAAAnnG,UAAAy7H,WAAA,SAAA59F,GACA,QAAA5yB,IAAA4yB,EAEA,OAAA7/B,KAAAk1G,YAGAr1E,IAAA7/B,KAAAk1G,cAIAl1G,KAAAk1G,YAAAr1E,EAEA7/B,KAAAk1G,aACAl1G,KAAAi6F,SAAA,mBACAj6F,KAAA2W,QAAA,cAEA3W,KAAAm6F,YAAA,qBAcAgP,EAAAnnG,UAAAq6H,gBAAA,WACAr8H,KAAAm6F,YAAA,aACAn6F,KAAAm6F,YAAA,cACAn6F,KAAAi6F,SAAA,eAGAj6F,KAAAy9H,YAAA,GAQAz9H,KAAA2W,QAAA,SAgBAwyF,EAAAnnG,UAAA66H,sBAAA,WACA78H,KAAA+mB,MAAAipB,eAAA,OAAAhwC,KAAA+7G,OAAA6c,mBACA54H,KAAAo4H,iBAAA5rG,QAAA,SAAA0xG,GACA,OAAAA,EAAA36H,SAAA26H,EAAA7zG,SAEArqB,KAAAo4H,qBAEAp4H,KAAA+7G,OAAA6c,iBAAA54H,KAAA+mB,MAAAipB,eAOAhwC,KAAA2W,QAAA,eAYAwyF,EAAAnnG,UAAAk6H,mBAAA,WACA,IAAA/gG,EAAAn7B,KAEAA,KAAAi6F,SAAA,eAOAj6F,KAAA2W,QAAA,WACA3W,KAAA03B,IAAA,wBACA,OAAAyD,EAAAg/D,YAAA,kBAcAgP,EAAAnnG,UAAAm8H,mBAAA,WACAn+H,KAAAm6F,YAAA,eAOAn6F,KAAA2W,QAAA,YAYAwyF,EAAAnnG,UAAAo8H,0BAAA,WACAp+H,KAAAm6F,YAAA,eAQAn6F,KAAA2W,QAAA,mBAYAwyF,EAAAnnG,UAAAq8H,mBAAA,WACAr+H,KAAAm6F,YAAA,eAOAn6F,KAAA2W,QAAA,YAYAwyF,EAAAnnG,UAAAo6H,mBAAA,WACAp8H,KAAAi6F,SAAA,eAOAj6F,KAAA2W,QAAA,YAYAwyF,EAAAnnG,UAAAs8H,kBAAA,WACAt+H,KAAAm6F,YAAA,eAOAn6F,KAAA2W,QAAA,WAcAwyF,EAAAnnG,UAAAs6H,qBAAA,WAGAt8H,KAAAijF,SAAAs7C,YACAhmC,EAAA9lE,KAAA,0EACAzyB,KAAAi1B,YAAAj1B,KAAAijF,SAAAs7C,YAGAv+H,KAAAi6F,SAAA,mBAUAj6F,KAAA2W,QAAA,cAYAwyF,EAAAnnG,UAAAu6H,iBAAA,WACAv8H,KAAAm6F,YAAA,eACAn6F,KAAAi6F,SAAA,cAOAj6F,KAAA2W,QAAA,UAYAwyF,EAAAnnG,UAAAm6H,iBAAA,WACAn8H,KAAAi6F,SAAA,aACAj6F,KAAAijF,SAAAu4C,MACAx7H,KAAAi1B,YAAA,GACAj1B,KAAA45B,QACK55B,KAAAs3B,UACLt3B,KAAA63B,QASA73B,KAAA2W,QAAA,UAWAwyF,EAAAnnG,UAAAw6H,0BAAA,WACAx8H,KAAA6hB,SAAA7hB,KAAA+8H,SAAA,cAcA5zB,EAAAnnG,UAAAm7H,iBAAA,SAAA9yG,GACAoyE,GAAApyE,IAMArqB,KAAA04H,YAIA14H,KAAAs3B,SACAmzE,GAAAzqG,KAAA45B,QAEA55B,KAAA63B,UAaAsxE,EAAAnnG,UAAAu7H,eAAA,WACAv9H,KAAAm5H,YAAAn5H,KAAAm5H,eAWAhwB,EAAAnnG,UAAAo7H,sBAAA,WACAp9H,KAAAw+H,cAAAx+H,KAAAm5H,cAWAhwB,EAAAnnG,UAAAq7H,qBAAA,WACAr9H,KAAAw+H,eACAx+H,KAAAioG,sBAgBAkB,EAAAnnG,UAAAs7H,oBAAA,SAAAjzG,GAEAA,EAAA2zE,kBAWAmL,EAAAnnG,UAAAq3H,wBAAA,WACAr5H,KAAAwmH,eACAxmH,KAAAi6F,SAAA,kBAEAj6F,KAAAm6F,YAAA,mBAaAgP,EAAAnnG,UAAAs3H,kBAAA,WACAt5H,KAAAioG,sBAkBAkB,EAAAnnG,UAAAy6H,4BAAA,SAAApyG,EAAAxa,GACAA,GACA7P,KAAAwmH,aAAA32G,EAAA22G,cAQAxmH,KAAA2W,QAAA,qBAWAwyF,EAAAnnG,UAAA06H,iBAAA,WACA,IAAA/kG,EAAA33B,KAAA+mB,MAAA4Q,QAEA33B,KAAA23B,UAYAwxE,EAAAnnG,UAAA46H,oBAAA,WACA,IAAA/sH,EAAA,KAEAvN,UAAAC,OAAA,IACAsN,EAAAvN,UAAA,IASAtC,KAAA2W,QAAA,WAAA9G,IAWAs5F,EAAAnnG,UAAA2gH,SAAA,WACA,OAAA3iH,KAAA+7G,QAgBA5S,EAAAnnG,UAAAw7H,UAAA,SAAAv7G,EAAAkkE,GAGAnmF,KAAAwlB,MAAA,WACA,GAAAvD,KAAAu4F,GACA,OAAAP,GAAAj6G,KAAAg5H,YAAAh5H,KAAA+mB,MAAA9E,EAAAkkE,GACO,GAAAlkE,KAAAw4F,GACP,OAAAP,GAAAl6G,KAAAg5H,YAAAh5H,KAAA+mB,MAAA9E,EAAAkkE,GAGA,IACAnmF,KAAA+mB,OACA/mB,KAAA+mB,MAAA9E,GAAAkkE,GAEO,MAAAn+E,GAEP,MADAuwF,EAAAvwF,GACAA,KAEK,IAgBLmhG,EAAAnnG,UAAA+6H,SAAA,SAAA96G,GACA,GAAAjiB,KAAA+mB,OAAA/mB,KAAA+mB,MAAAg/E,SAAA,CAIA,GAAA9jF,KAAAs4F,GACA,OAAAT,GAAA95G,KAAAg5H,YAAAh5H,KAAA+mB,MAAA9E,GACK,GAAAA,KAAAw4F,GACL,OAAAP,GAAAl6G,KAAAg5H,YAAAh5H,KAAA+mB,MAAA9E,GAMA,IACA,OAAAjiB,KAAA+mB,MAAA9E,KACK,MAAAja,GAGL,QAAAiF,IAAAjN,KAAA+mB,MAAA9E,GAEA,MADAs2E,EAAA,aAAAt2E,EAAA,2BAAAjiB,KAAAs7H,UAAA,wBAAAtzH,GACAA,EAIA,iBAAAA,EAAArH,KAGA,MAFA43F,EAAA,aAAAt2E,EAAA,mBAAAjiB,KAAAs7H,UAAA,gCAAAtzH,GACAhI,KAAA+mB,MAAAg/E,UAAA,EACA/9F,EAKA,MADAuwF,EAAAvwF,GACAA,KAgBAmhG,EAAAnnG,UAAA43B,KAAA,WACA,IAAA+9E,EAAA33G,KAEAy+H,EAAAz+H,KAAAijF,SAAAy7C,SAAA/2H,EAAA+2H,QAEA,OAAAD,EACA,IAAAA,EAAA,SAAArtG,GACAumF,EAAAgnB,MAAAvtG,KAIApxB,KAAA2+H,SAcAx1B,EAAAnnG,UAAA28H,MAAA,WACA,IAAAC,EAAA5+H,KAEAuD,EAAAjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,GAAAmoG,GAWA,GAPAzqG,KAAAy5H,kBACAz5H,KAAAqe,IAAA,YAAAre,KAAAy5H,kBAMAz5H,KAAA+lG,SAcK,KAAA/lG,KAAAu5H,eAAAv5H,KAAAqmB,OAAArmB,KAAAkzH,cAEL,YADA3vH,EAAAvD,KAAA+8H,SAAA,SAWA/8H,KAAAy5H,iBAAA,WACAmF,EAAAnF,iBAAA,KACAl2H,EAAAq7H,EAAAhlG,SAGA55B,KAAA03B,IAAA,YAAA13B,KAAAy5H,sBA/BA,CAGA,GAAAz5H,KAAAw5H,qBACA,OAGAx5H,KAAAw5H,sBAAA,EACAx5H,KAAAwlB,MAAA,WACAo5G,EAAApF,sBAAA,EACAj2H,EAAAq7H,EAAAhlG,YAiCAuvE,EAAAnnG,UAAA61B,MAAA,WACA73B,KAAAw9H,UAAA,UAYAr0B,EAAAnnG,UAAAs1B,OAAA,WAEA,WAAAt3B,KAAA+8H,SAAA,WAaA5zB,EAAAnnG,UAAA+0G,OAAA,WACA,OAAA/2G,KAAA+8H,SAAA,WAAAvoG,GAAA,MAgBA20E,EAAAnnG,UAAA0gH,UAAA,SAAAmc,GACA,wBAAAA,EACA,OAAA7+H,KAAA24H,WAEA34H,KAAA24H,aAAAkG,EAEAA,EACA7+H,KAAAi6F,SAAA,iBAEAj6F,KAAAm6F,YAAA,kBAeAgP,EAAAnnG,UAAAizB,YAAA,SAAA05C,GACA,2BAAAA,GACAA,EAAA,IACAA,EAAA,QAEA3uE,KAAAw9H,UAAA,iBAAA7uD,KAUA3uE,KAAA+7G,OAAA9mF,YAAAj1B,KAAA+8H,SAAA,kBACA/8H,KAAA+7G,OAAA9mF,cAqBAk0E,EAAAnnG,UAAA6f,SAAA,SAAA8sD,GACA,QAAA1hE,IAAA0hE,EAEA,YAAA1hE,IAAAjN,KAAA+7G,OAAAl6F,SAAA7hB,KAAA+7G,OAAAl6F,SAAAgsB,IAGA8gC,EAAAjoE,WAAAioE,GAGAA,EAAA,IACAA,EAAAh2D,KAGAg2D,IAAA3uE,KAAA+7G,OAAAl6F,WAEA7hB,KAAA+7G,OAAAl6F,SAAA8sD,EAEAA,IAAAh2D,IACA3Y,KAAAi6F,SAAA,YAEAj6F,KAAAm6F,YAAA,YAMAn6F,KAAA2W,QAAA,oBAaAwyF,EAAAnnG,UAAAghH,cAAA,WACA,OAAAhjH,KAAA6hB,WAAA7hB,KAAAi1B,eAYAk0E,EAAAnnG,UAAA+gH,qBAAA,WACA,OAAAj2G,KAAAuzB,MAAArgC,KAAA6hB,YAAA/U,KAAAuzB,MAAArgC,KAAAi1B,gBAkBAk0E,EAAAnnG,UAAA02B,SAAA,WACA,IAAAA,EAAA14B,KAAA+8H,SAAA,YAMA,OAJArkG,KAAAn2B,SACAm2B,EAAAlE,GAAA,MAGAkE,GAaAywE,EAAAnnG,UAAA8nG,gBAAA,WACA,OAAAA,GAAA9pG,KAAA04B,WAAA14B,KAAA6hB,aAYAsnF,EAAAnnG,UAAAq4B,YAAA,WACA,IAAA3B,EAAA14B,KAAA04B,WACA7W,EAAA7hB,KAAA6hB,WACAlc,EAAA+yB,EAAA/yB,IAAA+yB,EAAAn2B,OAAA,GAMA,OAJAoD,EAAAkc,IACAlc,EAAAkc,GAGAlc,GAiBAwjG,EAAAnnG,UAAAilH,OAAA,SAAA6X,GACA,IAAAjX,OAAA,EAEA,YAAA56G,IAAA6xH,GAEAjX,EAAA/6G,KAAAC,IAAA,EAAAD,KAAAuC,IAAA,EAAA3I,WAAAo4H,KACA9+H,KAAA+7G,OAAAkL,OAAAY,EACA7nH,KAAAw9H,UAAA,YAAA3V,QAEAA,EAAA,GACA7nH,KAAAsnH,YAAAO,MAOAA,EAAAnhH,WAAA1G,KAAA+8H,SAAA,WACAjtF,MAAA+3E,GAAA,EAAAA,IAgBA1e,EAAAnnG,UAAAklH,MAAA,SAAA6X,GACA,QAAA9xH,IAAA8xH,EAIA,OAAA/+H,KAAA+8H,SAAA,aAHA/8H,KAAAw9H,UAAA,WAAAuB,IAkCA51B,EAAAnnG,UAAAg9H,aAAA,SAAAC,GACA,YAAAhyH,IAAAgyH,EACAj/H,KAAAw9H,UAAA,kBAAAyB,GAEAj/H,KAAA+8H,SAAA,qBAmBA5zB,EAAAnnG,UAAAslH,YAAA,SAAAwX,GACA,QAAA7xH,IAAA6xH,GAAA,IAAAA,EAIA,OAAA9+H,KAAA+7G,OAAA+L,WAHA9nH,KAAA+7G,OAAA+L,WAAAgX,GAeA31B,EAAAnnG,UAAA8zH,mBAAA,WACA,OAAA91H,KAAA+8H,SAAA,2BAoBA5zB,EAAAnnG,UAAAwkH,aAAA,SAAA0Y,GACA,QAAAjyH,IAAAiyH,EAIA,QAAAl/H,KAAAm/H,cAHAn/H,KAAAm/H,gBAAAD,GAmBA/1B,EAAAnnG,UAAA0kH,kBAAA,WACA,IAAA0Y,EAAAp1B,GAEAhqG,KAAAwmH,cAAA,GAEA4Y,EAAA1Y,mBASAvoG,GAAAzV,EAAA02H,EAAAC,iBAAAz9H,GAAA5B,KAAA,SAAAs/H,EAAAt3H,GACAhI,KAAAwmH,aAAA99G,EAAA02H,EAAA17C,qBAGA,IAAA1jF,KAAAwmH,gBACAnoG,GAAA3V,EAAA02H,EAAAC,iBAAAC,GAMAt/H,KAAA2W,QAAA,uBAGA3W,KAAAy6E,IAAA2kD,EAAA1Y,sBACK1mH,KAAA+mB,MAAA+uG,qBAGL91H,KAAAw9H,UAAA,oBAIAx9H,KAAAu/H,kBAKAv/H,KAAA2W,QAAA,sBAWAwyF,EAAAnnG,UAAAykH,eAAA,WACA,IAAA2Y,EAAAp1B,GAEAhqG,KAAAwmH,cAAA,GAGA4Y,EAAA1Y,kBACAh+G,EAAA02H,EAAA3Y,kBACKzmH,KAAA+mB,MAAA+uG,qBACL91H,KAAAw9H,UAAA,mBAEAx9H,KAAAw/H,iBAKAx/H,KAAA2W,QAAA,sBAYAwyF,EAAAnnG,UAAAu9H,gBAAA,WACAv/H,KAAAy/H,cAAA,EAGAz/H,KAAA0/H,gBAAAh3H,EAAA2rF,gBAAAzlF,MAAA+wH,SAGAxhH,GAAAzV,EAAA,UAAA9G,GAAA5B,UAAA4/H,qBAGAl3H,EAAA2rF,gBAAAzlF,MAAA+wH,SAAA,SAGA1lC,GAAAvxF,EAAAsyF,KAAA,mBAMAh7F,KAAA2W,QAAA,oBAYAwyF,EAAAnnG,UAAA49H,mBAAA,SAAAv1G,GACA,KAAAA,EAAA00E,WACA,IAAA/+F,KAAAwmH,eACAxmH,KAAAymH,iBAEAzmH,KAAAw/H,mBAYAr2B,EAAAnnG,UAAAw9H,eAAA,WACAx/H,KAAAy/H,cAAA,EACAphH,GAAA3V,EAAA,UAAA1I,KAAA4/H,oBAGAl3H,EAAA2rF,gBAAAzlF,MAAA+wH,SAAA3/H,KAAA0/H,gBAGAvlC,GAAAzxF,EAAAsyF,KAAA,mBAQAh7F,KAAA2W,QAAA,mBAgBAwyF,EAAAnnG,UAAA4gF,YAAA,SAAAr6E,GAIA,IAHA,IAAAwwG,OAAA,EAGA34G,EAAA,EAAA+sB,EAAAntB,KAAAijF,SAAAq5B,UAAgDl8G,EAAA+sB,EAAA5qB,OAAcnC,IAAA,CAC9D,IAAAm8G,EAAApvF,EAAA/sB,GACA+yB,EAAAuyE,GAAAvpB,QAAAogC,GASA,GALAppF,IACAA,EAAA0vD,GAAAC,aAAAy5B,IAIAppF,GAMA,GAAAA,EAAAsvD,gBACAs2B,EAAA5lF,EAAAyvD,YAAAr6E,GAEAwwG,GACA,OAAAA,OATAxgB,EAAA5gE,MAAA,QAAA4kF,EAAA,qEAcA,UAgBApT,EAAAnnG,UAAA69H,aAAA,SAAA15G,GACA,IAAA25G,EAAA9/H,KAIA+/H,EAAA//H,KAAAijF,SAAAq5B,UAAAlkG,IAAA,SAAAmkG,GACA,OAAAA,EAAA7W,GAAAvpB,QAAAogC,MACK7qF,OAAA,SAAA8a,GACL,IAAA+vE,EAAA/vE,EAAA,GACArZ,EAAAqZ,EAAA,GAGA,OAAArZ,EAEAA,EAAAsvD,eAGA8V,EAAA5gE,MAAA,QAAA4kF,EAAA,sEACA,KAMAyjB,EAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAtL,OAAA,EAYA,OAVAoL,EAAAxxF,KAAA,SAAA2xF,GACA,OAAAF,EAAAzxF,KAAA,SAAA4xF,GAGA,GAFAxL,EAAAsL,EAAAC,EAAAC,GAEAxL,EACA,aAKAA,GAGAyL,OAAA,EACAC,EAAA,SAAAhhD,GACA,gBAAAh5E,EAAAY,GACA,OAAAo4E,EAAAp4E,EAAAZ,KAGAi6H,EAAA,SAAAvyF,EAAAlvB,GACA,IAAAw9F,EAAAtuE,EAAA,GACA9a,EAAA8a,EAAA,GAEA,GAAA9a,EAAAovD,cAAAxjE,EAAA+gH,EAAA78C,SAAAs5B,EAAA1oG,gBACA,OAAgBkL,SAAAoU,KAAAopF,IAchB,OANA+jB,EAFAtgI,KAAAijF,SAAAw9C,YAEAT,EAAA75G,EAAA45G,EAAAQ,EAAAC,IAGAR,EAAAD,EAAA55G,EAAAq6G,GAGAF,IAAA,GAoBAn3B,EAAAnnG,UAAAqkB,IAAA,SAAAtH,GACA,IAAA2hH,EAAA1gI,KAGA,wBAAA+e,EACA,OAAA/e,KAAA+7G,OAAA11F,KAAA,GAIA,IAAAF,EAAA81F,GAAAl9F,GAKAoH,EAAA5jB,QAQAvC,KAAAu5H,cAAA,EAEAv5H,KAAA+7G,OAAA51F,UACAnmB,KAAA69H,oBAAA13G,EAAA,IAGAyqB,GAAA5wC,KAAAmmB,EAAA,YAAAw6G,EAAAjmB,GACAgmB,EAAA1H,YAAAte,EAIAgmB,EAAA3kB,OAAA51F,UACAu6G,EAAA7C,oBAAA8C,GAEA,IAAA/2G,EAAA82G,EAAAE,KAAAD,GAEA,GAAA/2G,EACA,OAAAzD,EAAA5jB,OAAA,EACAm+H,EAAAr6G,IAAAF,EAAA9O,MAAA,KAGAqpH,EAAAnH,cAAA,EAGAmH,EAAAz8F,WAAA,WACAjkC,KAAA23B,OAAsB/0B,KAAA,EAAAD,QAAA3C,KAAAkkG,SAAAlkG,KAAAijF,SAAA49C,wBACb,QAITH,EAAAz6B,gBAKA2T,GAAAc,EAAAgmB,EAAA35G,UA1CA/mB,KAAAikC,WAAA,WACAjkC,KAAA23B,OAAoB/0B,KAAA,EAAAD,QAAA3C,KAAAkkG,SAAAlkG,KAAAijF,SAAA49C,wBACb,IA2DP13B,EAAAnnG,UAAA4+H,KAAA,SAAA7hH,GACA,IAAA+hH,EAAA9gI,KAEA+gI,EAAA/gI,KAAA6/H,cAAA9gH,IAEA,OAAAgiH,IAIAv9B,GAAAu9B,EAAA5tG,KAAAnzB,KAAAs7H,YAYAt7H,KAAAwlB,MAAA,WAMAxlB,KAAA+mB,MAAA7gB,YAAAlE,UAAAC,eAAA,aACAjC,KAAAw9H,UAAA,YAAAz+G,GAEA/e,KAAAw9H,UAAA,MAAAz+G,EAAAsH,KAGArmB,KAAAu5H,cAAA,IACK,IAEL,IA1BAv5H,KAAAu5H,cAAA,EAEAv5H,KAAAw8G,UAAAukB,EAAA5tG,KAAA4tG,EAAAhiH,QACA/e,KAAA+mB,MAAAvB,MAAA,WACAs7G,EAAAvH,cAAA,KAEA,KA4BApwB,EAAAnnG,UAAA+zB,KAAA,WACA/1B,KAAAw9H,UAAA,SASAr0B,EAAAnnG,UAAAk1C,MAAA,WACAl3C,KAAA+mB,OACA/mB,KAAA+mB,MAAA8X,YAAA,QAEA7+B,KAAAw8G,UAAAx8G,KAAAijF,SAAAq5B,UAAA,SACAt8G,KAAAw9H,UAAA,UAWAr0B,EAAAnnG,UAAAg/H,eAAA,WACA,IAAAjiH,EAAA/e,KAAAihI,gBACA96G,KAOA,OAJA,IAAArlB,OAAAyrB,KAAAxN,GAAAxc,QACA4jB,EAAA9c,KAAA0V,GAGA/e,KAAA+7G,OAAA51F,YAWAgjF,EAAAnnG,UAAAi/H,cAAA,WACA,OAAAjhI,KAAA+7G,OAAAh9F,YAYAoqF,EAAAnnG,UAAAkxH,WAAA,WACA,OAAAlzH,KAAAihI,iBAAAjhI,KAAAihI,gBAAA56G,KAAA,IAaA8iF,EAAAnnG,UAAAk/H,YAAA,WACA,OAAAlhI,KAAAihI,iBAAAjhI,KAAAihI,gBAAA14H,MAAA,IAeA4gG,EAAAnnG,UAAAm0B,QAAA,SAAA90B,GACA,YAAA4L,IAAA5L,GACArB,KAAAw9H,UAAA,aAAAn8H,QACArB,KAAAijF,SAAA9sD,QAAA90B,IAGArB,KAAA+8H,SAAA,YAqBA5zB,EAAAnnG,UAAA03B,SAAA,SAAAr4B,GAEA,QAAA4L,IAAA5L,EACA,OAAArB,KAAAijF,SAAAvpD,WAAA,EAGA,IAAAynG,OAAA,EAGA,kBAAA9/H,GAAA,mBAAAmF,KAAAnF,IACArB,KAAAijF,SAAAvpD,SAAAr4B,EACArB,KAAA09H,gBAAAr8H,GACA8/H,GAAA,GASAnhI,KAAAijF,SAAAvpD,WALKr4B,EAQL8/H,KAAAnhI,KAAAijF,SAAAvpD,SAMA15B,KAAA+mB,OACA/mB,KAAAw9H,UAAA,cAAA2D,IAsBAh4B,EAAAnnG,UAAAi2G,YAAA,SAAA52G,GACA,YAAA4L,IAAA5L,GACArB,KAAAw9H,UAAA,iBAAAn8H,GACArB,KAAAijF,SAAAg1B,YAAA52G,EACArB,MAEAA,KAAA+8H,SAAA,gBAeA5zB,EAAAnnG,UAAAw5H,KAAA,SAAAn6H,GACA,YAAA4L,IAAA5L,GACArB,KAAAw9H,UAAA,UAAAn8H,QACArB,KAAAijF,SAAAu4C,KAAAn6H,IAGArB,KAAA+8H,SAAA,SAgBA5zB,EAAAnnG,UAAA4kB,OAAA,SAAAP,GACA,QAAApZ,IAAAoZ,EACA,OAAArmB,KAAAy4H,QAKApyG,IACAA,EAAA,IAGAA,IAAArmB,KAAAy4H,UAKAz4H,KAAAy4H,QAAApyG,EAGArmB,KAAAw9H,UAAA,YAAAn3G,GAEArmB,KAAAm4H,mBAAA,EASAn4H,KAAA2W,QAAA,kBAiBAwyF,EAAAnnG,UAAA26H,wBAAA,WACA,KAAA38H,KAAAy4H,SAAAz4H,KAAAijF,SAAA04C,wBAAA37H,KAAA+mB,OAAA/mB,KAAA+mB,MAAAH,OAAA,CACA,IAAAw6G,EAAAphI,KAAA+mB,MAAAH,UAAA,GAEAw6G,IAAAphI,KAAAy4H,UACAz4H,KAAAy4H,QAAA2I,EACAphI,KAAAm4H,mBAAA,EAGAn4H,KAAA2W,QAAA,mBAmBAwyF,EAAAnnG,UAAAuqG,SAAA,SAAA2X,GACA,QAAAj3G,IAAAi3G,EACA,QAAAlkH,KAAA04H,UAGAxU,MAGAlkH,KAAA04H,YAAAxU,IAIAlkH,KAAA04H,UAAAxU,EAEAlkH,KAAA88H,uBACA98H,KAAAw9H,UAAA,cAAAtZ,GAGAlkH,KAAA04H,WACA14H,KAAAm6F,YAAA,yBACAn6F,KAAAi6F,SAAA,wBAKAj6F,KAAA2W,QAAA,mBACA3W,KAAA88H,uBACA98H,KAAAg9H,8BAGAh9H,KAAAm6F,YAAA,wBACAn6F,KAAAi6F,SAAA,yBAKAj6F,KAAA2W,QAAA,oBACA3W,KAAA88H,uBACA98H,KAAAk9H,kCAwBA/zB,EAAAnnG,UAAA86H,oBAAA,SAAA5Y,GACA,QAAAj3G,IAAAi3G,EACA,QAAAlkH,KAAAqhI,qBAGAnd,MAGAlkH,KAAAqhI,uBAAAnd,IAIAlkH,KAAAqhI,qBAAAnd,EAEAlkH,KAAAqhI,sBACArhI,KAAAi6F,SAAA,6BAQAj6F,KAAA2W,QAAA,yBAEA3W,KAAAm6F,YAAA,6BAQAn6F,KAAA2W,QAAA,0BAkBAwyF,EAAAnnG,UAAA21B,MAAA,SAAA/N,GACA,YAAA3c,IAAA2c,EACA5pB,KAAA20C,QAAA,KAIA,OAAA/qB,GACA5pB,KAAA20C,OAAA/qB,EACA5pB,KAAAm6F,YAAA,kBACAn6F,KAAAshI,cACAthI,KAAAshI,aAAAr1B,WAKAjsG,KAAA20C,OAAA,IAAAy1D,GAAAxgF,GAGA5pB,KAAAi6F,SAAA,aAIA1B,EAAA5gE,MAAA,SAAA33B,KAAA20C,OAAA/xC,KAAA,IAAAwnG,GAAAE,WAAAtqG,KAAA20C,OAAA/xC,MAAA,IAAA5C,KAAA20C,OAAAhyC,QAAA3C,KAAA20C,aAMA30C,KAAA2W,QAAA,WAaAwyF,EAAAnnG,UAAAimG,mBAAA,SAAA59E,GACArqB,KAAAuhI,eAAA,GAkBAp4B,EAAAnnG,UAAAm3H,WAAA,SAAAjV,GACA,QAAAj3G,IAAAi3G,EACA,OAAAlkH,KAAAq4H,YAKA,GAFAnU,MAEAA,IAAAlkH,KAAAq4H,YAAA,CAMA,GAFAr4H,KAAAq4H,YAAAnU,EAEAlkH,KAAAq4H,YASA,OARAr4H,KAAAuhI,eAAA,EACAvhI,KAAAm6F,YAAA,qBACAn6F,KAAAi6F,SAAA,wBAKAj6F,KAAA2W,QAAA,cAYA3W,KAAA+mB,OACA/mB,KAAA+mB,MAAA2Q,IAAA,qBAAA1vB,GACAA,EAAAu2F,kBACAv2F,EAAAg2F,mBAIAh+F,KAAAuhI,eAAA,EACAvhI,KAAAm6F,YAAA,mBACAn6F,KAAAi6F,SAAA,qBAKAj6F,KAAA2W,QAAA,kBAUAwyF,EAAAnnG,UAAAo3H,uBAAA,WACA,IAAAoI,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,EAAA//H,GAAA5B,UAAAioG,oBAEAsb,EAAA,SAAAv7G,GAGAA,EAAA45H,UAAAH,GAAAz5H,EAAA65H,UAAAH,IACAD,EAAAz5H,EAAA45H,QACAF,EAAA15H,EAAA65H,QACAF,MAIAjhB,EAAA,WACAihB,IAIA3hI,KAAAooG,cAAAo5B,GAIAA,EAAAxhI,KAAAqoG,YAAAs5B,EAAA,MAGAne,EAAA,SAAAn5F,GACAs3G,IAEA3hI,KAAAooG,cAAAo5B,IAIAxhI,KAAAme,GAAA,YAAAuiG,GACA1gH,KAAAme,GAAA,YAAAolG,GACAvjH,KAAAme,GAAA,UAAAqlG,GAIAxjH,KAAAme,GAAA,UAAAwjH,GACA3hI,KAAAme,GAAA,QAAAwjH,GAOA,IAAAG,OAAA,EAEA9hI,KAAAqoG,YAAA,WAEA,GAAAroG,KAAAuhI,cAAA,CAKAvhI,KAAAuhI,eAAA,EAGAvhI,KAAAm5H,YAAA,GAGAn5H,KAAA+jC,aAAA+9F,GAEA,IAAA9tG,EAAAh0B,KAAAijF,SAAA6+C,kBAEA9tG,GAAA,IAMA8tG,EAAA9hI,KAAAikC,WAAA,WAIAjkC,KAAAuhI,eACAvhI,KAAAm5H,YAAA,IAEOnlG,MACF,MAkBLm1E,EAAAnnG,UAAAguC,aAAA,SAAAjU,GACA,QAAA9uB,IAAA8uB,EAOA,OAAA/7B,KAAA+mB,OAAA/mB,KAAA+mB,MAAA0xF,qBACAz4G,KAAA+7G,OAAA6c,kBAAA54H,KAAA+8H,SAAA,gBAEA,EAPA/8H,KAAAw9H,UAAA,kBAAAzhG,IA2BAotE,EAAAnnG,UAAA62H,oBAAA,SAAA98F,GACA,YAAA9uB,IAAA8uB,EACA/7B,KAAAw9H,UAAA,yBAAAzhG,GAGA/7B,KAAA+mB,OAAA/mB,KAAA+mB,MAAA0xF,qBACAz4G,KAAA+8H,SAAA,uBAEA,GAeA5zB,EAAAnnG,UAAAo+G,QAAA,SAAA8D,GACA,QAAAj3G,IAAAi3G,EAKA,QAAAlkH,KAAA+hI,SAJA/hI,KAAA+hI,WAAA7d,GA8BA/a,EAAAnnG,UAAA6xB,aAAA,SAAAgB,EAAAC,EAAAxR,GACA,GAAAtjB,KAAA+mB,MACA,OAAA/mB,KAAA+mB,MAAA8M,aAAAgB,EAAAC,EAAAxR,IAyBA6lF,EAAAnnG,UAAA4yB,mBAAA,SAAAtP,EAAAsyF,GACA,GAAA53G,KAAA+mB,MACA,OAAA/mB,KAAA+mB,MAAA6N,mBAAAtP,EAAAsyF,IAgBAzO,EAAAnnG,UAAA60G,sBAAA,WACA,IAAAxuB,EAAA/lF,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACA0/H,EAAA35C,EAAAh+E,MACAA,OAAA4C,IAAA+0H,EAAA1/H,UAAA,GAAA0/H,EAKA,GAAAhiI,KAAA+mB,MACA,OAAA/mB,KAAA+mB,MAAA8vF,sBAAAxsG,IAgBA8+F,EAAAnnG,UAAA+1G,wBAAA,WACA,OAAA/3G,KAAA+8H,SAAA,4BAWA5zB,EAAAnnG,UAAA24H,WAAA,WACA,OAAA36H,KAAA+mB,OAAA/mB,KAAA+mB,MAAA4zG,YAAA36H,KAAA+mB,MAAA4zG,cAAA,GAWAxxB,EAAAnnG,UAAA44H,YAAA,WACA,OAAA56H,KAAA+mB,OAAA/mB,KAAA+mB,MAAA6zG,aAAA56H,KAAA+mB,MAAA6zG,eAAA,GAiBAzxB,EAAAnnG,UAAAshB,SAAA,SAAA1gB,GACA,QAAAqK,IAAArK,EACA,OAAA5C,KAAA+sH,UAGA/sH,KAAA+sH,UAAAx1G,OAAA3U,GAAAiR,eAaAs1F,EAAAnnG,UAAAqiG,UAAA,WACA,OAAA3uE,GAAAyzE,EAAAnnG,UAAAihF,SAAAohB,UAAArkG,KAAAw4H,aAYArvB,EAAAnnG,UAAAigI,OAAA,WACA,IAAA38G,EAAAoQ,GAAA11B,KAAAijF,UACAllD,EAAAzY,EAAAyY,OAEAzY,EAAAyY,UAEA,QAAA39B,EAAA,EAAmBA,EAAA29B,EAAAx7B,OAAmBnC,IAAA,CACtC,IAAAiK,EAAA0zB,EAAA39B,GAGAiK,EAAAqrB,GAAArrB,GACAA,EAAAyc,YAAA7Z,EACAqY,EAAAyY,OAAA39B,GAAAiK,EAGA,OAAAib,GAqBA6jF,EAAAnnG,UAAAkgI,YAAA,SAAAjkE,EAAA34C,GACA,IAAA68G,EAAAniI,KAEAslB,QACAA,EAAA24C,WAAA,GAEA,IAAAmkE,EAAA,IAAAh3B,GAAAprG,KAAAslB,GAQA,OANAtlB,KAAA8kG,SAAAs9B,GACAA,EAAAjkH,GAAA,qBACAgkH,EAAA1xH,YAAA2xH,KAGAA,EAAApmD,OACAomD,GAeAj5B,EAAA8uB,eAAA,SAAA72G,GACA,IAAAihH,GACAl8G,WACA4X,WAGAukG,EAAA5nC,GAAAt5E,GACAmhH,EAAAD,EAAA,cAOA,GALAxoC,GAAA14E,EAAA,eACAkhH,EAAAvI,OAAA,GAIA,OAAAwI,EAAA,CAGA,IAAAC,EAAAvtC,EAAAstC,GAAA,MACA34G,EAAA44G,EAAA,GACA3yH,EAAA2yH,EAAA,GAEA54G,GACA2uE,EAAA5gE,MAAA/N,GAEA9K,EAAAwjH,EAAAzyH,GAMA,GAHAiP,EAAAujH,EAAAC,GAGAlhH,EAAAsyG,gBAGA,IAFA,IAAA/uB,EAAAvjF,EAAAtX,WAEA1J,EAAA,EAAA+sB,EAAAw3E,EAAApiG,OAA0CnC,EAAA+sB,EAAO/sB,IAAA,CACjD,IAAAw5F,EAAA+K,EAAAvkG,GAEAqiI,EAAA7oC,EAAAkI,SAAAjuF,cAEA,WAAA4uH,EACAJ,EAAAl8G,QAAA9c,KAAAqxF,GAAAd,IACS,UAAA6oC,GACTJ,EAAAtkG,OAAA10B,KAAAqxF,GAAAd,IAKA,OAAAyoC,GAYAl5B,EAAAnnG,UAAAi3H,kBAAA,WACA,IAAA9jE,EAAAzsD,EAAAJ,cAAA,KAIA,sBAAA6sD,EAAAvmD,OAAA,oBAAAumD,EAAAvmD,OAAA,iBAAAumD,EAAAvmD,OAAA,gBAAAumD,EAAAvmD,OAEA,gBAAAumD,EAAAvmD,QAGAu6F,EArlHA,CAslHCtmB,IAmDDkyB,GAAAE,MAAAzoF,QAAA,SAAA+rG,GACA,IAAAj/G,EAAAy7F,GAAAwjB,GAEApvB,GAAAnnG,UAAAsX,EAAAo7F,YAAA,WACA,OAAA10G,KAAA+mB,MACA/mB,KAAA+mB,MAAAzN,EAAAo7F,eAKA10G,KAAAsZ,EAAAq7F,aAAA30G,KAAAsZ,EAAAq7F,cAAA,IAAAr7F,EAAAi7F,UACAv0G,KAAAsZ,EAAAq7F,iBASAxL,GAAAhlB,WAEA,IAAAr5E,GAAAnD,EAAAmD,UAUAq+F,GAAAnnG,UAAAihF,UAEAq5B,UAAA5W,GAAA2S,kBAEA1xF,SACAF,SAGAq7G,kBAAA,IAGAtU,iBAKA7oB,UAAA,iIAEArhF,SAAAxY,QAAAu5F,WAAAv5F,GAAAu5F,UAAA,IAAAv5F,GAAA43H,cAAA53H,GAAAwY,WAAA,KAGA+gF,aAGAw8B,oBAAA,kDAGAxqC,GACA8S,GAAAnnG,UAAAihF,SAAA0hB,SAAAt7F,KAAA,kBAUA,QAOA,UAQA,WAqBA,eAwBA,cAAAmjB,QAAA,SAAA+yD,GACA4pB,GAAAnnG,UAAAu9E,GAAA,WACA,OAAAv/E,KAAA+8H,SAAAx9C,MAIAo4C,GAAAnrG,QAAA,SAAAnC,GACA8+E,GAAAnnG,UAAA,aAAAshG,GAAAj5E,GAAA,gBACA,OAAArqB,KAAA2W,QAAA0T,MA8DAw4D,GAAA2C,kBAAA,SAAA2jB,IAYA,IAAAw5B,GAAA,SASAC,GAAA,iBAQAC,MAYAC,GAAA,SAAAniI,GACA,OAAAkiI,GAAA5gI,eAAAtB,IAaAoiI,GAAA,SAAApiI,GACA,OAAAmiI,GAAAniI,GAAAkiI,GAAAliI,QAAAsM,GAeA+1H,GAAA,SAAAl8G,EAAAnmB,GACAmmB,EAAA87G,IAAA97G,EAAA87G,QACA97G,EAAA87G,IAAAjiI,IAAA,GAiBAsiI,GAAA,SAAAn8G,EAAAq4E,EAAA+jC,GACA,IAAA7oD,GAAA6oD,EAAA,2BAEAp8G,EAAAnQ,QAAA0jE,EAAA8kB,GACAr4E,EAAAnQ,QAAA0jE,EAAA,IAAA8kB,EAAAx+F,KAAAw+F,IAiBAgkC,GAAA,SAAAxiI,EAAAglF,GACA,IAAAy9C,EAAA,WAQAH,GAAAjjI,MAA6BW,OAAAglF,SAAA3rE,SAAA,OAA6C,GAE1E,IAAAA,EAAA2rE,EAAAxtE,MAAAnY,KAAAsC,WAKA,OAHA0gI,GAAAhjI,KAAAW,GACAsiI,GAAAjjI,MAA6BW,OAAAglF,SAAA3rE,aAE7BA,GAOA,OAJAlZ,OAAAyrB,KAAAo5D,GAAAn5D,QAAA,SAAA7d,GACAy0H,EAAAz0H,GAAAg3E,EAAAh3E,KAGAy0H,GAmBAC,GAAA,SAAA1iI,EAAA2iI,GAMA,OAFAA,EAAAthI,UAAArB,OAEA,WACAsiI,GAAAjjI,MAA6BW,OAAAglF,OAAA29C,EAAAtpH,SAAA,OAAqD,GAElF,QAAA0vE,EAAApnF,UAAAC,OAAAic,EAAAzD,MAAA2uE,GAAArpE,EAAA,EAAmEA,EAAAqpE,EAAarpE,IAChF7B,EAAA6B,GAAA/d,UAAA+d,GAGA,IAAArG,EAAA,IAAA3E,SAAArT,UAAAJ,KAAAuW,MAAAmrH,GAAA,MAAAhsH,QAAAtX,MAAAsX,OAAAkH,MASA,OANAxe,KAAAW,GAAA,WACA,OAAAqZ,GAGAipH,GAAAjjI,KAAAga,EAAAupH,gBAEAvpH,IAmBAwpH,GAAA,WAUA,SAAAA,EAAA18G,GAGA,GAFAgwE,EAAA92F,KAAAwjI,GAEAxjI,KAAAkG,cAAAs9H,EACA,UAAAhhI,MAAA,0DAGAxC,KAAA8mB,SAIA87E,GAAA5iG,aACAA,KAAA2W,QAEAwsF,GAAAnjG,UAAAkG,YAAAk9F,cACA4/B,GAAAl8G,EAAA9mB,KAAAW,MAIAX,KAAAye,QAAA7c,GAAA5B,UAAAye,SAGAqI,EAAA3I,GAAA,UAAAne,KAAAye,SA+OA,OAvOA+kH,EAAAxhI,UAAA6V,QAAA,WACA,OAAA7X,KAAAkG,YAAAu9H,SAiBAD,EAAAxhI,UAAAuhI,aAAA,WACA,IAAApkC,EAAA78F,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAKA,OAHA68F,EAAAx+F,KAAAX,KAAAW,KACAw+F,EAAAxZ,OAAA3lF,KAAAkG,YACAi5F,EAAAnlF,SAAAha,KACAm/F,GAmBAqkC,EAAAxhI,UAAA2U,QAAA,SAAA0T,GACA,IAAA80E,EAAA78F,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAEA,OAAAqU,GAAA3W,KAAA2hG,YAAAt3E,EAAArqB,KAAAujI,aAAApkC,KAiBAqkC,EAAAxhI,UAAAqhG,mBAAA,SAAAr7F,KAYAw7H,EAAAxhI,UAAAyc,QAAA,WACA,IAAA9d,EAAAX,KAAAW,KACAmmB,EAAA9mB,KAAA8mB,OASA9mB,KAAA2W,QAAA,WACA3W,KAAAqe,MACAyI,EAAAzI,IAAA,UAAAre,KAAAye,SAKAqI,EAAA87G,IAAAjiI,IAAA,EACAX,KAAA8mB,OAAA9mB,KAAAmR,MAAA,KAIA2V,EAAAnmB,GAAA0iI,GAAA1iI,EAAAkiI,GAAAliI,KAeA6iI,EAAAE,QAAA,SAAA/9C,GACA,IAAAzjF,EAAA,kBAAAyjF,EAAAo9C,GAAAp9C,KAEA,0BAAAzjF,IAAAshI,EAAAxhI,UAAAgnG,cAAA9mG,EAAAF,YAoBAwhI,EAAA99C,eAAA,SAAA/kF,EAAAglF,GACA,qBAAAhlF,EACA,UAAA6B,MAAA,yBAAA7B,EAAA,kDAAAA,EAAA,YAAA4oF,EAAA5oF,IAAA,KAGA,GAAAmiI,GAAAniI,GACA43F,EAAA9lE,KAAA,mBAAA9xB,EAAA,wEACK,GAAAwoG,GAAAnnG,UAAAC,eAAAtB,GACL,UAAA6B,MAAA,yBAAA7B,EAAA,0DAGA,uBAAAglF,EACA,UAAAnjF,MAAA,uBAAA7B,EAAA,oDAAAglF,EAAA,YAAA4D,EAAA5D,IAAA,KAeA,OAZAk9C,GAAAliI,GAAAglF,EAIAhlF,IAAAgiI,KACAa,EAAAE,QAAA/9C,GACAwjB,GAAAnnG,UAAArB,GAAAwiI,GAAAxiI,EAAAglF,GAEAwjB,GAAAnnG,UAAArB,GAAA0iI,GAAA1iI,EAAAglF,IAIAA,GAWA69C,EAAAG,iBAAA,SAAAhjI,GACA,GAAAA,IAAAgiI,GACA,UAAAngI,MAAA,mCAEAsgI,GAAAniI,YACAkiI,GAAAliI,UACAwoG,GAAAnnG,UAAArB,KAiBA6iI,EAAAI,WAAA,WACA,IAAA3uB,EAAA3yG,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,GAAAxB,OAAAyrB,KAAAs2G,IAEA/6H,OAAA,EAWA,OATAmtG,EAAAzoF,QAAA,SAAA7rB,GACA,IAAAglF,EAAAo9C,GAAApiI,GAEAglF,IACA79E,QACAA,EAAAnH,GAAAglF,KAIA79E,GAcA07H,EAAAK,iBAAA,SAAAljI,GACA,IAAAglF,EAAAo9C,GAAApiI,GAEA,OAAAglF,KAAA89C,SAAA,IAGAD,EA/QA,GAgSAA,GAAAT,aAOAS,GAAAb,oBAEAa,GAAA99C,eAAAi9C,GAAAa,IAOAr6B,GAAAnnG,UAAA8hI,YAAA,SAAAnjI,GACA,QAAAX,KAAA4iI,MAAA,IAAA5iI,KAAA4iI,IAAAjiI,IAQAwoG,GAAAnnG,UAAA+hI,UAAA,SAAApjI,GACA,QAAAmiI,GAAAniI,IAkEA,IAAA6e,GAAA,SAAAC,EAAAC,GACA,uBAAAA,GAAA,OAAAA,EACA,UAAA1K,UAAA,iFAAA0K,EAAA,YAAA6pE,EAAA7pE,KAGAD,EAAAzd,UAAAlB,OAAAY,OAAAge,KAAA1d,WACAkE,aACA7E,MAAAoe,EACAze,YAAA,EACAyY,UAAA,EACAD,cAAA,KAIAkG,IAEAD,EAAAukH,OAAAtkH,IAoBAukH,GAAA,SAAAvkH,GACA,IAAAwkH,EAAA5hI,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAEAmd,EAAA,WACAC,EAAAvH,MAAAnY,KAAAsC,YAGAukB,KAcA,QAAAlmB,IAZA,iCAAAujI,EAAA,YAAA36C,EAAA26C,KACAA,EAAAh+H,cAAApF,OAAAkB,UAAAkE,cACAuZ,EAAAykH,EAAAh+H,aAEA2gB,EAAAq9G,GACG,oBAAAA,IACHzkH,EAAAykH,GAGA1kH,GAAAC,EAAAC,GAGAmH,EACAA,EAAA5kB,eAAAtB,KACA8e,EAAAzd,UAAArB,GAAAkmB,EAAAlmB,IAIA,OAAA8e,GASA,qBAAA0kH,kBAAA1tC,OACA/tF,EAAAJ,cAAA,SACAI,EAAAJ,cAAA,SACAI,EAAAJ,cAAA,SACAI,EAAAJ,cAAA,aAYA,IAAA87H,GAAA,SAAA3/H,GACA,WAAAA,EAAAqO,QAAA,KAAArO,EAAA4S,MAAA,GAAA5S,GAoBA,SAAAkhB,GAAAlhB,EAAA6gB,EAAAE,GACA,IAAAsB,EAAAnB,GAAA0+G,UAAA5/H,GAEA,GAAAqiB,EAOA,OANAxB,GACAizE,EAAA9lE,KAAA,WAAAhuB,EAAA,0DAEA+gB,GACAsB,EAAAtB,SAEAsB,EAGA,IAAAmhB,EAAA,kBAAAxjC,EAAAm4F,GAAA,IAAAwnC,GAAA3/H,MAEA,IAAAs0F,GAAA9wD,GACA,UAAAjzB,UAAA,sDAGAtM,EAAAsyF,KAAAlX,SAAA77C,IACAswD,EAAA9lE,KAAA,mDAGAnN,QAEAK,GAAA2+G,MAAA,eAAA93G,QAAA,SAAA+3G,GACA,IAAAr0D,EAAAq0D,EAAAt8F,EAAAvS,GAAApQ,IAEAkkE,EAAAtZ,KAAAn1D,MAAA8O,QAAAqmD,GAKA5qD,EAAAoQ,GAAApQ,EAAA4qD,GAJAqoB,EAAA5gE,MAAA,kDASA,IAAA6sG,EAAA3hD,GAAAC,aAAA,UAQA,OANAh8D,EAAA,IAAA09G,EAAAv8F,EAAA3iB,EAAAE,GAEAG,GAAA2+G,MAAA,SAAA93G,QAAA,SAAA+3G,GACA,OAAAA,EAAAz9G,KAGAA,EAyFA,GAlFAnB,GAAA8+G,UAeA9+G,GAAA2+G,MAAA,SAAA/7H,EAAAg3E,GAKA,OAJA55D,GAAA8+G,OAAAl8H,GAAAod,GAAA8+G,OAAAl8H,OACAg3E,IACA55D,GAAA8+G,OAAAl8H,GAAAod,GAAA8+G,OAAAl8H,GAAA+O,OAAAioE,IAEA55D,GAAA8+G,OAAAl8H,IAYAod,GAAA+B,KAAA,SAAAnf,EAAAg3E,GACA55D,GAAA2+G,MAAA/7H,EAAAg3E,IAYA55D,GAAA++G,SAAA,SAAAn8H,EAAAg3E,GACA55D,GAAA2+G,MAAA/7H,KAAA+O,OAAAioE,GAAAnnE,IAAA,SAAAutB,GACA,IAAAm3C,EAAA,SAAAA,IAEA,OADAn3D,GAAAg/G,WAAAp8H,EAAAu0E,GACAn3C,EAAAxtB,WAAAlL,EAAA3K,YAGA,OAAAw6E,MAgBAn3D,GAAAg/G,WAAA,SAAAp8H,EAAAg3E,GACA,IAAAznE,EAAA6N,GAAA2+G,MAAA/7H,GAAAuK,QAAAysE,GAEA,QAAAznE,IAAA,KAIA6N,GAAA8+G,OAAAl8H,GAAAod,GAAA8+G,OAAAl8H,GAAA8O,QACAsO,GAAA8+G,OAAAl8H,GAAA+V,OAAAxG,EAAA,IAEA,KAIA,IAAAnQ,EAAAkyH,0BAAApjC,KAAA,CACA,IAAA7nF,GAAAguF,GAAA,wBAEA,IAAAhuF,GAAA,CACAA,GAAA+xF,GAAA,uBACA,IAAA1yC,GAAA2uC,GAAA,QAEA3uC,IACAA,GAAA4rC,aAAAjrF,GAAAq/C,GAAAz9C,YAEAowF,GAAAhyF,GAAA,kJAOA4xF,GAAA,EAAA76E,IAOAA,GAAA89G,QAAA5rH,EAQA8N,GAAAL,QAAA6jF,GAAAnnG,UAAAihF,SAQAt9D,GAAAi/G,WAAA,WACA,OAAAz7B,GAAAhlB,SAiBAx+D,GAAA0+G,UAAA,SAAA5/H,GACA,IAAA0/E,EAAAglB,GAAAhlB,QACA/iE,OAAA,EAEA,qBAAA3c,EAAA,CACA,IAAAogI,EAAAT,GAAA3/H,GACAqiB,EAAAq9D,EAAA0gD,GAEA,GAAA/9G,EACA,OAAAA,EAGA1F,EAAAw7E,GAAA,IAAAioC,QAEAzjH,EAAA3c,EAGA,GAAAs0F,GAAA33E,GAAA,CACA,IAAA0jH,EAAA1jH,EACA+hE,EAAA2hD,EAAAh+G,OACAo8D,EAAA4hD,EAAA5hD,SAKA,GAAAC,GAAAgB,EAAAjB,GACA,OAAAC,GAAAgB,EAAAjB,KAcAv9D,GAAAo/G,cAAA,WACA,OAIAjkI,OAAAyrB,KAAA48E,GAAAhlB,SAAA/rE,IAAA,SAAAvU,GACA,OAAAslG,GAAAhlB,QAAAtgF,KACK6tB,OAAA43E,UAUL3jF,GAAAw+D,QAAAglB,GAAAhlB,QAOAx+D,GAAAm9D,aAAAD,GAAAC,aAmBAn9D,GAAA6/D,kBAAA,SAAA+yC,EAAAyM,GACAt/B,GAAAE,OAAAo/B,IACAzsC,EAAA9lE,KAAA,OAAA8lG,EAAA,+GAGA11C,GAAA2C,kBAAAjlF,KAAAsiF,GAAA01C,EAAAyM,IAQAr/G,GAAAw2D,QAAAupB,GAAAvpB,QAQAx2D,GAAAwyF,aAAAzS,GAAAyS,aAQAxyF,GAAA4/D,QAWA8Q,GAAAv1F,OAAAC,gBACAD,OAAAC,eAAA4kB,GAAA,cACAtkB,SACA4jI,WAAA,EACAjkI,YAAA,IAGAF,OAAAC,eAAA4kB,GAAA+zF,WAAA,cACAr4G,MAAAo4G,GACAwrB,WAAA,EACAjkI,YAAA,KAGA2kB,GAAA+zF,YAAwBD,eASxB9zF,GAAA4T,UAUA5T,GAAA6wE,gBAQA7wE,GAAA5R,OAAAkwH,GAUAt+G,GAAA+P,gBAUA/P,GAAA/jB,QAoBA+jB,GAAA+/D,eAAA89C,GAAA99C,eAcA//D,GAAAg+G,iBAAAH,GAAAG,iBAcAh+G,GAAAggE,OAAA,SAAA4yC,EAAA5yC,GAEA,OADA4S,EAAA9lE,KAAA,wEACA+wG,GAAA99C,eAAA6yC,EAAA5yC,IAcAhgE,GAAAi+G,WAAAJ,GAAAI,WAWAj+G,GAAAo9G,UAAAS,GAAAT,UAWAp9G,GAAAk+G,iBAAAL,GAAAK,iBAeAl+G,GAAAu/G,YAAA,SAAAtiI,EAAAiN,GACA,IAAAs1H,EAMA,OAJAviI,GAAA,GAAAA,GAAAiR,cAEA8R,GAAAL,QAAA++E,UAAA3uE,GAAA/P,GAAAL,QAAA++E,WAAA8gC,KAAyFA,EAAAviI,GAAAiN,EAAAs1H,IAEzFx/G,GAAAL,QAAA++E,UAAAzhG,IAQA+iB,GAAA6M,IAAA+lE,EAUA5yE,GAAAknB,gBAAAlnB,GAAA6O,oBASA7O,GAAAi8F,cAaAj8F,GAAA87F,iBASA97F,GAAAg8F,mBAQAh8F,GAAA4rF,YAOA5rF,GAAAqsF,iBAOArsF,GAAAqW,eAUArW,GAAAxH,MAOAwH,GAAA+R,OAOA/R,GAAAtH,OAOAsH,GAAAhP,WAaAgP,GAAAqB,MAOArB,GAAAmtF,aAQAntF,GAAA2Y,cAQA3Y,GAAAouF,eA4HA,4JAAAvnF,QAAA,SAAA3oB,GACA8hB,GAAA9hB,GAAA,WAEA,OADA00F,EAAA9lE,KAAA,WAAA5uB,EAAA,qCAAkDA,EAAA,cAClDi5F,GAAAj5F,GAAAsU,MAAA,KAAA7V,cAcAqjB,GAAA6yE,gBAMA7yE,GAAAy/G,IAAAtoC,GAMAn3E,GAAAuN,IAAAm/E,GAEAzyG,EAAAD,QAAAgmB,6DCp3wBA/lB,EAAAD,SACA0d,iBAAA,GACAC,iBAAA,GACAC,qBAAA,wBCWA,IAAAlK,EAAA,OACAC,GACAC,GAAA,EACAC,GAAA,EACAC,GAAA,GAEAC,GACAlO,MAAA,EACAE,OAAA,EACAC,IAAA,EACAF,KAAA,EACAG,MAAA,GAGA,SAAA+N,EAAAtS,GACA,qBAAAA,EACA,SAEA,IAAAuS,EAAAN,EAAAjS,EAAAwS,eACA,QAAAD,GAAAvS,EAAAwS,cAGA,SAAAC,EAAAzS,GACA,qBAAAA,EACA,SAEA,IAAAiE,EAAAoO,EAAArS,EAAAwS,eACA,QAAAvO,GAAAjE,EAAAwS,cAGA,SAAAhB,EAAA9M,EAAAE,EAAA4D,GASA7J,KAAA4Q,cAAA,EAOA,IAAAsD,EAAA,GACAC,GAAA,EACAC,EAAArO,EACAsO,EAAApO,EACAqO,EAAAzK,EACA0K,EAAA,KACAC,EAAA,GACAC,GAAA,EACAC,EAAA,OACAC,EAAA,QACAC,EAAA,GACAC,EAAA,SACAC,EAAA,GACAC,EAAA,SAEAjU,OAAAsY,iBAAApZ,MACAyE,IACAzD,YAAA,EACAC,IAAA,WACA,OAAAiT,GAEAxP,IAAA,SAAArD,GACA6S,EAAA,GAAA7S,IAIAgkI,aACArkI,YAAA,EACAC,IAAA,WACA,OAAAkT,GAEAzP,IAAA,SAAArD,GACA8S,IAAA9S,IAIA0E,WACA/E,YAAA,EACAC,IAAA,WACA,OAAAmT,GAEA1P,IAAA,SAAArD,GACA,qBAAAA,EACA,UAAA2T,UAAA,uCAEAZ,EAAA/S,EACArB,KAAA4Q,cAAA,IAIA3K,SACAjF,YAAA,EACAC,IAAA,WACA,OAAAoT,GAEA3P,IAAA,SAAArD,GACA,qBAAAA,EACA,UAAA2T,UAAA,qCAEAX,EAAAhT,EACArB,KAAA4Q,cAAA,IAIA/G,MACA7I,YAAA,EACAC,IAAA,WACA,OAAAqT,GAEA5P,IAAA,SAAArD,GACAiT,EAAA,GAAAjT,EACArB,KAAA4Q,cAAA,IAIAjM,QACA3D,YAAA,EACAC,IAAA,WACA,OAAAsT,GAEA7P,IAAA,SAAArD,GACAkT,EAAAlT,EACArB,KAAA4Q,cAAA,IAIA3L,UACAjE,YAAA,EACAC,IAAA,WACA,OAAAuT,GAEA9P,IAAA,SAAArD,GACA,IAAA4T,EAAAtB,EAAAtS,GAEA,QAAA4T,EACA,UAAAC,YAAA,+CAEAV,EAAAS,EACAjV,KAAA4Q,cAAA,IAIAxL,aACApE,YAAA,EACAC,IAAA,WACA,OAAAwT,GAEA/P,IAAA,SAAArD,GACAoT,IAAApT,EACArB,KAAA4Q,cAAA,IAIA1L,MACAlE,YAAA,EACAC,IAAA,WACA,OAAAyT,GAEAhQ,IAAA,SAAArD,GACA,qBAAAA,OAAAgS,EACA,UAAA6B,YAAA,sDAEAR,EAAArT,EACArB,KAAA4Q,cAAA,IAIAzL,WACAnE,YAAA,EACAC,IAAA,WACA,OAAA0T,GAEAjQ,IAAA,SAAArD,GACA,IAAA4T,EAAAnB,EAAAzS,GACA,IAAA4T,EACA,UAAAC,YAAA,+CAEAP,EAAAM,EACAjV,KAAA4Q,cAAA,IAIArL,UACAvE,YAAA,EACAC,IAAA,WACA,OAAA2T,GAEAlQ,IAAA,SAAArD,GACA,GAAAA,EAAA,GAAAA,EAAA,IACA,UAAAmB,MAAA,uCAEAoS,EAAAvT,EACArB,KAAA4Q,cAAA,IAIA/K,eACA7E,YAAA,EACAC,IAAA,WACA,OAAA4T,GAEAnQ,IAAA,SAAArD,GACA,IAAA4T,EAAAnB,EAAAzS,GACA,IAAA4T,EACA,UAAAC,YAAA,+CAEAL,EAAAI,EACAjV,KAAA4Q,cAAA,IAIAvL,MACArE,YAAA,EACAC,IAAA,WACA,OAAA6T,GAEApQ,IAAA,SAAArD,GACA,GAAAA,EAAA,GAAAA,EAAA,IACA,UAAAmB,MAAA,mCAEAsS,EAAAzT,EACArB,KAAA4Q,cAAA,IAIAtL,OACAtE,YAAA,EACAC,IAAA,WACA,OAAA8T,GAEArQ,IAAA,SAAArD,GACA,IAAA4T,EAAAnB,EAAAzS,GACA,IAAA4T,EACA,UAAAC,YAAA,+CAEAH,EAAAE,EACAjV,KAAA4Q,cAAA,MAUA5Q,KAAA6Q,kBAAA5D,EAOA4F,EAAA7Q,UAAAmT,aAAA,WAEA,OAAAzG,OAAAsB,oBAAArI,OAAA3H,KAAA6J,OAGAjK,EAAAD,QAAAkT,qCCxQA,SAAAgH,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAJ7ExL,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAKA,IAAAihD,EAAiBpiD,EAAQ,QAEzBia,EAAmBja,EAAQ,QAE3Bka,EAAAP,EAAAM,GAEAxa,EAAA,YACA6a,QAAA8nC,EAAA9nC,QACAoB,UAAA0mC,EAAA1mC,UACA+lC,YAAAvnC,EAAA,YAEAxa,EAAAD,UAAA,kCC7BA,SAAAorB,GAAA,IAAA24B,EAGAA,EADA,qBAAA/7C,OACAA,OACC,qBAAAojB,EACDA,EACC,qBAAAhrB,KACDA,QAKAH,EAAAD,QAAA+jD,4DCVA,IAAAxkC,EAAkBhf,EAAQ,QAE1Bif,EAAAtF,EAAAqF,GAEAE,EAAmBlf,EAAQ,QAE3Bmf,EAAAxF,EAAAuF,GAEAwkC,EAAc1jD,EAAQ,QAEtB2jD,EAAAhqC,EAAA+pC,GAEA,SAAA/pC,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAE7E1M,EAAAD,SACAmkD,WAAA3kC,EAAA,WACAiL,YAAA/K,EAAA,WACArO,OAAA6yC,EAAA,+CCTAlkD,EAAAmjD,IAAc5iD,EAAQ,QACtBP,EAAAuc,MAAgBhc,EAAQ,2CCTxB,IAAAolI,EAAiBplI,EAAQ,QAEzByV,EAAA7U,OAAAkB,UAAAsT,SACArT,EAAAnB,OAAAkB,UAAAC,eAEAsjI,EAAA,SAAAn9F,EAAA1e,EAAAmF,GACA,QAAAzuB,EAAA,EAAAiwD,EAAAjoB,EAAA7lC,OAAuCnC,EAAAiwD,EAASjwD,IAChD6B,EAAA1B,KAAA6nC,EAAAhoC,KACA,MAAAyuB,EACAnF,EAAA0e,EAAAhoC,KAAAgoC,GAEA1e,EAAAnpB,KAAAsuB,EAAAuZ,EAAAhoC,KAAAgoC,KAMAo9F,EAAA,SAAAx+C,EAAAt9D,EAAAmF,GACA,QAAAzuB,EAAA,EAAAiwD,EAAA22B,EAAAzkF,OAAwCnC,EAAAiwD,EAASjwD,IAEjD,MAAAyuB,EACAnF,EAAAs9D,EAAAuc,OAAAnjG,KAAA4mF,GAEAt9D,EAAAnpB,KAAAsuB,EAAAm4D,EAAAuc,OAAAnjG,KAAA4mF,IAKAy+C,EAAA,SAAA3jI,EAAA4nB,EAAAmF,GACA,QAAAhrB,KAAA/B,EACAG,EAAA1B,KAAAuB,EAAA+B,KACA,MAAAgrB,EACAnF,EAAA5nB,EAAA+B,KAAA/B,GAEA4nB,EAAAnpB,KAAAsuB,EAAA/sB,EAAA+B,KAAA/B,KAMA0qB,EAAA,SAAA0kC,EAAAxnC,EAAAg8G,GACA,IAAAJ,EAAA57G,GACA,UAAA1U,UAAA,+BAGA,IAAA6Z,EACAvsB,UAAAC,QAAA,IACAssB,EAAA62G,GAGA,mBAAA/vH,EAAApV,KAAA2wD,GACAq0E,EAAAr0E,EAAAxnC,EAAAmF,GACK,kBAAAqiC,EACLs0E,EAAAt0E,EAAAxnC,EAAAmF,GAEA42G,EAAAv0E,EAAAxnC,EAAAmF,IAIAjvB,EAAAD,QAAA6sB,sBC3CA,IAAApqB,EAAAtB,OAAAY,QAAA,WACA,SAAAW,KACA,gBAAAxB,GACA,OAAAyB,UAAAC,OACA,UAAAC,MAAA,kDAGA,OADAH,EAAAL,UAAAnB,EACA,IAAAwB,GAPA,GAeA,SAAAI,EAAAC,EAAAC,GACA3C,KAAAW,KAAA,eACAX,KAAA4C,KAAAF,EAAAE,KACA5C,KAAA2C,WAAAD,EAAAC,QAkBA,SAAAE,EAAAC,GAEA,SAAAC,EAAAC,EAAAxC,EAAA2B,EAAAc,GACA,eAAAD,GAAA,MAAAxC,IAAA,EAAA2B,IAAA,EAAAc,GAAA,IAGA,IAAAzC,EAAAsC,EAAAI,MAAA,oCACA,OAAA1C,EAIAA,EAAA,GAEAuC,EAAAvC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAA2C,QAAA,QAAA3C,EAAA,IACGA,EAAA,MAGHuC,EAAAvC,EAAA,GAAAA,EAAA,KAAAA,EAAA,IAGAuC,EAAA,EAAAvC,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAZA,KAkBA,SAAA4C,IACApD,KAAAqD,OAAAjB,EAAA,MAwDA,SAAAkB,EAAAR,EAAAS,EAAAC,EAAAC,GACA,IAAAC,EAAAD,EAAAX,EAAAa,MAAAF,IAAAX,GACA,QAAA1C,KAAAsD,EACA,qBAAAA,EAAAtD,GAAA,CAGA,IAAAwD,EAAAF,EAAAtD,GAAAuD,MAAAH,GACA,OAAAI,EAAArB,OAAA,CAGA,IAAAsB,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAL,EAAAM,EAAAC,KAIA,SAAAC,EAAAjB,EAAAkB,EAAAC,GAEA,IAAAC,EAAApB,EAEA,SAAAqB,IACA,IAAAC,EAAAvB,EAAAC,GACA,UAAAsB,EACA,UAAA3B,IAAA4B,OAAAC,aACA,wBAAAJ,GAIA,OADApB,IAAAK,QAAA,qBACAiB,EAIA,SAAAG,EAAAzB,EAAAkB,GACA,IAAAQ,EAAA,IAAApB,EAEAE,EAAAR,EAAA,SAAAe,EAAAC,GACA,OAAAD,GACA,aAEA,QAAAzD,EAAA6D,EAAA1B,OAAA,EAA2CnC,GAAA,EAAQA,IACnD,GAAA6D,EAAA7D,GAAAqE,KAAAX,EAAA,CACAU,EAAAE,IAAAb,EAAAI,EAAA7D,GAAAuE,QACA,MAGA,MACA,eACAH,EAAAI,IAAAf,EAAAC,GAAA,YACA,MACA,WACA,IAAAe,EAAAf,EAAAH,MAAA,KACAmB,EAAAD,EAAA,GACAL,EAAAO,QAAAlB,EAAAiB,GACAN,EAAAQ,QAAAnB,EAAAiB,IAAAN,EAAAE,IAAA,kBACAF,EAAAI,IAAAf,EAAAiB,GAAA,SACA,IAAAD,EAAAtC,QACAiC,EAAAI,IAAA,YAAAC,EAAA,6BAEA,MACA,eACAA,EAAAf,EAAAH,MAAA,KACAa,EAAAQ,QAAAnB,EAAAgB,EAAA,IACA,IAAAA,EAAAtC,QACAiC,EAAAI,IAAA,gBAAAC,EAAA,6BAEA,MACA,WACAL,EAAAQ,QAAAnB,EAAAC,GACA,MACA,YACAU,EAAAI,IAAAf,EAAAC,GAAA,wCACA,QAEK,UAGLE,EAAAW,OAAAH,EAAAvD,IAAA,eACA+C,EAAAiB,SAAAT,EAAAvD,IAAA,eACA+C,EAAAkB,KAAAV,EAAAvD,IAAA,eACA+C,EAAAmB,UAAAX,EAAAvD,IAAA,qBACA+C,EAAAoB,YAAAZ,EAAAvD,IAAA,kBACA+C,EAAAqB,KAAAb,EAAAvD,IAAA,YACA+C,EAAAsB,MAAAd,EAAAvD,IAAA,kBACA+C,EAAAuB,SAAAf,EAAAvD,IAAA,YACAuE,MAAA,EACAC,KAAA,EACAC,OAAA,GACAC,IAAA,IACAC,MAAA,KACK5B,EAAAsB,OACLtB,EAAA6B,cAAArB,EAAAvD,IAAA,iBACAuE,MAAA,QACAC,KAAA,QACAC,OAAA,SACAC,IAAA,MACAC,MAAA,OACK5B,EAAAsB,OAGL,SAAAQ,IACAhD,IAAAK,QAAA,WAOA,GAHA2C,IACA9B,EAAA+B,UAAA5B,IACA2B,IACA,WAAAhD,EAAAkD,OAAA,KACA,UAAAvD,IAAA4B,OAAAC,aACA,qEACAJ,GAEApB,IAAAkD,OAAA,GACAF,IACA9B,EAAAiC,QAAA9B,IAGA2B,IACAvB,EAAAzB,EAAAkB,GAzNAvB,EAAAT,UAAAI,EAAAI,MAAAR,WACAS,EAAAT,UAAAkE,YAAAzD,EAGAA,EAAA4B,QACA8B,cACAvD,KAAA,EACAD,QAAA,+BAEA2B,cACA1B,KAAA,EACAD,QAAA,0BAmCAS,EAAApB,WAEA0C,IAAA,SAAAb,EAAAC,GACA9D,KAAAiB,IAAA4C,IAAA,KAAAC,IACA9D,KAAAqD,OAAAQ,GAAAC,IAQA7C,IAAA,SAAA4C,EAAAuC,EAAAC,GACA,OAAAA,EACArG,KAAAsG,IAAAzC,GAAA7D,KAAAqD,OAAAQ,GAAAuC,EAAAC,GAEArG,KAAAsG,IAAAzC,GAAA7D,KAAAqD,OAAAQ,GAAAuC,GAGAE,IAAA,SAAAzC,GACA,OAAAA,KAAA7D,KAAAqD,QAGAuB,IAAA,SAAAf,EAAAC,EAAAyC,GACA,QAAA1E,EAAA,EAAmBA,EAAA0E,EAAAhE,SAAcV,EACjC,GAAAiC,IAAAyC,EAAA1E,GAAA,CACA7B,KAAA0E,IAAAb,EAAAC,GACA,QAKAiB,QAAA,SAAAlB,EAAAC,GACA,UAAA0C,KAAA1C,IACA9D,KAAA0E,IAAAb,EAAA4C,SAAA3C,EAAA,MAIAkB,QAAA,SAAAnB,EAAAC,GAEA,SAAAA,EAAAZ,MAAA,8BACAY,EAAA4C,WAAA5C,GACAA,GAAA,GAAAA,GAAA,QACA9D,KAAA0E,IAAAb,EAAAC,IACA,KAkIA,IAAA6C,GACAC,QAAQ,IACRC,OAAO,IACPC,OAAO,IACPC,QAAQ,IACRC,QAAQ,IACRC,SAAS,KAGTC,GACAzG,EAAA,OACAL,EAAA,IACA+G,EAAA,IACAC,EAAA,IACAC,KAAA,OACAC,GAAA,KACAxD,EAAA,OACAyD,KAAA,QAGAC,GACA1D,EAAA,QACAyD,KAAA,QAGAE,GACAH,GAAA,QAIA,SAAAI,EAAAC,EAAA7E,GACA,SAAA8E,IAEA,IAAA9E,EACA,YAIA,SAAA+E,EAAAC,GAEA,OADAhF,IAAAkD,OAAA8B,EAAAvF,QACAuF,EAGA,IAAAtH,EAAAsC,EAAAI,MAAA,uBAGA,OAAA2E,EAAArH,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAIA,SAAAuH,EAAAC,GACA,OAAArB,EAAAqB,GAEA,SAAAC,EAAA9F,GACA,MAAA3B,EAAA2B,EAAAe,MAAA,8BACAf,IAAAgB,QAAA3C,EAAA,GAAAuH,GAEA,OAAA5F,EAGA,SAAA+F,EAAAC,EAAAC,GACA,OAAAX,EAAAW,EAAAC,YACAZ,EAAAW,EAAAC,aAAAF,EAAAE,UAIA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAvB,EAAAqB,GACA,IAAAE,EACA,YAEA,IAAAL,EAAAT,EAAAe,SAAAJ,cAAAG,GACAL,EAAAC,UAAAI,EACA,IAAA9H,EAAA6G,EAAAe,GAIA,OAHA5H,GAAA6H,IACAJ,EAAAzH,GAAA6H,EAAAG,QAEAP,EAGA,IAEA9G,EAFAsH,EAAAjB,EAAAe,SAAAJ,cAAA,OACAH,EAAAS,EAEAC,KAEA,cAAAvH,EAAAsG,KACA,SAAAtG,EAAA,GA+CA6G,EAAAW,YAAAnB,EAAAe,SAAAK,eAAAd,EAAA3G,SA/CA,CACA,SAAAA,EAAA,IAEAuH,EAAAtG,QACAsG,IAAAtG,OAAA,KAAAjB,EAAA0E,OAAA,GAAA7C,QAAA,UACA0F,EAAAG,MACAb,IAAAc,YAGA,SAEA,IACAC,EADA9E,EAAAvB,EAAAvB,EAAA0E,OAAA,EAAA1E,EAAAiB,OAAA,IAEA,GAAA6B,EAAA,CAEA8E,EAAAvB,EAAAe,SAAAS,4BAAA,YAAA/E,GACA+D,EAAAW,YAAAI,GACA,SAEA,IAAA1I,EAAAc,EAAA4B,MAAA,oDAEA,IAAA1C,EACA,SAIA,GADA0I,EAAAZ,EAAA9H,EAAA,GAAAA,EAAA,KACA0I,EACA,SAIA,IAAAhB,EAAAC,EAAAe,GACA,SAGA1I,EAAA,KACA0I,EAAAE,UAAA5I,EAAA,GAAAwF,OAAA,GAAA7C,QAAA,UAIA0F,EAAAQ,KAAA7I,EAAA,IACA2H,EAAAW,YAAAI,GACAf,EAAAe,EAQA,OAAAN,EAQA,IAAAU,IAAA,gDACA,4DACA,4DACA,4DACA,4DACA,4DACA,gDACA,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,4DACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,kEAEA,SAAAC,EAAAC,GACA,QAAApJ,EAAA,EAAiBA,EAAAkJ,EAAA/G,OAA4BnC,IAAA,CAC7C,IAAAqJ,EAAAH,EAAAlJ,GACA,GAAAoJ,GAAAC,EAAA,IAAAD,GAAAC,EAAA,GACA,SAIA,SAGA,SAAAC,EAAAC,GACA,IAEAH,EAFAI,KACAC,EAAA,GAGA,IAAAF,MAAAG,WACA,YAGA,SAAAC,EAAAH,EAAAV,GACA,QAAA9I,EAAA8I,EAAAY,WAAAvH,OAAA,EAA4CnC,GAAA,EAAQA,IACpDwJ,EAAAP,KAAAH,EAAAY,WAAA1J,IAIA,SAAA4J,EAAAJ,GACA,IAAAA,MAAArH,OACA,YAGA,IAAA2G,EAAAU,EAAAZ,MACAa,EAAAX,EAAAe,aAAAf,EAAAgB,UACA,GAAAL,EAAA,CAGA,IAAArJ,EAAAqJ,EAAA3G,MAAA,cACA,OAAA1C,GACAoJ,EAAArH,OAAA,EACA/B,EAAA,IAEAqJ,EAEA,eAAAX,EAAAT,QACAuB,EAAAJ,GAEAV,EAAAY,YACAC,EAAAH,EAAAV,GACAc,EAAAJ,SAFA,EAMAG,EAAAH,EAAAD,GACA,MAAAE,EAAAG,EAAAJ,GACA,QAAAxJ,EAAA,EAAmBA,EAAAyJ,EAAAtH,OAAiBnC,IAEpC,GADAoJ,EAAAK,EAAAM,WAAA/J,GACAmJ,EAAAC,GACA,YAIA,YAGA,SAAAY,EAAApG,GACA,qBAAAA,EAAAkB,OACAlB,EAAAoB,aAAApB,EAAAkB,MAAA,GAAAlB,EAAAkB,MAAA,KACA,OAAAlB,EAAAkB,KAEA,IAAAlB,EAAAqG,QAAArG,EAAAqG,MAAAC,gBACAtG,EAAAqG,MAAAC,cAAAC,aACA,SAKA,IAHA,IAAAF,EAAArG,EAAAqG,MACAG,EAAAH,EAAAC,cACAG,EAAA,EACArK,EAAA,EAAiBA,EAAAoK,EAAAjI,QAAAiI,EAAApK,KAAAiK,EAAgDjK,IACjE,YAAAoK,EAAApK,GAAAmB,MACAkJ,IAGA,WAAAA,EAGA,SAAAC,KAoBA,SAAAC,EAAAhD,EAAA3D,EAAA4G,GACAF,EAAAnK,KAAAP,MACAA,KAAAgE,MAIAhE,KAAA2J,OAAAjC,EAAAC,EAAA3D,EAAA6F,MACA,IAAAqB,GACAF,MAAA,yBACAC,gBAAA,qBACA1F,SAAA,WACAE,KAAA,EACAG,MAAA,EACAuF,IAAA,EACAC,OAAA,EACAC,QAAA,SACAC,YAAA,KAAAtH,EAAAiB,SAAA,gBACA,OAAAjB,EAAAiB,SAAA,cACA,cACAsG,YAAA,aAGAvL,KAAAwL,YAAAN,EAAAlL,KAAA2J,QAKA3J,KAAAyL,IAAA9D,EAAAe,SAAAJ,cAAA,OACA4C,GACAW,UAAAnC,EAAA1J,KAAA2J,QACA2B,YAAA,KAAAtH,EAAAiB,SAAA,gBACA,OAAAjB,EAAAiB,SAAA,cACA,cACAsG,YAAA,YACAG,UAAA,WAAA1H,EAAAsB,MAAA,SAAAtB,EAAAsB,MACAqG,KAAAf,EAAAe,KACAC,WAAA,WACArG,SAAA,YAGAvF,KAAAwL,YAAAN,GACAlL,KAAAyL,IAAA3C,YAAA9I,KAAA2J,QAKA,IAAAoC,EAAA,EACA,OAAA/H,EAAA6B,eACA,YACAkG,EAAA/H,EAAAuB,SACA,MACA,aACAwG,EAAA/H,EAAAuB,SAAAvB,EAAAqB,KAAA,EACA,MACA,UACA0G,EAAA/H,EAAAuB,SAAAvB,EAAAqB,KACA,MAMA,KAAArB,EAAAiB,SACAjF,KAAAwL,aACA/F,KAAAzF,KAAAgM,YAAAD,EAAA,KACAE,MAAAjM,KAAAgM,YAAAhI,EAAAqB,KAAA,OAMArF,KAAAwL,aACAL,IAAAnL,KAAAgM,YAAAD,EAAA,KACAG,OAAAlM,KAAAgM,YAAAhI,EAAAqB,KAAA,OAIArF,KAAAmM,KAAA,SAAAC,GACApM,KAAAwL,aACAL,IAAAnL,KAAAgM,YAAAI,EAAAjB,IAAA,MACAC,OAAApL,KAAAgM,YAAAI,EAAAhB,OAAA,MACA3F,KAAAzF,KAAAgM,YAAAI,EAAA3G,KAAA,MACAG,MAAA5F,KAAAgM,YAAAI,EAAAxG,MAAA,MACAsG,OAAAlM,KAAAgM,YAAAI,EAAAF,OAAA,MACAD,MAAAjM,KAAAgM,YAAAI,EAAAH,MAAA,SAUA,SAAAI,EAAAC,GAKA,IAAAC,EAAAL,EAAAD,EAAAd,EACA,GAAAmB,EAAAb,IAAA,CACAS,EAAAI,EAAAb,IAAAe,aACAP,EAAAK,EAAAb,IAAAgB,YACAtB,EAAAmB,EAAAb,IAAAiB,UAEA,IAAAC,KAAAL,EAAAb,IAAA3B,cAAA6C,IAAA,KACAA,EAAAC,gBAAAD,EAAAC,iBACAN,IAAAb,IAAAoB,wBAKAN,EAAAI,EAAAG,KAAAC,IAAAJ,EAAA,IAAAA,EAAA,GAAAT,QAAA,EAAAI,EAAAJ,OAAAS,EAAApK,QACA,EAGAvC,KAAAyF,KAAA6G,EAAA7G,KACAzF,KAAA4F,MAAA0G,EAAA1G,MACA5F,KAAAmL,IAAAmB,EAAAnB,OACAnL,KAAAkM,OAAAI,EAAAJ,UACAlM,KAAAoL,OAAAkB,EAAAlB,QAAAD,GAAAmB,EAAAJ,WACAlM,KAAAiM,MAAAK,EAAAL,SACAjM,KAAAgN,gBAAAC,IAAAV,IAAAD,EAAAU,WAsHA,SAAAE,EAAAvF,EAAAwF,EAAAC,EAAAC,GAOA,SAAAC,EAAAnG,EAAAoG,GAKA,IAJA,IAAAC,EACAC,EAAA,IAAApB,EAAAlF,GACAuG,EAAA,EAEAtN,EAAA,EAAmBA,EAAAmN,EAAAhL,OAAiBnC,IAAA,CACpC,MAAA+G,EAAAwG,qBAAAP,EAAAG,EAAAnN,KACA+G,EAAAyG,OAAAR,IAAAjG,EAAA0G,YAAAR,GACAlG,EAAAgF,KAAAoB,EAAAnN,IAIA,GAAA+G,EAAAyG,OAAAR,GACA,OAAAjG,EAEA,IAAAjF,EAAAiF,EAAA2G,oBAAAV,GAGAM,EAAAxL,IACAsL,EAAA,IAAAnB,EAAAlF,GACAuG,EAAAxL,GAGAiF,EAAA,IAAAkF,EAAAoB,GAEA,OAAAD,GAAAC,EAGA,IAAAM,EAAA,IAAA1B,EAAAc,GACAnJ,EAAAmJ,EAAAnJ,IACAgK,EAAA5D,EAAApG,GACAuJ,KAGA,GAAAvJ,EAAAoB,YAAA,CACA,IAAAC,EACA,OAAArB,EAAAiB,UACA,OACAsI,GAAA,WACAlI,EAAA,SACA,MACA,SACAkI,GAAA,WACAlI,EAAA,QACA,MACA,SACAkI,GAAA,WACAlI,EAAA,QACA,MAGA,IAAA4I,EAAAF,EAAAf,WACAzH,EAAA0I,EAAAnB,KAAAoB,MAAAF,GACAG,EAAAf,EAAA/H,GAAA4I,EACAG,EAAAb,EAAA,GAKAT,KAAAuB,IAAA9I,GAAA4I,IACA5I,IAAA,OACAA,GAAAuH,KAAAwB,KAAAH,EAAAF,MAOAD,EAAA,IACAzI,GAAA,KAAAvB,EAAAiB,SAAAmI,EAAAlB,OAAAkB,EAAAnB,MACAsB,IAAAgB,WAKAR,EAAA5B,KAAAiC,EAAA7I,OAEG,CAEH,IAAAiJ,EAAAT,EAAAf,WAAAI,EAAAlB,OAAA,IAEA,OAAAlI,EAAAmB,WACA,aACA6I,GAAAQ,EAAA,EACA,MACA,UACAR,GAAAQ,EACA,MAIA,OAAAxK,EAAAiB,UACA,OACAkI,EAAA3B,aACAL,IAAAgC,EAAAnB,YAAAgC,EAAA,OAEA,MACA,SACAb,EAAA3B,aACA/F,KAAA0H,EAAAnB,YAAAgC,EAAA,OAEA,MACA,SACAb,EAAA3B,aACA5F,MAAAuH,EAAAnB,YAAAgC,EAAA,OAEA,MAGAT,GAAA,qBAIAQ,EAAA,IAAA1B,EAAAc,GAGA,IAAAK,EAAAF,EAAAS,EAAAR,GACAJ,EAAAhB,KAAAqB,EAAAiB,kBAAArB,IAGA,SAAAsB,KA9XAhE,EAAA1I,UAAAwJ,YAAA,SAAAN,EAAAO,GAEA,QAAAkD,KADAlD,KAAAzL,KAAAyL,IACAP,EACAA,EAAAjJ,eAAA0M,KACAlD,EAAAmD,MAAAD,GAAAzD,EAAAyD,KAKAjE,EAAA1I,UAAAgK,YAAA,SAAA6C,EAAAC,GACA,WAAAD,EAAA,EAAAA,EAAAC,GA6FAnE,EAAA3I,UAAAI,EAAAsI,EAAA1I,WACA2I,EAAA3I,UAAAkE,YAAAyE,EAuCA0B,EAAArK,UAAAmK,KAAA,SAAAoB,EAAAwB,GAEA,OADAA,OAAA9B,IAAA8B,IAAA/O,KAAAgN,WACAO,GACA,SACAvN,KAAAyF,MAAAsJ,EACA/O,KAAA4F,OAAAmJ,EACA,MACA,SACA/O,KAAAyF,MAAAsJ,EACA/O,KAAA4F,OAAAmJ,EACA,MACA,SACA/O,KAAAmL,KAAA4D,EACA/O,KAAAoL,QAAA2D,EACA,MACA,SACA/O,KAAAmL,KAAA4D,EACA/O,KAAAoL,QAAA2D,EACA,QAKA1C,EAAArK,UAAAgN,SAAA,SAAAC,GACA,OAAAjP,KAAAyF,KAAAwJ,EAAArJ,OACA5F,KAAA4F,MAAAqJ,EAAAxJ,MACAzF,KAAAmL,IAAA8D,EAAA7D,QACApL,KAAAoL,OAAA6D,EAAA9D,KAIAkB,EAAArK,UAAA6L,YAAA,SAAAqB,GACA,QAAA9O,EAAA,EAAiBA,EAAA8O,EAAA3M,OAAkBnC,IACnC,GAAAJ,KAAAgP,SAAAE,EAAA9O,IACA,SAGA,UAIAiM,EAAArK,UAAA4L,OAAA,SAAAuB,GACA,OAAAnP,KAAAmL,KAAAgE,EAAAhE,KACAnL,KAAAoL,QAAA+D,EAAA/D,QACApL,KAAAyF,MAAA0J,EAAA1J,MACAzF,KAAA4F,OAAAuJ,EAAAvJ,OAOAyG,EAAArK,UAAA2L,qBAAA,SAAAwB,EAAA5B,GACA,OAAAA,GACA,SACA,OAAAvN,KAAAyF,KAAA0J,EAAA1J,KACA,SACA,OAAAzF,KAAA4F,MAAAuJ,EAAAvJ,MACA,SACA,OAAA5F,KAAAmL,IAAAgE,EAAAhE,IACA,SACA,OAAAnL,KAAAoL,OAAA+D,EAAA/D,SAMAiB,EAAArK,UAAA8L,oBAAA,SAAAmB,GACA,IAAAG,EAAAtC,KAAAC,IAAA,EAAAD,KAAAuC,IAAArP,KAAA4F,MAAAqJ,EAAArJ,OAAAkH,KAAAC,IAAA/M,KAAAyF,KAAAwJ,EAAAxJ,OACA6J,EAAAxC,KAAAC,IAAA,EAAAD,KAAAuC,IAAArP,KAAAoL,OAAA6D,EAAA7D,QAAA0B,KAAAC,IAAA/M,KAAAmL,IAAA8D,EAAA9D,MACAoE,EAAAH,EAAAE,EACA,OAAAC,GAAAvP,KAAAkM,OAAAlM,KAAAiM,QAOAI,EAAArK,UAAAyM,kBAAA,SAAAe,GACA,OACArE,IAAAnL,KAAAmL,IAAAqE,EAAArE,IACAC,OAAAoE,EAAApE,OAAApL,KAAAoL,OACA3F,KAAAzF,KAAAyF,KAAA+J,EAAA/J,KACAG,MAAA4J,EAAA5J,MAAA5F,KAAA4F,MACAsG,OAAAlM,KAAAkM,OACAD,MAAAjM,KAAAiM,QAMAI,EAAAoD,qBAAA,SAAAnD,GACA,IAAAJ,EAAAI,EAAAb,IAAAa,EAAAb,IAAAe,aAAAF,EAAA7D,QAAA6D,EAAAE,aAAA,EACAP,EAAAK,EAAAb,IAAAa,EAAAb,IAAAgB,YAAAH,EAAA7D,QAAA6D,EAAAG,YAAA,EACAtB,EAAAmB,EAAAb,IAAAa,EAAAb,IAAAiB,UAAAJ,EAAA7D,QAAA6D,EAAAI,UAAA,EAEAJ,IAAAb,IAAAa,EAAAb,IAAAoB,wBACAP,EAAA7D,QAAA6D,EAAAO,wBAAAP,EACA,IAAAoD,GACAjK,KAAA6G,EAAA7G,KACAG,MAAA0G,EAAA1G,MACAuF,IAAAmB,EAAAnB,OACAe,OAAAI,EAAAJ,UACAd,OAAAkB,EAAAlB,QAAAD,GAAAmB,EAAAJ,WACAD,MAAAK,EAAAL,UAEA,OAAAyD,GA0IAhB,EAAAiB,cAAA,WACA,OACAC,OAAA,SAAAC,GACA,IAAAA,EACA,SAEA,qBAAAA,EACA,UAAArN,MAAA,iCAEA,OAAAsN,mBAAAC,mBAAAF,OAKAnB,EAAAsB,oBAAA,SAAArI,EAAAsI,GACA,OAAAtI,GAAAsI,EAGAvI,EAAAC,EAAAsI,GAFA,MAKA,IAAAC,EAAA,IACAC,EAAA,aACAC,EAAA,OAKA1B,EAAA2B,YAAA,SAAA1I,EAAA2I,EAAAC,GACA,IAAA5I,IAAA2I,IAAAC,EACA,YAIA,MAAAA,EAAAC,WACAD,EAAAE,YAAAF,EAAAC,YAGA,IAAAE,EAAA/I,EAAAe,SAAAJ,cAAA,OAYA,SAAAqI,EAAAL,GACA,QAAAlQ,EAAA,EAAmBA,EAAAkQ,EAAA/N,OAAiBnC,IACpC,GAAAkQ,EAAAlQ,GAAAwQ,eAAAN,EAAAlQ,GAAAyQ,aACA,SAGA,SAIA,GArBAH,EAAA9B,MAAArJ,SAAA,WACAmL,EAAA9B,MAAAnJ,KAAA,IACAiL,EAAA9B,MAAAhJ,MAAA,IACA8K,EAAA9B,MAAAzD,IAAA,IACAuF,EAAA9B,MAAAxD,OAAA,IACAsF,EAAA9B,MAAAkC,OAAAV,EACAG,EAAAzH,YAAA4H,GAeAC,EAAAL,GAAA,CAOA,IAAAjD,KACAD,EAAAf,EAAAoD,qBAAAiB,GACAK,EAAAjE,KAAAoB,MAAAd,EAAAlB,OAAAgE,EAAA,SACAtF,GACAe,KAAAoF,EAAA,MAAAZ,IAGA,WAGA,IAFA,IAAAhD,EAAAnJ,EAEA5D,EAAA,EAAmBA,EAAAkQ,EAAA/N,OAAiBnC,IACpC4D,EAAAsM,EAAAlQ,GAGA+M,EAAA,IAAAxC,EAAAhD,EAAA3D,EAAA4G,GACA8F,EAAA5H,YAAAqE,EAAA1B,KAGAyB,EAAAvF,EAAAwF,EAAAC,EAAAC,GAIArJ,EAAA6M,aAAA1D,EAAA1B,IAEA4B,EAAAhE,KAAAgD,EAAAoD,qBAAAtC,KAjBA,QAbA,QAAA/M,EAAA,EAAmBA,EAAAkQ,EAAA/N,OAAiBnC,IACpCsQ,EAAA5H,YAAAwH,EAAAlQ,GAAAyQ,eAkCAnC,EAAAsC,OAAA,SAAArJ,EAAAsJ,EAAAC,GACAA,IACAA,EAAAD,EACAA,MAEAA,IACAA,MAGAjR,KAAA2H,SACA3H,KAAAiR,QACAjR,KAAAmR,MAAA,UACAnR,KAAAoR,OAAA,GACApR,KAAAkR,WAAA,IAAAG,YAAA,QACArR,KAAAiE,eAGAyK,EAAAsC,OAAAhP,WAGAsP,mBAAA,SAAAtJ,GACA,KAAAA,aAAAvF,GAGA,MAAAuF,EAFAhI,KAAAuR,gBAAAvR,KAAAuR,eAAAvJ,IAKAwJ,MAAA,SAAA3B,GACA,IAAA9P,EAAAC,KAUA,SAAAyR,IACA,IAAAL,EAAArR,EAAAqR,OACAM,EAAA,EACA,MAAAA,EAAAN,EAAA7O,QAAA,OAAA6O,EAAAM,IAAA,OAAAN,EAAAM,KACAA,EAEA,IAAAxM,EAAAkM,EAAApL,OAAA,EAAA0L,GASA,MAPA,OAAAN,EAAAM,MACAA,EAEA,OAAAN,EAAAM,MACAA,EAEA3R,EAAAqR,SAAApL,OAAA0L,GACAxM,EAIA,SAAAyM,EAAA7O,GACA,IAAA0B,EAAA,IAAApB,EAsCA,GApCAE,EAAAR,EAAA,SAAAe,EAAAC,GACA,OAAAD,GACA,SACAW,EAAAE,IAAAb,EAAAC,GACA,MACA,YACAU,EAAAQ,QAAAnB,EAAAC,GACA,MACA,YACAU,EAAAO,QAAAlB,EAAAC,GACA,MACA,mBACA,qBACA,IAAA8N,EAAA9N,EAAAH,MAAA,KACA,OAAAiO,EAAArP,OACA,MAIA,IAAAsP,EAAA,IAAAzO,EAGA,GAFAyO,EAAA7M,QAAA,IAAA4M,EAAA,IACAC,EAAA7M,QAAA,IAAA4M,EAAA,KACAC,EAAAvL,IAAA,OAAAuL,EAAAvL,IAAA,KACA,MAEA9B,EAAAE,IAAAb,EAAA,IAAAgO,EAAA5Q,IAAA,MACAuD,EAAAE,IAAAb,EAAA,IAAAgO,EAAA5Q,IAAA,MACA,MACA,aACAuD,EAAAI,IAAAf,EAAAC,GAAA,OACA,QAEO,UAIPU,EAAA8B,IAAA,OACA,IAAA3B,EAAA,IAAA5E,EAAAkR,MAAAa,WAAA/R,EAAA4H,OAAAmK,WACAnN,EAAAsH,MAAAzH,EAAAvD,IAAA,aACA0D,EAAAoN,MAAAvN,EAAAvD,IAAA,WACA0D,EAAAqN,cAAAxN,EAAAvD,IAAA,mBACA0D,EAAAsN,cAAAzN,EAAAvD,IAAA,qBACA0D,EAAAuN,gBAAA1N,EAAAvD,IAAA,qBACA0D,EAAAwN,gBAAA3N,EAAAvD,IAAA,uBACA0D,EAAAyN,OAAA5N,EAAAvD,IAAA,aAEAlB,EAAAsS,UAAAtS,EAAAsS,SAAA1N,GAGA5E,EAAAkE,WAAAoF,MACA5E,GAAAD,EAAAvD,IAAA,MACA0D,YAQA,SAAA2N,EAAAxP,GACA,IAAA0B,EAAA,IAAApB,EAEAE,EAAAR,EAAA,SAAAe,EAAAC,GACA,OAAAD,GACA,YACAW,EAAAO,QAAAlB,EAAA,IAAAC,GACA,MACA,WACAU,EAAAE,IAAAb,EAAA,IAAAhB,EAAAiB,IACA,QAEO,cAEP/D,EAAAwS,gBAAAxS,EAAAwS,gBACAC,OAAAhO,EAAAvD,IAAA,UACAwR,MAAAjO,EAAAvD,IAAA,WAKA,SAAAyR,EAAA5P,GACAA,EAAAI,MAAA,mBAEAI,EAAAR,EAAA,SAAAe,EAAAC,GACA,OAAAD,GACA,sBACAyO,EAAAxO,GACA,QAES,KAETR,EAAAR,EAAA,SAAAe,EAAAC,GACA,OAAAD,GACA,aAEA8N,EAAA7N,GACA,QAES,KA7HT+L,IAEA9P,EAAAqR,QAAArR,EAAAmR,QAAAtB,OAAAC,GAAgD8C,QAAA,KAiIhD,IACA,IAAAzN,EACA,eAAAnF,EAAAoR,MAAA,CAEA,cAAA3K,KAAAzG,EAAAqR,QACA,OAAApR,KAGAkF,EAAAuM,IAEA,IAAAjR,EAAA0E,EAAAhC,MAAA,sBACA,IAAA1C,MAAA,GACA,UAAAiC,IAAA4B,OAAA8B,cAGApG,EAAAoR,MAAA,SAGA,IAAAyB,GAAA,EACA,MAAA7S,EAAAqR,OAAA,CAEA,cAAA5K,KAAAzG,EAAAqR,QACA,OAAApR,KASA,OANA4S,EAGAA,GAAA,EAFA1N,EAAAuM,IAKA1R,EAAAoR,OACA,aAEA,IAAA3K,KAAAtB,GACAwN,EAAAxN,GACWA,IAEXnF,EAAAoR,MAAA,MAEA,SACA,WAEAjM,IACAnF,EAAAoR,MAAA,MAEA,SACA,SAEA,oBAAA3K,KAAAtB,GAAA,CACAnF,EAAAoR,MAAA,OACA,MAGA,IAAAjM,EACA,SAKA,GAHAnF,EAAAiE,IAAA,IAAAjE,EAAAkR,MAAA4B,QAAA9S,EAAA4H,OAAAkL,QAAA,QACA9S,EAAAoR,MAAA,OAEA,IAAAjM,EAAA4N,QAAA,WACA/S,EAAAiE,IAAAS,GAAAS,EACA,SAIA,UAEA,IACAnB,EAAAmB,EAAAnF,EAAAiE,IAAAjE,EAAAkE,YACW,MAAA+D,GACXjI,EAAAuR,mBAAAtJ,GAEAjI,EAAAiE,IAAA,KACAjE,EAAAoR,MAAA,SACA,SAEApR,EAAAoR,MAAA,UACA,SACA,cACA,IAAA4B,GAAA,IAAA7N,EAAA4N,QAAA,UAKA,IAAA5N,GAAA6N,IAAAH,GAAA,IAEA7S,EAAAiT,OAAAjT,EAAAiT,MAAAjT,EAAAiE,KACAjE,EAAAiE,IAAA,KACAjE,EAAAoR,MAAA,KACA,SAEApR,EAAAiE,IAAA6F,OACA9J,EAAAiE,IAAA6F,MAAA,MAEA9J,EAAAiE,IAAA6F,MAAA3E,EACA,SACA,aAEAA,IACAnF,EAAAoR,MAAA,MAEA,WAGK,MAAAnJ,GACLjI,EAAAuR,mBAAAtJ,GAGA,YAAAjI,EAAAoR,OAAApR,EAAAiE,KAAAjE,EAAAiT,OACAjT,EAAAiT,MAAAjT,EAAAiE,KAEAjE,EAAAiE,IAAA,KAGAjE,EAAAoR,MAAA,YAAApR,EAAAoR,MAAA,qBAEA,OAAAnR,MAEAiT,MAAA,WACA,IAAAlT,EAAAC,KACA,IAWA,GATAD,EAAAqR,QAAArR,EAAAmR,QAAAtB,UAEA7P,EAAAiE,KAAA,WAAAjE,EAAAoR,SACApR,EAAAqR,QAAA,OACArR,EAAAyR,SAKA,YAAAzR,EAAAoR,MACA,UAAA1O,IAAA4B,OAAA8B,cAEK,MAAA6B,GACLjI,EAAAuR,mBAAAtJ,GAGA,OADAjI,EAAAmT,SAAAnT,EAAAmT,UACAlT,OAIAJ,EAAAD,QAAA+O,yBCxxCA,SAAAjP,GAGA,IAAAowE,EAAA,yFACAC,EAAA,mBACAC,EAAA,oBACAC,EAAA,qCAEAC,GAOA19B,iBAAA,SAAAF,EAAAC,EAAA49B,GAKA,GAJAA,QAEA79B,IAAA1pC,OACA2pC,IAAA3pC,QACA2pC,EAAA,CAIA,IAAA49B,EAAAC,gBACA,OAAA99B,EAEA,IAAA+9B,EAAAH,EAAAI,SAAAh+B,GACA,IAAA+9B,EACA,UAAA5tE,MAAA,mCAGA,OADA4tE,EAAAp5D,KAAAi5D,EAAAK,cAAAF,EAAAp5D,MACAi5D,EAAAM,kBAAAH,GAEA,IAAAI,EAAAP,EAAAI,SAAA/9B,GACA,IAAAk+B,EACA,UAAAhuE,MAAA,uCAEA,GAAAguE,EAAAC,OAGA,OAAAP,EAAAC,iBAGAK,EAAAx5D,KAAAi5D,EAAAK,cAAAE,EAAAx5D,MACAi5D,EAAAM,kBAAAC,IAHAl+B,EAKA,IAAAo+B,EAAAT,EAAAI,SAAAh+B,GACA,IAAAq+B,EACA,UAAAluE,MAAA,mCAEA,IAAAkuE,EAAAC,QAAAD,EAAA15D,MAAA,MAAA05D,EAAA15D,KAAA,IAGA,IAAA45D,EAAAd,EAAA3lD,KAAAumD,EAAA15D,MACA05D,EAAAC,OAAAC,EAAA,GACAF,EAAA15D,KAAA45D,EAAA,GAEAF,EAAAC,SAAAD,EAAA15D,OACA05D,EAAA15D,KAAA,KAEA,IAAA65D,GAGAJ,OAAAC,EAAAD,OACAE,OAAAH,EAAAG,OACA35D,KAAA,KACA85D,OAAAN,EAAAM,OACAC,MAAAP,EAAAO,MACA/4D,SAAAw4D,EAAAx4D,UAEA,IAAAw4D,EAAAG,SAIAE,EAAAF,OAAAD,EAAAC,OAGA,MAAAH,EAAAx5D,KAAA,IACA,GAAAw5D,EAAAx5D,KAgBW,CAKX,IAAAg6D,EAAAN,EAAA15D,KACAi6D,EAAAD,EAAAlmD,UAAA,EAAAkmD,EAAAE,YAAA,QAAAV,EAAAx5D,KACA65D,EAAA75D,KAAAi5D,EAAAK,cAAAW,QApBAJ,EAAA75D,KAAA05D,EAAA15D,KAIAw5D,EAAAM,SACAD,EAAAC,OAAAJ,EAAAI,OAIAN,EAAAO,QACAF,EAAAE,MAAAL,EAAAK,QAiBA,OAHA,OAAAF,EAAA75D,OACA65D,EAAA75D,KAAAk5D,EAAAC,gBAAAF,EAAAK,cAAAE,EAAAx5D,MAAAw5D,EAAAx5D,MAEAi5D,EAAAM,kBAAAM,IAEAR,SAAA,SAAAn9C,GACA,IAAAi+C,EAAAtB,EAAA1lD,KAAA+I,GACA,OAAAi+C,GAIAV,OAAAU,EAAA,OACAR,OAAAQ,EAAA,OACAn6D,KAAAm6D,EAAA,OACAL,OAAAK,EAAA,OACAJ,MAAAI,EAAA,OACAn5D,SAAAm5D,EAAA,QARA,MAWAb,cAAA,SAAAt5D,GAOAA,IAAArT,MAAA,IAAA4K,UAAAue,KAAA,IAAA3pB,QAAA4sE,EAAA,IASA,MAAA/4D,EAAAzU,UAAAyU,IAAA7T,QAAA6sE,EAAA,KAAAztE,QACA,OAAAyU,EAAArT,MAAA,IAAA4K,UAAAue,KAAA,KAEAyjD,kBAAA,SAAAY,GACA,OAAAA,EAAAV,OAAAU,EAAAR,OAAAQ,EAAAn6D,KAAAm6D,EAAAL,OAAAK,EAAAJ,MAAAI,EAAAn5D,WAMApY,EAAAD,QAAAswE,GAvJA,0BCHA,SAAAjoE,EAAA1G,GAAgE1B,EAAAD,QAAA2B,EAAkBpB,EAAQ,SAA1F,CAAwQF,EAAA,SAAAgI,GAAkB,gBAAAA,GAAmB,SAAA1G,EAAAlB,GAAc,GAAAyB,EAAAzB,GAAA,OAAAyB,EAAAzB,GAAAT,QAA4B,IAAAuB,EAAAW,EAAAzB,IAAYA,IAAAC,GAAA,EAAAV,YAAqB,OAAAqI,EAAA5H,GAAAG,KAAAW,EAAAvB,QAAAuB,IAAAvB,QAAA2B,GAAAJ,EAAAb,GAAA,EAAAa,EAAAvB,QAA2D,IAAAkC,KAAS,OAAAP,EAAAd,EAAAwH,EAAA1G,EAAAb,EAAAoB,EAAAP,EAAAlB,EAAA,SAAA4H,GAAmC,OAAAA,GAAS1G,EAAAZ,EAAA,SAAAsH,EAAAnG,EAAAzB,GAAqBkB,EAAAT,EAAAmH,EAAAnG,IAAAf,OAAAC,eAAAiH,EAAAnG,GAAqC2X,cAAA,EAAAxY,YAAA,EAAAC,IAAAb,KAAsCkB,EAAAO,EAAA,SAAAmG,GAAiB,IAAAnG,EAAAmG,KAAAxG,WAAA,WAAiC,OAAAwG,EAAA8R,SAAiB,WAAY,OAAA9R,GAAU,OAAA1G,EAAAZ,EAAAmB,EAAA,IAAAA,MAAsBP,EAAAT,EAAA,SAAAmH,EAAA1G,GAAmB,OAAAR,OAAAkB,UAAAC,eAAA1B,KAAAyH,EAAA1G,IAAiDA,EAAAY,EAAA,IAAAZ,IAAAa,EAAA,GAAje,EAAmf,SAAAb,EAAAO,GAAgBP,EAAA3B,QAAAqI,GAAY,SAAAA,EAAA1G,EAAAO,GAAiB,aAAa,SAAAzB,EAAA4H,EAAA1G,EAAAO,GAAkB,OAAAP,KAAA0G,EAAAlH,OAAAC,eAAAiH,EAAA1G,GAAyCD,MAAAQ,EAAAb,YAAA,EAAAwY,cAAA,EAAAC,UAAA,IAAkDzR,EAAA1G,GAAAO,EAAAmG,EAAWlH,OAAAC,eAAAO,EAAA,cAAsCD,OAAA,IAAW,IAAAH,EAAAW,EAAA,GAAAhB,EAAA,SAAAmH,GAAyB,OAAAA,KAAAxG,WAAAwG,GAA0B8R,QAAA9R,GAAnD,CAA8D9G,GAAAiB,EAAAwF,OAAAge,SAAA9kB,EAAAiZ,QAAgC,mBAAAhZ,OAAAge,QAAAhe,OAAAC,eAAAD,OAAA,UAAyEO,MAAA,SAAA2G,EAAA1G,GAAoB,SAAA0G,EAAA,UAAAgN,UAAA,8CAA6E,QAAAnT,EAAAf,OAAAkH,GAAA5H,EAAA,EAAwBA,EAAAkC,UAAAC,OAAmBnC,IAAA,CAAK,IAAAc,EAAAoB,UAAAlC,GAAmB,SAAAc,EAAA,QAAAL,KAAAK,EAAAJ,OAAAkB,UAAAC,eAAA1B,KAAAW,EAAAL,KAAAgB,EAAAhB,GAAAK,EAAAL,IAAiF,OAAAgB,GAAS4X,UAAA,EAAAD,cAAA,IAA+B,IAAAjT,GAAA,4FAAmGjF,EAAAwY,SAAWnZ,KAAA,eAAA2Y,OAA2B9T,OAAO+C,KAAAqgC,OAAA9uB,QAAA,GAAsBs4F,aAAc7pG,KAAAgP,OAAAuC,QAAA,IAAuBm+F,aAAc1vG,KAAA+gG,QAAAxvF,SAAA,GAAwB6rH,iBAAkBp9H,KAAAgP,OAAAuC,QAAA,gBAAmCwL,SAAU/c,KAAAzH,OAAA8kI,UAAA,GAAwBC,QAASt9H,KAAAwS,MAAAjB,QAAA,WAA8B,WAAUgsH,eAAgBv9H,KAAAzH,OAAAgZ,QAAA,WAA+B,OAAOyyF,UAAA,EAAAjmF,YAAwBy8F,sBAAA,EAAAnC,cAAqCmlB,mBAAmBC,oBAAoBC,kBAAmB7d,QAAA,EAAAnjH,UAAA,IAAuBq3G,WAAA,SAAAyc,cAAkCmN,cAAe39H,KAAAwS,MAAAjB,QAAA,WAA8B,YAAWjK,KAAA,WAAiB,OAAOiX,OAAA,KAAAq/G,SAAA,IAAwBjgH,QAAA,WAAoBlmB,KAAA8mB,QAAA9mB,KAAAm+B,cAA+BioG,cAAA,WAA0BpmI,KAAA8mB,QAAA9mB,KAAAye,WAA4BoI,SAAUsX,WAAA,WAAsB,IAAAn2B,EAAAhI,KAAAsB,EAAAR,OAAAge,UAA6B9e,KAAA8lI,cAAA9lI,KAAAslB,SAAkCtlB,KAAAi4G,cAAAj4G,KAAAqmI,MAAA1zG,MAAA6mE,aAAA,cAAAx5F,KAAAi4G,aAAAj4G,KAAAqmI,MAAA1zG,MAAA6mE,aAAA,qBAAAx5F,KAAAi4G,aAAAj4G,KAAAqmI,MAAA1zG,MAAA6mE,aAAA,iBAAAx5F,KAAAi4G,aAAAj4G,KAAAqmI,MAAA1zG,MAAA6mE,aAAA,6BAAAx5F,KAAAqmI,MAAA1zG,MAAA6mE,aAAA,uCAAAx5F,KAAAoyG,cAAApyG,KAAAqmI,MAAA1zG,MAAAy/E,YAAApyG,KAAAoyG,YAAApyG,KAAAqmI,MAAA1zG,MAAA6mE,aAAA,cAAAx5F,KAAAoyG,cAAud,IAAAvwG,EAAA,SAAAP,EAAAO,GAAoBP,GAAA0G,EAAAs+H,MAAAhlI,EAAA0G,EAAA8e,QAAAjlB,GAAAmG,EAAAs+H,MAAAt+H,EAAA29H,gBAAAvlI,KAAwDkB,EAAAO,KAAQP,EAAAy3H,gBAAAz3H,EAAAy3H,QAAAwN,OAAmC,IAAArlI,EAAAlB,KAAWA,KAAA8mB,OAAA3kB,EAAAnC,KAAAqmI,MAAA1zG,MAAArxB,EAAA,WAA4C,QAAA0G,EAAAhI,KAAAsB,EAAAiF,EAAA+Q,OAAApW,EAAA2kI,QAAAvuH,OAAApW,EAAAglI,cAAA9lI,KAA+DS,EAAA,EAAKA,EAAAS,EAAAiB,OAAW1B,IAAA,iBAAAS,EAAAT,SAAA,IAAAT,EAAAkB,EAAAT,KAAA,SAAAS,GAAyDlB,EAAAkB,GAAA,KAAA0G,EAAAmW,GAAA7c,EAAA,WAA4BO,EAAAP,GAAA,KAArF,CAA+FA,EAAAT,IAAOb,KAAAme,GAAA,wBAAgCtc,EAAA,aAAA7B,KAAAi1B,iBAAmC/zB,EAAAolI,MAAA,QAAAtmI,SAA0Bye,QAAA,SAAAzW,GAAqB,IAAA1G,EAAAtB,KAAWA,KAAA8mB,QAAA9mB,KAAA8mB,OAAArI,UAAA,UAAAze,KAAA8mB,OAAAw0G,WAAAt7H,KAAA8mB,OAAA+Q,OAAA73B,KAAA8mB,OAAA+Q,QAAA73B,KAAA8mB,OAAArI,UAAAze,KAAA8mB,OAAA,KAAA9mB,KAAAwmI,UAAA,WAA4KllI,EAAA6kI,SAAA,EAAA7kI,EAAAklI,UAAA,WAAoCllI,EAAA6kI,SAAA,EAAA7kI,EAAAklI,UAAA,WAAoCx+H,gBAAey+H,OAAQnhH,SAASohH,MAAA,EAAA7tB,QAAA,SAAA7wG,EAAA1G,GAA8B,IAAAO,EAAA7B,KAAWA,KAAAye,QAAA,WAAwBzW,KAAAme,SAAAne,EAAAme,QAAA5jB,QAAAV,EAAAs8B,oBAAqD,SAAAn2B,EAAA1G,EAAAO,GAAiB,aAAaf,OAAAC,eAAAO,EAAA,cAAsCD,OAAA,IAAW,IAAAjB,EAAAyB,EAAA,GAAAX,EAAAW,IAAAzB,GAAoB,QAAAS,KAAAT,GAAA,qBAAA0S,QAAAjS,GAAA,YAAAmH,GAA+DnG,EAAAnB,EAAAY,EAAA0G,EAAA,WAAmB,OAAA5H,EAAA4H,KAAlF,CAAgGnH,GAAI,IAAAsB,EAAAN,EAAA,GAAA0E,EAAA1E,EAAA,GAAAxB,EAAAkG,EAAArF,EAAAqF,EAAApE,EAAAoE,GAAA,kBAAiDjF,EAAAwY,QAAAzZ,EAAAV,SAAoB,SAAAqI,EAAA1G,EAAAO,GAAiB,aAAa,SAAAzB,EAAA4H,GAAc,OAAAA,KAAAxG,WAAAwG,GAA0B8R,QAAA9R,GAAWlH,OAAAC,eAAAO,EAAA,cAAsCD,OAAA,IAASC,EAAAqlI,QAAArlI,EAAA0kB,YAAA1kB,EAAAqkB,aAAA,EAA2C,IAAAzkB,EAAAW,EAAA,GAAAhB,EAAAT,EAAAc,GAAAiB,EAAAN,EAAA,GAAA0E,EAAAnG,EAAA+B,GAAA9B,EAAAsH,OAAAge,SAAA9kB,EAAAiZ,QAAA1S,EAAA,SAAAY,EAAA1G,GAA4EA,MAAAgkB,UAAA/e,EAAAuT,QAAAR,MAAAwsH,cAAAhsH,QAAA,WAAiE,OAAAxY,EAAAgkB,UAAiBhkB,EAAAukI,SAAAt/H,EAAAuT,QAAAR,MAAA4sH,aAAApsH,QAAA,WAA6D,OAAAxY,EAAAukI,UAAgB79H,EAAA6gB,UAAAtiB,EAAAuT,QAAAnZ,KAAA4F,EAAAuT,UAAyCpZ,GAAIilB,QAAAtlB,EAAA2lB,YAAAzf,EAAAuT,QAAA6sH,QAAAv/H,GAA2C9F,EAAAwY,QAAApZ,EAAAY,EAAAqkB,QAAAtlB,EAAAiB,EAAA0kB,YAAAzf,EAAAuT,QAAAxY,EAAAqlI,QAAAv/H,GAA4D,SAAAY,EAAA1G,GAAe0G,EAAArI,QAAA,SAAAqI,EAAA1G,EAAAO,EAAAzB,EAAAc,EAAAL,GAAgC,IAAAsB,EAAAoE,EAAAyB,QAAe3H,SAAA2H,EAAA8R,QAAoB,WAAAzZ,GAAA,aAAAA,IAAA8B,EAAA6F,EAAAzB,EAAAyB,EAAA8R,SAAgD,IAAwJpZ,EAAxJ0G,EAAA,mBAAAb,IAAA+e,QAAA/e,EAA8J,GAAvHjF,IAAA8F,EAAA0d,OAAAxjB,EAAAwjB,OAAA1d,EAAAse,gBAAApkB,EAAAokB,gBAAAte,EAAAugB,WAAA,GAAA9lB,IAAAuF,EAAAwgB,YAAA,GAAA1mB,IAAAkG,EAAAygB,SAAA3mB,GAAuHL,GAAAH,EAAA,SAAAsH,GAAoBA,KAAAhI,KAAA+nB,QAAA/nB,KAAA+nB,OAAAC,YAAAhoB,KAAAioB,QAAAjoB,KAAAioB,OAAAF,QAAA/nB,KAAAioB,OAAAF,OAAAC,WAAAhgB,GAAA,oBAAAkgB,sBAAAlgB,EAAAkgB,qBAAA9nB,KAAAG,KAAAP,KAAAgI,QAAAmgB,uBAAAngB,EAAAmgB,sBAAAC,IAAAvnB,IAA0PuG,EAAAihB,aAAA3nB,GAAAN,IAAAM,EAAAN,GAAAM,EAAA,CAA+B,IAAAD,EAAA2G,EAAAwgB,WAAA3kB,EAAAxC,EAAA2G,EAAA0d,OAAA1d,EAAAwhB,aAA+CnoB,GAAA2G,EAAAqhB,cAAA/nB,EAAA0G,EAAA0d,OAAA,SAAA9c,EAAA1G,GAA4C,OAAAZ,EAAAH,KAAAe,GAAA2B,EAAA+E,EAAA1G,KAAwB8F,EAAAwhB,aAAA3lB,KAAAqU,OAAArU,EAAAvC,OAAsC,OAAOkmI,SAAAzkI,EAAAxC,QAAA4G,EAAA+e,QAAAle,KAAiC,SAAAY,EAAA1G,EAAAO,GAAiB,aAAa,IAAAzB,EAAA,WAAiB,IAAA4H,EAAAhI,KAAAsB,EAAA0G,EAAAid,eAAApjB,EAAAmG,EAAAmd,MAAAD,IAAA5jB,EAA8C,OAAA0G,EAAAm+H,QAAAtkI,EAAA,OAA0BujB,YAAA,iBAA2BvjB,EAAA,SAAaglI,IAAA,QAAAzhH,YAAA,eAAmCpd,EAAAuhB,MAAWroB,KAAAL,GAASikB,OAAA1kB,EAAAslB,gBAAAxkB,GAA4BI,EAAAiF,EAAA1F,0CCU17K,IAAAub,EAAkBlc,EAAQ,QAC1BiW,EAAqBjW,EAAQ,QAAsCiW,eACnE22D,KACAA,EAAA1oE,GAAWlE,EAAQ,QACnB4sE,EAAAC,IAAY7sE,EAAQ,QAGpB,IACA8sE,EAAA,IACAlO,EAAA,IACAC,EAAA,GAEAgI,EAAA,SAAAl3D,GACA,OAAAA,EAAA,SAAA1F,WAAA,IACA0F,EAAA,SAAA1F,WAAA,IACA0F,EAAA,SAAA1F,WAAA,IAUA8iE,EAAA,SAAA9wD,EAAAqjD,GACA,IAGAljD,EAAA/T,EAFA8jC,EAAA,EACAC,EAAAwyB,EAGA,MAAAxyB,EAAAnwB,EAAAhF,WAEA,GAAAgF,EAAAkwB,KAAA0yB,GAAA5iD,EAAAmwB,KAAAyyB,EAiCA1yB,IACAC,QAlCA,CAKA,OAHAhwB,EAAAH,EAAA/E,SAAAi1B,EAAAC,GACA/jC,EAAAukE,EAAA1oE,GAAA0S,UAAAwF,EAAAkjD,EAAAjjD,KAEAhU,GACA,UACAi3D,EAAAjjD,MACAijD,EAAAjjD,IAAAuwD,EAAA1oE,GAAAwY,SAAAN,IAEA,MACA,UACAkjD,EAAAne,QACAme,EAAAne,MAAAyrB,EAAA1oE,GAAA0Y,SAAAR,IAEA,MACA,QACA,MAIA,GAAAkjD,EAAAjjD,KAAAijD,EAAAne,MACA,OAGAhV,GAAAyyB,EACAxyB,GAAAwyB,IAgBAoO,EAAA,SAAA/wD,EAAAqjD,EAAA13D,GACA,IAGAwU,EAAA/T,EAAA4kE,EAAAtwD,EAAA0gC,EAFAlR,EAAA,EACAC,EAAAwyB,EAGAsO,GAAA,EAGA,MAAA9gC,EAAAnwB,EAAAhF,WAEA,GAAAgF,EAAAkwB,KAAA0yB,GAAA5iD,EAAAmwB,KAAAyyB,EAkCA1yB,IACAC,QAnCA,CAKA,OAHAhwB,EAAAH,EAAA/E,SAAAi1B,EAAAC,GACA/jC,EAAAukE,EAAA1oE,GAAA0S,UAAAwF,EAAAkjD,EAAAjjD,KAEAhU,GACA,UACA4kE,EAAAL,EAAA1oE,GAAAgZ,aAAAd,EAAAkjD,EAAAne,OACAxkC,EAAAiwD,EAAA1oE,GAAAoY,+BAAAF,GACA,UAAA6wD,GAAAtwD,IACA0gC,EAAAuvB,EAAA1oE,GAAAoZ,aAAAlB,GACAihC,IACAA,EAAAh1C,KAAA,QACAT,EAAA8qB,MAAAvpB,KAAAk0C,GACA6vB,GAAA,IAGA,MACA,QACA,MAGA,GAAAA,EACA,MAGA/gC,GAAAyyB,EACAxyB,GAAAwyB,EAYAxyB,EAAAnwB,EAAAhF,WACAk1B,EAAAC,EAAAwyB,EACAsO,GAAA,EACA,MAAA/gC,GAAA,EAEA,GAAAlwB,EAAAkwB,KAAA0yB,GAAA5iD,EAAAmwB,KAAAyyB,EAkCA1yB,IACAC,QAnCA,CAKA,OAHAhwB,EAAAH,EAAA/E,SAAAi1B,EAAAC,GACA/jC,EAAAukE,EAAA1oE,GAAA0S,UAAAwF,EAAAkjD,EAAAjjD,KAEAhU,GACA,UACA4kE,EAAAL,EAAA1oE,GAAAgZ,aAAAd,EAAAkjD,EAAAne,OACAxkC,EAAAiwD,EAAA1oE,GAAAoY,+BAAAF,GACA,UAAA6wD,GAAAtwD,IACA0gC,EAAAuvB,EAAA1oE,GAAAoZ,aAAAlB,GACAihC,IACAA,EAAAh1C,KAAA,QACAT,EAAA8qB,MAAAvpB,KAAAk0C,GACA6vB,GAAA,IAGA,MACA,QACA,MAGA,GAAAA,EACA,MAGA/gC,GAAAyyB,EACAxyB,GAAAwyB,IAiBAuO,EAAA,SAAAlxD,EAAAqjD,EAAA13D,GACA,IAGAwU,EAAA/T,EAAA4kE,EAAAtwD,EAAA0gC,EAAA2I,EAAA9lD,EAAAsd,EAFA2uB,EAAA,EACAC,EAAAwyB,EAGAsO,GAAA,EAEArb,GACAliD,QACAxK,KAAA,GAIA,MAAAinC,EAAAnwB,EAAAhF,WAEA,GAAAgF,EAAAkwB,KAAA0yB,GAAA5iD,EAAAmwB,KAAAyyB,EAwDA1yB,IACAC,QAzDA,CAKA,OAHAhwB,EAAAH,EAAA/E,SAAAi1B,EAAAC,GACA/jC,EAAAukE,EAAA1oE,GAAA0S,UAAAwF,EAAAkjD,EAAAjjD,KAEAhU,GACA,UAGA,GAFA4kE,EAAAL,EAAA1oE,GAAAgZ,aAAAd,EAAAkjD,EAAAne,OACAxkC,EAAAiwD,EAAA1oE,GAAAoY,+BAAAF,GACA,UAAA6wD,IACAtwD,IAAAuwD,IACA7vB,EAAAuvB,EAAA1oE,GAAAoZ,aAAAlB,GACAihC,IACAA,EAAAh1C,KAAA,QACAT,EAAA6qB,MAAAtpB,KAAAk0C,GACA6vB,GAAA,KAGAtlE,EAAAwlE,eAAA,CACA,GAAAzwD,GACA,IAAAk1C,EAAA1sD,KAAA,CACA6gD,EAAA,IAAAjrC,WAAA82C,EAAA1sD,MACAjF,EAAA,EACA,MAAA2xD,EAAAliD,KAAAtN,OACAmb,EAAAq0C,EAAAliD,KAAA8qC,QACAuL,EAAAxhD,IAAAgZ,EAAAtd,GACAA,GAAAsd,EAAAvG,WAEA21D,EAAA1oE,GAAAwZ,4BAAAsoC,KACAp+C,EAAAwlE,cAAAR,EAAA1oE,GAAAoZ,aAAA0oC,GACAp+C,EAAAwlE,cAAA/kE,KAAA,SAEAwpD,EAAA1sD,KAAA,EAGA0sD,EAAAliD,KAAAxG,KAAAiT,GACAy1C,EAAA1sD,MAAAiX,EAAAnF,WAGA,MACA,QACA,MAGA,GAAAi2D,GAAAtlE,EAAAwlE,cACA,MAGAjhC,GAAAyyB,EACAxyB,GAAAwyB,EAYAxyB,EAAAnwB,EAAAhF,WACAk1B,EAAAC,EAAAwyB,EACAsO,GAAA,EACA,MAAA/gC,GAAA,EAEA,GAAAlwB,EAAAkwB,KAAA0yB,GAAA5iD,EAAAmwB,KAAAyyB,EAkCA1yB,IACAC,QAnCA,CAKA,OAHAhwB,EAAAH,EAAA/E,SAAAi1B,EAAAC,GACA/jC,EAAAukE,EAAA1oE,GAAA0S,UAAAwF,EAAAkjD,EAAAjjD,KAEAhU,GACA,UACA4kE,EAAAL,EAAA1oE,GAAAgZ,aAAAd,EAAAkjD,EAAAne,OACAxkC,EAAAiwD,EAAA1oE,GAAAoY,+BAAAF,GACA,UAAA6wD,GAAAtwD,IACA0gC,EAAAuvB,EAAA1oE,GAAAoZ,aAAAlB,GACAihC,IACAA,EAAAh1C,KAAA,QACAT,EAAA6qB,MAAAtpB,KAAAk0C,GACA6vB,GAAA,IAGA,MACA,QACA,MAGA,GAAAA,EACA,MAGA/gC,GAAAyyB,EACAxyB,GAAAwyB,IAgBAyO,EAAA,SAAAj3B,EAAAk3B,GACA,GAAAl3B,EAAA1jB,OAAA0jB,EAAA1jB,MAAArwB,OAAA,CACA,IAAAkrE,EAAAD,EACA,qBAAAC,IACAA,EAAAn3B,EAAA1jB,MAAA,GAAAnc,KAEA6/B,EAAA1jB,MAAApG,QAAA,SAAAu/C,GACAA,EAAAt1D,IAAAN,EAAA41D,EAAAt1D,IAAAg3D,GACA1B,EAAAr1D,IAAAP,EAAA41D,EAAAr1D,IAAA+2D,GAEA1B,EAAA/uB,QAAA+uB,EAAAt1D,IAAAu2D,EACAjB,EAAA2B,QAAA3B,EAAAr1D,IAAAs2D,IAIA,GAAA12B,EAAA3jB,OAAA2jB,EAAA3jB,MAAApwB,OAAA,CACA,IAAAorE,EAAAH,EAWA,GAVA,qBAAAG,IACAA,EAAAr3B,EAAA3jB,MAAA,GAAAlc,KAEA6/B,EAAA3jB,MAAAnG,QAAA,SAAAu/C,GACAA,EAAAt1D,IAAAN,EAAA41D,EAAAt1D,IAAAk3D,GACA5B,EAAAr1D,IAAAP,EAAA41D,EAAAr1D,IAAAi3D,GAEA5B,EAAA/uB,QAAA+uB,EAAAt1D,IAAAu2D,EACAjB,EAAA2B,QAAA3B,EAAAr1D,IAAAs2D,IAEA12B,EAAAg3B,cAAA,CACA,IAAApnB,EAAA5P,EAAAg3B,cACApnB,EAAAzvC,IAAAN,EAAA+vC,EAAAzvC,IAAAk3D,GACAznB,EAAAxvC,IAAAP,EAAA+vC,EAAAxvC,IAAAi3D,GAEAznB,EAAAlJ,QAAAkJ,EAAAzvC,IAAAu2D,EACA9mB,EAAAwnB,QAAAxnB,EAAAzvC,IAAAu2D,KAQAY,EAAA,SAAAzxD,GACA,IAOAG,EANA8wD,GAAA,EACAS,EAAA,EACAC,EAAA,KACAlpB,EAAA,KACAY,EAAA,EACAT,EAAA,EAGA,MAAA5oC,EAAA5Z,OAAAwiD,GAAA,GACA,IAAAx8C,EAAAukE,EAAAC,IAAAj2D,UAAAqF,EAAA4oC,GACA,OAAAx8C,GACA,qBAGA,GAAA4T,EAAA5Z,OAAAwiD,EAAA,IACAqoB,GAAA,EACA,MAOA,GAJA5nB,EAAAsnB,EAAAC,IAAAloB,gBAAA1oC,EAAA4oC,GAIAS,EAAArpC,EAAA5Z,OAAA,CACA6qE,GAAA,EACA,MAEA,OAAAxoB,IACAtoC,EAAAH,EAAA/E,SAAA2tC,IAAAS,GACAZ,EAAAkoB,EAAAC,IAAA/mB,kBAAA1pC,IAEAyoC,GAAAS,EACA,MACA,YAGA,GAAArpC,EAAA5Z,OAAAwiD,EAAA,GACAqoB,GAAA,EACA,MAOA,GAJA5nB,EAAAsnB,EAAAC,IAAA5nB,cAAAhpC,EAAA4oC,GAIAS,EAAArpC,EAAA5Z,OAAA,CACA6qE,GAAA,EACA,MAEA,OAAAU,IACAxxD,EAAAH,EAAA/E,SAAA2tC,IAAAS,GACAsoB,EAAAhB,EAAAC,IAAAhnB,gBAAAzpC,IAEAuxD,IACA9oB,GAAAS,EACA,MACA,QACAT,IACA,MAEA,GAAAqoB,EACA,YAGA,UAAAU,GAAA,OAAAlpB,EACA,YAGA,IAAAmpB,EAAAf,EAAAc,EAEAhmE,GACA8qB,QAEArqB,KAAA,QACAkO,IAAAmuC,EACAluC,IAAAkuC,IAGAr8C,KAAA,QACAkO,IAAAmuC,EAAA,KAAAipB,EAAAE,EACAr3D,IAAAkuC,EAAA,KAAAipB,EAAAE,KAKA,OAAAjmE,GAQAkmE,EAAA,SAAA7xD,GACA,IAAAqjD,GACAjjD,IAAA,KACA8kC,MAAA,MAGAv5C,KAIA,QAAAyU,KAFA0wD,EAAA9wD,EAAAqjD,GAEAA,EAAAne,MACA,GAAAme,EAAAne,MAAAp/C,eAAAsa,GAAA,CACA,IAAAhU,EAAAi3D,EAAAne,MAAA9kC,GACA,OAAAhU,GACA,KAAA6T,EAAAiB,iBACAvV,EAAA6qB,SACA06C,EAAAlxD,EAAAqjD,EAAA13D,GACA,IAAAA,EAAA6qB,MAAApwB,eACAuF,EAAA6qB,MAEA,MACA,KAAAvW,EAAAkB,iBACAxV,EAAA8qB,SACAs6C,EAAA/wD,EAAAqjD,EAAA13D,GACA,IAAAA,EAAA8qB,MAAArwB,eACAuF,EAAA8qB,MAEA,MACA,QACA,OAIA,OAAA9qB,GAWA+0C,EAAA,SAAA1gC,EAAAqxD,GACA,IAEA1lE,EAFAmmE,EAAAlH,EAAA5qD,GAUA,OALArU,EADAmmE,EACAL,EAAAzxD,GAEA6xD,EAAA7xD,GAGArU,MAAA8qB,OAAA9qB,EAAA6qB,QAIA46C,EAAAzlE,EAAA0lE,GAEA1lE,GALA,MAQAlI,EAAAD,SACAk9C,8CC5fA/7C,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAA8X,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAxhB,GAEAsF,EAAc9e,EAAQ,QAEtB+e,EAAApF,EAAAmF,GAEA,SAAAnF,EAAAvN,GAAsC,OAAAA,KAAA9K,WAAA8K,GAAuCwN,QAAAxN,GAE7E,SAAAyN,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAE3F,SAAAsK,EAAAvf,EAAAQ,GAAiD,IAAAR,EAAa,UAAAwf,eAAA,6DAAyF,OAAAhf,GAAA,kBAAAA,GAAA,oBAAAA,EAAAR,EAAAQ,EAEvJ,SAAAif,EAAAC,EAAAC,GAA0C,uBAAAA,GAAA,OAAAA,EAA+D,UAAA1K,UAAA,kEAAA0K,GAAuGD,EAAAzd,UAAAlB,OAAAY,OAAAge,KAAA1d,WAAyEkE,aAAe7E,MAAAoe,EAAAze,YAAA,EAAAyY,UAAA,EAAAD,cAAA,KAA6EkG,IAAA5e,OAAA6e,eAAA7e,OAAA6e,eAAAF,EAAAC,GAAAD,EAAAG,UAAAF,GAYrX,IAAAokC,EAAA,SAAAjkC,GAGA,SAAAikC,IACA/pC,EAAA/Z,KAAA8jD,GAEA,IAAAhkC,EAAAR,EAAAtf,MAAA8jD,EAAAlkC,WAAA9e,OAAAif,eAAA+jC,IAAAvjD,KAAAP,OAGA,OADA8f,EAAA1O,OAAA,GACA0O,EAyBA,OAjCAN,EAAAskC,EAAAjkC,GAkBA1G,EAAA2qC,IACAniD,IAAA,OACAN,MAAA,SAAAwO,GACA,IAAAs0C,OAAA,EAKA,IAHAnkD,KAAAoR,QAAAvB,EACAs0C,EAAAnkD,KAAAoR,OAAA0B,QAAA,MAEYqxC,GAAA,EAAkBA,EAAAnkD,KAAAoR,OAAA0B,QAAA,MAC9B9S,KAAA2W,QAAA,OAAA3W,KAAAoR,OAAA0Z,UAAA,EAAAq5B,IACAnkD,KAAAoR,OAAApR,KAAAoR,OAAA0Z,UAAAq5B,EAAA,OAKAL,EAlCA,CAmCC7kC,EAAA,YAEDtf,EAAA,WAAAmkD,qCCnDAlkD,EAAAD,QAAA,SAAAujD,GACA,OAAAA,EAAA9rC,SAAA,EAAA8rC,EAAA/rC,WAAA+rC,IAAA/rC,WAAA,2BCdA,IAAA/W,EADA,qBAAAuH,UAEAvH,EAAAuH,OAAAe,SAAAo+H,iBAAA1mI,IAAAimB,IAAAnjB,MAAA,uBACIhD,EAAAgC,EAAuB9B,EAAA,wCCL3B,IAAA2mI,EAAA7mI,EAAA,QAAA8mI,EAAA9mI,EAAA2B,EAAAklI,GAAygBC,EAAG,qCCC5gB,IAAAr/H,EAAazH,EAAQ,QACrB6mF,EAAiB7mF,EAAQ,QACzB+mI,EAAmB/mI,EAAQ,QAC3BgnI,EAAYhnI,EAAQ,QAcpB,SAAAqlI,EAAAn9F,EAAA1e,GACA,QAAAtpB,EAAA,EAAmBA,EAAAgoC,EAAA7lC,OAAkBnC,IACrCspB,EAAA0e,EAAAhoC,IAIA,SAAA+mI,EAAA76H,GACA,QAAAlM,KAAAkM,EACA,GAAAA,EAAArK,eAAA7B,GAAA,SAEA,SAGA,SAAAgnI,EAAAllH,EAAAoD,EAAA/hB,GACA,IAAAutE,EAAA5uD,EAYA,OAVA6kE,EAAAzhE,IACA/hB,EAAA+hB,EACA,kBAAApD,IACA4uD,GAAsB5uD,SAGtB4uD,EAAAo2D,EAAA5hH,GAAiCpD,QAGjC4uD,EAAAvtE,WACAutE,EAGA,SAAAu2D,EAAAnlH,EAAAoD,EAAA/hB,GAEA,OADA+hB,EAAA8hH,EAAAllH,EAAAoD,EAAA/hB,GACA+jI,EAAAhiH,GAGA,SAAAgiH,EAAAhiH,GACA,wBAAAA,EAAA/hB,SACA,UAAAf,MAAA,6BAGA,IAAA+kI,GAAA,EACAhkI,EAAA,SAAAqmB,EAAAgX,EAAAo6D,GACAusC,IACAA,GAAA,EACAjiH,EAAA/hB,SAAAqmB,EAAAgX,EAAAo6D,KAIA,SAAAwsC,IACA,IAAAxgH,EAAAyS,YACAwK,WAAAwjG,EAAA,GAIA,SAAAC,IAEA,IAAA1sC,OAAA/tF,EAQA,GALA+tF,EADAh0E,EAAA4Z,SACA5Z,EAAA4Z,SAEA5Z,EAAAggB,cAAA2gG,EAAA3gH,GAGA4gH,EACA,IACA5sC,EAAAxhD,KAAAhoC,MAAAwpF,GACa,MAAAhzF,IAGb,OAAAgzF,EAGA,SAAA6sC,EAAAC,GAMA,OALA/jG,aAAAgkG,GACAD,aAAAtlI,QACAslI,EAAA,IAAAtlI,MAAA,IAAAslI,GAAA,kCAEAA,EAAAtoF,WAAA,EACAj8C,EAAAukI,EAAAE,GAIA,SAAAP,IACA,IAAAhnG,EAAA,CACA,IAAAD,EACAuD,aAAAgkG,GAGAvnG,EAFAlb,EAAA2iH,aAAAh7H,IAAA+Z,EAAAwZ,OAEA,IAEA,OAAAxZ,EAAAwZ,OAAA,IAAAxZ,EAAAwZ,OAEA,IAAAI,EAAAonG,EACAp+G,EAAA,KAiBA,OAfA,IAAA4W,GACAI,GACAo6D,KAAA0sC,IACAloF,WAAAhf,EACAve,SACAud,WACAtM,IAAAhR,EACAgmH,WAAAlhH,GAEAA,EAAAmhH,wBACAvnG,EAAApB,QAAAynG,EAAAjgH,EAAAmhH,2BAGAv+G,EAAA,IAAApnB,MAAA,iCAEAe,EAAAqmB,EAAAgX,IAAAo6D,OAGA,IAUAr5F,EACA8+B,EAXAzZ,EAAA1B,EAAA0B,KAAA,KAEAA,IAEAA,EADA1B,EAAAqtF,MAAArtF,EAAA2iH,OACA,IAAAZ,EAAAe,eAEA,IAAAf,EAAAgB,gBAMA,IAMAN,EANA7lH,EAAA8E,EAAAkM,IAAA5N,EAAApD,KAAAoD,EAAA4N,IACAjR,EAAA+E,EAAA/E,OAAAqD,EAAArD,QAAA,MACA+4E,EAAA11E,EAAA01E,MAAA11E,EAAAzV,KACA2vB,EAAAxY,EAAAwY,QAAAla,EAAAka,YACAsmE,IAAAxgF,EAAAwgF,KACA8hC,GAAA,EAEAI,GACAhtC,UAAA/tF,EACAuyB,WACAggB,WAAA,EACAv9B,SACAiR,IAAAhR,EACAgmH,WAAAlhH,GA0CA,GAvCA,SAAA1B,IAAA,IAAAA,EAAAqvE,OACAizC,GAAA,EACApoG,EAAA,WAAAA,EAAA,YAAAA,EAAA,8BACA,QAAAvd,GAAA,SAAAA,IACAud,EAAA,iBAAAA,EAAA,kBAAAA,EAAA,oCACAw7D,EAAAxhD,KAAAC,WAAA,IAAAn0B,EAAAqvE,KAAAqG,EAAA11E,EAAAqvE,QAIA3tE,EAAAsgB,mBAAAkgG,EACAxgH,EAAAmwF,OAAAswB,EACAzgH,EAAAowF,QAAAywB,EAEA7gH,EAAAshH,WAAA,aAGAthH,EAAAuhH,QAAA,WACA9nG,GAAA,GAEAzZ,EAAAwhH,UAAAX,EACA7gH,EAAAg1D,KAAA/5D,EAAAC,GAAA4jF,EAAAxgF,EAAAmjH,SAAAnjH,EAAAojH,UAEA5iC,IACA9+E,EAAAZ,kBAAAd,EAAAc,kBAKA0/E,GAAAxgF,EAAA0O,QAAA,IACA+zG,EAAA9jG,WAAA,WACA,IAAAxD,EAAA,CACAA,GAAA,EACAzZ,EAAA4Q,MAAA,WACA,IAAA5vB,EAAA,IAAAxF,MAAA,0BACAwF,EAAApF,KAAA,YACAilI,EAAA7/H,KACSsd,EAAA0O,UAGThN,EAAA2hH,iBACA,IAAAhnI,KAAA69B,EACAA,EAAAv9B,eAAAN,IACAqlB,EAAA2hH,iBAAAhnI,EAAA69B,EAAA79B,SAGK,GAAA2jB,EAAAka,UAAA2nG,EAAA7hH,EAAAka,SACL,UAAAh9B,MAAA,qDAkBA,MAfA,iBAAA8iB,IACA0B,EAAAqb,aAAA/c,EAAA+c,cAGA,eAAA/c,GACA,oBAAAA,EAAAsjH,YAEAtjH,EAAAsjH,WAAA5hH,GAMAA,EAAA6hH,KAAA7tC,GAAA,MAEAh0E,EAKA,SAAA2gH,EAAA3gH,GACA,gBAAAA,EAAAqb,aACA,OAAArb,EAAA8hH,YAEA,IAAAC,EAAA/hH,EAAA8hH,aAAA,gBAAA9hH,EAAA8hH,YAAAz0C,gBAAAyN,SACA,WAAA96E,EAAAqb,cAAA0mG,EAIA,KAHA/hH,EAAA8hH,YAMA,SAAAxoH,KA1OA1gB,EAAAD,QAAA0nI,EACAA,EAAAgB,eAAA1gI,EAAA0gI,gBAAA/nH,EACA+mH,EAAAe,eAAA,wBAAAf,EAAAgB,eAAAhB,EAAAgB,eAAA1gI,EAAAygI,eAEA7C,GAAA,qDAAAtjH,GACAolH,EAAA,WAAAplH,EAAA,MAAAA,GAAA,SAAAC,EAAAoD,EAAA/hB,GAGA,OAFA+hB,EAAA8hH,EAAAllH,EAAAoD,EAAA/hB,GACA+hB,EAAArD,SAAA41E,cACAyvC,EAAAhiH,6BCdA,SAAAyF,GAAA,IAIAs4B,EAJAC,EAAA,qBAAAv4B,IACA,qBAAApjB,iBACA47C,EAAarjD,EAAQ,GAIrB,qBAAAwI,SACA26C,EAAA36C,UAEA26C,EAAAC,EAAA,6BAEAD,IACAA,EAAAC,EAAA,6BAAAC,IAIA3jD,EAAAD,QAAA0jD,6DChBA,SAAAt4B,GAAA,IAAAi+G,EAAA9oI,EAAA,QAAA+oI,EAAA/oI,EAAA2B,EAAAmnI,GAAAE,EAAAhpI,EAAA,QAAAipI,EAAAjpI,EAAA2B,EAAAqnI,GAAAE,EAAAlpI,EAAA,QAAAmpI,EAAAnpI,EAAA2B,EAAAunI,GAAAE,EAAAppI,EAAA,QAAAqpI,EAAArpI,EAAA2B,EAAAynI,GAAAE,EAAAtpI,EAAA,QAAAupI,EAAAvpI,EAAA2B,EAAA2nI,GAAAE,EAAAxpI,EAAA,QAAAypI,EAAAzpI,EAAA2B,EAAA6nI,GAAAE,EAAA1pI,EAAA,QAAA2pI,EAAA3pI,EAAA2B,EAAA+nI,GAAAE,EAAA5pI,EAAA,QAAA6pI,EAAA7pI,EAAA,QAAA8pI,EAAA9pI,EAAA,QAAA+pI,EAAA/pI,EAAA2B,EAAAmoI,GAAAE,EAAAhqI,EAAA,QAAAiqI,EAAAjqI,EAAA2B,EAAAqoI,GAAAE,EAAAlqI,EAAA,QAyBA2X,EAAA,QAOA2a,OAAA,EAGA+kE,EAAA,OAGAC,KAYAC,EAAA,SAAAlvF,EAAAiW,GACA,IAAAk5E,EAAAllE,EAAAmlE,OAAAJ,GACAK,EAAA,IAAA5tE,OAAA,KAAA0tE,EAAA,MAkBA,GAhBA,QAAAnvF,GAGAiW,EAAAmrD,QAAAphE,EAAAsvF,cAAA,KAIAL,GACAA,EAAAnuF,QAAAiO,OAAAkH,IAIAA,EAAAmrD,QAAA,YAIOs/D,EAAA1iI,EAAQk7D,QAAf,CAOA,IAAA8d,EAAW0pD,EAAA1iI,EAAQk7D,QAAAl5D,GAEnBg3E,GAAA,UAAAh3E,IAGAg3E,EAAS0pD,EAAA1iI,EAAQk7D,QAAAsK,MAAiBk9D,EAAA1iI,EAAQk7D,QAAAjvC,KAK1C+sD,GAAAmY,GAAAE,EAAApxF,KAAA+B,IAIAg3E,EAAAxkE,MAAA8O,QAAArL,GAAA,gBAA6CyqH,EAAA1iI,EAAQk7D,QAAAjjD,KAUrDgU,EAAA,WACA,QAAAk3D,EAAApnF,UAAAC,OAAAic,EAAAzD,MAAA2uE,GAAArpE,EAAA,EAAiEA,EAAAqpE,EAAarpE,IAC9E7B,EAAA6B,GAAA/d,UAAA+d,GAGAo3E,EAAA,MAAAj5E,IAsBAgU,EAAAmlE,QACAG,IAAA,uBACAz5E,IAAA,GACAglB,MAAA,uBACA0oC,KAAA,iBACAt5C,KAAA,aACAkF,MAAA,QACAzU,QAAAq0E,GAcA/kE,EAAA+kE,MAAA,SAAAG,GACA,qBAAAA,EAAA,CACA,IAAAllE,EAAAmlE,OAAA11F,eAAAy1F,GACA,UAAAl1F,MAAA,IAAAk1F,EAAA,8BAEAH,EAAAG,EAEA,OAAAH,GAYA/kE,EAAAglE,QAAA,WACA,OAAAA,KAAAlgF,OAAAkgF,OAOAhlE,EAAAglE,QAAAO,MAAA,WACAP,IACAA,EAAAj1F,OAAA,IAOAiwB,EAAAglE,QAAAQ,QAAA,WACA,OAAAR,IACAA,EAAAj1F,OAAA,EACAi1F,EAAA,OAOAhlE,EAAAglE,QAAAjmD,OAAA,WACA,OAAAimD,IACAA,OAUAhlE,EAAAmF,MAAA,WACA,QAAAsgE,EAAA31F,UAAAC,OAAAic,EAAAzD,MAAAk9E,GAAAC,EAAA,EAAoEA,EAAAD,EAAeC,IACnF15E,EAAA05E,GAAA51F,UAAA41F,GAGA,OAAAT,EAAA,QAAAj5E,IASAgU,EAAAC,KAAA,WACA,QAAA0lE,EAAA71F,UAAAC,OAAAic,EAAAzD,MAAAo9E,GAAAC,EAAA,EAAoEA,EAAAD,EAAeC,IACnF55E,EAAA45E,GAAA91F,UAAA81F,GAGA,OAAAX,EAAA,OAAAj5E,IAUAgU,EAAA6Q,MAAA,WACA,QAAAg1D,EAAA/1F,UAAAC,OAAAic,EAAAzD,MAAAs9E,GAAAC,EAAA,EAAoEA,EAAAD,EAAeC,IACnF95E,EAAA85E,GAAAh2F,UAAAg2F,GAGA,OAAAb,EAAA,QAAAj5E,IAGA,IAAA+5E,EAAA/lE,EAEA+2D,EAAA,oBAAApoF,QAAA,kBAAAA,OAAAuoB,SAAA,SAAApd,GACA,cAAAA,GACC,SAAAA,GACD,OAAAA,GAAA,oBAAAnL,QAAAmL,EAAApG,cAAA/E,QAAAmL,IAAAnL,OAAAa,UAAA,gBAAAsK,GAGAwqF,EAAA,SAAA98E,EAAAN,GACA,KAAAM,aAAAN,GACA,UAAA1E,UAAA,sCAIA+hF,EAAA,SAAAt3E,EAAAC,GACA,uBAAAA,GAAA,OAAAA,EACA,UAAA1K,UAAA,kEAAA0K,GAGAD,EAAAzd,UAAAlB,OAAAY,OAAAge,KAAA1d,WACAkE,aACA7E,MAAAoe,EACAze,YAAA,EACAyY,UAAA,EACAD,cAAA,KAGAkG,IAAA5e,OAAA6e,eAAA7e,OAAA6e,eAAAF,EAAAC,GAAAD,EAAAG,UAAAF,IAGAs3E,EAAA,SAAAj3F,EAAAQ,GACA,IAAAR,EACA,UAAAwf,eAAA,6DAGA,OAAAhf,GAAA,kBAAAA,GAAA,oBAAAA,EAAAR,EAAAQ,GAGA02F,EAAA,SAAAC,EAAAC,GAEA,OADAD,EAAAC,MACAD,GAiCA5hF,EAAAxU,OAAAkB,UAAAsT,SAcAiX,EAAA,SAAAzqB,GACA,OAAA0nF,EAAA1nF,GAAAhB,OAAAyrB,KAAAzqB,OAYA,SAAAs1F,EAAAt1F,EAAAy9E,GACAhzD,EAAAzqB,GAAA0qB,QAAA,SAAA7qB,GACA,OAAA49E,EAAAz9E,EAAAH,QAqBA,SAAA+V,EAAA5V,EAAAy9E,GACA,IAAAzjD,EAAAx5B,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,KAEA,OAAAiqB,EAAAzqB,GAAA4V,OAAA,SAAA2/E,EAAA11F,GACA,OAAA49E,EAAA8X,EAAAv1F,EAAAH,OACGm6B,GAUH,SAAAhd,EAAAzF,GACA,QAAAqwE,EAAApnF,UAAAC,OAAA4jB,EAAApL,MAAA2uE,EAAA,EAAAA,EAAA,KAAArpE,EAAA,EAAuFA,EAAAqpE,EAAarpE,IACpG8F,EAAA9F,EAAA,GAAA/d,UAAA+d,GAGA,OAAAvf,OAAAge,OACAhe,OAAAge,OAAA3G,MAAArX,QAAAuY,GAAA/B,OAAA6O,KAGAA,EAAAqG,QAAA,SAAAzN,GACAA,GAIAq4E,EAAAr4E,EAAA,SAAA1d,EAAAM,GACA0X,EAAA1X,GAAAN,MAIAgY,GAaA,SAAAmwE,EAAAnoF,GACA,QAAAA,GAAA,iCAAAA,EAAA,YAAAkoF,EAAAloF,IAUA,SAAAi2F,EAAAj2F,GACA,OAAAmoF,EAAAnoF,IAAA,oBAAAiU,EAAA/U,KAAAc,MAAA6E,cAAApF,OA0BA,SAAA03F,EAAAvwD,EAAAt5B,GACA,IAAAs5B,IAAAt5B,EACA,SAGA,GAAqB,oBAARs6H,EAAA1iI,EAAQ2hC,iBAAA,CACrB,IAAAuwD,EAAawwC,EAAA1iI,EAAQ2hC,iBAAAD,GAErB,OAAAwwD,IAAA9pF,GAAA,GAGA,SAGA,IAAAgqF,EAAA1B,GAAA,kbAaA,SAAA2B,EAAA/zE,GACA,wBAAAA,GAAA,KAAAre,KAAAqe,GAcA,SAAAg0E,EAAAh0E,GACA,QAAAre,KAAAqe,GACA,UAAAriB,MAAA,2CAcA,SAAAs2F,EAAA1vF,GACA,WAAA4gB,OAAA,UAAA5gB,EAAA,WAQA,SAAAqtF,IAEA,OAAS0yC,EAAA5iI,IAAa0iI,EAAA1iI,EAAQmC,SAa9B,SAAAqwF,EAAA13F,GACA,OAAAmoF,EAAAnoF,IAAA,IAAAA,EAAA23F,SASA,SAAAC,IAIA,IACA,OAAWgwC,EAAA1iI,EAAQ0hB,SAAYghH,EAAA1iI,EAAQxG,KACpC,MAAAqP,GACH,UAaA,SAAA8pF,EAAAj3E,GACA,gBAAAk3E,EAAArxE,GACA,IAAA8wE,EAAAO,GACA,OAAagwC,EAAA5iI,EAAQ0b,GAAA,MAErB22E,EAAA9wE,KACAA,EAAgBqhH,EAAA5iI,EAAQ+zE,cAAAxyD,IAGxB,IAAAsxE,EAAAL,EAAAjxE,KAAwCqhH,EAAA5iI,EAExC,OAAA6yF,EAAAn3E,IAAAm3E,EAAAn3E,GAAAk3E,IAsBA,SAAAE,IACA,IAAA5wF,EAAAnG,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,SACA61B,EAAA71B,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAwf,EAAAxf,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACA27D,EAAA37D,UAAA,GAEA2lC,EAAWkhG,EAAA5iI,EAAQ+B,cAAAG,GA6BnB,OA3BA3H,OAAAw4F,oBAAAnhE,GAAA3L,QAAA,SAAA+sE,GACA,IAAA1qF,EAAAspB,EAAAohE,IAKA,IAAAA,EAAAzmF,QAAA,mBAAAymF,GAAA,SAAAA,GACAhB,EAAA9lE,KAAiB42G,IAAI1wC,EAAAY,EAAA1qF,IACrBo5B,EAAAuxD,aAAAD,EAAA1qF,IAIK,gBAAA0qF,EACLtvF,EAAAg+B,EAAAp5B,GAEAo5B,EAAAsxD,GAAA1qF,IAIA/N,OAAAw4F,oBAAAx3E,GAAA0K,QAAA,SAAAitE,GACAxxD,EAAAuxD,aAAAC,EAAA33E,EAAA23E,MAGAx7B,GACAy7B,GAAAzxD,EAAAg2B,GAGAh2B,EAeA,SAAAh+B,EAAAg+B,EAAAp+B,GAMA,MALA,qBAAAo+B,EAAAh+B,YACAg+B,EAAA/9B,UAAAL,EAEAo+B,EAAAh+B,YAAAJ,EAEAo+B,EAYA,SAAA0xD,EAAAC,EAAA3xE,GACAA,EAAAzX,WACAyX,EAAA4xE,aAAAD,EAAA3xE,EAAAzX,YAEAyX,EAAAnf,YAAA8wF,GAoBA,SAAAE,GAAA1xF,EAAA2xF,GAEA,OADAlB,EAAAkB,GACA3xF,EAAA4xF,UACA5xF,EAAA4xF,UAAAlW,SAAAiW,GAEAjB,EAAAiB,GAAAvzF,KAAA4B,EAAAgB,WAeA,SAAA6wF,GAAA7xF,EAAA8xF,GAUA,OATA9xF,EAAA4xF,UACA5xF,EAAA4xF,UAAA5xE,IAAA8xE,GAIGJ,GAAA1xF,EAAA8xF,KACH9xF,EAAAgB,WAAAhB,EAAAgB,UAAA,IAAA8wF,GAAAvxF,QAGAP,EAeA,SAAA+xF,GAAA/xF,EAAAgyF,GAUA,OATAhyF,EAAA4xF,UACA5xF,EAAA4xF,UAAArjD,OAAAyjD,IAEAvB,EAAAuB,GACAhyF,EAAAgB,UAAAhB,EAAAgB,UAAAzF,MAAA,OAAA+tB,OAAA,SAAAjxB,GACA,OAAAA,IAAA25F,IACKttE,KAAA,MAGL1kB,EAmCA,SAAAiyF,GAAAjyF,EAAAkyF,EAAAlsD,GAKA,IAAA9nC,EAAAwzF,GAAA1xF,EAAAkyF,GAYA,GAVA,oBAAAlsD,IACAA,IAAAhmC,EAAAkyF,IAGA,mBAAAlsD,IACAA,GAAA9nC,GAKA8nC,IAAA9nC,EAUA,OANA8nC,EACA6rD,GAAA7xF,EAAAkyF,GAEAH,GAAA/xF,EAAAkyF,GAGAlyF,EAYA,SAAAmyF,GAAAtyD,EAAAnmB,GACAhhB,OAAAw4F,oBAAAx3E,GAAA0K,QAAA,SAAAitE,GACA,IAAAe,EAAA14E,EAAA23E,GAEA,OAAAe,GAAA,qBAAAA,IAAA,IAAAA,EACAvyD,EAAAwyD,gBAAAhB,GAEAxxD,EAAAuxD,aAAAC,GAAA,IAAAe,EAAA,GAAAA,KAiBA,SAAAE,GAAAt5E,GACA,IAAA9U,KAKAquF,EAAA,kEAEA,GAAAv5E,KAAAU,YAAAV,EAAAU,WAAAvf,OAAA,EAGA,IAFA,IAAA8iB,EAAAjE,EAAAU,WAEA1hB,EAAAilB,EAAA9iB,OAAA,EAAkCnC,GAAA,EAAQA,IAAA,CAC1C,IAAAq5F,EAAAp0E,EAAAjlB,GAAAO,KACAi6F,EAAAv1E,EAAAjlB,GAAAiB,MAIA,mBAAA+f,EAAAq4E,KAAA,IAAAkB,EAAA7nF,QAAA,IAAA2mF,EAAA,OAIAmB,EAAA,OAAAA,GAGAtuF,EAAAmtF,GAAAmB,EAIA,OAAAtuF,EAeA,SAAAuuF,GAAA5yD,EAAA6yD,GACA,OAAA7yD,EAAA4yD,aAAAC,GAeA,SAAAtB,GAAAvxD,EAAA6yD,EAAAz5F,GACA4mC,EAAAuxD,aAAAsB,EAAAz5F,GAYA,SAAAo5F,GAAAxyD,EAAA6yD,GACA7yD,EAAAwyD,gBAAAK,GAMA,SAAAC,KACEouC,EAAA5iI,EAAQy0F,KAAAC,QACRkuC,EAAA5iI,EAAQ20F,cAAA,WACV,UAOA,SAAAC,KACEguC,EAAA5iI,EAAQ20F,cAAA,WACV,UAuBA,SAAAruF,GAAAo7B,GACA,GAAAA,KAAAp7B,uBAAAo7B,EAAAh/B,WAAA,CACA,IAAAmyF,EAAAnzD,EAAAp7B,wBACA/E,KAgBA,OAdA,gDAAA0kB,QAAA,SAAA3oB,QACAoJ,IAAAmuF,EAAAv3F,KACAiE,EAAAjE,GAAAu3F,EAAAv3F,MAIAiE,EAAAoE,SACApE,EAAAoE,OAAAxF,WAAA8xF,EAAAvwD,EAAA,YAGAngC,EAAAmE,QACAnE,EAAAmE,MAAAvF,WAAA8xF,EAAAvwD,EAAA,WAGAngC,GA6BA,SAAAuzF,GAAApzD,GACA,IAAA77B,OAAA,EAMA,GAJA67B,EAAAp7B,uBAAAo7B,EAAAh/B,aACAmD,EAAA67B,EAAAp7B,0BAGAT,EACA,OACA3G,KAAA,EACA0F,IAAA,GAIA,IAAAmwF,EAAc6tC,EAAA5iI,EAAQ8tF,gBACtB2G,EAAamuC,EAAA5iI,EAAQy0F,KAErBO,EAAAD,EAAAC,YAAAP,EAAAO,YAAA,EACAC,EAAmBytC,EAAA1iI,EAAQk1F,aAAAT,EAAAQ,WAC3B/1F,EAAA2G,EAAA3G,KAAA+1F,EAAAD,EAEAG,EAAAJ,EAAAI,WAAAV,EAAAU,WAAA,EACAC,EAAkBstC,EAAA1iI,EAAQq1F,aAAAZ,EAAAW,UAC1BxwF,EAAAiB,EAAAjB,IAAAwwF,EAAAD,EAGA,OACAj2F,KAAAqH,KAAAoB,MAAAzI,GACA0F,IAAA2B,KAAAoB,MAAA/C,IA+BA,SAAA0wF,GAAA5zD,EAAA5d,GACA,IAAA9kB,KACA6G,EAAAivF,GAAApzD,GACA6zD,EAAA7zD,EAAAx7B,YACAsvF,EAAA9zD,EAAAz7B,aAEAwvF,EAAA5vF,EAAAjB,IACA8wF,EAAA7vF,EAAA3G,KACAy2F,EAAA7xE,EAAA6xE,MACAC,EAAA9xE,EAAA8xE,MAUA,OARA9xE,EAAA+xE,iBACAD,EAAA9xE,EAAA+xE,eAAA,GAAAD,MACAD,EAAA7xE,EAAA+xE,eAAA,GAAAF,OAGA32F,EAAA+J,EAAAxC,KAAAC,IAAA,EAAAD,KAAAuC,IAAA,GAAA2sF,EAAAE,EAAAH,OACAx2F,EAAA6J,EAAAtC,KAAAC,IAAA,EAAAD,KAAAuC,IAAA,GAAA8sF,EAAAF,GAAAH,IAEAv2F,EAaA,SAAA82F,GAAAh7F,GACA,OAAAmoF,EAAAnoF,IAAA,IAAAA,EAAA23F,SAYA,SAAAsD,GAAAr0D,GACA,MAAAA,EAAAz3B,WACAy3B,EAAAx3B,YAAAw3B,EAAAz3B,YAEA,OAAAy3B,EAwBA,SAAAs0D,GAAAt+B,GAUA,MANA,oBAAAA,IACAA,QAKAljD,MAAA8O,QAAAo0C,UAAA7lD,IAAA,SAAA/W,GAQA,MAJA,oBAAAA,IACAA,OAGA03F,EAAA13F,IAAAg7F,GAAAh7F,GACAA,EAGA,kBAAAA,GAAA,KAAAmF,KAAAnF,GACa8nI,EAAA5iI,EAAQwC,eAAA1H,QADrB,IAGGqwB,OAAA,SAAArwB,GACH,OAAAA,IAiBA,SAAAq4F,GAAAzxD,EAAAg2B,GAIA,OAHAs+B,GAAAt+B,GAAAzxC,QAAA,SAAAtjB,GACA,OAAA++B,EAAAn/B,YAAAI,KAEA++B,EAiBA,SAAAu0D,GAAAv0D,EAAAg2B,GACA,OAAAy7B,GAAA4C,GAAAr0D,GAAAg2B,GAaA,SAAAw+B,GAAApyE,GAKA,YAAApd,IAAAod,EAAAqyE,aAAAzvF,IAAAod,EAAAsyE,UAgBA,IAAAtyE,EAAAqyE,aAAAzvF,IAAAod,EAAAsyE,SAOA,IAAAtyE,EAAAqyE,QAAA,IAAAryE,EAAAsyE,SA4BA,IAAAC,GAAA1D,EAAA,iBAmBA2D,GAAA3D,EAAA,oBAEA4D,GAAAh8F,OAAA+1F,QACAJ,SACAsC,OACAE,YACAI,WACApvF,cACA0vF,YACAG,YACAG,YACAE,eACAE,eACAE,iBACAG,iBACAG,gBACArB,gBACAiB,mBACAM,sBACAI,wBACAtuF,yBACAwuF,gBACAQ,sBACAQ,cACAC,WACAC,oBACA7C,iBACA8C,iBACAC,qBACAG,KACAC,QAYAE,GAAA,EAQA,SAAAC,KACA,OAAAD,KAkBA,IAAAE,MASAC,GAAA,aAAAryE,MAAAuwB,UAWA,SAAA+hD,GAAAl1D,GACA,IAAAxjC,EAAAwjC,EAAAi1D,IAUA,OARAz4F,IACAA,EAAAwjC,EAAAi1D,IAAAF,MAGAC,GAAAx4F,KACAw4F,GAAAx4F,OAGAw4F,GAAAx4F,GAaA,SAAA24F,GAAAn1D,GACA,IAAAxjC,EAAAwjC,EAAAi1D,IAEA,QAAAz4F,KAIA3D,OAAAw4F,oBAAA2D,GAAAx4F,IAAAlC,OASA,SAAA86F,GAAAp1D,GACA,IAAAxjC,EAAAwjC,EAAAi1D,IAEA,GAAAz4F,EAAA,QAKAw4F,GAAAx4F,GAGA,WACAwjC,EAAAi1D,IACG,MAAAl1F,GACHigC,EAAAwyD,gBACAxyD,EAAAwyD,gBAAAyC,IAGAj1D,EAAAi1D,IAAA,OAuBA,SAAAI,GAAAnoC,EAAA5sD,GACA,IAAAsH,EAAAstF,GAAAhoC,GAGA,IAAAtlD,EAAA0tF,SAAAh1F,GAAAhG,gBACAsN,EAAA0tF,SAAAh1F,GAKA4sD,EAAAj6B,oBACAi6B,EAAAj6B,oBAAA3yB,EAAAsH,EAAA2tF,YAAA,GACKroC,EAAAsoC,aACLtoC,EAAAsoC,YAAA,KAAAl1F,EAAAsH,EAAA2tF,aAKA18F,OAAAw4F,oBAAAzpF,EAAA0tF,UAAAh7F,QAAA,WACAsN,EAAA0tF,gBACA1tF,EAAA2tF,kBACA3tF,EAAA+9B,UAIA,IAAA9sC,OAAAw4F,oBAAAzpF,GAAAtN,QACA86F,GAAAloC,GAmBA,SAAAuoC,GAAAne,EAAApqB,EAAA+N,EAAA3/D,GACA2/D,EAAA12C,QAAA,SAAAjkB,GAEAg3E,EAAApqB,EAAA5sD,EAAAhF,KAaA,SAAAo6F,GAAAtzE,GAEA,SAAAuzE,IACA,SAGA,SAAAC,IACA,SAQA,IAAAxzE,MAAAyzE,qBAAA,CACA,IAAAC,EAAA1zE,GAAuB4+G,EAAA1iI,EAAQ8jB,MAQ/B,QAAA1oB,KANA0oB,KAMA0zE,EAIA,WAAAp8F,GAAA,WAAAA,GAAA,gBAAAA,GAAA,oBAAAA,GAAA,oBAAAA,IAGA,gBAAAA,GAAAo8F,EAAAC,iBACA3zE,EAAA1oB,GAAAo8F,EAAAp8F,KAmDA,GA7CA0oB,EAAAhR,SACAgR,EAAAhR,OAAAgR,EAAA4zE,YAAyCkrC,EAAA5iI,GAIzC8jB,EAAA6zE,gBACA7zE,EAAA6zE,cAAA7zE,EAAA8zE,cAAA9zE,EAAAhR,OAAAgR,EAAA+zE,UAAA/zE,EAAA8zE,aAIA9zE,EAAA2zE,eAAA,WACAD,EAAAC,gBACAD,EAAAC,iBAEA3zE,EAAAg0E,aAAA,EACAN,EAAAM,aAAA,EACAh0E,EAAAi0E,kBAAA,GAGAj0E,EAAAi0E,kBAAA,EAGAj0E,EAAAk0E,gBAAA,WACAR,EAAAQ,iBACAR,EAAAQ,kBAEAl0E,EAAAm0E,cAAA,EACAT,EAAAS,cAAA,EACAn0E,EAAAyzE,qBAAAF,GAGAvzE,EAAAyzE,qBAAAD,EAGAxzE,EAAAo0E,yBAAA,WACAV,EAAAU,0BACAV,EAAAU,2BAEAp0E,EAAAq0E,8BAAAd,EACAvzE,EAAAk0E,mBAGAl0E,EAAAq0E,8BAAAb,EAGA,OAAAxzE,EAAAs0E,cAAA1xF,IAAAod,EAAAs0E,QAAA,CACA,IAAAC,EAAgBuqC,EAAA5iI,EAAQ8tF,gBACxB2G,EAAiBmuC,EAAA5iI,EAAQy0F,KAEzB3wE,EAAA8xE,MAAA9xE,EAAAs0E,SAAAC,KAAApD,YAAAR,KAAAQ,YAAA,IAAAoD,KAAArD,YAAAP,KAAAO,YAAA,GACAlxE,EAAA6xE,MAAA7xE,EAAAw0E,SAAAD,KAAAjD,WAAAX,KAAAW,WAAA,IAAAiD,KAAAlD,WAAAV,KAAAU,WAAA,GAIArxE,EAAAy0E,MAAAz0E,EAAA7gB,UAAA6gB,EAAA00E,QAIA,OAAA10E,EAAAqyE,aAAAzvF,IAAAod,EAAAqyE,SAKAryE,EAAAqyE,OAAA,EAAAryE,EAAAqyE,OAAA,IAAAryE,EAAAqyE,OAAA,IAAAryE,EAAAqyE,OAAA,KAMA,OAAAryE,EAMA,IAAA20E,IAAA,GAEA,WACA,IACA,IAAA9uB,EAAApvE,OAAAC,kBAAuC,WACvCE,IAAA,WACA+9F,IAAA,KAIIiqC,EAAA1iI,EAAQ8tB,iBAAA,YAAA67C,GACR+4D,EAAA1iI,EAAQ20B,oBAAA,YAAAg1C,GACT,MAAAloE,MAVH,GAkBA,IAAAi3F,IAAA,0BAiBA,SAAA9gF,GAAAg3C,EAAA5sD,EAAAg3E,GACA,GAAAxkE,MAAA8O,QAAAthB,GACA,OAAAm1F,GAAAv/E,GAAAg3C,EAAA5sD,EAAAg3E,GAGA,IAAA1vE,EAAAstF,GAAAhoC,GAiDA,GA9CAtlD,EAAA0tF,WACA1tF,EAAA0tF,aAGA1tF,EAAA0tF,SAAAh1F,KACAsH,EAAA0tF,SAAAh1F,OAGAg3E,EAAA2f,OACA3f,EAAA2f,KAAAlC,MAGAntF,EAAA0tF,SAAAh1F,GAAAc,KAAAk2E,GAEA1vE,EAAA2tF,aACA3tF,EAAA+9B,UAAA,EAEA/9B,EAAA2tF,WAAA,SAAAnzE,EAAA80E,GAEA,IAAAtvF,EAAA+9B,SAAA,CAIAvjB,EAAAszE,GAAAtzE,GAEA,IAAAkzE,EAAA1tF,EAAA0tF,SAAAlzE,EAAA9hB,MAEA,GAAAg1F,EAIA,IAFA,IAAA6B,EAAA7B,EAAAlmF,MAAA,GAEA7W,EAAA,EAAAqB,EAAAu9F,EAAA78F,OAAgD/B,EAAAqB,EAAOrB,IAAA,CACvD,GAAA6pB,EAAAq0E,gCACA,MAEA,IACAU,EAAA5+F,GAAAD,KAAA40D,EAAA9qC,EAAA80E,GACa,MAAAn3F,GACbuwF,EAAA5gE,MAAA3vB,QAQA,IAAA6H,EAAA0tF,SAAAh1F,GAAAhG,OACA,GAAA4yD,EAAA9gC,iBAAA,CACA,IAAA/O,GAAA,EAEA05E,IAAAC,GAAAnsF,QAAAvK,IAAA,IACA+c,GAAmB+5E,SAAA,IAEnBlqC,EAAA9gC,iBAAA9rB,EAAAsH,EAAA2tF,WAAAl4E,QACK6vC,EAAAmqC,aACLnqC,EAAAmqC,YAAA,KAAA/2F,EAAAsH,EAAA2tF,YAkBA,SAAAn/E,GAAA82C,EAAA5sD,EAAAg3E,GAEA,GAAA6d,GAAAjoC,GAAA,CAIA,IAAAtlD,EAAAstF,GAAAhoC,GAGA,GAAAtlD,EAAA0tF,SAAA,CAIA,GAAAxiF,MAAA8O,QAAAthB,GACA,OAAAm1F,GAAAr/E,GAAA82C,EAAA5sD,EAAAg3E,GAIA,IAAAggB,EAAA,SAAAt3D,EAAA3mC,GACAuO,EAAA0tF,SAAAj8F,MACAg8F,GAAAr1D,EAAA3mC,IAIA,QAAA2L,IAAA1E,EAAA,CASA,IAAAg1F,EAAA1tF,EAAA0tF,SAAAh1F,GAGA,GAAAg1F,EAKA,GAAAhe,EAAA,CAMA,GAAAA,EAAA2f,KACA,QAAAr9F,EAAA,EAAmBA,EAAA07F,EAAAh7F,OAAqBV,IACxC07F,EAAA17F,GAAAq9F,OAAA3f,EAAA2f,MACA3B,EAAAj/E,OAAAzc,IAAA,GAKAy7F,GAAAnoC,EAAA5sD,QAbAg3F,EAAApqC,EAAA5sD,QAjBA,QAAAjH,KAAAuO,EAAA0tF,SACAz8F,OAAAkB,UAAAC,eAAA1B,KAAAsP,EAAA0tF,aAAkEj8F,IAClEi+F,EAAApqC,EAAA7zD,KA+CA,SAAAqV,GAAAw+C,EAAA9qC,EAAA80E,GAIA,IAAAK,EAAApC,GAAAjoC,GAAAgoC,GAAAhoC,MACAltC,EAAAktC,EAAAlsD,YAAAksD,EAAAsqC,cAqBA,GAhBA,kBAAAp1E,EACAA,GAAa9hB,KAAA8hB,EAAAhR,OAAA87C,GACV9qC,EAAAhR,SACHgR,EAAAhR,OAAA87C,GAIA9qC,EAAAszE,GAAAtzE,GAGAm1E,EAAAhC,YACAgC,EAAAhC,WAAAj9F,KAAA40D,EAAA9qC,EAAA80E,GAKAl3E,IAAAoC,EAAAyzE,yBAAA,IAAAzzE,EAAAyN,QACAnhB,GAAApW,KAAA,KAAA0nB,EAAAoC,EAAA80E,QAGG,IAAAl3E,IAAAoC,EAAAi0E,iBAAA,CACH,IAAAoB,EAAAvC,GAAA9yE,EAAAhR,QAGAgR,EAAAhR,OAAAgR,EAAA9hB,QAEAm3F,EAAA9xD,UAAA,EAEA,oBAAAvjB,EAAAhR,OAAAgR,EAAA9hB,OACA8hB,EAAAhR,OAAAgR,EAAA9hB,QAGAm3F,EAAA9xD,UAAA,GAKA,OAAAvjB,EAAAi0E,iBAeA,SAAA5mE,GAAAy9B,EAAA5sD,EAAAg3E,GACA,GAAAxkE,MAAA8O,QAAAthB,GACA,OAAAm1F,GAAAhmE,GAAAy9B,EAAA5sD,EAAAg3E,GAEA,IAAAzJ,EAAA,SAAAA,IACAz3D,GAAA82C,EAAA5sD,EAAAutE,GACAyJ,EAAApnE,MAAAnY,KAAAsC,YAIAwzE,EAAAopB,KAAA3f,EAAA2f,KAAA3f,EAAA2f,MAAAlC,KACA7+E,GAAAg3C,EAAA5sD,EAAAutE,GAGA,IAAA6pB,GAAA7+F,OAAA+1F,QACA8G,YACAx/E,MACAE,OACA1H,WACA+gB,SAUAkoE,IAAA,EACAj6E,QAAA,EAKAm6E,GAAA,WAGA,GAAArJ,MAAA,IAAA9wE,GAAAL,QAAAw6E,UAAA,CAIA,IAAAC,EAAAhlF,MAAA/Y,UAAAqV,MAAA9W,KAAwC4oI,EAAA5iI,EAAQ+tF,qBAAA,UAChD0L,EAAAjlF,MAAA/Y,UAAAqV,MAAA9W,KAA0C4oI,EAAA5iI,EAAQ+tF,qBAAA,UAClD2L,EAAAllF,MAAA/Y,UAAAqV,MAAA9W,KAAwC4oI,EAAA5iI,EAAQ+tF,qBAAA,aAChD4L,EAAAH,EAAAzoF,OAAA0oF,EAAAC,GAGA,GAAAC,KAAA39F,OAAA,EAEA,QAAAnC,EAAA,EAAA4H,EAAAk4F,EAAA39F,OAAwCnC,EAAA4H,EAAO5H,IAAA,CAC/C,IAAAmgG,EAAAL,EAAA9/F,GAGA,IAAAmgG,MAAA1F,aAeO,CACP2F,GAAA,GACA,MAdA,QAAAvzF,IAAAszF,EAAAz5E,OAAA,CACA,IAAAxB,EAAAi7E,EAAA1F,aAAA,cAIA,OAAAv1E,GAEAK,GAAA46E,SAYGX,IACHY,GAAA,KAcA,SAAAA,GAAAC,EAAAC,GACAA,IACA/6E,GAAA+6E,GAGEuoC,EAAA1iI,EAAQ09B,WAAA67D,GAAAW,GAGVhK,KAAwB,aAAR0yC,EAAA5iI,EAAQkzB,WACxBmmE,IAAA,EAOAloE,GAAMuxG,EAAA1iI,EAAQ,kBACdq5F,IAAA,IAkBA,IAAAe,GAAA,SAAAv3F,GACA,IAAAwF,EAAcu6H,EAAA5iI,EAAQ+B,cAAA,SAItB,OAFAsG,EAAAxF,YAEAwF,GAYAgyF,GAAA,SAAA34D,EAAAg2B,GACAh2B,EAAA44D,WACA54D,EAAA44D,WAAAC,QAAA7iC,EAEAh2B,EAAAh+B,YAAAg0D,GAyBAr8D,GAAA,SAAAkmB,EAAAy3D,EAAAwhB,GAEAxhB,EAAA2f,OACA3f,EAAA2f,KAAAlC,MAIA,IAAAgE,EAAA,WACA,OAAAzhB,EAAApnE,MAAA2P,EAAAxlB,YAWA,OAFA0+F,EAAA9B,KAAA6B,IAAA,IAAAxhB,EAAA2f,KAAA3f,EAAA2f,KAEA8B,GAeAC,GAAA,SAAA1hB,EAAAkhB,GACA,IAAAS,EAAAr2E,KAAA4P,MAEA0mE,EAAA,WACA,IAAA1mE,EAAA5P,KAAA4P,MAEAA,EAAAymE,GAAAT,IACAlhB,EAAApnE,WAAAlL,EAAA3K,WACA4+F,EAAAzmE,IAIA,OAAA0mE,GA4BAC,GAAA,SAAAtrB,EAAA2qB,EAAAY,GACA,IAAAv5E,EAAAxlB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,GAAoF2mI,EAAA1iI,EAEpFytB,OAAA,EAGA,kBACA,IAAAj0B,EAAAC,KACAwe,EAAAlc,UAEAg/F,EAAA,WACAttE,EAAA,KACAstE,EAAA,KACAD,GACAvrB,EAAA39D,MAAApY,EAAAye,KAIAwV,GAAAqtE,GACAvrB,EAAA39D,MAAApY,EAAAye,GAGAsJ,EAAAic,aAAA/P,GACAA,EAAAlM,EAAAmc,WAAAq9D,EAAAb,KAiBAzkE,GAAA,aA+BAA,GAAAh6B,UAAAu/F,kBAYAvlE,GAAAh6B,UAAAmc,GAAA,SAAA5V,EAAAg3E,GAGA,IAAAiiB,EAAAxhG,KAAAq0B,iBAEAr0B,KAAAq0B,iBAAA,aACAlW,GAAAne,KAAAuI,EAAAg3E,GACAv/E,KAAAq0B,iBAAAmtE,GAUAxlE,GAAAh6B,UAAAqyB,iBAAA2H,GAAAh6B,UAAAmc,GAaA6d,GAAAh6B,UAAAqc,IAAA,SAAA9V,EAAAg3E,GACAlhE,GAAAre,KAAAuI,EAAAg3E,IAUAvjD,GAAAh6B,UAAAk5B,oBAAAc,GAAAh6B,UAAAqc,IAaA2d,GAAAh6B,UAAA01B,IAAA,SAAAnvB,EAAAg3E,GAGA,IAAAiiB,EAAAxhG,KAAAq0B,iBAEAr0B,KAAAq0B,iBAAA,aACAqD,GAAA13B,KAAAuI,EAAAg3E,GACAv/E,KAAAq0B,iBAAAmtE,GAmBAxlE,GAAAh6B,UAAA2U,QAAA,SAAA0T,GACA,IAAA9hB,EAAA8hB,EAAA9hB,MAAA8hB,EAEA,kBAAAA,IACAA,GAAa9hB,SAEb8hB,EAAAszE,GAAAtzE,GAEArqB,KAAAuhG,eAAAh5F,IAAAvI,KAAA,KAAAuI,IACAvI,KAAA,KAAAuI,GAAA8hB,GAGA1T,GAAA3W,KAAAqqB,IAUA2R,GAAAh6B,UAAAy/F,cAAAzlE,GAAAh6B,UAAA2U,QAgBA,IAAA+qF,GAAA,SAAA5/F,GACA,OAAAA,aAAAk6B,MAAAl6B,EAAA6/F,cAAA,4BAAApjB,MAAA,SAAA16E,GACA,0BAAA/B,EAAA+B,MAcA+9F,GAAA,SAAAr5F,GACA,MAGA,kBAAAA,GAAA,KAAA/B,KAAA+B,IAAAwS,MAAA8O,QAAAthB,QAAAhG,QAcAs/F,GAAA,SAAAxoF,GACA,IAAAA,EAAAyoF,WAAAJ,GAAAroF,GACA,UAAA7W,MAAA,0DAcAu/F,GAAA,SAAAx5F,GACA,IAAAq5F,GAAAr5F,GACA,UAAA/F,MAAA,6DAcAw/F,GAAA,SAAA5jF,GACA,uBAAAA,EACA,UAAA5b,MAAA,0CAmBAy/F,GAAA,SAAAliG,EAAAye,GAIA,IAAA0jF,EAAA1jF,EAAAjc,OAAA,GAAAic,EAAA,KAAAze,GAAAye,EAAA,KAAAze,EAAA4hG,YACAtoF,OAAA,EACA9Q,OAAA,EACA6V,OAAA,EAyBA,OAvBA8jF,GACA7oF,EAAAtZ,EAAA4hG,YAIAnjF,EAAAjc,QAAA,GACAic,EAAAm8B,QAGApyC,EAAAiW,EAAA,GACAJ,EAAAI,EAAA,KAEAnF,EAAAmF,EAAA,GACAjW,EAAAiW,EAAA,GACAJ,EAAAI,EAAA,IAGAqjF,GAAAxoF,GACA0oF,GAAAx5F,GACAy5F,GAAA5jF,GAEAA,EAAAxc,GAAA7B,EAAAqe,IAEU8jF,kBAAA7oF,SAAA9Q,OAAA6V,aAoBV+jF,GAAA,SAAA9oF,EAAA4I,EAAA1Z,EAAA6V,GACAyjF,GAAAxoF,GAEAA,EAAAyoF,SACAnC,GAAA19E,GAAA5I,EAAA9Q,EAAA6V,GAEA/E,EAAA4I,GAAA1Z,EAAA6V,IAUAgkF,IAyBAjkF,GAAA,WAGA,IAFA,IAAA2B,EAAA9f,KAEA0pF,EAAApnF,UAAAC,OAAAic,EAAAzD,MAAA2uE,GAAArpE,EAAA,EAAmEA,EAAAqpE,EAAarpE,IAChF7B,EAAA6B,GAAA/d,UAAA+d,GAGA,IAAAgiF,EAAAJ,GAAAjiG,KAAAwe,GACA0jF,EAAAG,EAAAH,gBACA7oF,EAAAgpF,EAAAhpF,OACA9Q,EAAA85F,EAAA95F,KACA6V,EAAAikF,EAAAjkF,SAKA,GAHA+jF,GAAA9oF,EAAA,KAAA9Q,EAAA6V,IAGA8jF,EAAA,CAGA,IAAAI,EAAA,WACA,OAAAxiF,EAAAzB,IAAAhF,EAAA9Q,EAAA6V,IAKAkkF,EAAApD,KAAA9gF,EAAA8gF,KAKA,IAAAqD,EAAA,WACA,OAAAziF,EAAAzB,IAAA,UAAAikF,IAKAC,EAAArD,KAAA9gF,EAAA8gF,KAEAiD,GAAAniG,KAAA,eAAAsiG,GACAH,GAAA9oF,EAAA,eAAAkpF,KA4BA7qE,IAAA,WAGA,IAFA,IAAA1B,EAAAh2B,KAEAi4F,EAAA31F,UAAAC,OAAAic,EAAAzD,MAAAk9E,GAAAC,EAAA,EAAsEA,EAAAD,EAAeC,IACrF15E,EAAA05E,GAAA51F,UAAA41F,GAGA,IAAAsK,EAAAP,GAAAjiG,KAAAwe,GACA0jF,EAAAM,EAAAN,gBACA7oF,EAAAmpF,EAAAnpF,OACA9Q,EAAAi6F,EAAAj6F,KACA6V,EAAAokF,EAAApkF,SAKA,GAAA8jF,EACAC,GAAA9oF,EAAA,MAAA9Q,EAAA6V,OAGK,CACL,IAAA0+D,EAAA,SAAAA,IACA,QAAAqb,EAAA71F,UAAAC,OAAAkgG,EAAA1nF,MAAAo9E,GAAAC,EAAA,EAA2EA,EAAAD,EAAeC,IAC1FqK,EAAArK,GAAA91F,UAAA81F,GAGApiE,EAAA3X,IAAAhF,EAAA9Q,EAAAu0E,GACA1+D,EAAAjG,MAAA,KAAAsqF,IAKA3lB,EAAAoiB,KAAA9gF,EAAA8gF,KACAiD,GAAA9oF,EAAA,MAAA9Q,EAAAu0E,KAwBAz+D,IAAA,SAAAqkF,EAAAC,EAAAvkF,GAGA,IAAAskF,GAAAd,GAAAc,GACArkF,GAAAre,KAAA2hG,YAAAe,EAAAC,OAGK,CACL,IAAAtpF,EAAAqpF,EACAn6F,EAAAo6F,EAGAd,GAAAxoF,GACA0oF,GAAAx5F,GACAy5F,GAAA5jF,GAGAA,EAAAxc,GAAA5B,KAAAoe,GAIApe,KAAAqe,IAAA,UAAAD,GAEA/E,EAAAyoF,UACAzjF,GAAAhF,EAAA9Q,EAAA6V,GACAC,GAAAhF,EAAA,UAAA+E,IACOsjF,GAAAroF,KACPA,EAAAgF,IAAA9V,EAAA6V,GACA/E,EAAAgF,IAAA,UAAAD,MAkBAzH,QAAA,SAAA0T,EAAA80E,GACA,OAAAxoF,GAAA3W,KAAA2hG,YAAAt3E,EAAA80E,KAqBA,SAAAyD,GAAAvpF,GACA,IAAAiM,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAugG,EAAAv9E,EAAAu9E,YAIA,GAAAA,EAAA,CACA,IAAAxpF,EAAAwpF,GAAAf,SACA,UAAAt/F,MAAA,oBAAAqgG,EAAA,mCAEAxpF,EAAAsoF,YAAAtoF,EAAAwpF,QAEAxpF,EAAAsoF,YAAAtI,EAAA,QAA2CjwF,UAAA,kBAa3C,OAVA0V,EAAAzF,EAAA+oF,IAGA/oF,EAAA8E,GAAA,qBACA9E,EAAAgF,MACI4qH,EAAA1iI,EAAQ09B,WAAA,WACZ5qB,EAAAsoF,YAAA,MACK,KAGLtoF,EAcA,IAAAypF,IAQA3xF,SAeA4xF,SAAA,SAAAC,GACA,IAAAljF,EAAA9f,KAGA,oBAAAgjG,IACAA,OAGA,IAAAC,OAAA,EAuCA,OArCA7L,EAAA4L,EAAA,SAAA3hG,EAAAM,GAIAme,EAAA3O,MAAAxP,KAAAN,IACA4hG,QACAA,EAAAthG,IACAiqF,KAAA9rE,EAAA3O,MAAAxP,GACAuhG,GAAA7hG,IAIAye,EAAA3O,MAAAxP,GAAAN,IAMA4hG,GAAAvB,GAAA1hG,OAaAA,KAAA2W,SACAssF,UACA16F,KAAA,iBAIA06F,IAsBA,SAAAE,GAAA9pF,EAAA+pF,GAYA,OAXAtkF,EAAAzF,EAAAypF,IAIAzpF,EAAAlI,MAAA2N,KAA0BzF,EAAAlI,MAAAiyF,GAG1B,oBAAA/pF,EAAAgqF,oBAAA3B,GAAAroF,IACAA,EAAA8E,GAAA,eAAA9E,EAAAgqF,oBAGAhqF,EAiBA,SAAAiqF,GAAAtc,GACA,wBAAAA,EACAA,EAGAA,EAAAuc,OAAA,GAAA1L,cAAA7Q,EAAA3vE,MAAA,GAeA,SAAAmsF,GAAAC,EAAAC,GACA,OAAAJ,GAAAG,KAAAH,GAAAI,GAkBA,SAAAhuE,KAGA,IAFA,IAAA5tB,KAEA4hF,EAAApnF,UAAAC,OAAA4jB,EAAApL,MAAA2uE,GAAArpE,EAAA,EAAoEA,EAAAqpE,EAAarpE,IACjF8F,EAAA9F,GAAA/d,UAAA+d,GAsBA,OAnBA8F,EAAAqG,QAAA,SAAAzN,GACAA,GAIAq4E,EAAAr4E,EAAA,SAAA1d,EAAAM,GACA21F,EAAAj2F,IAKAi2F,EAAAxvF,EAAAnG,MACAmG,EAAAnG,OAGAmG,EAAAnG,GAAA+zB,GAAA5tB,EAAAnG,GAAAN,IARAyG,EAAAnG,GAAAN,MAYAyG,EAkBA,IAAA+6E,GAAA,WA2BA,SAAAA,EAAA/7D,EAAAxB,EAAAE,GAqBA,GApBAsxE,EAAA92F,KAAA6iF,IAIA/7D,GAAA9mB,KAAA45B,KACA55B,KAAAqzE,QAAAvsD,EAAA9mB,KAEAA,KAAAqzE,QAAAvsD,EAIA9mB,KAAAijF,SAAAvtD,MAAmC11B,KAAAijF,UAGnC39D,EAAAtlB,KAAAijF,SAAAvtD,GAAA11B,KAAAijF,SAAA39D,GAGAtlB,KAAA2jG,IAAAr+E,EAAA7gB,IAAA6gB,EAAA2iB,IAAA3iB,EAAA2iB,GAAAxjC,IAGAzE,KAAA2jG,IAAA,CAEA,IAAAl/F,EAAAqiB,KAAAriB,IAAAqiB,EAAAriB,MAAA,YAEAzE,KAAA2jG,IAAAl/F,EAAA,cAAAu4F,KAGAh9F,KAAA67D,MAAAv2C,EAAA3kB,MAAA,KAGA2kB,EAAA2iB,GACAjoC,KAAAy6E,IAAAn1D,EAAA2iB,IACK,IAAA3iB,EAAA+zE,WACLr5F,KAAAy6E,IAAAz6E,KAAAq5F,aAIA,IAAA/zE,EAAAs9E,SAEAA,GAAA5iG,MAAqB6iG,YAAA7iG,KAAAy6E,IAAA,aAErB0oB,GAAAnjG,UAAAkG,YAAAk9F,cAEApjG,KAAA4jG,aACA5jG,KAAA6jG,eACA7jG,KAAA8jG,oBAGA,IAAAx+E,EAAAy+E,cACA/jG,KAAA+jG,eAGA/jG,KAAAwlB,UAIA,IAAAF,EAAA0+E,qBACAhkG,KAAAikG,sBAwgDA,OA7/CAphB,EAAA7gF,UAAAyc,QAAA,WAeA,GAHAze,KAAA2W,SAAkBpO,KAAA,UAAAuvB,SAAA,IAGlB93B,KAAA4jG,UACA,QAAAxjG,EAAAJ,KAAA4jG,UAAArhG,OAAA,EAA6CnC,GAAA,EAAQA,IACrDJ,KAAA4jG,UAAAxjG,GAAAqe,SACAze,KAAA4jG,UAAAxjG,GAAAqe,UAMAze,KAAA4jG,UAAA,KACA5jG,KAAA6jG,YAAA,KACA7jG,KAAA8jG,gBAAA,KAEA9jG,KAAAy6E,MAEAz6E,KAAAy6E,IAAAxxE,YACAjJ,KAAAy6E,IAAAxxE,WAAAwH,YAAAzQ,KAAAy6E,KAGA4iB,GAAAr9F,KAAAy6E,KACAz6E,KAAAy6E,IAAA,MAIAz6E,KAAAqzE,QAAA,MAWAwP,EAAA7gF,UAAA8kB,OAAA,WACA,OAAA9mB,KAAAqzE,SAkBAwP,EAAA7gF,UAAAsjB,QAAA,SAAAhZ,GAGA,OAFAisF,EAAA9lE,KAAA,kFAEAnmB,GAIAtM,KAAAijF,SAAAvtD,GAAA11B,KAAAijF,SAAA32E,GACAtM,KAAAijF,UAJAjjF,KAAAijF,UAeAJ,EAAA7gF,UAAAimC,GAAA,WACA,OAAAjoC,KAAAy6E,KAoBAoI,EAAA7gF,UAAAq3F,SAAA,SAAA5wF,EAAA0vB,EAAArW,GACA,OAAAu3E,EAAA5wF,EAAA0vB,EAAArW,IA2CA+gE,EAAA7gF,UAAAkiG,SAAA,SAAAld,EAAAmd,GACA,IAAAC,EAAA9hG,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,GAAA0kF,EAEApkF,EAAA5C,KAAAqzE,QAAA/vD,UAAAtjB,KAAAqzE,QAAA/vD,WACA+gF,EAAArkG,KAAAqzE,QAAAgxB,WAAArkG,KAAAqzE,QAAAgxB,YACA/gF,EAAA+gF,KAAAzhG,GACA0hG,EAAA1hG,KAAAe,MAAA,QACA4gG,EAAAF,KAAAC,GAEAE,EAAAJ,EAqBA,OAnBA9gF,KAAA0jE,GACAwd,EAAAlhF,EAAA0jE,GACKud,KAAAvd,KACLwd,EAAAD,EAAAvd,IAGAmd,IACAK,IAAArhG,QAAA,aAA0D,SAAAD,EAAA4U,GAC1D,IAAAzW,EAAA8iG,EAAArsF,EAAA,GACApI,EAAArO,EAMA,MAJA,qBAAAA,IACAqO,EAAAxM,GAGAwM,KAIA80F,GAYA3hB,EAAA7gF,UAAAyiG,UAAA,WACA,OAAAzkG,KAAA0kG,YAAA1kG,KAAAy6E,KAWAoI,EAAA7gF,UAAAyC,GAAA,WACA,OAAAzE,KAAA2jG,KAYA9gB,EAAA7gF,UAAArB,KAAA,WACA,OAAAX,KAAA67D,OAWAgnB,EAAA7gF,UAAA2iG,SAAA,WACA,OAAA3kG,KAAA4jG,WAcA/gB,EAAA7gF,UAAA4iG,aAAA,SAAAngG,GACA,OAAAzE,KAAA6jG,YAAAp/F,IAcAo+E,EAAA7gF,UAAA6iG,SAAA,SAAAlkG,GACA,GAAAA,EAMA,OAFAA,EAAA2iG,GAAA3iG,GAEAX,KAAA8jG,gBAAAnjG,IAuBAkiF,EAAA7gF,UAAA8iG,SAAA,SAAAlL,GACA,IAAAt0E,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAwV,EAAAxV,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,GAAAtC,KAAA4jG,UAAArhG,OAEAsmB,OAAA,EACAk8E,OAAA,EAGA,qBAAAnL,EAAA,CACAmL,EAAAzB,GAAA1J,GAEA,IAAAoL,EAAA1/E,EAAA2/E,gBAAAF,EAGAz/E,EAAA3kB,KAAAokG,EAIA,IAAAG,EAAAriB,EAAAC,aAAAkiB,GAEA,IAAAE,EACA,UAAA1iG,MAAA,aAAAwiG,EAAA,mBAOA,uBAAAE,EACA,YAGAr8E,EAAA,IAAAq8E,EAAAllG,KAAAqzE,SAAArzE,KAAAslB,QAIAuD,EAAA+wE,EAmBA,GAhBA55F,KAAA4jG,UAAAtlF,OAAAxG,EAAA,EAAA+Q,GAEA,oBAAAA,EAAApkB,KACAzE,KAAA6jG,YAAAh7E,EAAApkB,MAAAokB,GAKAk8E,KAAAl8E,EAAAloB,MAAA2iG,GAAAz6E,EAAAloB,QAEAokG,IACA/kG,KAAA8jG,gBAAAiB,GAAAl8E,GAKA,oBAAAA,EAAAof,IAAApf,EAAAof,KAAA,CACA,IAAAn+B,EAAA9J,KAAAykG,YAAAE,SACAQ,EAAAr7F,EAAAgO,IAAA,KAEA9X,KAAAykG,YAAA5K,aAAAhxE,EAAAof,KAAAk9D,GAIA,OAAAt8E,GAYAg6D,EAAA7gF,UAAAyO,YAAA,SAAAoY,GAKA,GAJA,kBAAAA,IACAA,EAAA7oB,KAAA6kG,SAAAh8E,IAGAA,GAAA7oB,KAAA4jG,UAAA,CAMA,IAFA,IAAAwB,GAAA,EAEAhlG,EAAAJ,KAAA4jG,UAAArhG,OAAA,EAA2CnC,GAAA,EAAQA,IACnD,GAAAJ,KAAA4jG,UAAAxjG,KAAAyoB,EAAA,CACAu8E,GAAA,EACAplG,KAAA4jG,UAAAtlF,OAAAle,EAAA,GACA,MAIA,GAAAglG,EAAA,CAIAplG,KAAA6jG,YAAAh7E,EAAApkB,MAAA,KACAzE,KAAA8jG,gBAAAj7E,EAAAloB,QAAA,KAEA,IAAA0kG,EAAAx8E,EAAAof,KAEAo9D,KAAAp8F,aAAAjJ,KAAAykG,aACAzkG,KAAAykG,YAAAh0F,YAAAoY,EAAAof,SASA46C,EAAA7gF,UAAA+hG,aAAA,WACA,IAAAjkF,EAAA9f,KAEA2kG,EAAA3kG,KAAAijF,SAAA0hB,SAEA,GAAAA,EAAA,CAEA,IAAAW,EAAAtlG,KAAAijF,SAEAsiB,EAAA,SAAA3L,GACA,IAAAj5F,EAAAi5F,EAAAj5F,KACAuvE,EAAA0pB,EAAA1pB,KAWA,QANAjjE,IAAAq4F,EAAA3kG,KACAuvE,EAAAo1B,EAAA3kG,KAKA,IAAAuvE,EAAA,EAMA,IAAAA,IACAA,MAMAA,EAAA3qD,cAAAzF,EAAAmjE,SAAA19D,cAMA,IAAAigF,EAAA1lF,EAAAglF,SAAAnkG,EAAAuvE,GAEAs1B,IACA1lF,EAAAnf,GAAA6kG,KAKAC,OAAA,EACAC,EAAA7iB,EAAAC,aAAA,QAGA2iB,EADA1qF,MAAA8O,QAAA86E,GACAA,EAEA7jG,OAAAyrB,KAAAo4E,GAGAc,EAGAnuF,OAAAxW,OAAAyrB,KAAAvsB,KAAAijF,UAAAvxD,OAAA,SAAAkoE,GACA,OAAA6L,EAAAh3D,KAAA,SAAAk3D,GACA,wBAAAA,EACA/L,IAAA+L,EAEA/L,IAAA+L,EAAAhlG,UAEOyX,IAAA,SAAAwhF,GACP,IAAAj5F,OAAA,EACAuvE,OAAA,EAUA,MARA,kBAAA0pB,GACAj5F,EAAAi5F,EACA1pB,EAAAy0B,EAAAhkG,IAAAmf,EAAAmjE,SAAAtiF,SAEAA,EAAAi5F,EAAAj5F,KACAuvE,EAAA0pB,IAGgBj5F,OAAAuvE,UACTx+C,OAAA,SAAAkoE,GAIP,IAAAn5F,EAAAoiF,EAAAC,aAAA8W,EAAA1pB,KAAA+0B,gBAAA3B,GAAA1J,EAAAj5F,OAEA,OAAAF,IAAAilG,EAAAE,OAAAnlG,KACO+rB,QAAA+4E,KAcP1iB,EAAA7gF,UAAA6jG,cAAA,WAGA,UAaAhjB,EAAA7gF,UAAAwjB,MAAA,SAAA+5D,GACA,IAAAumB,EAAAxjG,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,IAAAA,UAAA,GAEA,GAAAi9E,EAIA,OAAAv/E,KAAA+lG,cAMAD,EACAvmB,EAAAh/E,KAAAP,MAGAA,KAAAikC,WAAAs7C,EAAA,KATAv/E,KAAAgmG,YAAAhmG,KAAAgmG,qBACAhmG,KAAAgmG,YAAA38F,KAAAk2E,KAmBAsD,EAAA7gF,UAAAikG,aAAA,WACAjmG,KAAA+lG,UAAA,EAGA/lG,KAAAikC,WAAA,WACA,IAAAiiE,EAAAlmG,KAAAgmG,YAGAhmG,KAAAgmG,eAEAE,KAAA3jG,OAAA,GACA2jG,EAAA15E,QAAA,SAAA+yD,GACAA,EAAAh/E,KAAAP,OACSA,MAUTA,KAAA2W,QAAA,UACK,IAuBLksE,EAAA7gF,UAAA46F,EAAA,SAAAzD,EAAArxE,GACA,OAAA80E,GAAAzD,EAAArxE,GAAA9nB,KAAAykG,cAuBA5hB,EAAA7gF,UAAA66F,GAAA,SAAA1D,EAAArxE,GACA,OAAA+0E,GAAA1D,EAAArxE,GAAA9nB,KAAAykG,cAeA5hB,EAAA7gF,UAAA83F,SAAA,SAAAC,GACA,OAAAD,GAAA95F,KAAAy6E,IAAAsf,IAWAlX,EAAA7gF,UAAAi4F,SAAA,SAAAC,GACAD,GAAAj6F,KAAAy6E,IAAAyf,IAWArX,EAAA7gF,UAAAm4F,YAAA,SAAAC,GACAD,GAAAn6F,KAAAy6E,IAAA2f,IAgBAvX,EAAA7gF,UAAAq4F,YAAA,SAAAC,EAAAlsD,GACAisD,GAAAr6F,KAAAy6E,IAAA6f,EAAAlsD,IASAy0C,EAAA7gF,UAAAmkG,KAAA,WACAnmG,KAAAm6F,YAAA,eASAtX,EAAA7gF,UAAAokG,KAAA,WACApmG,KAAAi6F,SAAA,eAWApX,EAAA7gF,UAAAqkG,YAAA,WACArmG,KAAAi6F,SAAA,qBAWApX,EAAA7gF,UAAAskG,cAAA,WACAtmG,KAAAm6F,YAAA,qBAoBAtX,EAAA7gF,UAAA64F,aAAA,SAAAC,GACA,OAAAD,GAAA76F,KAAAy6E,IAAAqgB,IAgBAjY,EAAA7gF,UAAAw3F,aAAA,SAAAsB,EAAAz5F,GACAm4F,GAAAx5F,KAAAy6E,IAAAqgB,EAAAz5F,IAaAwhF,EAAA7gF,UAAAy4F,gBAAA,SAAAK,GACAL,GAAAz6F,KAAAy6E,IAAAqgB,IAmBAjY,EAAA7gF,UAAAiK,MAAA,SAAA8gC,EAAAw5D,GACA,OAAAvmG,KAAAwmG,UAAA,QAAAz5D,EAAAw5D,IAmBA1jB,EAAA7gF,UAAAkK,OAAA,SAAA6gC,EAAAw5D,GACA,OAAAvmG,KAAAwmG,UAAA,SAAAz5D,EAAAw5D,IAcA1jB,EAAA7gF,UAAAykG,WAAA,SAAAx6F,EAAAC,GAEAlM,KAAAiM,SAAA,GACAjM,KAAAkM,WAiCA22E,EAAA7gF,UAAAwkG,UAAA,SAAAE,EAAA35D,EAAAw5D,GACA,QAAAt5F,IAAA8/B,EA0BA,OAxBA,OAAAA,WACAA,EAAA,IAIA,QAAAA,GAAAj6B,QAAA,eAAAi6B,GAAAj6B,QAAA,MACA9S,KAAAy6E,IAAA7rE,MAAA83F,GAAA35D,EAEA/sC,KAAAy6E,IAAA7rE,MAAA83F,GADO,SAAA35D,EACP,GAEAA,EAAA,UAIAw5D,GAOAvmG,KAAA2W,QAAA,oBAQA,IAAA3W,KAAAy6E,IACA,SAIA,IAAA5rE,EAAA7O,KAAAy6E,IAAA7rE,MAAA83F,GACAC,EAAA93F,EAAAiE,QAAA,MAEA,WAAA6zF,EAEAlgG,SAAAoI,EAAAwI,MAAA,EAAAsvF,GAAA,IAMAlgG,SAAAzG,KAAAy6E,IAAA,SAAA6oB,GAAAoD,IAAA,KAgBA7jB,EAAA7gF,UAAA4kG,iBAAA,SAAAF,GACA,IAAAG,EAAA,EAEA,aAAAH,GAAA,WAAAA,EACA,UAAAlkG,MAAA,uDAGA,GAAuB,oBAARymI,EAAA1iI,EAAQ2hC,iBAAA,CACvB,IAAAswD,EAA0BywC,EAAA1iI,EAAQ2hC,iBAAAloC,KAAAy6E,KAElCosB,EAAArO,EAAAsO,iBAAAJ,IAAAlO,EAAAkO,GASA,GALAG,EAAAngG,WAAAmgG,GAKA,IAAAA,EAAA,CACA,IAAAE,EAAA,SAAAzD,GAAAoD,GAEAG,EAAA7mG,KAAAy6E,IAAAssB,GAGA,OAAAF,GAyBAhkB,EAAA7gF,UAAAglG,kBAAA,WACA,OACA/6F,MAAAjM,KAAA4mG,iBAAA,SACA16F,OAAAlM,KAAA4mG,iBAAA,YAYA/jB,EAAA7gF,UAAAilG,aAAA,WACA,OAAAjnG,KAAA4mG,iBAAA,UAWA/jB,EAAA7gF,UAAAklG,cAAA,WACA,OAAAlnG,KAAA4mG,iBAAA,WAQA/jB,EAAA7gF,UAAAi5F,MAAA,WACAj7F,KAAAy6E,IAAAwgB,SAQApY,EAAA7gF,UAAAmlG,KAAA,WACAnnG,KAAAy6E,IAAA0sB,QAkBAtkB,EAAA7gF,UAAAolG,cAAA,WAEA,IAAAC,EAAA,EACAC,EAAA,KAKAC,EAAA,GAGAC,EAAA,IAEAC,OAAA,EAEAznG,KAAAme,GAAA,sBAAAkM,GAEA,IAAAA,EAAAq9E,QAAAnlG,SAEA+kG,GACAnL,MAAA9xE,EAAAq9E,QAAA,GAAAvL,MACAD,MAAA7xE,EAAAq9E,QAAA,GAAAxL,OAGAmL,GAAA,IAAAx8E,MAAAuwB,UAEAqsD,GAAA,KAIAznG,KAAAme,GAAA,qBAAAkM,GAEA,GAAAA,EAAAq9E,QAAAnlG,OAAA,EACAklG,GAAA,OACO,GAAAH,EAAA,CAGP,IAAAK,EAAAt9E,EAAAq9E,QAAA,GAAAvL,MAAAmL,EAAAnL,MACAyL,EAAAv9E,EAAAq9E,QAAA,GAAAxL,MAAAoL,EAAApL,MACA2L,EAAA/6F,KAAAg7F,KAAAH,IAAAC,KAEAC,EAAAN,IACAE,GAAA,MAKA,IAAAM,EAAA,WACAN,GAAA,GAIAznG,KAAAme,GAAA,aAAA4pF,GACA/nG,KAAAme,GAAA,cAAA4pF,GAIA/nG,KAAAme,GAAA,oBAAAkM,GAGA,GAFAi9E,EAAA,MAEA,IAAAG,EAAA,CAEA,IAAAO,GAAA,IAAAn9E,MAAAuwB,UAAAisD,EAGAW,EAAAR,IAEAn9E,EAAA2zE,iBAOAh+F,KAAA2W,QAAA,YAkCAksE,EAAA7gF,UAAAiiG,oBAAA,WAEA,GAAAjkG,KAAA8mB,UAAA9mB,KAAA8mB,SAAAmhF,mBAAA,CAKA,IAAAC,EAAAtmG,GAAA5B,KAAA8mB,SAAA9mB,KAAA8mB,SAAAmhF,oBAEAE,OAAA,EAEAnoG,KAAAme,GAAA,wBACA+pF,IAIAloG,KAAAooG,cAAAD,GAEAA,EAAAnoG,KAAAqoG,YAAAH,EAAA,OAGA,IAAAI,EAAA,SAAAj+E,GACA69E,IAEAloG,KAAAooG,cAAAD,IAGAnoG,KAAAme,GAAA,YAAA+pF,GACAloG,KAAAme,GAAA,WAAAmqF,GACAtoG,KAAAme,GAAA,cAAAmqF,KAsCAzlB,EAAA7gF,UAAAiiC,WAAA,SAAAs7C,EAAAvrD,GACA,IAIAu0E,EAAAC,EAJAxyE,EAAAh2B,KAqBA,OAfAu/E,EAAA39E,GAAA5B,KAAAu/E,GAEAgpB,EAAgB0gC,EAAA1iI,EAAQ09B,WAAA,WACxBjO,EAAA3X,IAAA,UAAAmqF,GACAjpB,KACKvrD,GAELw0E,EAAA,WACA,OAAAxyE,EAAA+N,aAAAwkE,IAGAC,EAAAtJ,KAAA,eAAAqJ,EAEAvoG,KAAAme,GAAA,UAAAqqF,GAEAD,GAoBA1lB,EAAA7gF,UAAA+hC,aAAA,SAAAwkE,GACI0gC,EAAA1iI,EAAQw9B,aAAAwkE,GAEZ,IAAAC,EAAA,aAMA,OAJAA,EAAAtJ,KAAA,eAAAqJ,EAEAvoG,KAAAqe,IAAA,UAAAmqF,GAEAD,GAyBA1lB,EAAA7gF,UAAAqmG,YAAA,SAAA9oB,EAAAkpB,GACA,IAAAlwE,EAAAv4B,KAEAu/E,EAAA39E,GAAA5B,KAAAu/E,GAEA,IAAAmpB,EAAqBugC,EAAA1iI,EAAQ8hG,YAAA9oB,EAAAkpB,GAE7BD,EAAA,WACA,OAAAjwE,EAAA6vE,cAAAM,IAOA,OAJAF,EAAAtJ,KAAA,gBAAAwJ,EAEA1oG,KAAAme,GAAA,UAAAqqF,GAEAE,GAoBA7lB,EAAA7gF,UAAAomG,cAAA,SAAAM,GACIugC,EAAA1iI,EAAQ6hG,cAAAM,GAEZ,IAAAF,EAAA,aAMA,OAJAA,EAAAtJ,KAAA,gBAAAwJ,EAEA1oG,KAAAqe,IAAA,UAAAmqF,GAEAE,GA8BA7lB,EAAA7gF,UAAA2mG,sBAAA,SAAAppB,GACA,IAIA96E,EAAA+jG,EAJAnvE,EAAAr5B,KAMA,OAAAA,KAAA4oG,cACArpB,EAAA39E,GAAA5B,KAAAu/E,GAEA96E,EAAWwkI,EAAA1iI,EAAQoiG,sBAAA,WACnBtvE,EAAAhb,IAAA,UAAAmqF,GACAjpB,MAGAipB,EAAA,WACA,OAAAnvE,EAAAwvE,qBAAApkG,IAGA+jG,EAAAtJ,KAAA,WAAAz6F,EACAzE,KAAAme,GAAA,UAAAqqF,GAEA/jG,GAIAzE,KAAAikC,WAAAs7C,EAAA,SAqBAsD,EAAA7gF,UAAA6mG,qBAAA,SAAApkG,GACA,GAAAzE,KAAA4oG,aAAA,CACMqgC,EAAA1iI,EAAQsiG,qBAAApkG,GAEd,IAAA+jG,EAAA,aAMA,OAJAA,EAAAtJ,KAAA,WAAAz6F,EAEAzE,KAAAqe,IAAA,UAAAmqF,GAEA/jG,EAIA,OAAAzE,KAAA+jC,aAAAt/B,IAwBAo+E,EAAA2C,kBAAA,SAAA7kF,EAAAmoG,GACA,qBAAAnoG,MACA,UAAA6B,MAAA,4BAAA7B,EAAA,kCAGA,IAAA+kG,EAAA7iB,EAAAC,aAAA,QAGA8iB,EAAAF,KAAAE,OAAAkD,GACAC,EAAAlmB,IAAAimB,GAAAjmB,EAAA7gF,UAAAgnG,cAAAF,EAAA9mG,WAEA,GAAA4jG,IAAAmD,EAAA,CACA,IAAAE,OAAA,EAQA,MALAA,EADArD,EACA,qDAEA,+BAGA,IAAApjG,MAAA,uBAAA7B,EAAA,MAAyDsoG,EAAA,KAGzDtoG,EAAA2iG,GAAA3iG,GAEAkiF,EAAAqmB,cACArmB,EAAAqmB,gBAGA,IAAAC,EAAAtmB,EAAAC,aAAA,UAEA,cAAAniF,GAAAwoG,KAAAhlB,QAAA,CACA,IAAAA,EAAAglB,EAAAhlB,QACAilB,EAAAtoG,OAAAyrB,KAAA43D,GAMA,GAAAA,GAAAilB,EAAA7mG,OAAA,GAAA6mG,EAAAhxF,IAAA,SAAAixF,GACA,OAAAllB,EAAAklB,KACO9qB,MAAA+qB,SACP,UAAA9mG,MAAA,oEAMA,OAFAqgF,EAAAqmB,YAAAvoG,GAAAmoG,EAEAA,GAmBAjmB,EAAAC,aAAA,SAAAniF,GACA,GAAAA,EAMA,OAFAA,EAAA2iG,GAAA3iG,GAEAkiF,EAAAqmB,aAAArmB,EAAAqmB,YAAAvoG,GACAkiF,EAAAqmB,YAAAvoG,QADA,GAKAkiF,EA7lDA,GA0mDAA,GAAA7gF,UAAA4mG,aAAkD,oBAARqgC,EAAA1iI,EAAQoiG,uBAAwD,oBAARsgC,EAAA1iI,EAAQsiG,qBAE1GhmB,GAAA2C,kBAAA,YAAA3C,IAOA,IAAAsS,GAAiB8zC,EAAA1iI,EAAQuE,WAAcm+H,EAAA1iI,EAAQuE,UAAAC,WAAA,GAC/CqqF,GAAA,yBAAAjrE,KAAAgrE,IACAE,GAAAD,GAAA1uF,WAAA0uF,GAAApsF,OAAA,KASAssF,GAAA,QAAA9uF,KAAA2uF,IAKAI,GAAA,UAAA/uF,KAAA2uF,MAAAG,GACAE,GAAA,QAAAhvF,KAAA2uF,IACAM,GAAAF,IAAAD,IAAAE,GAEAE,GAAA,WACA,IAAAxyF,EAAAiyF,GAAAjyF,MAAA,cAEA,OAAAA,KAAA,GACAA,EAAA,GAEA,KANA,GASAyyF,GAAA,WAAAnvF,KAAA2uF,IACAS,GAAA,WAGA,IAAA1yF,EAAAiyF,GAAAjyF,MAAA,0CAEA,IAAAA,EACA,YAGA,IAAA2yF,EAAA3yF,EAAA,IAAAwD,WAAAxD,EAAA,IACA4yF,EAAA5yF,EAAA,IAAAwD,WAAAxD,EAAA,IAEA,OAAA2yF,GAAAC,EACApvF,WAAAxD,EAAA,OAAAA,EAAA,IACG2yF,GAGH,KAjBA,GAoBAG,GAAAL,IAAAC,GAAA,GAAAP,GAAA,IAEAY,GAAA,WAAAzvF,KAAA2uF,IACAe,GAAA,QAAA1vF,KAAA2uF,IACAgB,IAAAD,KAAA,UAAA1vF,KAAA2uF,KAAA,SAAA3uF,KAAA2uF,KACAiB,GAAA,WACA,IAAAlzF,EAAAiyF,GAAAjyF,MAAA,yBAEA,OAAAA,KAAA,GACAwD,WAAAxD,EAAA,IAEA,KANA,GAQAs2B,GAAA,WACA,IAAA1xB,EAAA,kBAAAqiB,KAAAgrE,IACAt9E,EAAA/P,GAAApB,WAAAoB,EAAA,IAOA,OALA+P,GAAA,gBAAArR,KAAA2uF,KAAA,UAAA3uF,KAAA2uF,MAEAt9E,EAAA,IAGAA,EATA,GAYAy+E,GAAA,UAAA9vF,KAAA2uF,MAAAgB,KAAAR,KAAAO,GACAK,IAAAD,IAAAb,MAAAU,GAEAK,GAAAC,MAAA,iBAAmDwyC,EAAA1iI,GAAY0iI,EAAA1iI,EAAQuE,UAAA4rF,gBAA6BuyC,EAAA1iI,EAAQowF,eAAkBsyC,EAAA1iI,EAAQmC,oBAAqBugI,EAAA1iI,EAAQowF,eAEnKp9D,GAAAz4B,OAAA+1F,QACAvB,WACAC,aACAC,WACAC,UACAC,eACAC,cACAC,mBACAI,qBACAC,cACAC,WACAC,aACAC,kBACA58D,cACA88D,aACAC,iBACAC,mBAsDA,SAAA+S,GAAAC,EAAA1xF,EAAA2xF,GACA,qBAAA3xF,KAAA,GAAAA,EAAA2xF,EACA,UAAAjnG,MAAA,sBAAAgnG,EAAA,0CAAA1xF,EAAA,wCAAA2xF,EAAA,MA2BA,SAAAC,GAAAF,EAAAG,EAAAr8E,EAAAs8E,GAEA,OADAL,GAAAC,EAAAI,EAAAt8E,EAAA/qB,OAAA,GACA+qB,EAAAs8E,GAAAD,GASA,SAAAE,GAAAv8E,GACA,YAAArgB,IAAAqgB,GAAA,IAAAA,EAAA/qB,QAEAA,OAAA,EACAiD,MAAA,WACA,UAAAhD,MAAA,oCAEAmD,IAAA,WACA,UAAAnD,MAAA,sCAKAD,OAAA+qB,EAAA/qB,OACAiD,MAAAkkG,GAAA9nG,KAAA,eAAA0rB,GACA3nB,IAAA+jG,GAAA9nG,KAAA,aAAA0rB,IAeA,SAAAkH,GAAAhvB,EAAAG,GACA,OAAAoV,MAAA8O,QAAArkB,GACAqkG,GAAArkG,QACGyH,IAAAzH,QAAAyH,IAAAtH,EACHkkG,KAEAA,KAAArkG,EAAAG,KAoBA,SAAAmkG,GAAApxE,EAAA7W,GACA,IAAAkoF,EAAA,EACAvkG,OAAA,EACAG,OAAA,EAEA,IAAAkc,EACA,SAGA6W,KAAAn2B,SACAm2B,EAAAlE,GAAA,MAGA,QAAAp0B,EAAA,EAAiBA,EAAAs4B,EAAAn2B,OAAqBnC,IACtCoF,EAAAkzB,EAAAlzB,MAAApF,GACAuF,EAAA+yB,EAAA/yB,IAAAvF,GAGAuF,EAAAkc,IACAlc,EAAAkc,GAGAkoF,GAAApkG,EAAAH,EAGA,OAAAukG,EAAAloF,EAiCA,IAjBA,IAAAmoF,MAGAC,KAAA,oHAEA,wJAEA,gKAEA,wIAEA,gIAEAC,GAAAD,GAAA,GACAE,QAAA,EAGA/pG,GAAA,EAAeA,GAAA6pG,GAAA1nG,OAAmBnC,KAElC,GAAA6pG,GAAA7pG,IAAA,KAAsB+oI,EAAA5iI,EAAQ,CAC9B4jG,GAAAF,GAAA7pG,IACA,MAKA,GAAA+pG,GACA,QAAA1gF,GAAA,EAAkBA,GAAA0gF,GAAA5nG,OAAwBknB,KAC1CugF,GAAAE,GAAAzgF,KAAA0gF,GAAA1gF,IAyBA,SAAA2gF,GAAA/oG,GAIA,GAAAA,aAAA+oG,GACA,OAAA/oG,EAGA,kBAAAA,EACArB,KAAA4C,KAAAvB,EACG,kBAAAA,EAEHrB,KAAA2C,QAAAtB,EACGmoF,EAAAnoF,KAIH,kBAAAA,EAAAuB,OACA5C,KAAA4C,KAAAvB,EAAAuB,MAGAkc,EAAA9e,KAAAqB,IAGArB,KAAA2C,UACA3C,KAAA2C,QAAAynG,GAAAC,gBAAArqG,KAAA4C,OAAA,IASAwnG,GAAApoG,UAAAY,KAAA,EAQAwnG,GAAApoG,UAAAW,QAAA,GAWAynG,GAAApoG,UAAAw+B,OAAA,KAeA4pE,GAAAE,YAAA,mIAQAF,GAAAC,iBACAp/E,EAAA,iCACAe,EAAA,8DACAuB,EAAA,8HACAQ,EAAA,qHACAQ,EAAA,qEAKA,QAAAg8E,GAAA,EAAoBA,GAAAH,GAAAE,WAAA/nG,OAAuCgoG,KAC3DH,MAAAE,WAAAC,QAEAH,GAAApoG,UAAAooG,GAAAE,WAAAC,QAYA,SAAAC,GAAAnpG,GACA,YAAA4L,IAAA5L,GAAA,OAAAA,GAAA,oBAAAA,EAAAw4B,KAYA,SAAA4wE,GAAAppG,GACAmpG,GAAAnpG,IACAA,EAAAw4B,KAAA,cAAA7xB,MAsBA,IAAA0iG,GAAA,SAAArgG,GACA,IAAAqF,GAAA,+EAAAgI,OAAA,SAAA86E,EAAA7jF,EAAAvO,GAMA,OAJAiK,EAAAsE,KACA6jF,EAAA7jF,GAAAtE,EAAAsE,IAGA6jF,IAEAliF,KAAAjG,EAAAiG,MAAAyK,MAAA/Y,UAAAoW,IAAA7X,KAAA8J,EAAAiG,KAAA,SAAAtM,GACA,OACA+B,UAAA/B,EAAA+B,UACAE,QAAAjC,EAAAiC,QACA4D,KAAA7F,EAAA6F,KACApF,GAAAT,EAAAS,QAKA,OAAAiL,GAeAi7F,GAAA,SAAAx3E,GAEA,IAAAy3E,EAAAz3E,EAAA0pE,GAAA,SAEAgO,EAAA9vF,MAAA/Y,UAAAoW,IAAA7X,KAAAqqG,EAAA,SAAAtpG,GACA,OAAAA,EAAA+I,QAEA0zB,EAAAhjB,MAAA/Y,UAAAoW,IAAA7X,KAAAqqG,EAAA,SAAAE,GACA,IAAAnW,EAAA+V,GAAAI,EAAAzgG,OAKA,OAHAygG,EAAAzkF,MACAsuE,EAAAtuE,IAAAykF,EAAAzkF,KAEAsuE,IAGA,OAAA52D,EAAAzmB,OAAAyD,MAAA/Y,UAAA0vB,OAAAnxB,KAAA4yB,EAAAmgD,aAAA,SAAAjpE,GACA,WAAAwgG,EAAA/3F,QAAAzI,KACG+N,IAAAsyF,MAcHK,GAAA,SAAApW,EAAAxhE,GAWA,OAVAwhE,EAAAnoE,QAAA,SAAAniB,GACA,IAAA2gG,EAAA73E,EAAAyB,mBAAAvqB,UAEAA,EAAAgc,KAAAhc,EAAAiG,MACAjG,EAAAiG,KAAAkc,QAAA,SAAAxoB,GACA,OAAAgnG,EAAAt/E,OAAA1nB,OAKAmvB,EAAAmgD,cAGA23B,IAA0BN,oBAAAI,oBAAAL,iBAM1BQ,GAAA,mBACAC,GAAA,GAYAC,GAAA,SAAApoB,GAmCA,SAAAooB,EAAAtkF,EAAAxB,GACAwxE,EAAA92F,KAAAorG,GAEA,IAAAtrF,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAxB,IAwBA,OAtBAxF,EAAAurF,QAAAvrF,EAAAwrF,eAAAxrF,EAAAyrF,gBAAA,EAEAzrF,EAAA0rF,WAAA1rF,EAAAmjE,SAAAwoB,aACA3rF,EAAAm+C,QAAAn+C,EAAAmjE,SAAAhlB,SAKAn+C,EAAA4kF,WAAArL,EAAA,OACAjwF,UAAA8hG,GAAA,aAEAhjB,KAAA,aAGApoE,EAAA4rF,QAAArS,EAAA,KACAjwF,UAAA8hG,GAAA,gCACAzmG,GAAAqb,EAAAmoB,KAAA4yD,aAAA,sBAGA5wF,EAAA6V,EAAA4rF,QAAA5rF,EAAAqhD,eACArhD,EAAA26D,IAAA3xE,YAAAgX,EAAA4rF,SACA5rF,EAAA26D,IAAA3xE,YAAAgX,EAAA4kF,YACA5kF,EAidA,OA9gBAi3E,EAAAqU,EAAApoB,GAwEAooB,EAAAppG,UAAAq3F,SAAA,WACA,OAAArW,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAApJ,KAAA6lG,gBACA8F,UAAA,IAEAC,mBAAA5rG,KAAAyE,KAAA,eACAonG,cAAA,OACAC,aAAA9rG,KAAA80B,QACAozD,KAAA,YAIAkjB,EAAAppG,UAAAyc,QAAA,WACAze,KAAA0kG,WAAA,KACA1kG,KAAA0rG,QAAA,KACA1rG,KAAA+rG,oBAAA,KAEA/oB,EAAAhhF,UAAAyc,QAAAle,KAAAP,OAWAorG,EAAAppG,UAAA6jG,cAAA,WACA,OAAAqF,GAAA,eAAAloB,EAAAhhF,UAAA6jG,cAAAtlG,KAAAP,OAcAorG,EAAAppG,UAAAgqG,eAAA,SAAAhkG,GACAA,EAAA82F,QAAAqM,IAAAnrG,KAAAwrG,aACAxrG,KAAAisG,SAYAb,EAAAppG,UAAA8yB,MAAA,WACA,OAAA90B,KAAAkkG,SAAAlkG,KAAAijF,SAAAnuD,OAAA,iBAYAs2E,EAAAppG,UAAAm/D,YAAA,WACA,IAAAryC,EAAA9uB,KAAAijF,SAAA9hB,aAAAnhE,KAAAkkG,SAAA,2BAOA,OAJAlkG,KAAAwrG,cACA18E,GAAA,IAAA9uB,KAAAkkG,SAAA,wFAGAp1E,GAWAs8E,EAAAppG,UAAAg6E,KAAA,WACA,IAAAh8E,KAAAqrG,QAAA,CACA,IAAAvkF,EAAA9mB,KAAA8mB,SAQA9mB,KAAA2W,QAAA,mBACA3W,KAAAqrG,SAAA,GAIArrG,KAAAijF,SAAAipB,aAAAlsG,KAAAsrG,iBAAAtrG,KAAAurG,iBACAvrG,KAAAmsG,OAKAnsG,KAAAosG,aAAAtlF,EAAAwQ,SAEAt3B,KAAAijF,SAAAopB,aAAArsG,KAAAosG,aACAtlF,EAAA+Q,QAGA73B,KAAAwrG,aACAxrG,KAAAme,GAAAne,KAAAy6E,IAAAglB,cAAA,UAAA79F,GAAA5B,UAAAgsG,iBAIAhsG,KAAAssG,aAAAxlF,EAAAylF,WACAzlF,EAAAylF,UAAA,GAEAvsG,KAAAmmG,OACAnmG,KAAAwsG,oBACAxsG,KAAAioC,KAAAuxD,aAAA,uBAQAx5F,KAAA2W,QAAA,aACA3W,KAAAsrG,gBAAA,IAeAF,EAAAppG,UAAAyqG,OAAA,SAAAprG,GAIA,MAHA,mBAAAA,GACArB,KAAAqB,EAAA,kBAEArB,KAAAqrG,SAYAD,EAAAppG,UAAAiqG,MAAA,WACA,GAAAjsG,KAAAqrG,QAAA,CAGA,IAAAvkF,EAAA9mB,KAAA8mB,SAQA9mB,KAAA2W,QAAA,oBACA3W,KAAAqrG,SAAA,EAEArrG,KAAAosG,aAAApsG,KAAAijF,SAAAopB,aACAvlF,EAAA8S,OAGA55B,KAAAwrG,aACAxrG,KAAAqe,IAAAre,KAAAy6E,IAAAglB,cAAA,UAAA79F,GAAA5B,UAAAgsG,iBAGAhsG,KAAAssG,cACAxlF,EAAAylF,UAAA,GAGAvsG,KAAAomG,OACApmG,KAAAioC,KAAAuxD,aAAA,sBAQAx5F,KAAA2W,QAAA,cACA3W,KAAA0sG,mBAEA1sG,KAAAijF,SAAA0pB,WACA3sG,KAAAye,YAeA2sF,EAAAppG,UAAAwpG,UAAA,SAAAnqG,GACA,sBAAAA,EAAA,CACA,IAAAmqG,EAAAxrG,KAAA4sG,aAAAvrG,EACA4qG,EAAAjsG,KAAA6kG,SAAA,eAGA,GAAA2G,IAAAS,EAAA,CAIA,IAAA9+D,EAAAntC,KAAA0kG,WAEA1kG,KAAA0kG,WAAA1kG,KAAAy6E,IACAwxB,EAAAjsG,KAAA8kG,SAAA,eAA8C+H,YAAA,uBAC9C7sG,KAAA0kG,WAAAv3D,EACAntC,KAAAme,GAAA8tF,EAAA,QAAAjsG,KAAAisG,QAIAT,GAAAS,IACAjsG,KAAAqe,IAAA4tF,EAAA,QAAAjsG,KAAAisG,OACAjsG,KAAAyQ,YAAAw7F,GACAA,EAAAxtF,WAGA,OAAAze,KAAA4sG,YASAxB,EAAAppG,UAAAmqG,KAAA,WACAnsG,KAAA8sG,SAAA9sG,KAAAi+D,YAeAmtC,EAAAppG,UAAA8qG,SAAA,SAAA7uC,GACA,IAAAwmC,EAAAzkG,KAAAykG,YACAsI,EAAAtI,EAAAx7F,WACA+jG,EAAAvI,EAAAwI,YAQAjtG,KAAA2W,QAAA,mBACA3W,KAAAurG,gBAAA,EAIAwB,EAAAt8F,YAAAg0F,GACAzkG,KAAAs+C,QACAk+C,GAAAiI,EAAAxmC,GAOAj+D,KAAA2W,QAAA,aAGAq2F,EACAD,EAAAlT,aAAA4K,EAAAuI,GAEAD,EAAAjkG,YAAA27F,GAIA,IAAAyI,EAAAltG,KAAA6kG,SAAA,eAEAqI,GACAH,EAAAjkG,YAAAokG,EAAAzyB,MAYA2wB,EAAAppG,UAAAs8C,MAAA,WAOAt+C,KAAA2W,QAAA,oBACA2lF,GAAAt8F,KAAAykG,aAQAzkG,KAAA2W,QAAA,eAoBAy0F,EAAAppG,UAAAi8D,QAAA,SAAA58D,GAIA,MAHA,qBAAAA,IACArB,KAAAmtG,SAAA9rG,GAEArB,KAAAmtG,UAUA/B,EAAAppG,UAAAwqG,kBAAA,WACA,IAAAY,EAAmB+7B,EAAA5iI,EAAQ8mG,cAC3BC,EAAAttG,KAAAqzE,QAAAoH,IAEAz6E,KAAA+rG,oBAAA,MAEAuB,EAAAxpB,SAAAspB,IAAAE,IAAAF,KACAptG,KAAA+rG,oBAAAqB,EAEAptG,KAAAi7F,QAEAj7F,KAAAme,GAAcgrH,EAAA5iI,EAAQ,UAAAvG,KAAAutG,iBAWtBnC,EAAAppG,UAAA0qG,iBAAA,WACA1sG,KAAA+rG,sBACA/rG,KAAA+rG,oBAAA9Q,QACAj7F,KAAA+rG,oBAAA,MAGA/rG,KAAAqe,IAAa8qH,EAAA5iI,EAAQ,UAAAvG,KAAAutG,gBAUrBnC,EAAAppG,UAAAurG,cAAA,SAAAljF,GAEA,OAAAA,EAAAy0E,MAAA,CAQA,IAJA,IAAA0O,EAAAxtG,KAAAytG,gBACAL,EAAAptG,KAAAy6E,IAAAH,cAAA,UACAozB,OAAA,EAEAttG,EAAA,EAAmBA,EAAAotG,EAAAjrG,OAAyBnC,IAC5C,GAAAgtG,IAAAI,EAAAptG,GAAA,CACAstG,EAAAttG,EACA,MAIQ+oI,EAAA5iI,EAAQ8mG,gBAAArtG,KAAAy6E,MAChBizB,EAAA,GAGArjF,EAAAsjF,UAAA,IAAAD,GACAF,IAAAjrG,OAAA,GAAA04F,QACA5wE,EAAA2zE,kBACK3zE,EAAAsjF,UAAAD,IAAAF,EAAAjrG,OAAA,IACLirG,EAAA,GAAAvS,QACA5wE,EAAA2zE,oBAWAoN,EAAAppG,UAAAyrG,cAAA,WACA,IAAAG,EAAA5tG,KAAAy6E,IAAAozB,iBAAA,KAEA,OAAA9yF,MAAA/Y,UAAA0vB,OAAAnxB,KAAAqtG,EAAA,SAAAhU,GACA,OAAAA,aAA+BqvC,EAAA1iI,EAAQunG,mBAAAlU,aAAuCqvC,EAAA1iI,EAAQwnG,kBAAAnU,EAAA7uD,aAAA,UAAA6uD,aAAqEqvC,EAAA1iI,EAAQynG,kBAAApU,aAAsCqvC,EAAA1iI,EAAQ0nG,mBAAArU,aAAuCqvC,EAAA1iI,EAAQ2nG,qBAAAtU,aAAyCqvC,EAAA1iI,EAAQ4nG,qBAAAvU,EAAA7uD,aAAA,aAAA6uD,aAA2EqvC,EAAA1iI,EAAQ6nG,mBAAAxU,aAAuCqvC,EAAA1iI,EAAQ8nG,mBAAAzU,aAAuCqvC,EAAA1iI,EAAQ+nG,kBAAA1U,EAAA7uD,aAAA,kBAAA6uD,EAAAiB,aAAA,aAAAjB,EAAA7uD,aAAA,sBAIleqgE,EA/gBA,CAghBCvoB,IAUDuoB,GAAAppG,UAAAihF,UACAopB,aAAA,EACAM,WAAA,GAGA9pB,GAAA2C,kBAAA,cAAA4lB,IAaA,IAAAmD,GAAA,SAAA7nE,GAWA,SAAA6nE,IACA,IAAAxwE,EAAAz7B,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAw0F,EAAA92F,KAAAuuG,GAEA,IAAAzuF,EAAAk3E,EAAAh3F,KAAA0mC,EAAAnmC,KAAAP,OAEA8f,EAAA0uF,WAQA1tG,OAAAC,eAAA+e,EAAA,UACA7e,IAAA,WACA,OAAAjB,KAAAwuG,QAAAjsG,UAIA,QAAAnC,EAAA,EAAmBA,EAAA29B,EAAAx7B,OAAmBnC,IACtC0f,EAAAgf,SAAAf,EAAA39B,IAEA,OAAA0f,EA+GA,OAhJAi3E,EAAAwX,EAAA7nE,GA8CA6nE,EAAAvsG,UAAA88B,SAAA,SAAAz0B,GACA,IAAAyN,EAAA9X,KAAAwuG,QAAAjsG,OAEA,GAAAuV,KAAA9X,MACAc,OAAAC,eAAAf,KAAA8X,GACA7W,IAAA,WACA,OAAAjB,KAAAwuG,QAAA12F,OAMA,IAAA9X,KAAAwuG,QAAA17F,QAAAzI,KACArK,KAAAwuG,QAAAnlG,KAAAgB,GASArK,KAAA2W,SACAtM,QACA9B,KAAA,eAeAgmG,EAAAvsG,UAAAysG,YAAA,SAAAC,GAGA,IAFA,IAAArkG,OAAA,EAEAjK,EAAA,EAAAC,EAAAL,KAAAuC,OAAoCnC,EAAAC,EAAOD,IAC3C,GAAAJ,KAAAI,KAAAsuG,EAAA,CACArkG,EAAArK,KAAAI,GACAiK,EAAAgU,KACAhU,EAAAgU,MAGAre,KAAAwuG,QAAAlwF,OAAAle,EAAA,GAEA,MAIAiK,GAYArK,KAAA2W,SACAtM,QACA9B,KAAA,iBAcAgmG,EAAAvsG,UAAAuxE,aAAA,SAAA9uE,GAGA,IAFA,IAAAqD,EAAA,KAEA1H,EAAA,EAAAC,EAAAL,KAAAuC,OAAoCnC,EAAAC,EAAOD,IAAA,CAC3C,IAAAiK,EAAArK,KAAAI,GAEA,GAAAiK,EAAA5F,OAAA,CACAqD,EAAAuC,EACA,OAIA,OAAAvC,GAGAymG,EAjJA,CAkJCvyE,IAwBD,QAAA3R,MAPAkkF,GAAAvsG,UAAAu/F,gBACAoN,OAAA,SACAC,SAAA,WACAC,YAAA,eAIAN,GAAAvsG,UAAAu/F,eACAgN,GAAAvsG,UAAA,KAAAqoB,IAAA,KAmBA,IAAAykF,GAAA,SAAA59C,EAAA7mD,GACA,QAAAjK,EAAA,EAAiBA,EAAA8wD,EAAA3uD,OAAiBnC,IAClCU,OAAAyrB,KAAA2kC,EAAA9wD,IAAAmC,QAAA8H,EAAA5F,KAAAysD,EAAA9wD,GAAAqE,KAIAysD,EAAA9wD,GAAA69B,SAAA,IAWA8wE,GAAA,SAAAC,GASA,SAAAD,IACA,IAAAhxE,EAAAz7B,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAw0F,EAAA92F,KAAA+uG,GAIA,QAAA3uG,EAAA29B,EAAAx7B,OAAA,EAAmCnC,GAAA,EAAQA,IAC3C,GAAA29B,EAAA39B,GAAA69B,QAAA,CACA6wE,GAAA/wE,IAAA39B,IACA,MAIA,IAAA0f,EAAAk3E,EAAAh3F,KAAAgvG,EAAAzuG,KAAAP,KAAA+9B,IAGA,OADAje,EAAAovF,WAAA,EACApvF,EA4CA,OApEAi3E,EAAAgY,EAAAC,GAqCAD,EAAA/sG,UAAA88B,SAAA,SAAAz0B,GACA,IAAA2rB,EAAAh2B,KAEAqK,EAAA4zB,SACA6wE,GAAA9uG,KAAAqK,GAGA2kG,EAAAhtG,UAAA88B,SAAAv+B,KAAAP,KAAAqK,GAEAA,EAAAgqB,kBAQAhqB,EAAAgqB,iBAAA,2BAIA2B,EAAAk5E,YAGAl5E,EAAAk5E,WAAA,EACAJ,GAAA94E,EAAA3rB,GACA2rB,EAAAk5E,WAAA,EACAl5E,EAAArf,QAAA,cAIAo4F,EArEA,CAsECR,IAiBDY,GAAA,SAAAj+C,EAAA7mD,GACA,QAAAjK,EAAA,EAAiBA,EAAA8wD,EAAA3uD,OAAiBnC,IAClCU,OAAAyrB,KAAA2kC,EAAA9wD,IAAAmC,QAAA8H,EAAA5F,KAAAysD,EAAA9wD,GAAAqE,KAIAysD,EAAA9wD,GAAAgvG,UAAA,IAWAC,GAAA,SAAAL,GASA,SAAAK,IACA,IAAAtxE,EAAAz7B,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAw0F,EAAA92F,KAAAqvG,GAIA,QAAAjvG,EAAA29B,EAAAx7B,OAAA,EAAmCnC,GAAA,EAAQA,IAC3C,GAAA29B,EAAA39B,GAAAgvG,SAAA,CACAD,GAAApxE,IAAA39B,IACA,MAIA,IAAA0f,EAAAk3E,EAAAh3F,KAAAgvG,EAAAzuG,KAAAP,KAAA+9B,IAmBA,OAjBAje,EAAAovF,WAAA,EAMApuG,OAAAC,eAAA+e,EAAA,iBACA7e,IAAA,WACA,QAAAwoB,EAAA,EAAwBA,EAAAzpB,KAAAuC,OAAkBknB,IAC1C,GAAAzpB,KAAAypB,GAAA2lF,SACA,OAAA3lF,EAGA,UAEA/kB,IAAA,eAEAob,EAyCA,OAjFAi3E,EAAAsY,EAAAL,GAqDAK,EAAArtG,UAAA88B,SAAA,SAAAz0B,GACA,IAAA2rB,EAAAh2B,KAEAqK,EAAA+kG,UACAD,GAAAnvG,KAAAqK,GAGA2kG,EAAAhtG,UAAA88B,SAAAv+B,KAAAP,KAAAqK,GAEAA,EAAAgqB,kBAQAhqB,EAAAgqB,iBAAA,4BACA2B,EAAAk5E,YAGAl5E,EAAAk5E,WAAA,EACAC,GAAAn5E,EAAA3rB,GACA2rB,EAAAk5E,WAAA,EACAl5E,EAAArf,QAAA,cAIA04F,EAlFA,CAmFCd,IAaDe,GAAA,SAAAN,GAGA,SAAAM,IAEA,OADAxY,EAAA92F,KAAAsvG,GACAtY,EAAAh3F,KAAAgvG,EAAA72F,MAAAnY,KAAAsC,YA+BA,OAnCAy0F,EAAAuY,EAAAN,GAeAM,EAAAttG,UAAA88B,SAAA,SAAAz0B,GACA2kG,EAAAhtG,UAAA88B,SAAAv+B,KAAAP,KAAAqK,GAMAA,EAAAgqB,iBAAA,aAAAzyB,GAAA5B,KAAA,WACAA,KAAA2W,QAAA,aAGA,IAAA44F,GAAA,wBAEA,IAAAA,EAAAz8F,QAAAzI,EAAAwqB,OACAxqB,EAAAgqB,iBAAA,aAAAzyB,GAAA5B,KAAA,WACAA,KAAA2W,QAAA,8BAKA24F,EApCA,CAqCCf,IASDiB,GAAA,WAQA,SAAAA,IACA,IAAAC,EAAAntG,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAw0F,EAAA92F,KAAAwvG,GAEAxvG,KAAA0vG,kBAQA5uG,OAAAC,eAAAf,KAAA,UACAiB,IAAA,WACA,OAAAjB,KAAA0vG,eAAAntG,UAIA,QAAAnC,EAAA,EAAAmC,EAAAktG,EAAAltG,OAAkDnC,EAAAmC,EAAYnC,IAC9DJ,KAAA2vG,iBAAAF,EAAArvG,IA+EA,OAjEAovG,EAAAxtG,UAAA2tG,iBAAA,SAAAC,GACA,IAAA93F,EAAA9X,KAAA0vG,eAAAntG,OAEA,GAAAuV,KAAA9X,MACAc,OAAAC,eAAAf,KAAA8X,GACA7W,IAAA,WACA,OAAAjB,KAAA0vG,eAAA53F,OAMA,IAAA9X,KAAA0vG,eAAA58F,QAAA88F,IACA5vG,KAAA0vG,eAAArmG,KAAAumG,IAkBAJ,EAAAxtG,UAAA6tG,wBAAA,SAAAxlG,GAGA,IAFA,IAAAylG,OAAA,EAEA1vG,EAAA,EAAAmC,EAAAvC,KAAA0vG,eAAAntG,OAAwDnC,EAAAmC,EAAYnC,IACpE,GAAAiK,IAAArK,KAAA0vG,eAAAtvG,GAAAiK,MAAA,CACAylG,EAAA9vG,KAAA0vG,eAAAtvG,GAEA,MAIA,OAAA0vG,GAaAN,EAAAxtG,UAAA+tG,oBAAA,SAAAH,GACA,QAAAxvG,EAAA,EAAAmC,EAAAvC,KAAA0vG,eAAAntG,OAAwDnC,EAAAmC,EAAYnC,IACpE,GAAAwvG,IAAA5vG,KAAA0vG,eAAAtvG,GAAA,CACAJ,KAAA0vG,eAAApxF,OAAAle,EAAA,GAEA,QAKAovG,EA1GA,GAwIAQ,GAAA,WAQA,SAAAA,EAAA1/F,GACAwmF,EAAA92F,KAAAgwG,GAEAA,EAAAhuG,UAAAiuG,SAAA1vG,KAAAP,KAAAsQ,GAQAxP,OAAAC,eAAAf,KAAA,UACAiB,IAAA,WACA,OAAAjB,KAAAkwG,WAqEA,OArDAF,EAAAhuG,UAAAiuG,SAAA,SAAA3/F,GACA,IAAA6/F,EAAAnwG,KAAAuC,QAAA,EACAnC,EAAA,EACAC,EAAAiQ,EAAA/N,OAEAvC,KAAAowG,MAAA9/F,EACAtQ,KAAAkwG,QAAA5/F,EAAA/N,OAEA,IAAA8tG,EAAA,SAAAv4F,GACA,GAAAA,KAAA9X,MACAc,OAAAC,eAAAf,KAAA,GAAA8X,GACA7W,IAAA,WACA,OAAAjB,KAAAowG,MAAAt4F,OAMA,GAAAq4F,EAAA9vG,EAGA,IAFAD,EAAA+vG,EAEY/vG,EAAAC,EAAOD,IACnBiwG,EAAA9vG,KAAAP,KAAAI,IAgBA4vG,EAAAhuG,UAAAsuG,WAAA,SAAA7rG,GAGA,IAFA,IAAAqD,EAAA,KAEA1H,EAAA,EAAAC,EAAAL,KAAAuC,OAAoCnC,EAAAC,EAAOD,IAAA,CAC3C,IAAA4D,EAAAhE,KAAAI,GAEA,GAAA4D,EAAAS,OAAA,CACAqD,EAAA9D,EACA,OAIA,OAAA8D,GAGAkoG,EA1FA,GAwGAO,IACAC,YAAA,cACAnjD,SAAA,WACA/2B,KAAA,OACAm6E,KAAA,OACAC,UAAA,YACAC,WAAA,cAUAC,IACAJ,YAAA,cACAK,aAAA,eACAv6E,KAAA,OACAw6E,YAAA,YACAC,YAAA,cACAJ,WAAA,cAUAK,IACAN,UAAA,YACArjD,SAAA,WACAwjD,aAAA,eACAI,SAAA,WACA1jD,SAAA,YAUA2jD,IACAtjE,SAAA,WACAujE,OAAA,SACAC,QAAA,WAkBAC,GAAA,SAAA3qE,GAuBA,SAAA2qE,IACA,IAAA/rF,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAw0F,EAAA92F,KAAAqxG,GAEA,IAAAvxF,EAAAk3E,EAAAh3F,KAAA0mC,EAAAnmC,KAAAP,OAEAsxG,GACA7sG,GAAA6gB,EAAA7gB,IAAA,aAAAu4F,KACAnoE,KAAAvP,EAAAuP,MAAA,GACAC,MAAAxP,EAAAwP,OAAA,GACAxR,SAAAgC,EAAAhC,UAAA,IAwCA05D,EAAA,SAAAr7E,GACAb,OAAAC,eAAA+e,EAAAne,GACAV,IAAA,WACA,OAAAqwG,EAAA3vG,IAEA+C,IAAA,gBAIA,QAAA/C,KAAA2vG,EACAt0B,EAAAr7E,GAEA,OAAAme,EAGA,OAvFAi3E,EAAAsa,EAAA3qE,GAuFA2qE,EAxFA,CAyFCr1E,IAyCDu1E,GAAA,SAAAr+E,GACA,IAAA5Z,GAAA,gEAGA/S,EAAU4iI,EAAA5iI,EAAQ+B,cAAA,KAElB/B,EAAAmhC,KAAAxU,EAKA,IAAAs+E,EAAA,KAAAjrG,EAAAkrG,MAAA,UAAAlrG,EAAAmrG,SACAjmG,OAAA,EAEA+lG,IACA/lG,EAAU09H,EAAA5iI,EAAQ+B,cAAA,OAClBmD,EAAAkmG,UAAA,YAAAz+E,EAAA,SACA3sB,EAAAkF,EAAA+E,WAEA/E,EAAA+tF,aAAA,4CACI2vC,EAAA5iI,EAAQy0F,KAAAlyF,YAAA2C,IAQZ,IAFA,IAAAmmG,KAEAxxG,EAAA,EAAiBA,EAAAkZ,EAAA/W,OAAkBnC,IACnCwxG,EAAAt4F,EAAAlZ,IAAAmG,EAAA+S,EAAAlZ,IAqBA,MAhBA,UAAAwxG,EAAAF,WACAE,EAAAH,KAAAG,EAAAH,KAAAtuG,QAAA,YAGA,WAAAyuG,EAAAF,WACAE,EAAAH,KAAAG,EAAAH,KAAAtuG,QAAA,aAGAyuG,EAAAF,WACAE,EAAAF,SAAuBu3B,EAAA1iI,EAAQkhC,SAAAiqE,UAG/BF,GACI23B,EAAA5iI,EAAQy0F,KAAAvqF,YAAAhF,GAGZmmG,GAeAC,GAAA,SAAA3+E,GAEA,IAAAA,EAAAhwB,MAAA,iBAEA,IAAAuI,EAAc09H,EAAA5iI,EAAQ+B,cAAA,OAEtBmD,EAAAkmG,UAAA,YAAAz+E,EAAA,UACAA,EAAAznB,EAAA+E,WAAAk3B,KAGA,OAAAxU,GAcA4+E,GAAA,SAAA96F,GACA,qBAAAA,EAAA,CACA,IAAA+6F,EAAA,0EACAnhC,EAAAmhC,EAAA5nF,KAAAnT,GAEA,GAAA45D,EACA,OAAAA,EAAA5nE,MAAA6K,cAIA,UAYAm+F,GAAA,SAAA9+E,GACA,IAAA++E,EAAeg3B,EAAA1iI,EAAQkhC,SACvByqE,EAAAX,GAAAr+E,GAGAi/E,EAAA,MAAAD,EAAAR,SAAAO,EAAAP,SAAAQ,EAAAR,SAIAU,EAAAD,EAAAD,EAAAT,OAAAQ,EAAAP,SAAAO,EAAAR,KAEA,OAAAW,GAGAC,GAAAvxG,OAAA+1F,QACA0a,YACAM,kBACAC,oBACAE,mBAkBAM,GAAA,SAAAC,EAAAloG,GACA,IAAA48B,EAAA,IAAmBgiG,EAAA1iI,EAAQmI,OAAAsC,OAAei4H,EAAA1iI,EAAU0iI,EAAA1iI,EAAQ0K,MAAQg4H,EAAA1iI,EAAQmI,OAAAiB,iBAC5E8xB,KAEAwF,EAAAj0B,MAAA,SAAAhP,GACAqG,EAAAqhB,OAAA1nB,IAGAijC,EAAA11B,eAAA,SAAAomB,GACA8J,EAAAp4B,KAAAsuB,IAGAsP,EAAA/zB,QAAA,WACA7I,EAAAsM,SACApO,KAAA,aACA8Q,OAAAhP,KAIA48B,EAAAz1B,MAAA+gG,GACA9wE,EAAAl/B,OAAA,IACQ0mI,EAAA1iI,EAAQk7D,SAAYwnE,EAAA1iI,EAAQk7D,QAAA+wC,gBAC9By2B,EAAA1iI,EAAQk7D,QAAA+wC,eAAA,iCAAAnoG,EAAAgc,KAEdob,EAAAjV,QAAA,SAAAmL,GACA,OAAA4gE,EAAA5gE,WAEQsxG,EAAA1iI,EAAQk7D,SAAYwnE,EAAA1iI,EAAQk7D,QAAAgxC,UAC9Bw2B,EAAA1iI,EAAQk7D,QAAAgxC,YAIdxrE,EAAAh0B,SAcAy/F,GAAA,SAAArsF,EAAAhc,GACA,IAAA6lE,GACAhuD,IAAAmE,GAEA+rF,EAAAJ,GAAA3rF,GAEA+rF,IACAliC,EAAAyiC,KAAAP,GAGEm3B,IAAGr5D,EAAAtuE,GAAA5B,KAAA,SAAA4pB,EAAAgX,EAAAgyE,GACL,GAAAhpF,EACA,OAAA2uE,EAAA5gE,MAAA/N,EAAAgX,GAOA,GAJAv2B,EAAAwoG,SAAA,EAIuB,oBAARo2B,EAAA1iI,EAAQmI,QACvB,GAAArE,EAAA0c,MAAA,CACA,IAAAy3B,EAAA,WACA,OAAA8zD,GAAAM,EAAAvoG,IAGAA,EAAA0c,MAAA5I,GAAA,cAAAqgC,GACAn0C,EAAA0c,MAAA5I,GAAA,wBACAo6E,EAAA5gE,MAAA,oDAAAttB,EAAAgc,KACAhc,EAAA0c,MAAA1I,IAAA,cAAAmgC,WAIA8zD,GAAAM,EAAAvoG,OAYAyoG,GAAA,SAAAC,GAqCA,SAAAD,IACA,IAAAxtF,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAGA,GAFAw0F,EAAA92F,KAAA8yG,IAEAxtF,EAAA6N,KACA,UAAA3wB,MAAA,4BAGA,IAAAgC,EAAAkxB,GAAApQ,GACAuP,KAAAm8E,GAAA1rF,EAAAuP,OAAA,YACAvR,SAAAgC,EAAAhC,UAAAgC,EAAA0tF,SAAA,KAEAzxG,EAAA2vG,GAAA1sG,EAAAjD,OAAA,WACA0xG,EAAAzuG,EAAAsV,QAEA,aAAAtV,EAAAqwB,MAAA,aAAArwB,EAAAqwB,OACAtzB,EAAA,UAGA,IAAAue,EAAAk3E,EAAAh3F,KAAA+yG,EAAAxyG,KAAAP,KAAAwE,IAEAsb,EAAAiH,MAAAviB,EAAA2uB,KAEArT,EAAAswF,SACAtwF,EAAAqzF,eAEA,IAAA7iG,EAAA,IAAA0/F,GAAAlwF,EAAAswF,OACAgD,EAAA,IAAApD,GAAAlwF,EAAAqzF,aACAE,GAAA,EACAC,EAAA1xG,GAAAke,EAAA,WAMA9f,KAAAozG,WAEAC,IACArzG,KAAA2W,QAAA,aACA08F,GAAA,KA4IA,MAxIA,aAAA9xG,GACAue,EAAAiH,MAAAvB,MAAA,WACA1F,EAAAiH,MAAA5I,GAAA,aAAAm1F,KACO,GAGPxyG,OAAAsY,iBAAA0G,GAUAhG,SACA7Y,IAAA,WACA,OAAAgyG,GAEAvuG,IAAA,cAYAnD,MACAN,IAAA,WACA,OAAAM,GAEAmD,IAAA,SAAA6uG,GACA,IAAAv9E,EAAAh2B,KAEAkxG,GAAAqC,KAGAhyG,EAAAgyG,EACA,YAAAhyG,GAEAvB,KAAA+mB,MAAAvB,MAAA,WACAwQ,EAAAjP,MAAA5I,GAAA,aAAAm1F,KACa,GAWbtzG,KAAA2W,QAAA,iBAUArG,MACArP,IAAA,WACA,OAAAjB,KAAA6yG,QAIAviG,EAHA,MAKA5L,IAAA,cASA0uG,YACAnyG,IAAA,WACA,IAAAjB,KAAA6yG,QACA,YAIA,OAAA7yG,KAAAsQ,KAAA/N,OACA,OAAA6wG,EAMA,IAHA,IAAAI,EAAAxzG,KAAA+mB,MAAAkO,cACAw+E,KAEArzG,EAAA,EAAAC,EAAAL,KAAAsQ,KAAA/N,OAA+CnC,EAAAC,EAAOD,IAAA,CACtD,IAAA4D,EAAAhE,KAAAsQ,KAAAlQ,GAEA4D,EAAA+B,WAAAytG,GAAAxvG,EAAAiC,SAAAutG,EACAC,EAAApqG,KAAArF,GACaA,EAAA+B,YAAA/B,EAAAiC,SAAAjC,EAAA+B,WAAAytG,GAAAxvG,EAAA+B,UAAA,IAAAytG,GACbC,EAAApqG,KAAArF,GAMA,GAFAqvG,GAAA,EAEAI,EAAAlxG,SAAAvC,KAAAmzG,YAAA5wG,OACA8wG,GAAA,OAEA,QAAA5pF,EAAA,EAA4BA,EAAAgqF,EAAAlxG,OAAoBknB,KAChD,IAAAzpB,KAAAmzG,YAAArgG,QAAA2gG,EAAAhqF,MACA4pF,GAAA,GAQA,OAHArzG,KAAAmzG,YAAAM,EACAL,EAAAnD,SAAAjwG,KAAAmzG,aAEAC,GAEA1uG,IAAA,gBAIAF,EAAA6hB,KACAvG,EAAAuG,IAAA7hB,EAAA6hB,IACAqsF,GAAAluG,EAAA6hB,IAAAvG,IAEAA,EAAA+yF,SAAA,EAEA/yF,EA8DA,OArRAi3E,EAAA+b,EAAAC,GAkOAD,EAAA9wG,UAAA0pB,OAAA,SAAAgoF,GACA,IAAA1vG,EAAA0vG,EAEA,GAAQu1B,EAAA1iI,EAAQ0K,SAAAyiG,aAAmCu1B,EAAA1iI,EAAQ0K,MAAA4B,QAAA,CAG3D,QAAAlE,KAFA3K,EAAA,IAAgBilI,EAAA1iI,EAAQ0K,MAAA4B,OAAA6gG,EAAA3tG,UAAA2tG,EAAAztG,QAAAytG,EAAA7pG,MAExB6pG,EACA/kG,KAAA3K,IACAA,EAAA2K,GAAA+kG,EAAA/kG,IAKA3K,EAAAS,GAAAivG,EAAAjvG,GACAT,EAAA2vG,aAAAD,EAKA,IAFA,IAAA31E,EAAA/9B,KAAA+mB,MAAAusD,aAEAlzE,EAAA,EAAmBA,EAAA29B,EAAAx7B,OAAmBnC,IACtC29B,EAAA39B,KAAAJ,MACA+9B,EAAA39B,GAAA06E,UAAA92E,GAIAhE,KAAAowG,MAAA/mG,KAAArF,GACAhE,KAAAsQ,KAAA2/F,SAAAjwG,KAAAowG,QAWA0C,EAAA9wG,UAAA84E,UAAA,SAAA84B,GACA,IAAAxzG,EAAAJ,KAAAowG,MAAA7tG,OAEA,MAAAnC,IAAA,CACA,IAAA4D,EAAAhE,KAAAowG,MAAAhwG,GAEA,GAAA4D,IAAA4vG,GAAA5vG,EAAA2vG,cAAA3vG,EAAA2vG,eAAAC,EAAA,CACA5zG,KAAAowG,MAAA9xF,OAAAle,EAAA,GACAJ,KAAAsQ,KAAA2/F,SAAAjwG,KAAAowG,OACA,SAKA0C,EAtRA,CAuRCzB,IAODyB,GAAA9wG,UAAAu/F,gBACAsS,UAAA,aAWA,IAAAv1E,GAAA,SAAAy0E,GAyBA,SAAAz0E,IACA,IAAAhZ,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAw0F,EAAA92F,KAAAs+B,GAEA,IAAA95B,EAAAkxB,GAAApQ,GACAuP,KAAA+7E,GAAAtrF,EAAAuP,OAAA,KAGA/U,EAAAk3E,EAAAh3F,KAAA+yG,EAAAxyG,KAAAP,KAAAwE,IAEAy5B,GAAA,EA2CA,OAhCAn9B,OAAAC,eAAA+e,EAAA,WACA7e,IAAA,WACA,OAAAg9B,GAEAv5B,IAAA,SAAAovG,GAEA,mBAAAA,OAAA71E,IAGAA,EAAA61E,EAYA9zG,KAAA2W,QAAA,qBAOAnS,EAAAy5B,UACAne,EAAAme,QAAAz5B,EAAAy5B,SAEAne,EAAA+yF,SAAA,EACA/yF,EAGA,OAhFAi3E,EAAAz4D,EAAAy0E,GAgFAz0E,EAjFA,CAkFC+yE,IASD0C,GAAA,SAAAhB,GAwBA,SAAAgB,IACA,IAAAzuF,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAw0F,EAAA92F,KAAA+zG,GAEA,IAAAvvG,EAAAkxB,GAAApQ,GACAuP,KAAA07E,GAAAjrF,EAAAuP,OAAA,KAGA/U,EAAAk3E,EAAAh3F,KAAA+yG,EAAAxyG,KAAAP,KAAAwE,IAEA4qG,GAAA,EA0CA,OA/BAtuG,OAAAC,eAAA+e,EAAA,YACA7e,IAAA,WACA,OAAAmuG,GAEA1qG,IAAA,SAAAsvG,GAEA,mBAAAA,OAAA5E,IAGAA,EAAA4E,EAYAh0G,KAAA2W,QAAA,sBAOAnS,EAAA4qG,WACAtvF,EAAAsvF,SAAA5qG,EAAA4qG,UAEAtvF,EAGA,OA9EAi3E,EAAAgd,EAAAhB,GA8EAgB,EA/EA,CAgFC1C,IAWD4C,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EASAC,GAAA,SAAA3tE,GAqCA,SAAA2tE,IACA,IAAA/uF,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAw0F,EAAA92F,KAAAq0G,GAEA,IAAAv0F,EAAAk3E,EAAAh3F,KAAA0mC,EAAAnmC,KAAAP,OAEAy5B,OAAA,EAEApvB,EAAA,IAAAyoG,GAAAxtF,GAkDA,OAhDAxF,EAAA+U,KAAAxqB,EAAAwqB,KACA/U,EAAAuG,IAAAhc,EAAAgc,IACAvG,EAAAkzF,QAAA3oG,EAAAiZ,SACAxD,EAAAgV,MAAAzqB,EAAAyqB,MACAhV,EAAAhG,QAAAzP,EAAAyP,QAEAhZ,OAAAsY,iBAAA0G,GAQA2Z,YACAx4B,IAAA,WACA,OAAAw4B,IAWApvB,OACApJ,IAAA,WACA,OAAAoJ,MAKAovB,EAAAw6E,GAMA5pG,EAAAgqB,iBAAA,wBACAoF,EAAA06E,GAEAr0F,EAAAnJ,SACApO,KAAA,OACA8Q,OAAAyG,MAGAA,EAGA,OAjGAi3E,EAAAsd,EAAA3tE,GAiGA2tE,EAlGA,CAmGCr4E,IAEDq4E,GAAAryG,UAAAu/F,gBACAxrE,KAAA,QAGAs+E,GAAAJ,QACAI,GAAAH,WACAG,GAAAF,UACAE,GAAAD,SAOA,IAAAE,IACA1hF,OACA2hF,UAAAxF,GACAyF,WAAAl2E,GACAm2E,YAAA,SAEA9hF,OACA4hF,UAAAlF,GACAmF,WAAAT,GACAU,YAAA,SAEA5qG,MACA0qG,UAAAjF,GACAkF,WAAA1B,GACA2B,YAAA,SAIA3zG,OAAAyrB,KAAA+nF,IAAA9nF,QAAA,SAAAjkB,GACA+rG,GAAA/rG,GAAAmsG,WAAAnsG,EAAA,SACA+rG,GAAA/rG,GAAAosG,YAAApsG,EAAA,YAGA,IAAAqsG,IACAC,YACAN,UAAAjF,GACAkF,WAAA1B,GACA2B,YAAA,aACAC,WAAA,mBACAC,YAAA,qBAEAG,cACAP,UAAA/E,GACAgF,WAAAH,GACAI,YAAA,qBACAC,WAAA,qBACAC,YAAA,wBAIAI,GAAAr/E,GAAA4+E,GAAAM,IAgDA,SAAAI,GAAAj1G,EAAA80B,EAAAC,EAAAxR,GACA,IAAAgC,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAEAy7B,EAAAh+B,EAAAuzE,aAEAhuD,EAAAuP,OAEAC,IACAxP,EAAAwP,SAEAxR,IACAgC,EAAAhC,YAEAgC,EAAA6N,KAAApzB,EAEA,IAAAsK,EAAA,IAAA0qG,GAAAlrG,KAAA2qG,WAAAlvF,GAIA,OAFAyY,EAAAe,SAAAz0B,GAEAA,EAjEAuqG,GAAAK,MAAAn0G,OAAAyrB,KAAAqoF,IACAN,GAAAW,MAAAn0G,OAAAyrB,KAAA+nF,IACAS,GAAAE,SAAA39F,OAAAs9F,GAAAK,OAAA39F,OAAAg9F,GAAAW,OAyEA,IAAAvP,GAAA,SAAA1iB,GAYA,SAAA0iB,IACA,IAAApgF,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAkjB,EAAAljB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,gBACAw0F,EAAA92F,KAAA0lG,GAIApgF,EAAA0+E,qBAAA,EAIA,IAAAlkF,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA,KAAAslB,EAAAE,IAwDA,OAtDA1F,EAAAo1F,aAAA,EACAp1F,EAAA3B,GAAA,qBACAne,KAAAk1G,aAAA,IAEAp1F,EAAA3B,GAAA,uBACAne,KAAAk1G,aAAA,IAGAH,GAAAE,MAAAzoF,QAAA,SAAA7rB,GACA,IAAA2Y,EAAAy7F,GAAAp0G,GAEA2kB,KAAAhM,EAAAo7F,cACA50F,EAAAxG,EAAAq7F,aAAArvF,EAAAhM,EAAAo7F,eAKA50F,EAAAq1F,wBACAr1F,EAAAs1F,mBAIAt1F,EAAAu1F,0BACAv1F,EAAAw1F,uBAGA,wBAAA9oF,QAAA,SAAAniB,IACA,IAAAib,EAAA,SAAAjb,EAAA,YACAyV,EAAA,iBAAAzV,EAAA,iBAIA,IAAAib,EAAAiwF,iBAAA,IAAAjwF,EAAAkwF,iBACA11F,EAAA21F,0BAAA,GACK,IAAAnwF,EAAAiwF,iBAAA,IAAAjwF,EAAAkwF,mBACL11F,EAAA21F,0BAAA,GAGA31F,EAAA21F,0BACA31F,EAAA41F,oBAGA51F,EAAA61F,sBAAA,IAAAZ,GAAAlrG,KAAA0qG,UAEAz0F,EAAA81F,qBAGAtwF,EAAAuwF,wBACA/1F,EAAAsnF,gBAGAtnF,EAAA5Z,cACA4Z,EAAA+7C,MAAA/7C,EAAA5Z,YAAAvF,MAAA,gBAEAmf,EA82BA,OA57BAi3E,EAAA2O,EAAA1iB,GA0FA0iB,EAAA1jG,UAAA8zG,iBAAA,SAAAzvF,GACA,IAAA2P,EAAAh2B,KAEAA,KAAA+lG,UAGA/lG,KAAA03B,IAAA,mBACA,OAAA1B,EAAAiO,WAAA,WACA,OAAAjO,EAAA8/E,iBAAAzvF,IACS,KAYTrmB,KAAA2W,SACA0P,MACA9d,KAAA,eAcAm9F,EAAA1jG,UAAAozG,iBAAA,WACAp1G,KAAAme,GAAA,iBAAAne,KAAA+1G,kBAEA/1G,KAAAg2G,gBAAA,EAGAh2G,KAAA03B,IAAA,QAAA13B,KAAAi2G,gBASAvQ,EAAA1jG,UAAAk0G,kBAAA,WACAl2G,KAAAg2G,gBAAA,EACAh2G,KAAAm2G,uBAEAn2G,KAAAqe,IAAA,iBAAAre,KAAA+1G,mBAkBArQ,EAAA1jG,UAAAi0G,cAAA,SAAA5rF,GACArqB,KAAAm2G,uBACAn2G,KAAAo2G,iBAAAp2G,KAAAqoG,YAAAzmG,GAAA5B,KAAA,WAGA,IAAAq2G,EAAAr2G,KAAA8pG,kBAEA9pG,KAAAs2G,mBAAAD,GAOAr2G,KAAA2W,QAAA,YAGA3W,KAAAs2G,iBAAAD,EAEA,IAAAA,GACAr2G,KAAAm2G,yBAEK,MAcLzQ,EAAA1jG,UAAA+zG,iBAAA,SAAA1rF,GACArqB,KAAAq0C,UAAAr0C,KAAA6hB,YAWA6jF,EAAA1jG,UAAA02B,SAAA,WACA,OAAAlE,GAAA,MAaAkxE,EAAA1jG,UAAA8nG,gBAAA,WACA,OAAAA,GAAA9pG,KAAA04B,WAAA14B,KAAAq0C,YAWAqxD,EAAA1jG,UAAAm0G,qBAAA,WACAn2G,KAAAooG,cAAApoG,KAAAo2G,mBAUA1Q,EAAA1jG,UAAAszG,oBAAA,WACAt1G,KAAAu2G,mBAAA,EAEAv2G,KAAAme,GAAA,OAAAne,KAAAw2G,kBACAx2G,KAAAme,GAAA,QAAAne,KAAAy2G,0BASA/Q,EAAA1jG,UAAA00G,qBAAA,WACA12G,KAAAu2G,mBAAA,EACAv2G,KAAAy2G,0BACAz2G,KAAAqe,IAAA,OAAAre,KAAAw2G,kBACAx2G,KAAAqe,IAAA,QAAAre,KAAAy2G,0BAYA/Q,EAAA1jG,UAAAw0G,iBAAA,WACAx2G,KAAA22G,qBACA32G,KAAAy2G,0BAEAz2G,KAAA22G,oBAAA32G,KAAAqoG,YAAA,WAOAroG,KAAA2W,SAAoBpO,KAAA,aAAA8Q,OAAArZ,KAAA42G,mBAAA,KAGf,MAWLlR,EAAA1jG,UAAAy0G,wBAAA,WACAz2G,KAAAooG,cAAApoG,KAAA22G,qBAIA32G,KAAA2W,SAAkBpO,KAAA,aAAA8Q,OAAArZ,KAAA42G,mBAAA,KAWlBlR,EAAA1jG,UAAAyc,QAAA,WAGAze,KAAA6+B,YAAAy1E,GAAAW,OAGAj1G,KAAAg2G,gBACAh2G,KAAAk2G,oBAGAl2G,KAAAu2G,mBACAv2G,KAAA02G,uBAGA1zB,EAAAhhF,UAAAyc,QAAAle,KAAAP,OAeA0lG,EAAA1jG,UAAA68B,YAAA,SAAAqkC,GACA,IAAA3qC,EAAAv4B,KAEAkjE,KAAA5rD,OAAA4rD,GAEAA,EAAA12C,QAAA,SAAAjkB,GACA,IAAA2oD,EAAA34B,EAAAhwB,EAAA,gBACAnI,EAAA8wD,EAAA3uD,OAEA,MAAAnC,IAAA,CACA,IAAAiK,EAAA6mD,EAAA9wD,GAEA,SAAAmI,GACAgwB,EAAAs+E,sBAAAxsG,GAEA6mD,EAAAu9C,YAAApkG,OAWAq7F,EAAA1jG,UAAA80G,sBAAA,WACA,IAAA5lD,EAAAlxD,KAAA21G,0BACAv1G,EAAA8wD,EAAA3uD,OAEA,MAAAnC,IAAA,CACA,IAAAiK,EAAA6mD,EAAA9wD,GAEAJ,KAAA62G,sBAAAxsG,KAWAq7F,EAAA1jG,UAAAk1C,MAAA,aAaAwuD,EAAA1jG,UAAA21B,MAAA,SAAA/N,GAKA,YAJA3c,IAAA2c,IACA5pB,KAAA20C,OAAA,IAAAy1D,GAAAxgF,GACA5pB,KAAA2W,QAAA,UAEA3W,KAAA20C,QAeA+wD,EAAA1jG,UAAA+0G,OAAA,WACA,OAAA/2G,KAAAk1G,YACA1gF,GAAA,KAEAA,MAWAkxE,EAAA1jG,UAAAo3B,eAAA,WAEAp5B,KAAAu2G,mBAOAv2G,KAAA2W,SAAoBpO,KAAA,aAAA8Q,OAAArZ,KAAA42G,mBAAA,KAgBpBlR,EAAA1jG,UAAA4zG,mBAAA,WACA,IAAAv8E,EAAAr5B,KAsBAs0G,GAAAW,MAAAzoF,QAAA,SAAA7rB,GACA,IAAA2Y,EAAAg7F,GAAA3zG,GACAq2G,EAAA,WACA39E,EAAA1iB,QAAAhW,EAAA,gBAGAo9B,EAAA1E,EAAA/f,EAAAo7F,cAEA32E,EAAA1J,iBAAA,cAAA2iF,GACAj5E,EAAA1J,iBAAA,WAAA2iF,GAEA39E,EAAAlb,GAAA,qBACA4f,EAAA7C,oBAAA,cAAA87E,GACAj5E,EAAA7C,oBAAA,WAAA87E,QAaAtR,EAAA1jG,UAAAi1G,iBAAA,WACA,IAAAn8E,EAAA96B,KAEA,IAAQipI,EAAA1iI,EAAQmI,OAOhB,GAAQy6H,EAAA5iI,EAAQy0F,KAAAlX,SAAA9jF,KAAAioC,MAAA,CAKhB,IAAAjoC,KAAAijF,SAAA,WAAAqU,EAA8CmyC,EAAAljI,IAAGzF,OAAAyrB,KAAiBk9G,EAAAljI,GAAGhE,OAAA,EAErE,YADAvC,KAAA2W,QAAA,eAMA,IAAAugG,EAAmBiyB,EAAA5iI,EAAQ+B,cAAA,UAE3B4uG,EAAA7wF,IAAArmB,KAAAijF,SAAA,4DACAi0B,EAAAC,OAAA,WAOAr8E,EAAAnkB,QAAA,gBAEAugG,EAAAE,QAAA,WAOAt8E,EAAAnkB,QAAA,eAEA3W,KAAAme,GAAA,qBACA+4F,EAAAC,OAAA,KACAD,EAAAE,QAAA,OAIM6xB,EAAA1iI,EAAQmI,QAAA,EACd1O,KAAAioC,KAAAh/B,WAAAH,YAAAouG,QAEAl3G,KAAAwlB,MAAAxlB,KAAAi3G,mBAUAvR,EAAA1jG,UAAA0zG,kBAAA,WACA,IAAAv6E,EAAAn7B,KAEA+9B,EAAA/9B,KAAAszE,aACA+jC,EAAAr3G,KAAA4+B,mBACA04E,EAAA,SAAAtvG,GACA,OAAA+1B,EAAAe,SAAA92B,EAAAqC,QAEAktG,EAAA,SAAAvvG,GACA,OAAA+1B,EAAA0wE,YAAAzmG,EAAAqC,QAGAgtG,EAAAl5F,GAAA,WAAAm5F,GACAD,EAAAl5F,GAAA,cAAAo5F,GAEAv3G,KAAAi3G,mBAEA,IAAAO,EAAA,WACA,OAAAr8E,EAAAxkB,QAAA,oBAGA8gG,EAAA,WACAD,IAEA,QAAAp3G,EAAA,EAAqBA,EAAA29B,EAAAx7B,OAAmBnC,IAAA,CACxC,IAAAiK,EAAA0zB,EAAA39B,GAEAiK,EAAA6wB,oBAAA,YAAAs8E,GACA,YAAAntG,EAAA9I,MACA8I,EAAAgqB,iBAAA,YAAAmjF,KAKAC,IACA15E,EAAA1J,iBAAA,SAAAojF,GACA15E,EAAA1J,iBAAA,WAAAojF,GACA15E,EAAA1J,iBAAA,cAAAojF,GAEAz3G,KAAAme,GAAA,qBACAk5F,EAAAh5F,IAAA,WAAAi5F,GACAD,EAAAh5F,IAAA,cAAAk5F,GACAx5E,EAAA7C,oBAAA,SAAAu8E,GACA15E,EAAA7C,oBAAA,WAAAu8E,GACA15E,EAAA7C,oBAAA,cAAAu8E,GAEA,QAAAr3G,EAAA,EAAqBA,EAAA29B,EAAAx7B,OAAmBnC,IAAA,CACxC,IAAAiK,EAAA0zB,EAAA39B,GAEAiK,EAAA6wB,oBAAA,YAAAs8E,OAsBA9R,EAAA1jG,UAAA6xB,aAAA,SAAAgB,EAAAC,EAAAxR,GACA,IAAAuR,EACA,UAAAryB,MAAA,mDAGA,OAAAwyG,GAAAh1G,KAAA60B,EAAAC,EAAAxR,IA0BAoiF,EAAA1jG,UAAA01G,sBAAA,SAAApyF,GACA,IAAAjb,EAAAqrB,GAAApQ,GACA6N,KAAAnzB,OAGA,WAAA40G,GAAAE,aAAAN,WAAAnqG,IAyBAq7F,EAAA1jG,UAAA4yB,mBAAA,WACA,IAAA+iF,EAAA33G,KAEAslB,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAs1G,EAAAt1G,UAAA,GAEAu1G,EAAA73G,KAAA03G,sBAAApyF,GAmBA,OAjBA,IAAAsyF,IAAA,IAAAA,IAEArf,EAAA9lE,KAAA,oKACAmlF,GAAA,GAIA53G,KAAA83G,qBAAAnI,iBAAAkI,GACA73G,KAAA4+B,mBAAAE,SAAA+4E,EAAAxtG,QAEA,IAAAutG,GAEA53G,KAAAwlB,MAAA,WACA,OAAAmyF,EAAAhC,sBAAA72E,SAAA+4E,EAAAxtG,SAIAwtG,GAWAnS,EAAA1jG,UAAA60G,sBAAA,SAAAxsG,GACA,IAAAulG,EAAA5vG,KAAA83G,qBAAAjI,wBAAAxlG,GAGArK,KAAA83G,qBAAA/H,oBAAAH,GACA5vG,KAAA4+B,mBAAA6vE,YAAApkG,GACArK,KAAA21G,sBAAAlH,YAAApkG,IAgBAq7F,EAAA1jG,UAAA+1G,wBAAA,WACA,UAUArS,EAAA1jG,UAAAg2G,UAAA,aASAtS,EAAA1jG,UAAAi2G,YAAA,aASAvS,EAAA1jG,UAAAk2G,eAAA,aAYAxS,EAAA1jG,UAAAqoI,0BAAA,aAYA3kC,EAAA1jG,UAAAsoI,0BAAA,aAoBA5kC,EAAA1jG,UAAA4gF,YAAA,WACA,UAeA8iB,EAAA9iB,YAAA,WACA,UAaA8iB,EAAAnjB,cAAA,SAAA2C,EAAA5/D,GACA,OAAAogF,EAAA9iB,YAAAsC,EAAA38E,OAiBAm9F,EAAAE,OAAA,SAAA/8E,GACA,OAAAA,EAAA7mB,qBAAA0jG,GAAA78E,aAAA68E,GAAA78E,IAAA68E,GAcAA,EAAAyS,aAAA,SAAAx3G,EAAAwyB,GAKA,GAJAuyE,EAAA0S,SACA1S,EAAA0S,YAGA1S,EAAAE,OAAAzyE,GACA,UAAA3wB,MAAA,QAAA7B,EAAA,mBAGA,IAAA+kG,EAAA9iB,YACA,UAAApgF,MAAA,uDAEA,IAAAkjG,EAAAnjB,cACA,UAAA//E,MAAA,yDAUA,OAPA7B,EAAA2iG,GAAA3iG,GAEA+kG,EAAA0S,OAAAz3G,GAAAwyB,EACA,SAAAxyB,GAEA+kG,EAAA2S,kBAAAhvG,KAAA1I,GAEAwyB,GAcAuyE,EAAAvpB,QAAA,SAAAx7E,GACA,GAAAA,EAMA,OAFAA,EAAA2iG,GAAA3iG,GAEA+kG,EAAA0S,QAAA1S,EAAA0S,OAAAz3G,GACA+kG,EAAA0S,OAAAz3G,GAGQsoI,EAAA1iI,GAAY0iI,EAAA1iI,EAAQof,SAAYsjH,EAAA1iI,EAAQof,QAAAhlB,IAChD43F,EAAA9lE,KAAA,OAAA9xB,EAAA,6GACasoI,EAAA1iI,EAAQof,QAAAhlB,SAFrB,GAMA+kG,EA77BA,CA87BC7iB,IAqCDkyB,GAAAE,MAAAzoF,QAAA,SAAA7rB,GACA,IAAA2Y,EAAAy7F,GAAAp0G,GAEA+kG,GAAA1jG,UAAAsX,EAAAo7F,YAAA,WAEA,OADA10G,KAAAsZ,EAAAq7F,aAAA30G,KAAAsZ,EAAAq7F,cAAA,IAAAr7F,EAAAi7F,UACAv0G,KAAAsZ,EAAAq7F,gBAkCAjP,GAAA1jG,UAAAs2G,uBAAA,EAQA5S,GAAA1jG,UAAAu2G,qBAAA,EASA7S,GAAA1jG,UAAAw2G,0BAAA,EAWA9S,GAAA1jG,UAAAy2G,sBAAA,EAUA/S,GAAA1jG,UAAAmzG,wBAAA,EAYAzP,GAAA1jG,UAAA02G,mBAAA,EAUAhT,GAAA1jG,UAAAqzG,0BAAA,EASA3P,GAAA1jG,UAAAyzG,0BAAA,EAcA/P,GAAAiT,mBAAA,SAAAC,GAWAA,EAAAtzB,sBAAA,SAAAuzB,EAAA/gG,GACA,IAAAylF,EAAAqb,EAAAE,eAEAvb,IACAA,EAAAqb,EAAAE,wBAGA7rG,IAAA6K,IAEAA,EAAAylF,EAAAh7F,QAGAg7F,EAAAj/E,OAAAxG,EAAA,EAAA+gG,IAaAD,EAAAh2B,YAAA,SAAAr6E,GAIA,IAHA,IAAAg1F,EAAAqb,EAAAE,mBACAC,OAAA,EAEA34G,EAAA,EAAmBA,EAAAm9F,EAAAh7F,OAAqBnC,IAGxC,GAFA24G,EAAAxb,EAAAn9F,GAAAwiF,YAAAr6E,GAEAwwG,EACA,OAAAA,EAIA,UAkBAH,EAAAI,oBAAA,SAAAj6F,EAAAuG,GAIA,IAHA,IAAAi4E,EAAAqb,EAAAE,mBACAC,OAAA,EAEA34G,EAAA,EAAmBA,EAAAm9F,EAAAh7F,OAAqBnC,IAGxC,GAFA24G,EAAAxb,EAAAn9F,GAAA6kF,gBAAAlmE,EAAAuG,GAEAyzF,EACA,OAAAxb,EAAAn9F,GAIA,aAeAw4G,EAAAr2B,cAAA,SAAA2C,EAAA5/D,GACA,IAAA2zF,EAAAL,EAAAI,oBAAA9zB,EAAA5/D,GAEA,OAAA2zF,EACAA,EAAAh0B,gBAAAC,EAAA5/D,GAGA,IAOA,IAAA4zF,GAAA,iCAgBAA,EAAA1sF,QAAA,SAAAg9E,GACA,IAAA2P,EAAAn5G,KAAAwpG,GAEA,oBAAA2P,IAIAn5G,KAAAwpG,GAAA,WACA,OAAAxpG,KAAAo5G,gBAAAp5G,KAAAo5G,eAAA5P,GACAxpG,KAAAo5G,eAAA5P,GAAArxF,MAAAnY,KAAAo5G,eAAA92G,WAEA62G,EAAAhhG,MAAAnY,KAAAsC,cAEGs2G,EAAA52G,WAUH42G,EAAA52G,UAAA4uC,UAAA,SAAA7xB,GACA,IAAAk6F,EAAAL,EAAAI,oBAAAj6F,EAAA/e,KAAAijF,UAEAg2B,IAGAL,EAAAS,oBACAJ,EAAAL,EAAAS,oBAEA9gB,EAAA5gE,MAAA,oDAKA33B,KAAAs5G,uBACAt5G,KAAAqe,IAAA,UAAAre,KAAAs5G,sBAEAL,IAAAL,EAAAS,sBACAr5G,KAAAuwC,eAAAxxB,GAGA/e,KAAAo5G,eAAAH,EAAA9zB,aAAApmE,EAAA/e,UAAAijF,UACAjjF,KAAAme,GAAA,UAAAne,KAAAs5G,uBAQAV,EAAA52G,UAAAs3G,qBAAA,WAIAt5G,KAAAuwC,iBACAvwC,KAAA6+B,aAAA,kBACA7+B,KAAAuwC,eAAA,MAIAvwC,KAAA82G,wBAEA92G,KAAAo5G,iBAEAp5G,KAAAo5G,eAAA36F,SACAze,KAAAo5G,eAAA36F,UAGAze,KAAAo5G,eAAA,QAOAv2B,GAAA2C,kBAAA,OAAAkgB,IACAA,GAAAyS,aAAA,OAAAzS,IAOAA,GAAA2S,qBAEA,IAAAkB,MACAC,MAEAC,MAEA,SAAAl0B,GAAAh9E,EAAAmxG,GACAH,GAAAhxG,GAAAgxG,GAAAhxG,OACAgxG,GAAAhxG,GAAAc,KAAAqwG,GAGA,SAAA9oE,GAAA9pB,EAAAT,EAAAsD,GACA7C,EAAAmd,WAAA,WACA,OAAA01E,GAAAtzF,EAAAkzF,GAAAlzF,EAAA9d,MAAAohB,EAAA7C,IACG,GAGH,SAAA8yF,GAAAF,EAAAvmF,GACAumF,EAAAltF,QAAA,SAAAqtF,GACA,OAAAA,EAAAD,SAAAC,EAAAD,QAAAzmF,KAQA,SAAA2mF,GAAAJ,EAAAvmF,EAAAlR,GACA,OAAAy3F,EAAAK,YAAAC,GAAA/3F,GAAAkR,EAAAlR,MAOA,SAAAg4F,GAAAP,EAAAvmF,EAAAlR,EAAAkkE,GACA,OAAAhzD,EAAAlR,GAAAy3F,EAAAhiG,OAAAsiG,GAAA/3F,GAAAkkE,IASA,SAAA+zB,GAAAR,EAAAvmF,EAAAlR,GACA,IAAAkkE,EAAA7jF,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,QAEA63G,EAAA,OAAA7W,GAAArhF,GACAm4F,EAAAV,EAAAhiG,OAAAsiG,GAAAG,GAAAh0B,GACAk0B,EAAAD,IAAAX,GACApb,EAAAgc,EAAA,KAAAlnF,EAAAlR,GAAAm4F,GAIA,OAFAE,GAAAZ,EAAAz3F,EAAAo8E,EAAAgc,GAEAhc,EAGA,IAAAkc,IACA7hF,SAAA,EACAzD,YAAA,EACApT,SAAA,EACAqT,SAAA,EACA6hF,OAAA,EACAz/E,OAAA,GAGAkjF,IACAphF,eAAA,GAGAqhF,IACA7gF,KAAA,EACA/B,MAAA,GAGA,SAAAmiF,GAAA/3F,GACA,gBAAA5gB,EAAAw4G,GAEA,OAAAx4G,IAAAo4G,GACAA,GAGAI,EAAA53F,GACA43F,EAAA53F,GAAA5gB,GAGAA,GAIA,SAAAi5G,GAAAI,EAAAz4F,EAAA5gB,EAAAg5G,GACA,QAAAj6G,EAAAs6G,EAAAn4G,OAAA,EAA8BnC,GAAA,EAAQA,IAAA,CACtC,IAAAy5G,EAAAa,EAAAt6G,GAEAy5G,EAAA53F,IACA43F,EAAA53F,GAAAo4F,EAAAh5G,IAKA,SAAAs5G,GAAA7zF,GACA0yF,GAAA1yF,EAAAriB,MAAA,KAQA,SAAAm2G,GAAA9zF,EAAA+zF,GACA,IAAAH,EAAAlB,GAAA1yF,EAAAriB,MACAo1G,EAAA,KAEA,QAAA5sG,IAAAytG,GAAA,OAAAA,EAGA,OAFAb,EAAAgB,EAAA/zF,GACA0yF,GAAA1yF,EAAAriB,QAAAo2G,EAAAhB,IACAA,EAGA,QAAAz5G,EAAA,EAAiBA,EAAAs6G,EAAAn4G,OAAgBnC,IAAA,CACjC,IAAA06G,EAAAJ,EAAAt6G,GACA26G,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAGAC,IAAAF,IAIAhB,EAAAmB,GAQA,OALA,OAAAnB,IACAA,EAAAgB,EAAA/zF,GACA4zF,EAAArxG,MAAAwxG,EAAAhB,KAGAA,EAGA,SAAAF,KACA,IAAAtzF,EAAA/jB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAo3G,EAAAp3G,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAqnB,EAAArnB,UAAA,GACAwkB,EAAAxkB,UAAA,GACAkwF,EAAAlwF,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACA24G,EAAA34G,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,IAAAA,UAAA,GACAu4G,EAAAnB,EAAA,GACAwB,EAAAxB,EAAAriG,MAAA,GAIA,qBAAAwjG,EACAlB,GAAAtzF,EAAAkzF,GAAAsB,GAAAlxF,EAAA7C,EAAA0rE,EAAAyoB,QAIG,GAAAJ,EAAA,CACH,IAAAhB,EAAAe,GAAA9zF,EAAA+zF,GAGA,IAAAhB,EAAAjpE,UAEA,OADA4hD,EAAAnpF,KAAAwwG,GACAF,GAAAtzF,EAAA60F,EAAAvxF,EAAA7C,EAAA0rE,EAAAyoB,GAGApB,EAAAjpE,UAAA9xB,KAA0BuH,GAAA,SAAAuD,EAAAq6D,GAI1B,GAAAr6D,EACA,OAAA+vF,GAAAtzF,EAAA60F,EAAAvxF,EAAA7C,EAAA0rE,EAAAyoB,GAIAzoB,EAAAnpF,KAAAwwG,GAIAF,GAAA11B,EAAA59D,EAAA9d,OAAA07E,EAAA17E,KAAA2yG,EAAA3B,GAAAt1B,EAAA17E,MAAAohB,EAAA7C,EAAA0rE,EAAAyoB,UAEGC,EAAA34G,OACHo3G,GAAAtzF,EAAA60F,EAAAvxF,EAAA7C,EAAA0rE,EAAAyoB,GACGA,EACHtxF,EAAAtD,EAAAmsE,GAEAmnB,GAAAtzF,EAAAkzF,GAAA,KAAA5vF,EAAA7C,EAAA0rE,GAAA,GAWA,IAAA2oB,IACAC,KAAA,YACAC,IAAA,YACAh0C,IAAA,YACAi0C,IAAA,YACAC,IAAA,YACAC,IAAA,mBACAC,IAAA,aACA1uC,IAAA,YACA2uC,IAAA,YACAj2B,KAAA,yBAYAk2B,GAAA,WACA,IAAAt1F,EAAA/jB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAEAs5G,EAAA9J,GAAAzrF,GACAw1F,EAAAV,GAAAS,EAAA/nG,eAEA,OAAAgoG,GAAA,IAgBAC,GAAA,SAAAh1F,EAAAT,GACA,IAAAA,EACA,SAIA,GAAAS,EAAAi1F,OAAAh9F,OAAAsH,SAAAS,EAAAi1F,OAAAh9F,OAAAxW,KACA,OAAAue,EAAAi1F,OAAAh9F,OAAAxW,KAIA,IAAAyzG,EAAAl1F,EAAAi1F,OAAA51F,QAAAuL,OAAA,SAAAvvB,GACA,OAAAA,EAAAkkB,UAGA,GAAA21F,EAAAz5G,OACA,OAAAy5G,EAAA,GAAAzzG,KAMA,IAFA,IAAA4d,EAAAW,EAAA+1E,GAAA,UAEAz8F,EAAA,EAAiBA,EAAA+lB,EAAA5jB,OAAoBnC,IAAA,CACrC,IAAA+B,EAAAgkB,EAAA/lB,GAEA,GAAA+B,EAAAoG,MAAApG,EAAAkkB,KAAAlkB,EAAAkkB,QACA,OAAAlkB,EAAAoG,KAKA,OAAAozG,GAAAt1F,IAoBA41F,GAAA,SAAAA,EAAA51F,GAEA,GAAAtL,MAAA8O,QAAAxD,GAAA,CACA,IAAA61F,KAEA71F,EAAAmG,QAAA,SAAA2vF,GACAA,EAAAF,EAAAE,GAEAphG,MAAA8O,QAAAsyF,GACAD,IAAA5kG,OAAA6kG,GACO3yB,EAAA2yB,IACPD,EAAA7yG,KAAA8yG,KAIA91F,EAAA61F,OAGA71F,EAFG,kBAAAA,KAAA1d,QAEHyzG,IAAsB/1F,SACnBmjE,EAAAnjE,IAAA,kBAAAA,oBAAA1d,QAEHyzG,GAAA/1F,OAMA,OAAAA,GAWA,SAAA+1F,GAAA/1F,GACA,IAAAw1F,EAAAF,GAAAt1F,OAMA,OAJAA,EAAA9d,MAAAszG,IACAx1F,EAAA9d,KAAAszG,GAGAx1F,EAcA,IAAAg2F,GAAA,SAAAr5B,GAeA,SAAAq5B,EAAAv1F,EAAAxB,EAAAE,GACAsxE,EAAA92F,KAAAq8G,GAGA,IAAAp5B,EAAAvtD,IAAiC2jE,UAAA,GAAkB/zE,GAKnDxF,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAm8D,EAAAz9D,IAEA,GAAAF,EAAAC,cAAAY,SAAA,IAAAb,EAAAC,cAAAY,QAAA5jB,OAsBAukB,EAAAT,IAAAf,EAAAC,cAAAY,cArBA,QAAA/lB,EAAA,EAAA+sB,EAAA7H,EAAAC,cAAA+2F,UAA0Dl8G,EAAA+sB,EAAA5qB,OAAcnC,IAAA,CACxE,IAAAm8G,EAAAjZ,GAAAn2E,EAAA/sB,IACA+yB,EAAAuyE,GAAAvpB,QAAAogC,GASA,GALAA,IACAppF,EAAA0vD,GAAAC,aAAAy5B,IAIAppF,KAAAsvD,cAAA,CACA37D,EAAA01F,UAAAD,GACA,OAUA,OAAAz8F,EAGA,OApDAi3E,EAAAslB,EAAAr5B,GAoDAq5B,EArDA,CAsDCx5B,IAEDA,GAAA2C,kBAAA,cAAA62B,IAaA,IAAAI,GAAA,SAAAz5B,GAYA,SAAAy5B,EAAA31F,EAAAxB,GACAwxE,EAAA92F,KAAAy8G,GAEA,IAAA38F,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAxB,IAKA,OAHAxF,EAAAsnF,gBAEAtnF,EAAAyxB,SACAzxB,EAoPA,OAvQAi3E,EAAA0lB,EAAAz5B,GAuCAy5B,EAAAz6G,UAAAq3F,SAAA,WACA,IAAAj4E,EAAA9e,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,SACAgX,EAAAhX,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAwf,EAAAxf,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAEAgX,EAAAwF,GACA6yF,UAAA,gEACAvoG,UAAApJ,KAAA6lG,gBACA8F,SAAA,GACKryF,GAEL,WAAA8H,GACAm3E,EAAA5gE,MAAA,yDAAAvW,EAAA,4CAIAU,EAAAhD,GACAopE,KAAA,UACKpmE,GAEL9hB,KAAA08G,UAAApjG,EAAAqyF,SAEA,IAAA1jE,EAAA+6C,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAAohB,EAAA9H,EAAAwI,GAIA,OAFA9hB,KAAA28G,oBAAA10E,GAEAA,GAGAw0E,EAAAz6G,UAAAyc,QAAA,WAEAze,KAAA48G,eAAA,KAEA55B,EAAAhhF,UAAAyc,QAAAle,KAAAP,OAcAy8G,EAAAz6G,UAAA26G,oBAAA,SAAA10E,GAcA,OAbAjoC,KAAA48G,eAAAvjB,EAAA,QACAjwF,UAAA,qBAGAyzG,YAAA,WAGA50E,GACAA,EAAAn/B,YAAA9I,KAAA48G,gBAGA58G,KAAA6sG,YAAA7sG,KAAA88G,aAAA70E,GAEAjoC,KAAA48G,gBAiBAH,EAAAz6G,UAAA6qG,YAAA,SAAAhjG,GACA,IAAAo+B,EAAA3lC,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,GAAAtC,KAAAioC,KAEA,QAAAh7B,IAAApD,EACA,OAAA7J,KAAA88G,cAAA,YAGA,IAAAC,EAAA/8G,KAAAkkG,SAAAr6F,GAEA7J,KAAA88G,aAAAjzG,EACAI,EAAAjK,KAAA48G,eAAAG,GACA/8G,KAAAg9G,gBAEA/0E,EAAAuxD,aAAA,QAAAujB,IAYAN,EAAAz6G,UAAA6jG,cAAA,WACA,gCAAA7iB,EAAAhhF,UAAA6jG,cAAAtlG,KAAAP,OAQAy8G,EAAAz6G,UAAAuvC,OAAA,WACAvxC,KAAAi9G,WACAj9G,KAAAi9G,UAAA,EACAj9G,KAAAm6F,YAAA,gBACAn6F,KAAAy6E,IAAA+e,aAAA,yBACA,qBAAAx5F,KAAA08G,WACA18G,KAAAy6E,IAAA+e,aAAA,WAAAx5F,KAAA08G,WAEA18G,KAAAme,IAAA,eAAAne,KAAAk9G,aACAl9G,KAAAme,GAAA,QAAAne,KAAAm9G,aACAn9G,KAAAme,GAAA,OAAAne,KAAAo9G,cASAX,EAAAz6G,UAAAg2F,QAAA,WACAh4F,KAAAi9G,UAAA,EACAj9G,KAAAi6F,SAAA,gBACAj6F,KAAAy6E,IAAA+e,aAAA,wBACA,qBAAAx5F,KAAA08G,WACA18G,KAAAy6E,IAAAggB,gBAAA,YAEAz6F,KAAAqe,KAAA,eAAAre,KAAAk9G,aACAl9G,KAAAqe,IAAA,QAAAre,KAAAm9G,aACAn9G,KAAAqe,IAAA,OAAAre,KAAAo9G,aA2BAX,EAAAz6G,UAAAk7G,YAAA,SAAA7yF,KAcAoyF,EAAAz6G,UAAAm7G,YAAA,SAAA9yF,GACAlM,GAAOgrH,EAAA5iI,EAAQ,UAAA3E,GAAA5B,UAAAgsG,kBAcfyQ,EAAAz6G,UAAAgqG,eAAA,SAAA3hF,GAGA,KAAAA,EAAAy0E,OAAA,KAAAz0E,EAAAy0E,OACAz0E,EAAA2zE,iBACAh+F,KAAA2W,QAAA,UACKqsE,EAAAhhF,UAAAgqG,gBAGLhpB,EAAAhhF,UAAAgqG,eAAAzrG,KAAAP,KAAAqqB,IAeAoyF,EAAAz6G,UAAAo7G,WAAA,SAAA/yF,GACAhM,GAAQ8qH,EAAA5iI,EAAQ,UAAA3E,GAAA5B,UAAAgsG,kBAGhByQ,EAxQA,CAyQC55B,IAEDA,GAAA2C,kBAAA,qBAAAi3B,IAYA,IAAAY,GAAA,SAAAC,GAYA,SAAAD,EAAAv2F,EAAAxB,GACAwxE,EAAA92F,KAAAq9G,GAEA,IAAAv9F,EAAAk3E,EAAAh3F,KAAAs9G,EAAA/8G,KAAAP,KAAA8mB,EAAAxB,IAIA,OAFAxF,EAAA8lB,SACA9e,EAAA3I,GAAA,eAAAvc,GAAAke,IAAA8lB,SACA9lB,EAsGA,OAxHAi3E,EAAAsmB,EAAAC,GA0BAD,EAAAr7G,UAAAyc,QAAA,WACAze,KAAA8mB,SAAAzI,IAAA,eAAAre,KAAA4lC,QACA03E,EAAAt7G,UAAAyc,QAAAle,KAAAP,OAWAq9G,EAAAr7G,UAAAq3F,SAAA,WACA,IAAApxD,EAAAoxD,EAAA,OACAjwF,UAAA,aAGAuiG,UAAA,IAGA,OAAA1jE,GAaAo1E,EAAAr7G,UAAA4jC,OAAA,SAAAvb,GACA,IAAA6I,EAAAlzB,KAAA8mB,SAAAF,SAEA5mB,KAAAw9G,OAAAtqF,GAIAA,EACAlzB,KAAAmmG,OAEAnmG,KAAAomG,QAYAiX,EAAAr7G,UAAAw7G,OAAA,SAAAtqF,GACA,IAAAuqF,EAAA,GAIAvqF,IACAuqF,EAAA,QAAAvqF,EAAA,MAGAlzB,KAAAy6E,IAAA7rE,MAAA6uG,mBAgBAJ,EAAAr7G,UAAAk7G,YAAA,SAAA7yF,GAEArqB,KAAAqzE,QAAAk5B,aAIAvsG,KAAAqzE,QAAA/7C,SACAmzE,GAAAzqG,KAAAqzE,QAAAz5C,QAEA55B,KAAAqzE,QAAAx7C,UAIAwlF,EAzHA,CA0HCZ,IAED55B,GAAA2C,kBAAA,cAAA63B,IAMA,IAAAK,GAAA,OACAC,GAAA,OACAC,IACAC,UAAA,YACAC,UAAA,aACAC,MAAA,QACAC,mBAAA,6CACAC,eAAA,2BACAC,sBAAA,aACAC,kBAAA,QACAC,OAAA,mCACAlH,OAAA,8BACAmH,UAAA,0DAeA,SAAAC,GAAAtzG,EAAAuzG,GACA,IAAAtxF,OAAA,EAEA,OAAAjiB,EAAAzI,OAEA0qB,EAAAjiB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,OACG,QAAAA,EAAAzI,OAIH,UAAAC,MAAA,gCAAAwI,EAAA,gDAFAiiB,EAAAjiB,EAAAqM,MAAA,GAIA,cAAA5Q,SAAAwmB,EAAA5V,MAAA,aAAA5Q,SAAAwmB,EAAA5V,MAAA,aAAA5Q,SAAAwmB,EAAA5V,MAAA,aAAAknG,EAAA,IAkBA,SAAAC,GAAAv2E,EAAAr5B,EAAAm4F,GACA,IACA9+D,EAAAr5B,SAAAm4F,EACG,MAAA/+F,GAGH,QAUA,IAAAy2G,GAAA,SAAAz7B,GAeA,SAAAy7B,EAAA33F,EAAAxB,EAAAE,GACAsxE,EAAA92F,KAAAy+G,GAEA,IAAA3+F,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAxB,EAAAE,IA0BA,OAxBAsB,EAAA3I,GAAA,YAAAvc,GAAAke,IAAA4+F,gBACA53F,EAAA3I,GAAA,kBAAAvc,GAAAke,IAAA03F,gBACA1wF,EAAA3I,GAAA,YAAAvc,GAAAke,IAAA6+F,iBAMA73F,EAAAtB,MAAA5jB,GAAAke,EAAA,WACA,GAAAgH,EAAAC,OAAAD,EAAAC,MAAA0uF,yBACAz1G,KAAAomG,WADA,CAKAt/E,EAAA3I,GAAA,mBAAAvc,GAAA5B,UAAAw3G,gBAIA,IAFA,IAAAz5E,EAAA/9B,KAAAijF,SAAA19D,cAAAwY,WAEA39B,EAAA,EAAqBA,EAAA29B,EAAAx7B,OAAmBnC,IACxCJ,KAAAqzE,QAAAz+C,mBAAAmJ,EAAA39B,IAAA,GAGAJ,KAAA2+G,qBAEA7+F,EAgPA,OA3RAi3E,EAAA0nB,EAAAz7B,GAyDAy7B,EAAAz8G,UAAA28G,eAAA,WAQA,IAPA,IAAAC,GAAiBvxD,SAAA,EAAAqjD,UAAA,GACjBlmG,EAAAxK,KAAAqzE,QAAAC,aACAurC,EAAA7+G,KAAAqzE,QAAA0oC,OAAA+C,iBACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EAEA7+G,EAAA,EAAmBA,EAAAoK,EAAAjI,OAAsBnC,IAAA,CACzC,IAAAiK,EAAAG,EAAApK,GAEAy+G,KAAA5gF,SAAA4gF,EAAAv7F,WAAAjZ,EAAAiZ,SAEAjZ,EAAAwqB,OAAAgqF,EAAAhqF,KACAoqF,EAAA50G,EAES40G,IACTA,EAAA50G,GAIOw0G,MAAA5gF,SACPghF,EAAA,KACAF,EAAA,KACAC,EAAA,MACO30G,EAAAyP,UACP,iBAAAzP,EAAAwqB,MAAAkqF,EAES10G,EAAAwqB,QAAA+pF,IAAAI,IACTA,EAAA30G,GAFA00G,EAAA10G,GAWA40G,EACAA,EAAA19G,KAAA,UACKy9G,EACLA,EAAAz9G,KAAA,UACKw9G,IACLA,EAAAx9G,KAAA,YAcAk9G,EAAAz8G,UAAA08G,cAAA,WACA1+G,KAAAqzE,QAAAtsD,OAAA/mB,KAAAqzE,QAAAtsD,MAAA0uF,yBACAz1G,KAAAomG,OAEApmG,KAAAmmG,QAYAsY,EAAAz8G,UAAAq3F,SAAA,WACA,OAAArW,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,2BAEAyzG,YAAA,MACAqC,cAAA,UASAT,EAAAz8G,UAAAm9G,aAAA,WACuB,oBAAR8pB,EAAA1iI,EAAQmI,QACjBu6H,EAAA1iI,EAAQmI,OAAA2B,YAAoB44H,EAAA1iI,KAAQvG,KAAAy6E,MAa1CgkC,EAAAz8G,UAAAw1G,cAAA,WACA,IAAAz5E,EAAA/9B,KAAAqzE,QAAAC,aAEAtzE,KAAAm/G,eAMA,IAAAC,EAAA,KACAC,EAAA,KACAj/G,EAAA29B,EAAAx7B,OAEA,MAAAnC,IAAA,CACA,IAAAiK,EAAA0zB,EAAA39B,GAEA,YAAAiK,EAAA9I,OACA,iBAAA8I,EAAAwqB,KACAuqF,EAAA/0G,EAEAg1G,EAAAh1G,GAKAg1G,GACA,QAAAr/G,KAAA66F,aAAA,cACA76F,KAAAw5F,aAAA,mBAEAx5F,KAAAs/G,eAAAD,IACKD,IACL,cAAAp/G,KAAA66F,aAAA,cACA76F,KAAAw5F,aAAA,yBAEAx5F,KAAAs/G,eAAAF,KAYAX,EAAAz8G,UAAAs9G,eAAA,SAAAj1G,GACA,GAAuB,oBAAR4+H,EAAA1iI,EAAQmI,QAAArE,EAAA+oG,WAAvB,CAMA,IAFA,IAAA9iG,KAEAmZ,EAAA,EAAoBA,EAAApf,EAAA+oG,WAAA7wG,OAA8BknB,IAClDnZ,EAAAjH,KAAAgB,EAAA+oG,WAAA3pF,IAKA,GAFIw/G,EAAA1iI,EAAQmI,OAAA2B,YAAoB44H,EAAA1iI,EAAQ+J,EAAAtQ,KAAAy6E,KAExCz6E,KAAAqzE,QAAAksC,kBAAA,CAIA,IAAAC,EAAAx/G,KAAAqzE,QAAAksC,kBAAAE,YAEAr/G,EAAAkQ,EAAA/N,OAEA,MAAAnC,IAAA,CACA,IAAA4D,EAAAsM,EAAAlQ,GAEA,GAAA4D,EAAA,CAIA,IAAA2F,EAAA3F,EAAA6M,aAgCA,GA9BA2uG,EAAAx0G,QACArB,EAAA6G,WAAA5B,MAAA5D,MAAAw0G,EAAAx0G,OAEAw0G,EAAAE,aACAlB,GAAA70G,EAAA6G,WAAA,QAAA8tG,GAAAkB,EAAAx0G,OAAA,OAAAw0G,EAAAE,cAEAF,EAAAv0G,kBACAtB,EAAA6G,WAAA5B,MAAA3D,gBAAAu0G,EAAAv0G,iBAEAu0G,EAAAG,mBACAnB,GAAA70G,EAAA6G,WAAA,kBAAA8tG,GAAAkB,EAAAv0G,iBAAA,OAAAu0G,EAAAG,oBAEAH,EAAAI,cACAJ,EAAAK,cACArB,GAAA70G,EAAA,kBAAA20G,GAAAkB,EAAAI,YAAAJ,EAAAK,gBAEAl2G,EAAAiF,MAAA3D,gBAAAu0G,EAAAI,aAGAJ,EAAAM,YACA,eAAAN,EAAAM,UACAn2G,EAAA6G,WAAA5B,MAAAmxG,WAAA,eAAArC,GAAA,iBAAAA,GAAA,iBAAAA,GACS,WAAA8B,EAAAM,UACTn2G,EAAA6G,WAAA5B,MAAAmxG,WAAA,WAAArC,GAAA,aAAAA,GAAA,aAAAA,GACS,cAAA8B,EAAAM,UACTn2G,EAAA6G,WAAA5B,MAAAmxG,WAAA,WAAApC,GAAA,WAAAA,GAAA,eAAAD,GAAA,YAAAA,GACS,YAAA8B,EAAAM,YACTn2G,EAAA6G,WAAA5B,MAAAmxG,WAAA,WAAArC,GAAA,aAAAA,GAAA,aAAAA,GAAA,aAAAA,KAGA8B,EAAAQ,aAAA,IAAAR,EAAAQ,YAAA,CACA,IAAAjvG,EAAuBk4H,EAAA1iI,EAAQG,WAAAiD,EAAAiF,MAAAmC,UAE/BpH,EAAAiF,MAAAmC,WAAAyuG,EAAAQ,YAAA,KACAr2G,EAAAiF,MAAA1C,OAAA,OACAvC,EAAAiF,MAAAzD,IAAA,OACAxB,EAAAiF,MAAAxD,OAAA,MAEAo0G,EAAAS,YAAA,YAAAT,EAAAS,aACA,eAAAT,EAAAS,WACAt2G,EAAA6G,WAAA5B,MAAAsxG,YAAA,aAEAv2G,EAAA6G,WAAA5B,MAAAqxG,WAAArC,GAAA4B,EAAAS,kBAMAxB,EA5RA,CA6RC57B,IAEDA,GAAA2C,kBAAA,mBAAAi5B,IAYA,IAAA0B,GAAA,SAAAn9B,GAGA,SAAAm9B,IAEA,OADArpB,EAAA92F,KAAAmgH,GACAnpB,EAAAh3F,KAAAgjF,EAAA7qE,MAAAnY,KAAAsC,YA2BA,OA/BAy0F,EAAAopB,EAAAn9B,GAaAm9B,EAAAn+G,UAAAq3F,SAAA,WACA,IAAA+mB,EAAApgH,KAAAqzE,QAAA+sC,UACAC,EAAArgH,KAAAkkG,SAAAkc,EAAA,+BACAvT,EAAAxT,EAAA,QACAjwF,UAAA,mBACAuoG,UAAA3xG,KAAAkkG,SAAA,mBAAmCmc,MAGnCp4E,EAAA+6C,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,sBACAwK,IAAA,QAKA,OAFAq0B,EAAAn/B,YAAA+jG,GAEA5kE,GAGAk4E,EAhCA,CAiCCt9B,IAEDA,GAAA2C,kBAAA,iBAAA26B,IAYA,IAAAG,GAAA,SAAAhD,GAGA,SAAAgD,IAEA,OADAxpB,EAAA92F,KAAAsgH,GACAtpB,EAAAh3F,KAAAs9G,EAAAnlG,MAAAnY,KAAAsC,YAqHA,OAzHAy0F,EAAAupB,EAAAhD,GAuBAgD,EAAAt+G,UAAAq3F,SAAA,SAAAj4E,GACA,IAAA9H,EAAAhX,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAwf,EAAAxf,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAEA8e,EAAA,SAEA9H,EAAAwF,GACA6yF,UAAA,gEACAvoG,UAAApJ,KAAA6lG,iBACKvsF,GAGLwI,EAAAhD,GAGAvW,KAAA,UACKuZ,GAEL,IAAAmmB,EAAA46C,GAAA7gF,UAAAq3F,SAAA94F,KAAAP,KAAAohB,EAAA9H,EAAAwI,GAIA,OAFA9hB,KAAA28G,oBAAA10E,GAEAA,GAqBAq4E,EAAAt+G,UAAA8iG,SAAA,SAAAlL,GACA,IAAAt0E,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAEA8G,EAAApJ,KAAAkG,YAAAvF,KAKA,OAHA43F,EAAA9lE,KAAA,+DAAArpB,EAAA,yDAGAy5E,GAAA7gF,UAAA8iG,SAAAvkG,KAAAP,KAAA45F,EAAAt0E,IASAg7F,EAAAt+G,UAAAuvC,OAAA,WACA+rE,EAAAt7G,UAAAuvC,OAAAhxC,KAAAP,MACAA,KAAAy6E,IAAAggB,gBAAA,aASA6lB,EAAAt+G,UAAAg2F,QAAA,WACAslB,EAAAt7G,UAAAg2F,QAAAz3F,KAAAP,MACAA,KAAAy6E,IAAA+e,aAAA,wBAcA8mB,EAAAt+G,UAAAgqG,eAAA,SAAA3hF,GAGA,KAAAA,EAAAy0E,OAAA,KAAAz0E,EAAAy0E,OAKAwe,EAAAt7G,UAAAgqG,eAAAzrG,KAAAP,KAAAqqB,IAGAi2F,EA1HA,CA2HC7D,IAED55B,GAAA2C,kBAAA,SAAA86B,IAaA,IAAAC,GAAA,SAAAC,GAGA,SAAAD,EAAAz5F,EAAAxB,GACAwxE,EAAA92F,KAAAugH,GAEA,IAAAzgG,EAAAk3E,EAAAh3F,KAAAwgH,EAAAjgH,KAAAP,KAAA8mB,EAAAxB,IAKA,OAHAxF,EAAA2gG,YAAA,EAEA3gG,EAAA3B,GAAA,YAAA2B,EAAA4gG,iBACA5gG,EAkEA,OA5EAi3E,EAAAwpB,EAAAC,GAqBAD,EAAAv+G,UAAA6jG,cAAA,WACA,6BAgBA0a,EAAAv+G,UAAAk7G,YAAA,SAAA7yF,GACA,IAAAsP,EAAA35B,KAAAqzE,QAAAz5C,OAGA,GAAA55B,KAAAygH,YAAAp2F,EAAAs0E,SAAAt0E,EAAAw0E,QACA4L,GAAA9wE,OADA,CAKA,IAAAgnF,EAAA3gH,KAAAqzE,QAAAwxB,SAAA,cACA+b,EAAAD,KAAA9b,SAAA,cAEA,GAAA+b,EAAA,CAKA,IAAAC,EAAA,WACA,OAAAD,EAAA3lB,SAGAuP,GAAA7wE,GACAA,EAAAE,KAAAgnF,EAAA,cAEA7gH,KAAAikC,WAAA48E,EAAA,QAXA7gH,KAAAqzE,QAAA4nB,UAeAslB,EAAAv+G,UAAAgqG,eAAA,SAAA3hF,GACArqB,KAAAygH,YAAA,EAEAD,EAAAx+G,UAAAgqG,eAAAzrG,KAAAP,KAAAqqB,IAGAk2F,EAAAv+G,UAAA0+G,gBAAA,SAAAr2F,GACArqB,KAAAygH,YAAA,GAGAF,EA7EA,CA8ECD,IAUDC,GAAAv+G,UAAA86G,aAAA,aAEAj6B,GAAA2C,kBAAA,gBAAA+6B,IAaA,IAAAO,GAAA,SAAAN,GAYA,SAAAM,EAAAh6F,EAAAxB,GACAwxE,EAAA92F,KAAA8gH,GAEA,IAAAhhG,EAAAk3E,EAAAh3F,KAAAwgH,EAAAjgH,KAAAP,KAAA8mB,EAAAxB,IAGA,OADAxF,EAAA+sF,YAAAvnF,KAAAunF,aAAA/sF,EAAAokF,SAAA,UACApkF,EA6CA,OA9DAi3E,EAAA+pB,EAAAN,GA4BAM,EAAA9+G,UAAA6jG,cAAA,WACA,0BAAA2a,EAAAx+G,UAAA6jG,cAAAtlG,KAAAP,OAkBA8gH,EAAA9+G,UAAAk7G,YAAA,SAAA7yF,GAYArqB,KAAA2W,SAAkBpO,KAAA,QAAAuvB,SAAA,KAGlBgpF,EA/DA,CAgECR,IAEDz9B,GAAA2C,kBAAA,cAAAs7B,IAYA,IAAAC,GAAA,SAAAP,GAYA,SAAAO,EAAAj6F,EAAAxB,GACAwxE,EAAA92F,KAAA+gH,GAEA,IAAAjhG,EAAAk3E,EAAAh3F,KAAAwgH,EAAAjgH,KAAAP,KAAA8mB,EAAAxB,IAKA,OAHAxF,EAAA3B,GAAA2I,EAAA,OAAAhH,EAAAkhG,YACAlhG,EAAA3B,GAAA2I,EAAA,QAAAhH,EAAAmhG,aACAnhG,EAAA3B,GAAA2I,EAAA,QAAAhH,EAAAohG,aACAphG,EAgHA,OAnIAi3E,EAAAgqB,EAAAP,GA8BAO,EAAA/+G,UAAA6jG,cAAA,WACA,0BAAA2a,EAAAx+G,UAAA6jG,cAAAtlG,KAAAP,OAgBA+gH,EAAA/+G,UAAAk7G,YAAA,SAAA7yF,GACArqB,KAAAqzE,QAAA/7C,SACAt3B,KAAAqzE,QAAAz5C,OAEA55B,KAAAqzE,QAAAx7C,SAeAkpF,EAAA/+G,UAAAm/G,aAAA,SAAA92F,GACArqB,KAAAm6F,YAAA,aAEAn6F,KAAAqzE,QAAA/7C,SACAt3B,KAAAihH,YAAA52F,GAEArqB,KAAAghH,WAAA32F,IAcA02F,EAAA/+G,UAAAg/G,WAAA,SAAA32F,GACArqB,KAAAm6F,YAAA,aACAn6F,KAAAm6F,YAAA,cACAn6F,KAAAi6F,SAAA,eAEAj6F,KAAA6sG,YAAA,UAaAkU,EAAA/+G,UAAAi/G,YAAA,SAAA52F,GACArqB,KAAAm6F,YAAA,eACAn6F,KAAAi6F,SAAA,cAEAj6F,KAAA6sG,YAAA,SAaAkU,EAAA/+G,UAAAk/G,YAAA,SAAA72F,GACArqB,KAAAm6F,YAAA,eACAn6F,KAAAi6F,SAAA,aAEAj6F,KAAA6sG,YAAA,UAGA7sG,KAAA03B,IAAA13B,KAAAqzE,QAAA,SAAArzE,KAAAmhH,eAGAJ,EApIA,CAqICT,IAUDS,GAAA/+G,UAAA86G,aAAA,OAEAj6B,GAAA2C,kBAAA,aAAAu7B,IAoBA,IAAAK,GAAA,SAAAzyC,EAAA0yC,GACA1yC,IAAA,IAAAA,EACA,IAAAxsE,EAAA2K,KAAAuzB,MAAAsuC,EAAA,IACAnuE,EAAAsM,KAAAuzB,MAAAsuC,EAAA,OACA3rE,EAAA8J,KAAAuzB,MAAAsuC,EAAA,MACA2yC,EAAAx0G,KAAAuzB,MAAAghF,EAAA,OACAE,EAAAz0G,KAAAuzB,MAAAghF,EAAA,MAmBA,OAhBAvxE,MAAA6+B,QAAAh2D,OAGA3V,EAAAxC,EAAA2B,EAAA,KAIAa,IAAA,GAAAu+G,EAAA,EAAAv+G,EAAA,OAIAxC,IAAAwC,GAAAs+G,GAAA,KAAA9gH,EAAA,OAAAA,KAAA,IAGA2B,IAAA,OAAAA,IAEAa,EAAAxC,EAAA2B,GAGAq/G,GAAAJ,GASA,SAAAK,GAAAC,GACAF,GAAAE,EAMA,SAAAC,KACAH,GAAAJ,GAGA,SAAAQ,GAAAjzC,GACA,IAAA0yC,EAAA/+G,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,GAAAqsE,EAEA,OAAA6yC,GAAA7yC,EAAA0yC,GAaA,IAAAQ,GAAA,SAAA7+B,GAYA,SAAA6+B,EAAA/6F,EAAAxB,GACAwxE,EAAA92F,KAAA6hH,GAEA,IAAA/hG,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAxB,IAIA,OAFAxF,EAAAgiG,uBAAA7gB,GAAAr/F,GAAAke,IAAAiiG,eAAA,IACAjiG,EAAA3B,GAAA2I,EAAA,aAAAhH,EAAAgiG,wBACAhiG,EA8GA,OAhIAi3E,EAAA8qB,EAAA7+B,GA6BA6+B,EAAA7/G,UAAAq3F,SAAA,SAAA2oB,GACA,IAAA54G,EAAApJ,KAAA6lG,gBACA59D,EAAA+6C,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,YAAA,gCACAuoG,UAAA,kCAAA3xG,KAAAkkG,SAAAlkG,KAAAiiH,YAAA,aAYA,OATAjiH,KAAA0kG,WAAArL,EAAA,QACAjwF,YAAA,aAGAyzG,YAAA,QAGA78G,KAAAkiH,kBACAj6E,EAAAn/B,YAAA9I,KAAA0kG,YACAz8D,GAGA45E,EAAA7/G,UAAAyc,QAAA,WACAze,KAAA0kG,WAAA,KACA1kG,KAAAmiH,UAAA,KAEAn/B,EAAAhhF,UAAAyc,QAAAle,KAAAP,OAWA6hH,EAAA7/G,UAAAkgH,gBAAA,WACA,GAAAliH,KAAA0kG,WAAA,CAIA,MAAA1kG,KAAA0kG,WAAAl0F,WACAxQ,KAAA0kG,WAAAj0F,YAAAzQ,KAAA0kG,WAAAl0F,YAGAxQ,KAAAmiH,UAAqBgnB,EAAA5iI,EAAQwC,eAAA/I,KAAAoiH,gBAAApiH,KAAAqiH,YAAA,IAC7BriH,KAAA0kG,WAAA57F,YAAA9I,KAAAmiH,aAgBAN,EAAA7/G,UAAAqgH,YAAA,SAAA70E,GACA,OAAAo0E,GAAAp0E,IAcAq0E,EAAA7/G,UAAAsgH,qBAAA,SAAA90E,GACA,IAAA+0E,EAAAviH,KAAAqiH,YAAA70E,GAEA+0E,IAAAviH,KAAAoiH,iBAIApiH,KAAAoiH,eAAAG,EACAviH,KAAA2oG,sBAAA3oG,KAAAkiH,mBAcAL,EAAA7/G,UAAA+/G,cAAA,SAAA13F,KAEAw3F,EAjIA,CAkICh/B,IAUDg/B,GAAA7/G,UAAAigH,WAAA,OAUAJ,GAAA7/G,UAAA86G,aAAA,OAEAj6B,GAAA2C,kBAAA,cAAAq8B,IAYA,IAAAW,GAAA,SAAAC,GAYA,SAAAD,EAAA17F,EAAAxB,GACAwxE,EAAA92F,KAAAwiH,GAEA,IAAA1iG,EAAAk3E,EAAAh3F,KAAAyiH,EAAAliH,KAAAP,KAAA8mB,EAAAxB,IAGA,OADAxF,EAAA3B,GAAA2I,EAAA,QAAAhH,EAAAohG,aACAphG,EAmDA,OApEAi3E,EAAAyrB,EAAAC,GA4BAD,EAAAxgH,UAAA6jG,cAAA,WACA,0BAaA2c,EAAAxgH,UAAA+/G,cAAA,SAAA13F,GAEA,IAAAmjB,EAAAxtC,KAAAqzE,QAAAqvC,YAAA1iH,KAAAqzE,QAAAsvC,WAAA1tF,YAAAj1B,KAAAqzE,QAAAp+C,cAEAj1B,KAAAsiH,qBAAA90E,IAeAg1E,EAAAxgH,UAAAk/G,YAAA,SAAA72F,GACArqB,KAAAqzE,QAAAxxD,YAGA7hB,KAAAsiH,qBAAAtiH,KAAAqzE,QAAAxxD,aAGA2gG,EArEA,CAsECX,IAUDW,GAAAxgH,UAAAigH,WAAA,eAUAO,GAAAxgH,UAAA86G,aAAA,eAEAj6B,GAAA2C,kBAAA,qBAAAg9B,IAYA,IAAAI,GAAA,SAAAH,GAYA,SAAAG,EAAA97F,EAAAxB,GACAwxE,EAAA92F,KAAA4iH,GAKA,IAAA9iG,EAAAk3E,EAAAh3F,KAAAyiH,EAAAliH,KAAAP,KAAA8mB,EAAAxB,IAQA,OANAxF,EAAA3B,GAAA2I,EAAA,iBAAAhH,EAAAiiG,eAKAjiG,EAAA3B,GAAA2I,EAAA,iBAAAhH,EAAAgiG,wBACAhiG,EAqCA,OA9DAi3E,EAAA6rB,EAAAH,GAoCAG,EAAA5gH,UAAA6jG,cAAA,WACA,sBAgBA+c,EAAA5gH,UAAA+/G,cAAA,SAAA13F,GACA,IAAAxI,EAAA7hB,KAAAqzE,QAAAxxD,WAEAA,GAAA7hB,KAAAq0C,YAAAxyB,IACA7hB,KAAAq0C,UAAAxyB,EACA7hB,KAAAsiH,qBAAAzgG,KAIA+gG,EA/DA,CAgECf,IAUDe,GAAA5gH,UAAAigH,WAAA,WAUAW,GAAA5gH,UAAA86G,aAAA,WAEAj6B,GAAA2C,kBAAA,kBAAAo9B,IAaA,IAAAC,GAAA,SAAA7/B,GAGA,SAAA6/B,IAEA,OADA/rB,EAAA92F,KAAA6iH,GACA7rB,EAAAh3F,KAAAgjF,EAAA7qE,MAAAnY,KAAAsC,YAgBA,OApBAy0F,EAAA8rB,EAAA7/B,GAaA6/B,EAAA7gH,UAAAq3F,SAAA,WACA,OAAArW,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,oCACAuoG,UAAA,+BAIAkR,EArBA,CAsBChgC,IAEDA,GAAA2C,kBAAA,cAAAq9B,IAWA,IAAAC,GAAA,SAAAL,GAYA,SAAAK,EAAAh8F,EAAAxB,GACAwxE,EAAA92F,KAAA8iH,GAEA,IAAAhjG,EAAAk3E,EAAAh3F,KAAAyiH,EAAAliH,KAAAP,KAAA8mB,EAAAxB,IAIA,OAFAxF,EAAA3B,GAAA2I,EAAA,iBAAAhH,EAAAgiG,wBACAhiG,EAAA3B,GAAA2I,EAAA,QAAAhH,EAAAohG,aACAphG,EA6EA,OA/FAi3E,EAAA+rB,EAAAL,GA6BAK,EAAA9gH,UAAA6jG,cAAA,WACA,4BAgBAid,EAAA9gH,UAAAqgH,YAAA,SAAA70E,GAEA,UAAAi1E,EAAAzgH,UAAAqgH,YAAA9hH,KAAAP,KAAAwtC,IAcAs1E,EAAA9gH,UAAA+/G,cAAA,SAAA13F,GACArqB,KAAAqzE,QAAAxxD,aAMA7hB,KAAAqzE,QAAA0vC,qBACA/iH,KAAAsiH,qBAAAtiH,KAAAqzE,QAAA0vC,wBAEA/iH,KAAAsiH,qBAAAtiH,KAAAqzE,QAAA2vC,mBAgBAF,EAAA9gH,UAAAk/G,YAAA,SAAA72F,GACArqB,KAAAqzE,QAAAxxD,YAGA7hB,KAAAsiH,qBAAA,IAGAQ,EAhGA,CAiGCjB,IAUDiB,GAAA9gH,UAAAigH,WAAA,iBAUAa,GAAA9gH,UAAA86G,aAAA,iBAEAj6B,GAAA2C,kBAAA,uBAAAs9B,IAcA,IAAAG,GAAA,SAAAjgC,GAYA,SAAAigC,EAAAn8F,EAAAxB,GACAwxE,EAAA92F,KAAAijH,GAEA,IAAAnjG,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAxB,IAIA,OAFAxF,EAAAojG,gBACApjG,EAAA3B,GAAA2B,EAAAgH,SAAA,iBAAAhH,EAAAojG,eACApjG,EAoDA,OAtEAi3E,EAAAksB,EAAAjgC,GA6BAigC,EAAAjhH,UAAAq3F,SAAA,WACA,IAAApxD,EAAA+6C,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,iCAWA,OARApJ,KAAA0kG,WAAArL,EAAA,OACAjwF,UAAA,mBACAuoG,UAAA,kCAAA3xG,KAAAkkG,SAAA,0BAAAlkG,KAAAkkG,SAAA,UAEA2Y,YAAA,QAGA50E,EAAAn/B,YAAA9I,KAAA0kG,YACAz8D,GAGAg7E,EAAAjhH,UAAAyc,QAAA,WACAze,KAAA0kG,WAAA,KAEA1hB,EAAAhhF,UAAAyc,QAAAle,KAAAP,OAcAijH,EAAAjhH,UAAAkhH,cAAA,SAAA74F,GACArqB,KAAA8mB,SAAAjF,aAAAlJ,IACA3Y,KAAAmmG,OAEAnmG,KAAAomG,QAIA6c,EAvEA,CAwECpgC,IAEDA,GAAA2C,kBAAA,cAAAy9B,IAaA,IAAAE,GAAA,SAAAngC,GAYA,SAAAmgC,EAAAr8F,EAAAxB,GACAwxE,EAAA92F,KAAAmjH,GAGA,IAAArjG,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAxB,IAQA,OANAxF,EAAAsjG,IAAAtjG,EAAA+kF,SAAA/kF,EAAAmjE,SAAAogC,SAGAvjG,EAAA7a,WAAA6a,EAAAmjE,SAAAh+E,UAEA6a,EAAAyxB,SACAzxB,EAmXA,OA1YAi3E,EAAAosB,EAAAngC,GAkCAmgC,EAAAnhH,UAAAi8B,QAAA,WACA,OAAAj+B,KAAAi9G,UAQAkG,EAAAnhH,UAAAuvC,OAAA,WACAvxC,KAAAi+B,YAIAj+B,KAAAme,GAAA,YAAAne,KAAA0gH,iBACA1gH,KAAAme,GAAA,aAAAne,KAAA0gH,iBACA1gH,KAAAme,GAAA,QAAAne,KAAAm9G,aACAn9G,KAAAme,GAAA,OAAAne,KAAAo9G,YACAp9G,KAAAme,GAAA,QAAAne,KAAAk9G,aAEAl9G,KAAAme,GAAAne,KAAAqzE,QAAA,kBAAArzE,KAAA4lC,QAEA5lC,KAAAsjH,aACAtjH,KAAAme,GAAAne,KAAAqzE,QAAArzE,KAAAsjH,YAAAtjH,KAAA4lC,QAGA5lC,KAAAm6F,YAAA,YACAn6F,KAAAw5F,aAAA,cAEAx5F,KAAAi9G,UAAA,IAQAkG,EAAAnhH,UAAAg2F,QAAA,WACA,GAAAh4F,KAAAi+B,UAAA,CAGA,IAAA2gE,EAAA5+F,KAAAojH,IAAA3oC,IAAAglB,cAEAz/F,KAAAqe,IAAA,YAAAre,KAAA0gH,iBACA1gH,KAAAqe,IAAA,aAAAre,KAAA0gH,iBACA1gH,KAAAqe,IAAA,QAAAre,KAAAm9G,aACAn9G,KAAAqe,IAAA,OAAAre,KAAAo9G,YACAp9G,KAAAqe,IAAA,QAAAre,KAAAk9G,aACAl9G,KAAAqe,IAAAre,KAAAqzE,QAAA,kBAAArzE,KAAA4lC,QACA5lC,KAAAqe,IAAAugF,EAAA,YAAA5+F,KAAAujH,iBACAvjH,KAAAqe,IAAAugF,EAAA,UAAA5+F,KAAAwjH,eACAxjH,KAAAqe,IAAAugF,EAAA,YAAA5+F,KAAAujH,iBACAvjH,KAAAqe,IAAAugF,EAAA,WAAA5+F,KAAAwjH,eACAxjH,KAAAy6F,gBAAA,YAEAz6F,KAAAi6F,SAAA,YAEAj6F,KAAAsjH,aACAtjH,KAAAqe,IAAAre,KAAAqzE,QAAArzE,KAAAsjH,YAAAtjH,KAAA4lC,QAEA5lC,KAAAi9G,UAAA,IAoBAkG,EAAAnhH,UAAAq3F,SAAA,SAAA9wF,GACA,IAAA+Q,EAAAhX,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAwf,EAAAxf,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAgBA,OAbAgX,EAAAlQ,UAAAkQ,EAAAlQ,UAAA,cACAkQ,EAAAwF,GACA6sF,SAAA,GACKryF,GAELwI,EAAAhD,GACAopE,KAAA,SACAu7B,gBAAA,EACAC,gBAAA,EACAC,gBAAA,IACAhY,SAAA,GACK7pF,GAELkhE,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAAuI,EAAA+Q,EAAAwI,IAeAqhG,EAAAnhH,UAAA0+G,gBAAA,SAAAr2F,GACA,IAAAu0E,EAAA5+F,KAAAojH,IAAA3oC,IAAAglB,cAEA,cAAAp1E,EAAA9hB,MACA8hB,EAAA2zE,iBAMA,eAAA3zE,EAAA9hB,MAAA4tF,IACA9rE,EAAA2zE,iBAEAjD,KAEA/6F,KAAAi6F,SAAA,eAOAj6F,KAAA2W,QAAA,gBAEA3W,KAAAme,GAAAygF,EAAA,YAAA5+F,KAAAujH,iBACAvjH,KAAAme,GAAAygF,EAAA,UAAA5+F,KAAAwjH,eACAxjH,KAAAme,GAAAygF,EAAA,YAAA5+F,KAAAujH,iBACAvjH,KAAAme,GAAAygF,EAAA,WAAA5+F,KAAAwjH,eAEAxjH,KAAAujH,gBAAAl5F,IAkBA84F,EAAAnhH,UAAAuhH,gBAAA,SAAAl5F,KAcA84F,EAAAnhH,UAAAwhH,cAAA,WACA,IAAA5kB,EAAA5+F,KAAAojH,IAAA3oC,IAAAglB,cAEAtE,KAEAn7F,KAAAm6F,YAAA,eAOAn6F,KAAA2W,QAAA,kBAEA3W,KAAAqe,IAAAugF,EAAA,YAAA5+F,KAAAujH,iBACAvjH,KAAAqe,IAAAugF,EAAA,UAAA5+F,KAAAwjH,eACAxjH,KAAAqe,IAAAugF,EAAA,YAAA5+F,KAAAujH,iBACAvjH,KAAAqe,IAAAugF,EAAA,WAAA5+F,KAAAwjH,eAEAxjH,KAAA4lC,UAYAu9E,EAAAnhH,UAAA4jC,OAAA,WAKA,GAAA5lC,KAAAy6E,IAAA,CAQA,IAAAmpC,EAAA5jH,KAAA6jH,aACAT,EAAApjH,KAAAojH,IAGA,GAAAA,EAAA,EAKA,kBAAAQ,YAAA,GAAAA,IAAAjrG,OACAirG,EAAA,GAIA,IAAAl2G,GAAA,IAAAk2G,GAAAE,QAAA,OACAl1G,EAAAw0G,EAAAn7E,KAAAr5B,MASA,OANA5O,KAAAiF,WACA2J,EAAA1C,OAAAwB,EAEAkB,EAAA3C,MAAAyB,EAGAk2G,KAgBAT,EAAAnhH,UAAA+hH,kBAAA,SAAA15F,GACA,IAAA9kB,EAAAs2F,GAAA77F,KAAAy6E,IAAApwD,GAEA,OAAArqB,KAAAiF,WACAM,EAAA+J,EAEA/J,EAAA6J,GAaA+zG,EAAAnhH,UAAAm7G,YAAA,WACAn9G,KAAAme,GAAAne,KAAAojH,IAAA3oC,IAAAglB,cAAA,UAAAz/F,KAAAgsG,iBAeAmX,EAAAnhH,UAAAgqG,eAAA,SAAA3hF,GAEA,KAAAA,EAAAy0E,OAAA,KAAAz0E,EAAAy0E,OACAz0E,EAAA2zE,iBACAh+F,KAAAgkH,YAGK,KAAA35F,EAAAy0E,OAAA,KAAAz0E,EAAAy0E,QACLz0E,EAAA2zE,iBACAh+F,KAAAikH,gBAaAd,EAAAnhH,UAAAo7G,WAAA,WACAp9G,KAAAqe,IAAAre,KAAAojH,IAAA3oC,IAAAglB,cAAA,UAAAz/F,KAAAgsG,iBAYAmX,EAAAnhH,UAAAk7G,YAAA,SAAA7yF,GACAA,EAAAo0E,2BACAp0E,EAAA2zE,kBAgBAmlB,EAAAnhH,UAAAiD,SAAA,SAAAi/G,GACA,QAAAj3G,IAAAi3G,EACA,OAAAlkH,KAAAmkH,YAAA,EAGAnkH,KAAAmkH,YAAAD,EAEAlkH,KAAAmkH,UACAnkH,KAAAi6F,SAAA,uBAEAj6F,KAAAi6F,SAAA,0BAIAkpB,EA3YA,CA4YCtgC,IAEDA,GAAA2C,kBAAA,SAAA29B,IAYA,IAAAiB,GAAA,SAAAphC,GAYA,SAAAohC,EAAAt9F,EAAAxB,GACAwxE,EAAA92F,KAAAokH,GAEA,IAAAtkG,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAxB,IAIA,OAFAxF,EAAAukG,YACAvkG,EAAA3B,GAAA2I,EAAA,WAAAhH,EAAA8lB,QACA9lB,EA0EA,OA5FAi3E,EAAAqtB,EAAAphC,GA6BAohC,EAAApiH,UAAAq3F,SAAA,WACA,OAAArW,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,oBACAuoG,UAAA,wCAAA3xG,KAAAkkG,SAAA,kCAIAkgB,EAAApiH,UAAAyc,QAAA,WACAze,KAAAqkH,SAAA,KAEArhC,EAAAhhF,UAAAyc,QAAAle,KAAAP,OAaAokH,EAAApiH,UAAA4jC,OAAA,SAAAvb,GACA,IAAAqO,EAAA14B,KAAAqzE,QAAA36C,WACA7W,EAAA7hB,KAAAqzE,QAAAxxD,WACAwY,EAAAr6B,KAAAqzE,QAAAh5C,cACAsqE,EAAA3kG,KAAAqkH,SAGAC,EAAA,SAAA92E,EAAA7nC,GAEA,IAAAX,EAAAwoC,EAAA7nC,GAAA,EAEA,YAAAX,GAAA,IAAAA,GAAA,KAIAhF,KAAAy6E,IAAA7rE,MAAA3C,MAAAq4G,EAAAjqF,EAAAxY,GAGA,QAAAzhB,EAAA,EAAmBA,EAAAs4B,EAAAn2B,OAAqBnC,IAAA,CACxC,IAAAoF,EAAAkzB,EAAAlzB,MAAApF,GACAuF,EAAA+yB,EAAA/yB,IAAAvF,GACAkrD,EAAAq5C,EAAAvkG,GAEAkrD,IACAA,EAAAtrD,KAAAy6E,IAAA3xE,YAAAuwF,KACAsL,EAAAvkG,GAAAkrD,GAIAA,EAAA18C,MAAAnJ,KAAA6+G,EAAA9+G,EAAA60B,GACAixB,EAAA18C,MAAA3C,MAAAq4G,EAAA3+G,EAAAH,EAAA60B,GAIA,QAAA5Q,EAAAk7E,EAAApiG,OAAkCknB,EAAAiP,EAAAn2B,OAAsBknB,IACxDzpB,KAAAy6E,IAAAhqE,YAAAk0F,EAAAl7E,EAAA,IAEAk7E,EAAApiG,OAAAm2B,EAAAn2B,QAGA6hH,EA7FA,CA8FCvhC,IAEDA,GAAA2C,kBAAA,kBAAA4+B,IAYA,IAAAG,GAAA,SAAAvhC,GAGA,SAAAuhC,IAEA,OADAztB,EAAA92F,KAAAukH,GACAvtB,EAAAh3F,KAAAgjF,EAAA7qE,MAAAnY,KAAAsC,YA2EA,OA/EAy0F,EAAAwtB,EAAAvhC,GAaAuhC,EAAAviH,UAAAq3F,SAAA,WACA,OAAArW,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,sBAgBAm7G,EAAAviH,UAAA4jC,OAAA,SAAA4+E,EAAAC,EAAAxmD,GACA,IAAAymD,EAAA73G,GAAA7M,KAAAy6E,KACAkqC,EAAA93G,GAAA7M,KAAAqzE,QAAAprC,MACA28E,EAAAJ,EAAAv4G,MAAAw4G,EAIA,GAAAE,GAAAD,EAAA,CAQA,IAAAG,EAAAL,EAAA/+G,KAAAk/G,EAAAl/G,KAAAm/G,EAMAE,EAAAN,EAAAv4G,MAAA24G,GAAAD,EAAA/+G,MAAA4+G,EAAA5+G,OAIAm/G,EAAAL,EAAAz4G,MAAA,EAIA44G,EAAAE,EACAA,KAAAF,EACKC,EAAAC,IACLA,EAAAD,GAMAC,EAAA,EACAA,EAAA,EACKA,EAAAL,EAAAz4G,QACL84G,EAAAL,EAAAz4G,OAGAjM,KAAAy6E,IAAA7rE,MAAAhJ,MAAA,IAAAm/G,EAAA,KACA96G,EAAAjK,KAAAy6E,IAAAxc,KAGAsmD,EAhFA,CAiFC1hC,IAEDA,GAAA2C,kBAAA,cAAA++B,IAaA,IAAAS,GAAA,SAAAhiC,GAGA,SAAAgiC,IAEA,OADAluB,EAAA92F,KAAAglH,GACAhuB,EAAAh3F,KAAAgjF,EAAA7qE,MAAAnY,KAAAsC,YAiDA,OArDAy0F,EAAAiuB,EAAAhiC,GAaAgiC,EAAAhjH,UAAAq3F,SAAA,WACA,OAAArW,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,mCACAuoG,UAAA,wCAAA3xG,KAAAkkG,SAAA,oCAiBA8gB,EAAAhjH,UAAA4jC,OAAA,SAAA4+E,EAAAC,GACA,IAAAzuF,EAAAh2B,KAGAA,KAAAilH,QACAjlH,KAAA6oG,qBAAA7oG,KAAAilH,QAGAjlH,KAAAilH,OAAAjlH,KAAA2oG,sBAAA,WACA,IAAAn7D,EAAAxX,EAAAq9C,QAAAqvC,YAAA1sF,EAAAq9C,QAAAsvC,WAAA1tF,YAAAe,EAAAq9C,QAAAp+C,cAEAgpC,EAAA2jD,GAAAp0E,EAAAxX,EAAAq9C,QAAAxxD,YACAqjG,EAAAlvF,EAAA6uE,SAAA,eAEAqgB,GACAA,EAAAt/E,OAAA4+E,EAAAC,EAAAxmD,MAKA+mD,EAtDA,CAuDCniC,IAUDmiC,GAAAhjH,UAAAihF,UACA0hB,aAIAlP,IAAAE,IACAqvB,GAAAhjH,UAAAihF,SAAA0hB,SAAAt7F,KAAA,eAGAw5E,GAAA2C,kBAAA,kBAAAw/B,IAeA,IAAAG,GAAA,SAAAniC,GAYA,SAAAmiC,EAAAr+F,EAAAxB,GACAwxE,EAAA92F,KAAAmlH,GAEA,IAAArlG,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAxB,IAGA,OADAxF,EAAA8lB,OAAAq7D,GAAAr/F,GAAAke,IAAA8lB,QAAA,IACA9lB,EA+CA,OAhEAi3E,EAAAouB,EAAAniC,GA4BAmiC,EAAAnjH,UAAAq3F,SAAA,WACA,OAAArW,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,uBAiBA+7G,EAAAnjH,UAAA4jC,OAAA,SAAA4+E,EAAAC,GACA,IAAAzuF,EAAAh2B,KAGAA,KAAAilH,QACAjlH,KAAA6oG,qBAAA7oG,KAAAilH,QAGAjlH,KAAAilH,OAAAjlH,KAAA2oG,sBAAA,WACA,IAAA9mF,EAAAmU,EAAAq9C,QAAAxxD,WACAo8C,EAAA2jD,GAAA6C,EAAA5iG,KAEAmU,EAAAykD,IAAA7rE,MAAAnJ,KAAA++G,EAAAv4G,MAAAw4G,EAAA,KACAzuF,EAAA6uE,SAAA,eAAAj/D,OAAA4+E,EAAAC,EAAAxmD,MAIAknD,EAjEA,CAkECtiC,IAUDsiC,GAAAnjH,UAAAihF,UACA0hB,UAAA,gBAGA9hB,GAAA2C,kBAAA,mBAAA2/B,IAOA,IAAAC,GAAA,EAGAC,GAAA,GASAC,GAAA,SAAAC,GAYA,SAAAD,EAAAx+F,EAAAxB,GACAwxE,EAAA92F,KAAAslH,GAEA,IAAAxlG,EAAAk3E,EAAAh3F,KAAAulH,EAAAhlH,KAAAP,KAAA8mB,EAAAxB,IAGA,OADAxF,EAAA0lG,oBACA1lG,EAuTA,OAxUAi3E,EAAAuuB,EAAAC,GA2BAD,EAAAtjH,UAAAwjH,kBAAA,WACA,IAAAxvF,EAAAh2B,KAEAA,KAAA4lC,OAAAq7D,GAAAr/F,GAAA5B,UAAA4lC,QAAAy/E,IAEArlH,KAAAme,GAAAne,KAAAqzE,QAAA,aAAArzE,KAAA4lC,QACA5lC,KAAAme,GAAAne,KAAAqzE,QAAA,QAAArzE,KAAAkhH,aAIAlhH,KAAAylH,eAAA,KAEAzlH,KAAAme,GAAAne,KAAAqzE,SAAA,sBACAr9C,EAAAoyE,cAAApyE,EAAAyvF,gBAEAzvF,EAAAyvF,eAAAzvF,EAAAqyE,YAAA,WACAryE,EAAA2yE,sBAAA,WACA3yE,EAAA4P,YAEOy/E,MAGPrlH,KAAAme,GAAAne,KAAAqzE,SAAA,sCACAr9C,EAAAoyE,cAAApyE,EAAAyvF,kBAGAzlH,KAAAme,GAAAne,KAAAqzE,SAAA,sBAAArzE,KAAA4lC,SAWA0/E,EAAAtjH,UAAAq3F,SAAA,WACA,OAAAksB,EAAAvjH,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,wBAEA0iG,aAAA9rG,KAAAkkG,SAAA,mBAkBAohB,EAAAtjH,UAAA0jH,QAAA,SAAAzwF,EAAAjwB,GACA,IAAA6c,EAAA7hB,KAAAqzE,QAAAxxD,WAGA7hB,KAAAy6E,IAAA+e,aAAA,qBAAAx0F,GAAA8+G,QAAA,IAGA9jH,KAAAy6E,IAAA+e,aAAA,iBAAAx5F,KAAAkkG,SAAA,qDAA4G0d,GAAA3sF,EAAApT,GAAA+/F,GAAA//F,MAAA,eAG5G7hB,KAAAojH,IAAAx9E,OAAA/4B,GAAA7M,KAAAy6E,KAAAz1E,IAgBAsgH,EAAAtjH,UAAA4jC,OAAA,SAAAvb,GACA,IAAArlB,EAAAugH,EAAAvjH,UAAA4jC,OAAArlC,KAAAP,MAGA,OADAA,KAAA0lH,QAAA1lH,KAAA2lH,kBAAA3gH,GACAA,GAcAsgH,EAAAtjH,UAAA2jH,gBAAA,WACA,OAAA3lH,KAAAqzE,QAAAqvC,YAAA1iH,KAAAqzE,QAAAsvC,WAAA1tF,YAAAj1B,KAAAqzE,QAAAp+C,eAcAqwF,EAAAtjH,UAAAk/G,YAAA,SAAA72F,GACArqB,KAAA0lH,QAAA1lH,KAAAqzE,QAAAxxD,WAAA,IAWAyjG,EAAAtjH,UAAA6hH,WAAA,WACA,IAAA7+G,EAAAhF,KAAA2lH,kBAAA3lH,KAAAqzE,QAAAxxD,WAEA,OAAA7c,GAAA,IAAAA,GAAA,GAaAsgH,EAAAtjH,UAAA0+G,gBAAA,SAAAr2F,GACAoyE,GAAApyE,KAKAA,EAAAk0E,kBACAv+F,KAAAqzE,QAAAqvC,WAAA,GAEA1iH,KAAA4lH,iBAAA5lH,KAAAqzE,QAAA/7C,SACAt3B,KAAAqzE,QAAAx7C,QAEA0tF,EAAAvjH,UAAA0+G,gBAAAngH,KAAAP,KAAAqqB,KAaAi7F,EAAAtjH,UAAAuhH,gBAAA,SAAAl5F,GACA,GAAAoyE,GAAApyE,GAAA,CAIA,IAAAw7F,EAAA7lH,KAAA+jH,kBAAA15F,GAAArqB,KAAAqzE,QAAAxxD,WAGAgkG,IAAA7lH,KAAAqzE,QAAAxxD,aACAgkG,GAAA,IAIA7lH,KAAAqzE,QAAAp+C,YAAA4wF,KAGAP,EAAAtjH,UAAAuvC,OAAA,WACAg0E,EAAAvjH,UAAAuvC,OAAAhxC,KAAAP,MACA,IAAA8lH,EAAA9lH,KAAA6kG,SAAA,oBAEAihB,GAIAA,EAAA3f,QAGAmf,EAAAtjH,UAAAg2F,QAAA,WACAutB,EAAAvjH,UAAAg2F,QAAAz3F,KAAAP,MACA,IAAA8lH,EAAA9lH,KAAA6kG,SAAA,oBAEAihB,GAIAA,EAAA1f,QAaAkf,EAAAtjH,UAAAwhH,cAAA,SAAAn5F,GACAk7F,EAAAvjH,UAAAwhH,cAAAjjH,KAAAP,KAAAqqB,GAGAA,GACAA,EAAAk0E,kBAEAv+F,KAAAqzE,QAAAqvC,WAAA,GASA1iH,KAAAqzE,QAAA18D,SAA0BpO,KAAA,aAAA8Q,OAAArZ,KAAA42G,mBAAA,IAC1B52G,KAAA4lH,iBACAnb,GAAAzqG,KAAAqzE,QAAAz5C,SASA0rF,EAAAtjH,UAAAiiH,YAAA,WACAjkH,KAAAqzE,QAAAp+C,YAAAj1B,KAAAqzE,QAAAp+C,cAAAmwF,KAQAE,EAAAtjH,UAAAgiH,SAAA,WACAhkH,KAAAqzE,QAAAp+C,YAAAj1B,KAAAqzE,QAAAp+C,cAAAmwF,KAaAE,EAAAtjH,UAAA+jH,aAAA,SAAA17F,GACArqB,KAAAqzE,QAAA/7C,SACAt3B,KAAAqzE,QAAAz5C,OAEA55B,KAAAqzE,QAAAx7C,SAeAytF,EAAAtjH,UAAAgqG,eAAA,SAAA3hF,GAGA,KAAAA,EAAAy0E,OAAA,KAAAz0E,EAAAy0E,OACAz0E,EAAA2zE,iBACAh+F,KAAA+lH,aAAA17F,IACKk7F,EAAAvjH,UAAAgqG,gBAGLuZ,EAAAvjH,UAAAgqG,eAAAzrG,KAAAP,KAAAqqB,IAIAi7F,EAzUA,CA0UCnC,IAUDmC,GAAAtjH,UAAAihF,UACA0hB,UAAA,qCACA0e,QAAA,mBAIA5tB,IAAAE,IACA2vB,GAAAtjH,UAAAihF,SAAA0hB,SAAArmF,OAAA,wBAQAgnG,GAAAtjH,UAAAshH,YAAA,aAEAzgC,GAAA2C,kBAAA,UAAA8/B,IAaA,IAAAU,GAAA,SAAAhjC,GAYA,SAAAgjC,EAAAl/F,EAAAxB,GACAwxE,EAAA92F,KAAAgmH,GAEA,IAAAlmG,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAxB,IAMA,OAJAxF,EAAAyjG,gBAAAtiB,GAAAr/F,GAAAke,IAAAyjG,iBAAA,IACAzjG,EAAAmmG,yBAAAhlB,GAAAr/F,GAAAke,IAAAomG,iBAAA,IAEApmG,EAAAyxB,SACAzxB,EA4LA,OAhNAi3E,EAAAivB,EAAAhjC,GA+BAgjC,EAAAhkH,UAAAq3F,SAAA,WACA,OAAArW,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,sCAeA48G,EAAAhkH,UAAAuhH,gBAAA,SAAAl5F,GACA,IAAA87F,EAAAnmH,KAAA6kG,SAAA,WAEA,GAAAshB,EAAA,CACA,IAAAL,EAAAK,EAAAthB,SAAA,oBACAuhB,EAAAD,EAAAl+E,KACAu8E,EAAA33G,GAAAu5G,GACA3B,EAAA5oB,GAAAuqB,EAAA/7F,GAAAjb,EAKAq1G,EAAA,EACAA,EAAA,EACOA,EAAA,IACPA,EAAA,GAGAqB,GACAA,EAAAlgF,OAAA4+E,EAAAC,KA2BAuB,EAAAhkH,UAAAkkH,gBAAA,SAAA77F,GACA,IAAA87F,EAAAnmH,KAAA6kG,SAAA,WAEAshB,GACAA,EAAA5C,gBAAAl5F,IAYA27F,EAAAhkH,UAAAi8B,QAAA,WACA,OAAAj+B,KAAAi9G,UAQA+I,EAAAhkH,UAAAg2F,QAAA,WACAh4F,KAAA2kG,WAAAn4E,QAAA,SAAAotE,GACA,OAAAA,EAAA5B,SAAA4B,EAAA5B,YAGAh4F,KAAAi+B,YAIAj+B,KAAAqe,KAAA,0BAAAre,KAAA0gH,iBACA1gH,KAAAqe,IAAAre,KAAAy6E,IAAA,YAAAz6E,KAAAujH,iBACAvjH,KAAAwjH,gBAEAxjH,KAAAi6F,SAAA,YAEAj6F,KAAAi9G,UAAA,IAQA+I,EAAAhkH,UAAAuvC,OAAA,WACAvxC,KAAA2kG,WAAAn4E,QAAA,SAAAotE,GACA,OAAAA,EAAAroD,QAAAqoD,EAAAroD,WAGAvxC,KAAAi+B,YAIAj+B,KAAAme,IAAA,0BAAAne,KAAA0gH,iBACA1gH,KAAAme,GAAAne,KAAAy6E,IAAA,YAAAz6E,KAAAujH,iBACAvjH,KAAAm6F,YAAA,YAEAn6F,KAAAi9G,UAAA,IAcA+I,EAAAhkH,UAAA0+G,gBAAA,SAAAr2F,GACA,IAAAu0E,EAAA5+F,KAAAy6E,IAAAglB,cACA0mB,EAAAnmH,KAAA6kG,SAAA,WAEAshB,GACAA,EAAAzF,gBAAAr2F,GAGArqB,KAAAme,GAAAygF,EAAA,YAAA5+F,KAAAimH,0BACAjmH,KAAAme,GAAAygF,EAAA,YAAA5+F,KAAAimH,0BACAjmH,KAAAme,GAAAygF,EAAA,UAAA5+F,KAAAwjH,eACAxjH,KAAAme,GAAAygF,EAAA,WAAA5+F,KAAAwjH,gBAcAwC,EAAAhkH,UAAAwhH,cAAA,SAAAn5F,GACA,IAAAu0E,EAAA5+F,KAAAy6E,IAAAglB,cACA0mB,EAAAnmH,KAAA6kG,SAAA,WAEAshB,GACAA,EAAA3C,cAAAn5F,GAGArqB,KAAAqe,IAAAugF,EAAA,YAAA5+F,KAAAimH,0BACAjmH,KAAAqe,IAAAugF,EAAA,YAAA5+F,KAAAimH,0BACAjmH,KAAAqe,IAAAugF,EAAA,UAAA5+F,KAAAwjH,eACAxjH,KAAAqe,IAAAugF,EAAA,WAAA5+F,KAAAwjH,gBAGAwC,EAjNA,CAkNCnjC,IAUDmjC,GAAAhkH,UAAAihF,UACA0hB,UAAA,YAGA9hB,GAAA2C,kBAAA,kBAAAwgC,IAYA,IAAAK,GAAA,SAAA7F,GAYA,SAAA6F,EAAAv/F,EAAAxB,GACAwxE,EAAA92F,KAAAqmH,GAEA,IAAAvmG,EAAAk3E,EAAAh3F,KAAAwgH,EAAAjgH,KAAAP,KAAA8mB,EAAAxB,IAOA,OALAxF,EAAA3B,GAAA2I,EAAA,mBAAAhH,EAAAwmG,yBAEgB,IAAR6iB,EAAA5iI,EAAQyjG,GAAAuc,oBAChBzmG,EAAAk4E,UAEAl4E,EAuDA,OA5EAi3E,EAAAsvB,EAAA7F,GAgCA6F,EAAArkH,UAAA6jG,cAAA,WACA,gCAAA2a,EAAAx+G,UAAA6jG,cAAAtlG,KAAAP,OAcAqmH,EAAArkH,UAAAskH,uBAAA,SAAAj8F,GACArqB,KAAAqzE,QAAAmzC,eACAxmH,KAAA6sG,YAAA,kBAEA7sG,KAAA6sG,YAAA,eAiBAwZ,EAAArkH,UAAAk7G,YAAA,SAAA7yF,GACArqB,KAAAqzE,QAAAmzC,eAGAxmH,KAAAqzE,QAAAozC,iBAFAzmH,KAAAqzE,QAAAqzC,qBAMAL,EA7EA,CA8EC/F,IAUD+F,GAAArkH,UAAA86G,aAAA,aAEAj6B,GAAA2C,kBAAA,mBAAA6gC,IAcA,IAAAM,GAAA,SAAA5mH,EAAA+mB,GAEAA,EAAAC,QAAAD,EAAAC,MAAAuxF,uBACAv4G,EAAAk6F,SAAA,cAGAl6F,EAAAoe,GAAA2I,EAAA,uBACAA,EAAAC,MAAAuxF,sBAGAv4G,EAAAo6F,YAAA,cAFAp6F,EAAAk6F,SAAA,iBAiBA2sB,GAAA,SAAA5jC,GAGA,SAAA4jC,IAEA,OADA9vB,EAAA92F,KAAA4mH,GACA5vB,EAAAh3F,KAAAgjF,EAAA7qE,MAAAnY,KAAAsC,YAgBA,OApBAy0F,EAAA6vB,EAAA5jC,GAaA4jC,EAAA5kH,UAAAq3F,SAAA,WACA,OAAArW,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,mBACAuoG,UAAA,4CAIAiV,EArBA,CAsBC/jC,IAEDA,GAAA2C,kBAAA,cAAAohC,IAYA,IAAAC,GAAA,SAAAtB,GAYA,SAAAsB,EAAA//F,EAAAxB,GACAwxE,EAAA92F,KAAA6mH,GAEA,IAAA/mG,EAAAk3E,EAAAh3F,KAAAulH,EAAAhlH,KAAAP,KAAA8mB,EAAAxB,IAOA,OALAxF,EAAA3B,GAAA,eAAA2B,EAAAgnG,mBACAhnG,EAAA3B,GAAA2I,EAAA,eAAAhH,EAAAinG,sBACAjgG,EAAAtB,MAAA,WACA,OAAA1F,EAAAinG,yBAEAjnG,EAyJA,OA9KAi3E,EAAA8vB,EAAAtB,GAgCAsB,EAAA7kH,UAAAq3F,SAAA,WACA,OAAAksB,EAAAvjH,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,kCAEA0iG,aAAA9rG,KAAAkkG,SAAA,gBACA2Y,YAAA,YAcAgK,EAAA7kH,UAAA0+G,gBAAA,SAAAr2F,GACAoyE,GAAApyE,IAIAk7F,EAAAvjH,UAAA0+G,gBAAAngH,KAAAP,KAAAqqB,IAaAw8F,EAAA7kH,UAAAuhH,gBAAA,SAAAl5F,GACAoyE,GAAApyE,KAIArqB,KAAAgnH,aACAhnH,KAAAqzE,QAAA4zC,OAAAjnH,KAAA+jH,kBAAA15F,MAQAw8F,EAAA7kH,UAAAglH,WAAA,WACAhnH,KAAAqzE,QAAA6zC,SACAlnH,KAAAqzE,QAAA6zC,OAAA,IAYAL,EAAA7kH,UAAA6hH,WAAA,WACA,OAAA7jH,KAAAqzE,QAAA6zC,QACA,EAEAlnH,KAAAqzE,QAAA4zC,UAQAJ,EAAA7kH,UAAAiiH,YAAA,WACAjkH,KAAAgnH,aACAhnH,KAAAqzE,QAAA4zC,OAAAjnH,KAAAqzE,QAAA4zC,SAAA,KAQAJ,EAAA7kH,UAAAgiH,SAAA,WACAhkH,KAAAgnH,aACAhnH,KAAAqzE,QAAA4zC,OAAAjnH,KAAAqzE,QAAA4zC,SAAA,KAaAJ,EAAA7kH,UAAA+kH,qBAAA,SAAA18F,GACA,IAAA88F,EAAAnnH,KAAAqzE,QAAA6zC,QAAA,EAAAlnH,KAAAonH,sBAEApnH,KAAAy6E,IAAA+e,aAAA,gBAAA2tB,GACAnnH,KAAAy6E,IAAA+e,aAAA,iBAAA2tB,EAAA,MAUAN,EAAA7kH,UAAAolH,oBAAA,WACA,OAAAt6G,KAAAoB,MAAA,IAAAlO,KAAAqzE,QAAA4zC,WAaAJ,EAAA7kH,UAAA8kH,kBAAA,WACA,IAAA9wF,EAAAh2B,KAEAqnH,EAAArnH,KAAAqzE,QAAA4zC,SAEAjnH,KAAA03B,IAAA,4BACA,IAAA1B,EAAAq9C,QAAA4zC,UACAjxF,EAAAq9C,QAAAi0C,YAAAD,MAKAR,EA/KA,CAgLC1D,IAUD0D,GAAA7kH,UAAAihF,UACA0hB,UAAA,eACA0e,QAAA,eAQAwD,GAAA7kH,UAAAshH,YAAA,eAEAzgC,GAAA2C,kBAAA,YAAAqhC,IAYA,IAAAU,GAAA,SAAAvkC,GAYA,SAAAukC,EAAAzgG,GACA,IAAAxB,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAw0F,EAAA92F,KAAAunH,GAEAjiG,EAAArgB,SAAAqgB,EAAArgB,WAAA,GAIA,qBAAAqgB,EAAAkiG,WAAAlwB,EAAAhyE,EAAAkiG,cACAliG,EAAAkiG,UAAAliG,EAAAkiG,cACAliG,EAAAkiG,UAAAviH,SAAAqgB,EAAArgB,UAIA,IAAA6a,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAxB,IAsBA,OApBAqhG,GAAA7mG,EAAAgH,GAEAhH,EAAA2nG,yBAAAxmB,GAAAr/F,GAAAke,IAAAyjG,iBAAA,IAEAzjG,EAAA3B,GAAA,YAAA2B,EAAA4gG,iBACA5gG,EAAA3B,GAAA,aAAA2B,EAAA4gG,iBAIA5gG,EAAA3B,GAAA2B,EAAA0nG,WAAA,mCACA1nG,EAAA0nG,UAAAvtB,SAAA,qBACAn6E,EAAAm6E,SAAA,qBACAn6E,EAAAnJ,QAAA,kBAGAmJ,EAAA3B,GAAA2B,EAAA0nG,WAAA,oCACA1nG,EAAA0nG,UAAArtB,YAAA,qBACAr6E,EAAAq6E,YAAA,qBACAr6E,EAAAnJ,QAAA,oBAEAmJ,EA8EA,OA7HAi3E,EAAAwwB,EAAAvkC,GA0DAukC,EAAAvlH,UAAAq3F,SAAA,WACA,IAAAquB,EAAA,wBAMA,OAJA1nH,KAAAijF,SAAAh+E,WACAyiH,EAAA,uBAGA1kC,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,kCAAAs+G,KAeAH,EAAAvlH,UAAA0+G,gBAAA,SAAAr2F,GACA,IAAAu0E,EAAA5+F,KAAAy6E,IAAAglB,cAEAz/F,KAAAme,GAAAygF,EAAA,YAAA5+F,KAAAynH,0BACAznH,KAAAme,GAAAygF,EAAA,YAAA5+F,KAAAynH,0BACAznH,KAAAme,GAAAygF,EAAA,UAAA5+F,KAAAwjH,eACAxjH,KAAAme,GAAAygF,EAAA,WAAA5+F,KAAAwjH,gBAcA+D,EAAAvlH,UAAAwhH,cAAA,SAAAn5F,GACA,IAAAu0E,EAAA5+F,KAAAy6E,IAAAglB,cAEAz/F,KAAAqe,IAAAugF,EAAA,YAAA5+F,KAAAynH,0BACAznH,KAAAqe,IAAAugF,EAAA,YAAA5+F,KAAAynH,0BACAznH,KAAAqe,IAAAugF,EAAA,UAAA5+F,KAAAwjH,eACAxjH,KAAAqe,IAAAugF,EAAA,WAAA5+F,KAAAwjH,gBAcA+D,EAAAvlH,UAAAuhH,gBAAA,SAAAl5F,GACArqB,KAAAwnH,UAAAjE,gBAAAl5F,IAGAk9F,EA9HA,CA+HC1kC,IAUD0kC,GAAAvlH,UAAAihF,UACA0hB,UAAA,cAGA9hB,GAAA2C,kBAAA,gBAAA+hC,IAcA,IAAAI,GAAA,SAAA5nH,EAAA+mB,GAEAA,EAAAC,QAAAD,EAAAC,MAAAwxF,qBACAx4G,EAAAk6F,SAAA,cAGAl6F,EAAAoe,GAAA2I,EAAA,uBACAA,EAAAC,MAAAwxF,oBAGAx4G,EAAAo6F,YAAA,cAFAp6F,EAAAk6F,SAAA,iBAiBA2tB,GAAA,SAAApH,GAYA,SAAAoH,EAAA9gG,EAAAxB,GACAwxE,EAAA92F,KAAA4nH,GAGA,IAAA9nG,EAAAk3E,EAAAh3F,KAAAwgH,EAAAjgH,KAAAP,KAAA8mB,EAAAxB,IAKA,OAHAqiG,GAAA7nG,EAAAgH,GAEAhH,EAAA3B,GAAA2I,GAAA,4BAAAhH,EAAA8lB,QACA9lB,EAqHA,OAzIAi3E,EAAA6wB,EAAApH,GA+BAoH,EAAA5lH,UAAA6jG,cAAA,WACA,0BAAA2a,EAAAx+G,UAAA6jG,cAAAtlG,KAAAP,OAgBA4nH,EAAA5lH,UAAAk7G,YAAA,SAAA7yF,GACA,IAAAw9F,EAAA7nH,KAAAqzE,QAAA4zC,SACAa,EAAA9nH,KAAAqzE,QAAAi0C,cAEA,OAAAO,EAAA,CACA,IAAAE,EAAAD,EAAA,MAAAA,EAEA9nH,KAAAqzE,QAAA4zC,OAAAc,GACA/nH,KAAAqzE,QAAA6zC,OAAA,QAEAlnH,KAAAqzE,QAAA6zC,OAAAlnH,KAAAqzE,QAAA6zC,UAiBAU,EAAA5lH,UAAA4jC,OAAA,SAAAvb,GACArqB,KAAAgoH,cACAhoH,KAAAioH,sBAgBAL,EAAA5lH,UAAAgmH,YAAA,WACA,IAAAH,EAAA7nH,KAAAqzE,QAAA4zC,SACA1vB,EAAA,EAKA9B,IACAz1F,KAAAqzE,QAAA6zC,MAAAlnH,KAAAqzE,QAAAtsD,MAAA0zD,IAAAysC,OAGA,IAAAW,GAAA7nH,KAAAqzE,QAAA6zC,QACA3vB,EAAA,EACKswB,EAAA,IACLtwB,EAAA,EACKswB,EAAA,MACLtwB,EAAA,GAIA,QAAAn3F,EAAA,EAAmBA,EAAA,EAAOA,IAC1B+5F,GAAAn6F,KAAAy6E,IAAA,WAAAr6E,GAEA65F,GAAAj6F,KAAAy6E,IAAA,WAAA8c,IAYAqwB,EAAA5lH,UAAAimH,mBAAA,WACA,IAAAC,EAAAloH,KAAAqzE,QAAA6zC,SAAA,IAAAlnH,KAAAqzE,QAAA4zC,SACAp9G,EAAAq+G,EAAA,gBAEAloH,KAAA6sG,gBAAAhjG,GACA7J,KAAA6sG,YAAAhjG,IAIA+9G,EA1IA,CA2ICtH,IAUDsH,GAAA5lH,UAAA86G,aAAA,OAEAj6B,GAAA2C,kBAAA,aAAAoiC,IAaA,IAAAO,GAAA,SAAAnlC,GAYA,SAAAmlC,EAAArhG,GACA,IAAAxB,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAw0F,EAAA92F,KAAAmoH,GAEA,qBAAA7iG,EAAA8iG,OACA9iG,EAAA8iG,OAAA9iG,EAAA8iG,OAEA9iG,EAAA8iG,QAAA,GAKA,qBAAA9iG,EAAA+iG,eAAA/wB,EAAAhyE,EAAA+iG,kBACA/iG,EAAA+iG,cAAA/iG,EAAA+iG,kBACA/iG,EAAA+iG,cAAApjH,UAAAqgB,EAAA8iG,QAGA,IAAAtoG,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAxB,IASA,OAPAxF,EAAA3B,GAAA2I,GAAA,aAAAhH,EAAAwoG,mBAIAxoG,EAAA3B,GAAA2B,EAAAuoG,eAAA,gBAAAvoG,EAAAyoG,eAEAzoG,EAAA3B,GAAA2B,EAAAuoG,eAAA,kBAAAvoG,EAAA0oG,iBACA1oG,EAsEA,OA3GAi3E,EAAAoxB,EAAAnlC,GAgDAmlC,EAAAnmH,UAAAumH,cAAA,WACAvoH,KAAAi6F,SAAA,sBAWAkuB,EAAAnmH,UAAAwmH,gBAAA,WACAxoH,KAAAm6F,YAAA,sBAYAguB,EAAAnmH,UAAAsmH,kBAAA,WAGAtoH,KAAAqoH,cAAAvuB,SAAA,eAAA95F,KAAAyoH,WAAA3uB,SAAA,eACA95F,KAAAi6F,SAAA,cAKAj6F,KAAAqoH,cAAAvuB,SAAA,gBAAA95F,KAAAyoH,WAAA3uB,SAAA,eACA95F,KAAAi6F,SAAA,yBAYAkuB,EAAAnmH,UAAAq3F,SAAA,WACA,IAAAquB,EAAA,8BAMA,OAJA1nH,KAAAijF,SAAAmlC,SACAV,EAAA,6BAGA1kC,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,gCAAAs+G,KAIAS,EA5GA,CA6GCtlC,IAUDslC,GAAAnmH,UAAAihF,UACA0hB,UAAA,+BAGA9hB,GAAA2C,kBAAA,cAAA2iC,IAaA,IAAAO,GAAA,SAAA1lC,GAaA,SAAA0lC,EAAA5hG,EAAAxB,GACAwxE,EAAA92F,KAAA0oH,GAEA,IAAA5oG,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAxB,IASA,OAPAA,IACAxF,EAAA6oG,YAAArjG,EAAAsjG,YAGA9oG,EAAA+oG,eAAA,EAEA/oG,EAAA3B,GAAA,UAAA2B,EAAAksF,gBACAlsF,EAsJA,OA9KAi3E,EAAA2xB,EAAA1lC,GAoCA0lC,EAAA1mH,UAAA8mH,QAAA,SAAAjgG,GACA7oB,KAAA8kG,SAAAj8E,GACAA,EAAA1K,GAAA,QAAAvc,GAAA5B,KAAA,SAAAqqB,GAEArqB,KAAA2oH,cACA3oH,KAAA2oH,YAAAI,gBAIA,4BAAAlgG,EAAAloB,QACAX,KAAA2oH,YAAA1tB,aAcAytB,EAAA1mH,UAAAq3F,SAAA,WACA,IAAA2vB,EAAAhpH,KAAAijF,SAAA+lC,eAAA,KAEAhpH,KAAA0kG,WAAArL,EAAA2vB,GACA5/G,UAAA,qBAGApJ,KAAA0kG,WAAAlL,aAAA,eAEA,IAAAvxD,EAAA+6C,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAipH,OAAAjpH,KAAA0kG,WACAt7F,UAAA,aAYA,OATA6+B,EAAAn/B,YAAA9I,KAAA0kG,YAIAvmF,GAAA8pB,EAAA,iBAAA5d,GACAA,EAAA2zE,iBACA3zE,EAAAo0E,6BAGAx2D,GAGAygF,EAAA1mH,UAAAyc,QAAA,WACAze,KAAA0kG,WAAA,KAEA1hB,EAAAhhF,UAAAyc,QAAAle,KAAAP,OAaA0oH,EAAA1mH,UAAAgqG,eAAA,SAAA3hF,GAEA,KAAAA,EAAAy0E,OAAA,KAAAz0E,EAAAy0E,OACAz0E,EAAA2zE,iBACAh+F,KAAAikH,eAGK,KAAA55F,EAAAy0E,OAAA,KAAAz0E,EAAAy0E,QACLz0E,EAAA2zE,iBACAh+F,KAAAgkH,aASA0E,EAAA1mH,UAAAiiH,YAAA,WACA,IAAAiF,EAAA,OAEAj8G,IAAAjN,KAAA6oH,gBACAK,EAAAlpH,KAAA6oH,cAAA,GAEA7oH,KAAAi7F,MAAAiuB,IAQAR,EAAA1mH,UAAAgiH,SAAA,WACA,IAAAkF,EAAA,OAEAj8G,IAAAjN,KAAA6oH,gBACAK,EAAAlpH,KAAA6oH,cAAA,GAEA7oH,KAAAi7F,MAAAiuB,IAWAR,EAAA1mH,UAAAi5F,MAAA,WACA,IAAAkuB,EAAA7mH,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,KAEAqiG,EAAA3kG,KAAA2kG,WAAAttF,QACA+xG,EAAAzkB,EAAApiG,QAAAoiG,EAAA,GAAAv7F,WAAA,iBAAA5C,KAAAm+F,EAAA,GAAAv7F,WAEAggH,GACAzkB,EAAAhqD,QAGAgqD,EAAApiG,OAAA,IACA4mH,EAAA,EACAA,EAAA,EACOA,GAAAxkB,EAAApiG,SACP4mH,EAAAxkB,EAAApiG,OAAA,GAGAvC,KAAA6oH,cAAAM,EAEAxkB,EAAAwkB,GAAA1uC,IAAAwgB,UAIAytB,EA/KA,CAgLC7lC,IAEDA,GAAA2C,kBAAA,OAAAkjC,IAYA,IAAAW,GAAA,SAAArmC,GAYA,SAAAqmC,EAAAviG,GACA,IAAAxB,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAw0F,EAAA92F,KAAAqpH,GAEA,IAAAvpG,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAxB,IAEAxF,EAAA6oG,YAAA,IAAArI,GAAAx5F,EAAAxB,GAEAxF,EAAA6oG,YAAA9b,YAAA/sF,EAAAg9F,cACAh9F,EAAA6oG,YAAAluC,IAAA+e,aAAA,wBAGA,IAAA8vB,EAAAhJ,GAAAt+G,UAAA6jG,gBAiBA,OAfA/lF,EAAA6oG,YAAAluC,IAAArxE,UAAA0W,EAAA+lF,gBAAA,IAAAyjB,EACAxpG,EAAA6oG,YAAAxuB,YAAA,eAEAr6E,EAAAglF,SAAAhlF,EAAA6oG,aAEA7oG,EAAA8lB,SAEA9lB,EAAAm9F,UAAA,EAEAn9F,EAAA3B,GAAA2B,EAAA6oG,YAAA,MAAA7oG,EAAAo9F,aACAp9F,EAAA3B,GAAA2B,EAAA6oG,YAAA,QAAA7oG,EAAAo9F,aACAp9F,EAAA3B,GAAA2B,EAAA6oG,YAAA,QAAA7oG,EAAAq9F,aACAr9F,EAAA3B,GAAA2B,EAAA6oG,YAAA,OAAA7oG,EAAAs9F,YAEAt9F,EAAA3B,GAAA,UAAA2B,EAAAypG,uBACAzpG,EAmXA,OA3ZAi3E,EAAAsyB,EAAArmC,GAgDAqmC,EAAArnH,UAAA4jC,OAAA,WACA,IAAA4jF,EAAAxpH,KAAAypH,aAEAzpH,KAAAwpH,OACAxpH,KAAAwpH,KAAA/qG,UACAze,KAAAyQ,YAAAzQ,KAAAwpH,OAGAxpH,KAAAwpH,OACAxpH,KAAA8kG,SAAA0kB,GAQAxpH,KAAA0pH,gBAAA,EACA1pH,KAAA2oH,YAAAluC,IAAA+e,aAAA,yBAEAx5F,KAAA2pH,OAAA3pH,KAAA2pH,MAAApnH,QAAAvC,KAAA4pH,eACA5pH,KAAAomG,OAEApmG,KAAAmmG,QAYAkjB,EAAArnH,UAAAynH,WAAA,WACA,IAAAD,EAAA,IAAAd,GAAA1oH,KAAAqzE,SAAuCu1C,WAAA5oH,OAavC,GAHAA,KAAA4pH,eAAA,EAGA5pH,KAAAijF,SAAA34D,MAAA,CACA,IAAAA,EAAA+uE,EAAA,MACAjwF,UAAA,iBACAuoG,UAAArO,GAAAtjG,KAAAijF,SAAA34D,OACAqhF,UAAA,IAGA3rG,KAAA4pH,gBAAA,EAEAJ,EAAA5lB,UAAAj6B,QAAAr/C,GACAqvE,EAAArvE,EAAAk/F,EAAA/kB,aAKA,GAFAzkG,KAAA2pH,MAAA3pH,KAAA6pH,cAEA7pH,KAAA2pH,MAEA,QAAAvpH,EAAA,EAAqBA,EAAAJ,KAAA2pH,MAAApnH,OAAuBnC,IAC5CopH,EAAAV,QAAA9oH,KAAA2pH,MAAAvpH,IAIA,OAAAopH,GAUAH,EAAArnH,UAAA6nH,YAAA,aAUAR,EAAArnH,UAAAq3F,SAAA,WACA,OAAArW,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAApJ,KAAA8pH,6BAYAT,EAAArnH,UAAA8nH,qBAAA,WACA,IAAAC,EAAA,mBAGA,IAAA/pH,KAAAijF,SAAAmlC,OACA2B,GAAA,UAEAA,GAAA,SAIA,IAAAT,EAAAhJ,GAAAt+G,UAAA6jG,gBAEA,yBAAAkkB,EAAA,IAAAT,EAAA,IAAAtmC,EAAAhhF,UAAA6jG,cAAAtlG,KAAAP,OAWAqpH,EAAArnH,UAAA6jG,cAAA,WACA,IAAAkkB,EAAA,kBASA,OANA,IAAA/pH,KAAAijF,SAAAmlC,OACA2B,GAAA,UAEAA,GAAA,SAGA,mBAAAA,EAAA,IAAA/mC,EAAAhhF,UAAA6jG,cAAAtlG,KAAAP,OAmBAqpH,EAAArnH,UAAA6qG,YAAA,SAAAhjG,GACA,IAAAo+B,EAAA3lC,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,GAAAtC,KAAA2oH,YAAA1gF,KAEA,OAAAjoC,KAAA2oH,YAAA9b,YAAAhjG,EAAAo+B,IAgBAohF,EAAArnH,UAAAk7G,YAAA,SAAA7yF,GAKArqB,KAAA03B,IAAA13B,KAAAwpH,KAAA/kB,YAAA,aAAA7iG,GAAA5B,KAAA,SAAAgI,GACAhI,KAAA+oH,gBACA/oH,KAAAy6E,IAAA0sB,UAEAnnG,KAAA0pH,eACA1pH,KAAA+oH,gBAEA/oH,KAAAgqH,eASAX,EAAArnH,UAAAi5F,MAAA,WACAj7F,KAAA2oH,YAAA1tB,SAQAouB,EAAArnH,UAAAmlG,KAAA,WACAnnG,KAAA2oH,YAAAxhB,QAeAkiB,EAAArnH,UAAAm7G,YAAA,WACAh/F,GAAOgrH,EAAA5iI,EAAQ,UAAA3E,GAAA5B,UAAAgsG,kBAcfqd,EAAArnH,UAAAo7G,WAAA,WACA/+F,GAAQ8qH,EAAA5iI,EAAQ,UAAA3E,GAAA5B,UAAAgsG,kBAchBqd,EAAArnH,UAAAgqG,eAAA,SAAA3hF,GAGA,KAAAA,EAAAy0E,OAAA,IAAAz0E,EAAAy0E,OACA9+F,KAAA0pH,gBACA1pH,KAAA+oH,gBAGA,IAAA1+F,EAAAy0E,QACAz0E,EAAA2zE,iBAEAh+F,KAAA2oH,YAAAluC,IAAAwgB,UAGK,KAAA5wE,EAAAy0E,OAAA,KAAAz0E,EAAAy0E,OACL9+F,KAAA0pH,iBACA1pH,KAAAgqH,cACA3/F,EAAA2zE,mBAgBAqrB,EAAArnH,UAAAunH,sBAAA,SAAAl/F,GAGA,KAAAA,EAAAy0E,OAAA,IAAAz0E,EAAAy0E,QACA9+F,KAAA0pH,gBACA1pH,KAAA+oH,gBAGA,IAAA1+F,EAAAy0E,QACAz0E,EAAA2zE,iBAEAh+F,KAAA2oH,YAAAluC,IAAAwgB,WAUAouB,EAAArnH,UAAAgoH,YAAA,WACA,GAAAhqH,KAAAi9G,SAAA,CAOA,GANAj9G,KAAA0pH,gBAAA,EACA1pH,KAAAwpH,KAAAnjB,cACArmG,KAAA2oH,YAAAluC,IAAA+e,aAAA,wBAIA/D,IAAAwD,IAEA,OAGAj5F,KAAAwpH,KAAAvuB,UASAouB,EAAArnH,UAAA+mH,cAAA,WACA/oH,KAAAi9G,WACAj9G,KAAA0pH,gBAAA,EACA1pH,KAAAwpH,KAAAljB,gBACAtmG,KAAA2oH,YAAAluC,IAAA+e,aAAA,2BASA6vB,EAAArnH,UAAAg2F,QAAA,WACAh4F,KAAA+oH,gBAEA/oH,KAAAi9G,UAAA,EACAj9G,KAAAi6F,SAAA,gBAEAj6F,KAAA2oH,YAAA3wB,WAQAqxB,EAAArnH,UAAAuvC,OAAA,WACAvxC,KAAAi9G,UAAA,EACAj9G,KAAAm6F,YAAA,gBAEAn6F,KAAA2oH,YAAAp3E,UAGA83E,EA5ZA,CA6ZCxmC,IAEDA,GAAA2C,kBAAA,aAAA6jC,IAYA,IAAAY,GAAA,SAAAC,GAYA,SAAAD,EAAAnjG,EAAAxB,GACAwxE,EAAA92F,KAAAiqH,GAEA,IAAAlsF,EAAAzY,EAAAyY,OAEAje,EAAAk3E,EAAAh3F,KAAAkqH,EAAA3pH,KAAAP,KAAA8mB,EAAAxB,IAMA,GAJAxF,EAAA6pG,MAAApnH,QAAA,GACAud,EAAAsmF,QAGAroE,EACA,OAAAi5D,EAAAl3E,GAGA,IAAAqqG,EAAAvoH,GAAAke,IAAA8lB,QAUA,OARA7H,EAAA1J,iBAAA,cAAA81F,GACApsF,EAAA1J,iBAAA,WAAA81F,GACArqG,EAAAuzD,QAAAl1D,GAAA,QAAAgsG,GAEArqG,EAAAuzD,QAAAl1D,GAAA,qBACA4f,EAAA7C,oBAAA,cAAAivF,GACApsF,EAAA7C,oBAAA,WAAAivF,KAEArqG,EAGA,OAvCAi3E,EAAAkzB,EAAAC,GAuCAD,EAxCA,CAyCCZ,IAEDxmC,GAAA2C,kBAAA,cAAAykC,IAYA,IAAAG,GAAA,SAAA9M,GAaA,SAAA8M,EAAAtjG,EAAAxB,GACAwxE,EAAA92F,KAAAoqH,GAEA,IAAAtqG,EAAAk3E,EAAAh3F,KAAAs9G,EAAA/8G,KAAAP,KAAA8mB,EAAAxB,IAiBA,OAfAxF,EAAAuqG,WAAA/kG,EAAA+kG,WACAvqG,EAAAwqG,YAAAhlG,EAAA8pF,WAAA,EACAtvF,EAAAyqG,gBAAAjlG,EAAAilG,gBAEAzqG,EAAAsvF,SAAAtvF,EAAAwqG,aAEAxqG,EAAAuqG,WACAvqG,EAAAyqG,gBACAzqG,EAAA26D,IAAA+e,aAAA,2BAEA15E,EAAA26D,IAAA+e,aAAA,wBAGA15E,EAAA26D,IAAA+e,aAAA,mBAEA15E,EA2EA,OA3GAi3E,EAAAqzB,EAAA9M,GAoDA8M,EAAApoH,UAAAq3F,SAAA,SAAA9wF,EAAA+Q,EAAA+L,GAIA,OAFArlB,KAAAg9G,gBAAA,EAEAM,EAAAt7G,UAAAq3F,SAAA94F,KAAAP,KAAA,KAAA8e,GACA1V,UAAA,gBACAuoG,UAAA,oCAAA3xG,KAAAkkG,SAAAlkG,KAAAijF,SAAAnuD,OAAA,UACA62E,UAAA,GACKryF,GAAA+L,IAgBL+kG,EAAApoH,UAAAk7G,YAAA,SAAA7yF,GACArqB,KAAAovG,UAAA,IAWAgb,EAAApoH,UAAAotG,SAAA,SAAAob,GACAxqH,KAAAqqH,aACAG,GACAxqH,KAAAi6F,SAAA,gBACAj6F,KAAAy6E,IAAA+e,aAAA,uBAGAx5F,KAAA6sG,YAAA,cACA7sG,KAAAsqH,aAAA,IAEAtqH,KAAAm6F,YAAA,gBACAn6F,KAAAy6E,IAAA+e,aAAA,wBAEAx5F,KAAA6sG,YAAA,IACA7sG,KAAAsqH,aAAA,KAKAF,EA5GA,CA6GC3N,IAED55B,GAAA2C,kBAAA,WAAA4kC,IAYA,IAAAK,GAAA,SAAAC,GAYA,SAAAD,EAAA3jG,EAAAxB,GACAwxE,EAAA92F,KAAAyqH,GAEA,IAAApgH,EAAAib,EAAAjb,MACA0zB,EAAAjX,EAAAwsD,aAGAhuD,EAAAwP,MAAAzqB,EAAAyqB,OAAAzqB,EAAAiZ,UAAA,UACAgC,EAAA8pF,SAAA,YAAA/kG,EAAA9I,KAEA,IAAAue,EAAAk3E,EAAAh3F,KAAA0qH,EAAAnqH,KAAAP,KAAA8mB,EAAAxB,IAEAxF,EAAAzV,QACA,IAAAsgH,EAAA,WACA,QAAAjhC,EAAApnF,UAAAC,OAAAic,EAAAzD,MAAA2uE,GAAArpE,EAAA,EAAqEA,EAAAqpE,EAAarpE,IAClF7B,EAAA6B,GAAA/d,UAAA+d,GAGAP,EAAA8qG,mBAAAzyG,MAAA2H,EAAAtB,IAEAqsG,EAAA,WACA,QAAA5yB,EAAA31F,UAAAC,OAAAic,EAAAzD,MAAAk9E,GAAAC,EAAA,EAAwEA,EAAAD,EAAeC,IACvF15E,EAAA05E,GAAA51F,UAAA41F,GAGAp4E,EAAAgrG,6BAAA3yG,MAAA2H,EAAAtB,IAkBA,GAfAsI,EAAA3I,IAAA,+BAAAwsG,GACA5sF,EAAA1J,iBAAA,SAAAs2F,GACA5sF,EAAA1J,iBAAA,yBAAAw2F,GACA/qG,EAAA3B,GAAA,qBACA2I,EAAAzI,KAAA,+BAAAssG,GACA5sF,EAAA7C,oBAAA,SAAAyvF,GACA5sF,EAAA7C,oBAAA,yBAAA2vF,UASA59G,IAAA8wB,EAAAgtF,SAAA,CACA,IAAA1gG,OAAA,EAEAvK,EAAA3B,IAAA,0BACA,GAA4B,WAA5BorE,EAAoB0/C,EAAA1iI,EAAQykH,OAE5B,IACA3gG,EAAA,IAAwB4+G,EAAA1iI,EAAQykH,MAAA,UACrB,MAAAphG,IAKXS,IACAA,EAAkB8+G,EAAA5iI,EAAQ0kH,YAAA,SAC1B5gG,EAAA6gG,UAAA,iBAGAntF,EAAA0jE,cAAAp3E,KAMA,OADAvK,EAAA8qG,qBACA9qG,EAwFA,OAtKAi3E,EAAA0zB,EAAAC,GA8FAD,EAAAzoH,UAAAk7G,YAAA,SAAA7yF,GACA,IAAAwK,EAAA70B,KAAAqK,MAAAwqB,KACAs2F,EAAAnrH,KAAAqK,MAAA8gH,MACAptF,EAAA/9B,KAAAqzE,QAAAC,aAQA,GANA63C,IACAA,GAAAt2F,IAGA61F,EAAA1oH,UAAAk7G,YAAA38G,KAAAP,KAAAqqB,GAEA0T,EAIA,QAAA39B,EAAA,EAAmBA,EAAA29B,EAAAx7B,OAAmBnC,IAAA,CACtC,IAAAiK,EAAA0zB,EAAA39B,GAEAiK,IAAArK,KAAAqK,OAAA8gH,EAAAr4G,QAAAzI,EAAAwqB,OAAA,EACA,YAAAxqB,EAAA9I,OACA8I,EAAA9I,KAAA,WAEO,aAAA8I,EAAA9I,OACP8I,EAAA9I,KAAA,cAeAkpH,EAAAzoH,UAAA4oH,mBAAA,SAAAvgG,GACA,IAAA+gG,EAAA,YAAAprH,KAAAqK,MAAA9I,KAIA6pH,IAAAprH,KAAAsqH,aACAtqH,KAAAovG,SAAAgc,IAIAX,EAAAzoH,UAAA8oH,6BAAA,SAAAzgG,GACA,eAAArqB,KAAAqK,MAAA9I,KAAA,CACA,IAAAu9G,EAAA9+G,KAAAqzE,QAAA0oC,OAAA+C,iBAGA,GAAAA,KAAA7gF,SAAA6gF,EAAAx7F,WAAAtjB,KAAAqK,MAAAiZ,UAAAw7F,EAAAjqF,OAAA70B,KAAAqK,MAAAwqB,KACA,OAGA70B,KAAAqzE,QAAA0oC,OAAA+C,kBACA7gF,SAAA,EACA3a,SAAAtjB,KAAAqK,MAAAiZ,SACAuR,KAAA70B,KAAAqK,MAAAwqB,QAKA41F,EAAAzoH,UAAAyc,QAAA,WAEAze,KAAAqK,MAAA,KAEAqgH,EAAA1oH,UAAAyc,QAAAle,KAAAP,OAGAyqH,EAvKA,CAwKCL,IAEDvnC,GAAA2C,kBAAA,oBAAAilC,IAYA,IAAAY,GAAA,SAAAC,GAYA,SAAAD,EAAAvkG,EAAAxB,GA4BA,OA3BAwxE,EAAA92F,KAAAqrH,GAIA/lG,EAAAjb,OACAyc,SACA+N,KAAAvP,EAAAuP,KACAs2F,MAAA7lG,EAAA6lG,MACArxG,SAAA,EACAvY,KAAA,YAGA+jB,EAAA6lG,QACA7lG,EAAA6lG,OAAA7lG,EAAAuP,OAGAvP,EAAAwP,MACAxP,EAAAjb,MAAAyqB,MAAAxP,EAAAwP,MAEAxP,EAAAjb,MAAAyqB,MAAAxP,EAAA6lG,MAAAr+F,KAAA,gBAIAxH,EAAA+kG,YAAA,EAEA/kG,EAAAilG,iBAAA,EAEAvzB,EAAAh3F,KAAAsrH,EAAA/qH,KAAAP,KAAA8mB,EAAAxB,IAmDA,OA1FAyxE,EAAAs0B,EAAAC,GAkDAD,EAAArpH,UAAA4oH,mBAAA,SAAAvgG,GAIA,IAHA,IAAA0T,EAAA/9B,KAAA8mB,SAAAwsD,aACA83C,GAAA,EAEAhrH,EAAA,EAAAC,EAAA09B,EAAAx7B,OAAsCnC,EAAAC,EAAOD,IAAA,CAC7C,IAAAiK,EAAA0zB,EAAA39B,GAEA,GAAAJ,KAAAijF,SAAAkoC,MAAAr4G,QAAAzI,EAAAwqB,OAAA,eAAAxqB,EAAA9I,KAAA,CACA6pH,GAAA,EACA,OAMAA,IAAAprH,KAAAsqH,aACAtqH,KAAAovG,SAAAgc,IAIAC,EAAArpH,UAAA8oH,6BAAA,SAAAzgG,GAIA,IAHA,IAAA0T,EAAA/9B,KAAA8mB,SAAAwsD,aACAi4C,GAAA,EAEAnrH,EAAA,EAAAC,EAAA09B,EAAAx7B,OAAsCnC,EAAAC,EAAOD,IAAA,CAC7C,IAAAiK,EAAA0zB,EAAA39B,GAEA,2CAAA0S,QAAAzI,EAAAwqB,OAAA,eAAAxqB,EAAA9I,KAAA,CACAgqH,GAAA,EACA,OAIAA,IACAvrH,KAAAqzE,QAAA0oC,OAAA+C,kBACA7gF,SAAA,KAKAotF,EA3FA,CA4FCZ,IAED5nC,GAAA2C,kBAAA,uBAAA6lC,IAYA,IAAAG,GAAA,SAAAC,GAYA,SAAAD,EAAA1kG,GACA,IAAAxB,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAKA,OAJAw0F,EAAA92F,KAAAwrH,GAEAlmG,EAAAyY,OAAAjX,EAAAwsD,aAEA0jB,EAAAh3F,KAAAyrH,EAAAlrH,KAAAP,KAAA8mB,EAAAxB,IA+DA,OAhFAyxE,EAAAy0B,EAAAC,GA+BAD,EAAAxpH,UAAA6nH,YAAA,WACA,IAAAF,EAAArnH,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAopH,EAAAppH,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,GAAAmoH,GAKA31F,OAAA,EAEA90B,KAAA2rH,SACA72F,EAAA90B,KAAA2rH,OAAA,QAGAhC,EAAAtgH,KAAA,IAAAgiH,GAAArrH,KAAAqzE,SACA83C,MAAAnrH,KAAA4rH,OACA/2F,KAAA70B,KAAA6rH,MACA/2F,WAGA90B,KAAA4pH,gBAAA,EAEA,IAAA7rF,EAAA/9B,KAAAqzE,QAAAC,aAEAv4D,MAAA8O,QAAA7pB,KAAA4rH,UACA5rH,KAAA4rH,QAAA5rH,KAAA6rH,QAGA,QAAAzrH,EAAA,EAAmBA,EAAA29B,EAAAx7B,OAAmBnC,IAAA,CACtC,IAAAiK,EAAA0zB,EAAA39B,GAGA,GAAAJ,KAAA4rH,OAAA94G,QAAAzI,EAAAwqB,OAAA,GAEA,IAAAs0F,EAAA,IAAAuC,EAAA1rH,KAAAqzE,SACAhpE,QAEAggH,YAAA,EAEAE,iBAAA,IAGApB,EAAAlvB,SAAA,OAAA5vF,EAAAwqB,KAAA,cACA80F,EAAAtgH,KAAA8/G,IAIA,OAAAQ,GAGA6B,EAjFA,CAkFCvB,IAEDpnC,GAAA2C,kBAAA,kBAAAgmC,IAYA,IAAAM,GAAA,SAAApB,GAYA,SAAAoB,EAAAhlG,EAAAxB,GACAwxE,EAAA92F,KAAA8rH,GAEA,IAAAzhH,EAAAib,EAAAjb,MACArG,EAAAshB,EAAAthB,IACAixB,EAAAnO,EAAAmO,cAGA3P,EAAA+kG,YAAA,EACA/kG,EAAAilG,iBAAA,EACAjlG,EAAAwP,MAAA9wB,EAAA6F,KACAyb,EAAA8pF,SAAAprG,EAAA+B,WAAAkvB,KAAAjxB,EAAAiC,QAEA,IAAA6Z,EAAAk3E,EAAAh3F,KAAA0qH,EAAAnqH,KAAAP,KAAA8mB,EAAAxB,IAKA,OAHAxF,EAAAzV,QACAyV,EAAA9b,MACAqG,EAAAgqB,iBAAA,YAAAzyB,GAAAke,IAAA8lB,SACA9lB,EAwCA,OArEAi3E,EAAA+0B,EAAApB,GA6CAoB,EAAA9pH,UAAAk7G,YAAA,SAAA7yF,GACAqgG,EAAA1oH,UAAAk7G,YAAA38G,KAAAP,MACAA,KAAAqzE,QAAAp+C,YAAAj1B,KAAAgE,IAAA+B,WACA/F,KAAA4lC,OAAA5lC,KAAAgE,IAAA+B,YAaA+lH,EAAA9pH,UAAA4jC,OAAA,SAAAvb,GACA,IAAArmB,EAAAhE,KAAAgE,IACAixB,EAAAj1B,KAAAqzE,QAAAp+C,cAGAj1B,KAAAovG,SAAAprG,EAAA+B,WAAAkvB,KAAAjxB,EAAAiC,UAGA6lH,EAtEA,CAuEC1B,IAEDvnC,GAAA2C,kBAAA,wBAAAsmC,IAcA,IAAAC,GAAA,SAAAC,GAeA,SAAAD,EAAAjlG,EAAAxB,EAAAE,GAEA,OADAsxE,EAAA92F,KAAA+rH,GACA/0B,EAAAh3F,KAAAgsH,EAAAzrH,KAAAP,KAAA8mB,EAAAxB,EAAAE,IAkKA,OAlLAuxE,EAAAg1B,EAAAC,GA2BAD,EAAA/pH,UAAA6jG,cAAA,WACA,6BAAAmmB,EAAAhqH,UAAA6jG,cAAAtlG,KAAAP,OAGA+rH,EAAA/pH,UAAA8nH,qBAAA,WACA,6BAAAkC,EAAAhqH,UAAA8nH,qBAAAvpH,KAAAP,OAeA+rH,EAAA/pH,UAAA4jC,OAAA,SAAAvb,GACArqB,KAAAisH,UAAA5hG,GAAA,aAAAA,EAAA9hB,MAAA,gBAAA8hB,EAAA9hB,OACAvI,KAAAksH,SAAAlsH,KAAAmsH,qBAEAH,EAAAhqH,UAAA4jC,OAAArlC,KAAAP,OAYA+rH,EAAA/pH,UAAAkqH,SAAA,SAAA7hH,GACA,GAAArK,KAAAisH,SAAA5hH,EAAA,CASA,GALArK,KAAAosH,iBACApsH,KAAAosH,eAAApsH,KAAA4lC,OAAAhkC,KAAA5B,OAIAA,KAAAisH,OAAA,CACA,IAAAI,EAAArsH,KAAAqzE,QAAAykC,qBAAAjI,wBAAA7vG,KAAAisH,QAEAI,GACAA,EAAAnxF,oBAAA,OAAAl7B,KAAAosH,gBAGApsH,KAAAisH,OAAA,KAMA,GAHAjsH,KAAAisH,OAAA5hH,EAGArK,KAAAisH,OAAA,CACAjsH,KAAAisH,OAAA1qH,KAAA,SAEA,IAAA+qH,EAAAtsH,KAAAqzE,QAAAykC,qBAAAjI,wBAAA7vG,KAAAisH,QAEAK,GACAA,EAAAj4F,iBAAA,OAAAr0B,KAAAosH,mBAaAL,EAAA/pH,UAAAmqH,kBAAA,WAGA,IAFA,IAAApuF,EAAA/9B,KAAAqzE,QAAAC,iBAEAlzE,EAAA29B,EAAAx7B,OAAA,EAAmCnC,GAAA,EAAQA,IAAA,CAE3C,IAAAiK,EAAA0zB,EAAA39B,GAEA,GAAAiK,EAAAwqB,OAAA70B,KAAA6rH,MACA,OAAAxhH,IAcA0hH,EAAA/pH,UAAAuqH,eAAA,WACA,OAAAvsH,KAAAisH,QAAAjsH,KAAAisH,OAAAn3F,MACA90B,KAAAisH,OAAAn3F,MAEA90B,KAAAkkG,SAAAZ,GAAAtjG,KAAA6rH,SAWAE,EAAA/pH,UAAAynH,WAAA,WAEA,OADAzpH,KAAAijF,SAAA34D,MAAAtqB,KAAAusH,iBACAP,EAAAhqH,UAAAynH,WAAAlpH,KAAAP,OAWA+rH,EAAA/pH,UAAA6nH,YAAA,WACA,IAAAF,KAEA,IAAA3pH,KAAAisH,OACA,OAAAtC,EAGA,IAAAr5G,EAAAtQ,KAAAisH,OAAA37G,KAEA,IAAAA,EACA,OAAAq5G,EAGA,QAAAvpH,EAAA,EAAAC,EAAAiQ,EAAA/N,OAAoCnC,EAAAC,EAAOD,IAAA,CAC3C,IAAA4D,EAAAsM,EAAAlQ,GACAosH,EAAA,IAAAV,GAAA9rH,KAAAqzE,SAAwDhpE,MAAArK,KAAAisH,OAAAjoH,QAExD2lH,EAAAtgH,KAAAmjH,GAGA,OAAA7C,GAGAoC,EAnLA,CAoLCP,IAUDO,GAAA/pH,UAAA6pH,MAAA,WAQAE,GAAA/pH,UAAA86G,aAAA,WAEAj6B,GAAA2C,kBAAA,iBAAAumC,IAYA,IAAAU,GAAA,SAAAT,GAeA,SAAAS,EAAA3lG,EAAAxB,EAAAE,GACAsxE,EAAA92F,KAAAysH,GAEA,IAAA3sG,EAAAk3E,EAAAh3F,KAAAgsH,EAAAzrH,KAAAP,KAAA8mB,EAAAxB,EAAAE,IAEAuY,EAAAjX,EAAAwsD,aACAq3C,EAAA/oH,GAAAke,IAAA8qG,oBAMA,OAJA7sF,EAAA1J,iBAAA,SAAAs2F,GACA7qG,EAAA3B,GAAA,qBACA4f,EAAA7C,oBAAA,SAAAyvF,KAEA7qG,EAmDA,OA7EAi3E,EAAA01B,EAAAT,GAuCAS,EAAAzqH,UAAA4oH,mBAAA,SAAAvgG,GAKA,IAJA,IAAA0T,EAAA/9B,KAAA8mB,SAAAwsD,aACA1lC,GAAA,EAGAxtC,EAAA,EAAAC,EAAA09B,EAAAx7B,OAAsCnC,EAAAC,EAAOD,IAAA,CAC7C,IAAAiK,EAAA0zB,EAAA39B,GAEA,GAAAiK,EAAAwqB,OAAA70B,KAAA6rH,OAAA,YAAAxhH,EAAA9I,KAAA,CACAqsC,GAAA,EACA,OAKAA,EACA5tC,KAAAg4F,UAEAh4F,KAAAuxC,UAYAk7E,EAAAzqH,UAAA6jG,cAAA,WACA,iCAAAmmB,EAAAhqH,UAAA6jG,cAAAtlG,KAAAP,OAGAysH,EAAAzqH,UAAA8nH,qBAAA,WACA,iCAAAkC,EAAAhqH,UAAA8nH,qBAAAvpH,KAAAP,OAGAysH,EA9EA,CA+ECjB,IAUDiB,GAAAzqH,UAAA6pH,MAAA,eAQAY,GAAAzqH,UAAA86G,aAAA,eAEAj6B,GAAA2C,kBAAA,qBAAAinC,IAYA,IAAAC,GAAA,SAAAV,GAeA,SAAAU,EAAA5lG,EAAAxB,EAAAE,GAEA,OADAsxE,EAAA92F,KAAA0sH,GACA11B,EAAAh3F,KAAAgsH,EAAAzrH,KAAAP,KAAA8mB,EAAAxB,EAAAE,IAmBA,OAnCAuxE,EAAA21B,EAAAV,GA2BAU,EAAA1qH,UAAA6jG,cAAA,WACA,8BAAAmmB,EAAAhqH,UAAA6jG,cAAAtlG,KAAAP,OAGA0sH,EAAA1qH,UAAA8nH,qBAAA,WACA,8BAAAkC,EAAAhqH,UAAA8nH,qBAAAvpH,KAAAP,OAGA0sH,EApCA,CAqCClB,IAUDkB,GAAA1qH,UAAA6pH,MAAA,YAQAa,GAAA1qH,UAAA86G,aAAA,YAEAj6B,GAAA2C,kBAAA,kBAAAknC,IAYA,IAAAC,GAAA,SAAArB,GAYA,SAAAqB,EAAA7lG,EAAAxB,GACAwxE,EAAA92F,KAAA2sH,GAEArnG,EAAAjb,OACAyc,SACA+N,KAAAvP,EAAAuP,KACAC,MAAAxP,EAAAuP,KAAA,YACAw1F,YAAA,EACAvwG,SAAA,EACAvY,KAAA,YAIA+jB,EAAA+kG,YAAA,EAEA/kG,EAAA3kB,KAAA,0BAEA,IAAAmf,EAAAk3E,EAAAh3F,KAAAsrH,EAAA/qH,KAAAP,KAAA8mB,EAAAxB,IAIA,OAFAxF,EAAAm6E,SAAA,0BACAn6E,EAAA+sF,YAAA,WAAAvnF,EAAAuP,KAAA,oBACA/U,EAoBA,OApDAi3E,EAAA41B,EAAArB,GAgDAqB,EAAA3qH,UAAAk7G,YAAA,SAAA7yF,GACArqB,KAAA8mB,SAAA+9E,SAAA,qBAAA7oB,QAGA2wC,EArDA,CAsDClC,IAED5nC,GAAA2C,kBAAA,0BAAAmnC,IAYA,IAAAC,GAAA,SAAAZ,GAeA,SAAAY,EAAA9lG,EAAAxB,EAAAE,GAEA,OADAsxE,EAAA92F,KAAA4sH,GACA51B,EAAAh3F,KAAAgsH,EAAAzrH,KAAAP,KAAA8mB,EAAAxB,EAAAE,IAuCA,OAvDAuxE,EAAA61B,EAAAZ,GA2BAY,EAAA5qH,UAAA6jG,cAAA,WACA,6BAAAmmB,EAAAhqH,UAAA6jG,cAAAtlG,KAAAP,OAGA4sH,EAAA5qH,UAAA8nH,qBAAA,WACA,6BAAAkC,EAAAhqH,UAAA8nH,qBAAAvpH,KAAAP,OAWA4sH,EAAA5qH,UAAA6nH,YAAA,WACA,IAAAF,KAQA,OANA3pH,KAAA8mB,SAAAC,OAAA/mB,KAAA8mB,SAAAC,MAAA0uF,2BAAAz1G,KAAA8mB,SAAA+9E,SAAA,uBACA8kB,EAAAtgH,KAAA,IAAAsjH,GAAA3sH,KAAAqzE,SAA4Dx+C,KAAA70B,KAAA6rH,SAE5D7rH,KAAA4pH,gBAAA,GAGAoC,EAAAhqH,UAAA6nH,YAAAtpH,KAAAP,KAAA2pH,IAGAiD,EAxDA,CAyDCpB,IAUDoB,GAAA5qH,UAAA6pH,MAAA,WAQAe,GAAA5qH,UAAA86G,aAAA,WAEAj6B,GAAA2C,kBAAA,iBAAAonC,IAaA,IAAAC,GAAA,SAAAvB,GAGA,SAAAuB,IAEA,OADA/1B,EAAA92F,KAAA6sH,GACA71B,EAAAh3F,KAAAsrH,EAAAnzG,MAAAnY,KAAAsC,YAmBA,OAvBAy0F,EAAA81B,EAAAvB,GAOAuB,EAAA7qH,UAAAq3F,SAAA,SAAA9wF,EAAA+Q,EAAA+L,GACA,IAAAssF,EAAA,oCAAA3xG,KAAAkkG,SAAAlkG,KAAAijF,SAAAnuD,OAEA,aAAA90B,KAAAijF,SAAA54E,MAAAwqB,OACA88E,GAAA,oHAAA3xG,KAAAkkG,SAAA,+BAGAyN,GAAA,UAEA,IAAA1pE,EAAAqjF,EAAAtpH,UAAAq3F,SAAA94F,KAAAP,KAAAuI,EAAAuW,GACA6yF,aACKr4F,GAAA+L,GAEL,OAAA4iB,GAGA4kF,EAxBA,CAyBCpC,IAED5nC,GAAA2C,kBAAA,mBAAAqnC,IAWA,IAAAC,GAAA,SAAAd,GAGA,SAAAc,EAAAhmG,GACA,IAAAxB,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAw0F,EAAA92F,KAAA8sH,GAIA,IAAAhtG,EAAAk3E,EAAAh3F,KAAAgsH,EAAAzrH,KAAAP,KAAA8mB,EAAAxB,IAOA,OALAxF,EAAA6rG,OAAA,aACA,8BAAA74G,QAAAgN,EAAAuzD,QAAA05C,YAAA,IACAjtG,EAAA6rG,OAAA,YAEA7rG,EAAA6oG,YAAA9b,YAAAvJ,GAAAxjF,EAAA6rG,SACA7rG,EAwCA,OAvDAi3E,EAAA+1B,EAAAd,GA0BAc,EAAA9qH,UAAA6jG,cAAA,WACA,8BAAAmmB,EAAAhqH,UAAA6jG,cAAAtlG,KAAAP,OAGA8sH,EAAA9qH,UAAA8nH,qBAAA,WACA,8BAAAkC,EAAAhqH,UAAA8nH,qBAAAvpH,KAAAP,OAWA8sH,EAAA9qH,UAAA6nH,YAAA,WACA,IAAAF,KASA,OAPA3pH,KAAA8mB,SAAAC,OAAA/mB,KAAA8mB,SAAAC,MAAA0uF,2BAAAz1G,KAAA8mB,SAAA+9E,SAAA,uBACA8kB,EAAAtgH,KAAA,IAAAsjH,GAAA3sH,KAAAqzE,SAA4Dx+C,KAAA70B,KAAA2rH,UAE5D3rH,KAAA4pH,gBAAA,GAGAD,EAAAqC,EAAAhqH,UAAA6nH,YAAAtpH,KAAAP,KAAA2pH,EAAAkD,IACAlD,GAGAmD,EAxDA,CAyDCtB,IAUDsB,GAAA9qH,UAAA4pH,QAAA,wBASAkB,GAAA9qH,UAAA86G,aAAA,YAEAj6B,GAAA2C,kBAAA,iBAAAsnC,IAYA,IAAAE,GAAA,SAAAtC,GAYA,SAAAsC,EAAAlmG,EAAAxB,GACAwxE,EAAA92F,KAAAgtH,GAEA,IAAA3iH,EAAAib,EAAAjb,MACA0zB,EAAAjX,EAAA6X,cAGArZ,EAAAwP,MAAAzqB,EAAAyqB,OAAAzqB,EAAAiZ,UAAA,UACAgC,EAAA8pF,SAAA/kG,EAAA4zB,QAEA,IAAAne,EAAAk3E,EAAAh3F,KAAA0qH,EAAAnqH,KAAAP,KAAA8mB,EAAAxB,IAEAxF,EAAAzV,QAEAyV,EAAAm6E,SAAA,OAAA5vF,EAAAwqB,KAAA,cAEA,IAAA81F,EAAA,WACA,QAAAjhC,EAAApnF,UAAAC,OAAAic,EAAAzD,MAAA2uE,GAAArpE,EAAA,EAAqEA,EAAAqpE,EAAarpE,IAClF7B,EAAA6B,GAAA/d,UAAA+d,GAGAP,EAAA8qG,mBAAAzyG,MAAA2H,EAAAtB,IAOA,OAJAuf,EAAA1J,iBAAA,SAAAs2F,GACA7qG,EAAA3B,GAAA,qBACA4f,EAAA7C,oBAAA,SAAAyvF,KAEA7qG,EA0DA,OAjGAi3E,EAAAi2B,EAAAtC,GA0CAsC,EAAAhrH,UAAAq3F,SAAA,SAAA9wF,EAAA+Q,EAAA+L,GACA,IAAAssF,EAAA,oCAAA3xG,KAAAkkG,SAAAlkG,KAAAijF,SAAAnuD,OAEA,cAAA90B,KAAAijF,SAAA54E,MAAAwqB,OACA88E,GAAA,oHAAA3xG,KAAAkkG,SAAA,mCAGAyN,GAAA,UAEA,IAAA1pE,EAAAyiF,EAAA1oH,UAAAq3F,SAAA94F,KAAAP,KAAAuI,EAAAuW,GACA6yF,aACKr4F,GAAA+L,GAEL,OAAA4iB,GAgBA+kF,EAAAhrH,UAAAk7G,YAAA,SAAA7yF,GACA,IAAA0T,EAAA/9B,KAAAqzE,QAAA10C,cAEA+rF,EAAA1oH,UAAAk7G,YAAA38G,KAAAP,KAAAqqB,GAEA,QAAAjqB,EAAA,EAAmBA,EAAA29B,EAAAx7B,OAAmBnC,IAAA,CACtC,IAAAiK,EAAA0zB,EAAA39B,GAEAiK,EAAA4zB,QAAA5zB,IAAArK,KAAAqK,QAcA2iH,EAAAhrH,UAAA4oH,mBAAA,SAAAvgG,GACArqB,KAAAovG,SAAApvG,KAAAqK,MAAA4zB,UAGA+uF,EAlGA,CAmGC5C,IAEDvnC,GAAA2C,kBAAA,qBAAAwnC,IAYA,IAAAC,GAAA,SAAAxB,GAYA,SAAAwB,EAAAnmG,GACA,IAAAxB,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAKA,OAJAw0F,EAAA92F,KAAAitH,GAEA3nG,EAAAyY,OAAAjX,EAAA6X,cAEAq4D,EAAAh3F,KAAAyrH,EAAAlrH,KAAAP,KAAA8mB,EAAAxB,IAqDA,OAtEAyxE,EAAAk2B,EAAAxB,GA4BAwB,EAAAjrH,UAAA6jG,cAAA,WACA,0BAAA4lB,EAAAzpH,UAAA6jG,cAAAtlG,KAAAP,OAGAitH,EAAAjrH,UAAA8nH,qBAAA,WACA,0BAAA2B,EAAAzpH,UAAA8nH,qBAAAvpH,KAAAP,OAcAitH,EAAAjrH,UAAA6nH,YAAA,WACA,IAAAF,EAAArnH,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAGAtC,KAAA4pH,eAAA,EAIA,IAFA,IAAA7rF,EAAA/9B,KAAAqzE,QAAA10C,cAEAv+B,EAAA,EAAmBA,EAAA29B,EAAAx7B,OAAmBnC,IAAA,CACtC,IAAAiK,EAAA0zB,EAAA39B,GAEAupH,EAAAtgH,KAAA,IAAA2jH,GAAAhtH,KAAAqzE,SACAhpE,QAEAggH,YAAA,EAEAE,iBAAA,KAIA,OAAAZ,GAGAsD,EAvEA,CAwEChD,IAUDgD,GAAAjrH,UAAA86G,aAAA,cACAj6B,GAAA2C,kBAAA,mBAAAynC,IAYA,IAAAC,GAAA,SAAAxC,GAYA,SAAAwC,EAAApmG,EAAAxB,GACAwxE,EAAA92F,KAAAktH,GAEA,IAAAp4F,EAAAxP,EAAAyW,KACAA,EAAAr1B,WAAAouB,EAAA,IAGAxP,EAAAwP,QACAxP,EAAA8pF,SAAA,IAAArzE,EACAzW,EAAA+kG,YAAA,EACA/kG,EAAAilG,iBAAA,EAEA,IAAAzqG,EAAAk3E,EAAAh3F,KAAA0qH,EAAAnqH,KAAAP,KAAA8mB,EAAAxB,IAMA,OAJAxF,EAAAgV,QACAhV,EAAAic,OAEAjc,EAAA3B,GAAA2I,EAAA,aAAAhH,EAAA8lB,QACA9lB,EAmCA,OAhEAi3E,EAAAm2B,EAAAxC,GA6CAwC,EAAAlrH,UAAAk7G,YAAA,SAAA7yF,GACAqgG,EAAA1oH,UAAAk7G,YAAA38G,KAAAP,MACAA,KAAA8mB,SAAAkpB,aAAAhwC,KAAA+7B,OAaAmxF,EAAAlrH,UAAA4jC,OAAA,SAAAvb,GACArqB,KAAAovG,SAAApvG,KAAA8mB,SAAAkpB,iBAAAhwC,KAAA+7B,OAGAmxF,EAjEA,CAkEC9C,IAUD8C,GAAAlrH,UAAAgnH,cAAA,SAEAnmC,GAAA2C,kBAAA,uBAAA0nC,IAYA,IAAAC,GAAA,SAAAjD,GAYA,SAAAiD,EAAArmG,EAAAxB,GACAwxE,EAAA92F,KAAAmtH,GAEA,IAAArtG,EAAAk3E,EAAAh3F,KAAAkqH,EAAA3pH,KAAAP,KAAA8mB,EAAAxB,IAOA,OALAxF,EAAAstG,mBACAttG,EAAAutG,cAEAvtG,EAAA3B,GAAA2I,EAAA,YAAAhH,EAAAstG,kBACAttG,EAAA3B,GAAA2I,EAAA,aAAAhH,EAAAutG,aACAvtG,EAsKA,OA3LAi3E,EAAAo2B,EAAAjD,GAgCAiD,EAAAnrH,UAAAq3F,SAAA,WACA,IAAApxD,EAAAiiF,EAAAloH,UAAAq3F,SAAA94F,KAAAP,MASA,OAPAA,KAAAstH,SAAAj0B,EAAA,OACAjwF,UAAA,0BACAuoG,UAAA,OAGA1pE,EAAAn/B,YAAA9I,KAAAstH,UAEArlF,GAGAklF,EAAAnrH,UAAAyc,QAAA,WACAze,KAAAstH,SAAA,KAEApD,EAAAloH,UAAAyc,QAAAle,KAAAP,OAWAmtH,EAAAnrH,UAAA6jG,cAAA,WACA,2BAAAqkB,EAAAloH,UAAA6jG,cAAAtlG,KAAAP,OAGAmtH,EAAAnrH,UAAA8nH,qBAAA,WACA,2BAAAI,EAAAloH,UAAA8nH,qBAAAvpH,KAAAP,OAWAmtH,EAAAnrH,UAAAynH,WAAA,WACA,IAAAD,EAAA,IAAAd,GAAA1oH,KAAA8mB,UACAymG,EAAAvtH,KAAAwtH,gBAEA,GAAAD,EACA,QAAAntH,EAAAmtH,EAAAhrH,OAAA,EAAoCnC,GAAA,EAAQA,IAC5CopH,EAAA1kB,SAAA,IAAAooB,GAAAltH,KAAA8mB,UAA+DiV,KAAAwxF,EAAAntH,GAAA,OAI/D,OAAAopH,GAQA2D,EAAAnrH,UAAA+kH,qBAAA,WAEA/mH,KAAAioC,KAAAuxD,aAAA,gBAAAx5F,KAAA8mB,SAAAkpB,iBAgBAm9E,EAAAnrH,UAAAk7G,YAAA,SAAA7yF,GAQA,IANA,IAAAojG,EAAAztH,KAAA8mB,SAAAkpB,eACAu9E,EAAAvtH,KAAAwtH,gBAGAE,EAAAH,EAAA,GAEAntH,EAAA,EAAmBA,EAAAmtH,EAAAhrH,OAAkBnC,IACrC,GAAAmtH,EAAAntH,GAAAqtH,EAAA,CACAC,EAAAH,EAAAntH,GACA,MAGAJ,KAAA8mB,SAAAkpB,aAAA09E,IAWAP,EAAAnrH,UAAAwrH,cAAA,WACA,OAAAxtH,KAAAijF,SAAAuqC,eAAAxtH,KAAAijF,SAAA19D,eAAAvlB,KAAAijF,SAAA19D,cAAAioG,eAYAL,EAAAnrH,UAAA2rH,sBAAA,WACA,OAAA3tH,KAAA8mB,SAAAC,OAAA/mB,KAAA8mB,SAAAC,MAAA0xF,sBAAAz4G,KAAAwtH,iBAAAxtH,KAAAwtH,gBAAAjrH,OAAA,GAaA4qH,EAAAnrH,UAAAorH,iBAAA,SAAA/iG,GACArqB,KAAA2tH,wBACA3tH,KAAAm6F,YAAA,cAEAn6F,KAAAi6F,SAAA,eAcAkzB,EAAAnrH,UAAAqrH,YAAA,SAAAhjG,GACArqB,KAAA2tH,0BACA3tH,KAAAstH,SAAA3b,UAAA3xG,KAAA8mB,SAAAkpB,eAAA,MAIAm9E,EA5LA,CA6LC9D,IAUD8D,GAAAnrH,UAAA86G,aAAA,gBAEAj6B,GAAA2C,kBAAA,yBAAA2nC,IAaA,IAAAS,GAAA,SAAA5qC,GAGA,SAAA4qC,IAEA,OADA92B,EAAA92F,KAAA4tH,GACA52B,EAAAh3F,KAAAgjF,EAAA7qE,MAAAnY,KAAAsC,YA2BA,OA/BAy0F,EAAA62B,EAAA5qC,GAaA4qC,EAAA5rH,UAAA6jG,cAAA,WACA,oBAAA7iB,EAAAhhF,UAAA6jG,cAAAtlG,KAAAP,OAWA4tH,EAAA5rH,UAAAq3F,SAAA,WACA,OAAArW,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAApJ,KAAA6lG,mBAIA+nB,EAhCA,CAiCC/qC,IAEDA,GAAA2C,kBAAA,SAAAooC,IAYA,IAAAC,GAAA,SAAAC,GAGA,SAAAD,IAEA,OADA/2B,EAAA92F,KAAA6tH,GACA72B,EAAAh3F,KAAA8tH,EAAA31G,MAAAnY,KAAAsC,YAgCA,OApCAy0F,EAAA82B,EAAAC,GAaAD,EAAA7rH,UAAA6jG,cAAA,WACA,mCAAAioB,EAAA9rH,UAAA6jG,cAAAtlG,KAAAP,OAWA6tH,EAAA7rH,UAAAq3F,SAAA,WACA,IAAApxD,EAAA6lF,EAAA9rH,UAAAq3F,SAAA94F,KAAAP,MACAoJ,UAAApJ,KAAA6lG,kBAMA,OADA59D,EAAA0pE,UAAA,IACA1pE,GAGA4lF,EArCA,CAsCCD,IAED/qC,GAAA2C,kBAAA,sBAAAqoC,IAYA,IAAAE,GAAA,SAAA/qC,GAGA,SAAA+qC,IAEA,OADAj3B,EAAA92F,KAAA+tH,GACA/2B,EAAAh3F,KAAAgjF,EAAA7qE,MAAAnY,KAAAsC,YAgBA,OApBAy0F,EAAAg3B,EAAA/qC,GAaA+qC,EAAA/rH,UAAAq3F,SAAA,WACA,OAAArW,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,OACAoJ,UAAA,kBACAwK,IAAA,SAIAm6G,EArBA,CAsBClrC,IAUDkrC,GAAA/rH,UAAAihF,UACA0hB,UAAA,qRAGA9hB,GAAA2C,kBAAA,aAAAuoC,IAaA,IAAAC,GAAA,SAAAC,GAYA,SAAAD,EAAAlnG,EAAAxB,GACAwxE,EAAA92F,KAAAguH,GAEA,IAAAluG,EAAAk3E,EAAAh3F,KAAAiuH,EAAA1tH,KAAAP,KAAA8mB,EAAAxB,IAGA,OADAxF,EAAA3B,GAAA2I,EAAA,QAAAhH,EAAAk8D,MACAl8D,EA+BA,OAhDAi3E,EAAAi3B,EAAAC,GA8BAD,EAAAhsH,UAAA6jG,cAAA,WACA,2BAAAooB,EAAAjsH,UAAA6jG,cAAAtlG,KAAAP,OAWAguH,EAAAhsH,UAAAi8D,QAAA,WACA,IAAAtmC,EAAA33B,KAAA8mB,SAAA6Q,QAEA,OAAAA,EAAA33B,KAAAkkG,SAAAvsE,EAAAh1B,SAAA,IAGAqrH,EAjDA,CAkDC5iB,IASD4iB,GAAAhsH,UAAAihF,SAAAvtD,GAAA01E,GAAAppG,UAAAihF,UACAopB,aAAA,EACAH,YAAA,EACAS,WAAA,EACAlB,aAAA,IAGA5oB,GAAA2C,kBAAA,eAAAwoC,IAMA,IAAAE,GAAA,0BAEAC,IAAA,gBACAC,IAAA,eACAC,IAAA,eACAC,IAAA,gBACAC,IAAA,kBACAC,IAAA,cACAC,IAAA,gBACAC,IAAA,iBAEAC,IAAA,cACAC,IAAA,0BACAC,IAAA,mBAaAC,IACA7jH,iBACAkuF,SAAA,yBACA10F,GAAA,+BACAqwB,MAAA,QACAxP,SAAA6oG,GAAAM,GAAAD,GAAAF,GAAAF,GAAAM,GAAAH,GAAAF,KAGA1O,mBACAxmB,SAAA,2BACA10F,GAAA,iCACAqwB,MAAA,eACAxP,SAAAqpG,GAAAC,GAAAC,KAGA7jH,OACAmuF,SAAA,yBACA10F,GAAA,+BACAqwB,MAAA,QACAxP,SAAAmpG,GAAAN,GAAAK,GAAAF,GAAAF,GAAAM,GAAAH,GAAAF,KAGAvO,WACA3mB,SAAA,2BACA10F,GAAA,KACAqwB,MAAA,kBACAxP,UAAA,iHAGA26F,YACA9mB,SAAA,4BACA10F,GAAA,0BACAqwB,MAAA,cACAxP,UAAA,uPAGA06F,aACA7mB,SAAA,6BACA10F,GAAA,wBACAqwB,MAAA,YACAxP,UAAA,8IACAxL,QAAA,EACAmtB,OAAA,SAAAnjC,GACA,eAAAA,EAAA,KAAA8kC,OAAA9kC,KAIA47G,aACAvmB,SAAA,6BACA10F,GAAA,iCACAqwB,MAAA,eACAxP,SAAAqpG,GAAAC,KAIAhP,aACAzmB,SAAA,6BACA10F,GAAA,2BACAqwB,MAAA,SAIA+qF,eACA1mB,SAAA,+BACA10F,GAAA,6BACAqwB,MAAA,eACAxP,SAAAupG,GAAAD,GAAAD,MAsBA,SAAAI,GAAA1tH,EAAA4lC,GAKA,GAJAA,IACA5lC,EAAA4lC,EAAA5lC,IAGAA,GAAA,SAAAA,EACA,OAAAA,EAoBA,SAAA2tH,GAAA/mF,EAAAhB,GACA,IAAA5lC,EAAA4mC,EAAA3iB,QAAA2iB,EAAA3iB,QAAA68D,eAAA9gF,MAEA,OAAA0tH,GAAA1tH,EAAA4lC,GAkBA,SAAAgoF,GAAAhnF,EAAA5mC,EAAA4lC,GACA,GAAA5lC,EAIA,QAAAjB,EAAA,EAAiBA,EAAA6nC,EAAA3iB,QAAA/iB,OAAuBnC,IACxC,GAAA2uH,GAAA9mF,EAAA3iB,QAAAllB,GAAAiB,MAAA4lC,KAAA5lC,EAAA,CACA4mC,EAAAk6C,cAAA/hF,EACA,OAzEA0uH,GAAAlP,YAAAt6F,QAAAwpG,GAAA7jH,gBAAAqa,QAoFA,IAAA4pG,GAAA,SAAAjB,GAYA,SAAAiB,EAAApoG,EAAAxB,GACAwxE,EAAA92F,KAAAkvH,GAEA5pG,EAAAqnF,WAAA,EAEA,IAAA7sF,EAAAk3E,EAAAh3F,KAAAiuH,EAAA1tH,KAAAP,KAAA8mB,EAAAxB,IAsCA,OApCAxF,EAAA03F,cAAA51G,GAAAke,IAAA03F,eAGA13F,EAAAqsF,OACArsF,EAAAwrF,eAAAxrF,EAAAyrF,gBAAA,EAEAzrF,EAAAqvG,UAAA91B,EAAA,KACAjwF,UAAA,mBACAa,YAAA6V,EAAAokF,SAAA,2BAEApkF,EAAAmoB,KAAAn/B,YAAAgX,EAAAqvG,WAEArvG,EAAAsvG,mBAGAniH,IAAAqY,EAAA+pG,2BACAvvG,EAAAmjE,SAAAosC,yBAAAvvG,EAAAmjE,SAAA19D,cAAA8pG,0BAGAvvG,EAAA3B,GAAA2B,EAAA88E,EAAA,uCACA98E,EAAAwvG,eACAxvG,EAAAmsF,UAGAnsF,EAAA3B,GAAA2B,EAAA88E,EAAA,0CACA98E,EAAAsvG,cACAtvG,EAAA03F,kBAGApgB,EAAA03B,GAAA,SAAAjmE,GACA/oC,EAAA3B,GAAA2B,EAAA88E,EAAA/zC,EAAAswC,UAAA,SAAAr5E,EAAA03F,iBAGA13F,EAAAmjE,SAAAosC,0BACAvvG,EAAAyvG,kBAEAzvG,EA8RA,OApVAi3E,EAAAm4B,EAAAjB,GAyDAiB,EAAAltH,UAAAyc,QAAA,WACAze,KAAAmvH,UAAA,KAEAlB,EAAAjsH,UAAAyc,QAAAle,KAAAP,OAgBAkvH,EAAAltH,UAAAwtH,gBAAA,SAAA7tH,GACA,IAAAq0B,EAAAh2B,KAEAyvH,EAAAntH,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAiG,EAAAjG,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,WAEAumD,EAAAimE,GAAAntH,GACA8C,EAAAokD,EAAApkD,GAAAtB,QAAA,KAAAnD,KAAA2jG,KACA+rB,GAAAD,EAAAhrH,GAAAqoB,KAAA,KAAAnkB,OAEA,WAAAJ,EAAA,QAAA9D,EAAA,uBAAA8D,EAAA,qBAAAvI,KAAAkkG,SAAAr7C,EAAA/zB,OAAA,KAAAvsB,EAAA,gCAAAmnH,EAAA,MAAAp4G,OAAAuxC,EAAAvjC,QAAAlN,IAAA,SAAAvX,GACA,IAAA8uH,EAAAlrH,EAAA,IAAA5D,EAAA,GAAAsC,QAAA,WAEA,sBAAAwsH,EAAA,YAAA9uH,EAAA,4BAAA6uH,EAAA,IAAAC,EAAA,KAAA35F,EAAAkuE,SAAArjG,EAAA,iBAAAisB,KAAA,OACKxV,OAAA,aAAAwV,KAAA,KAaLoiG,EAAAltH,UAAA4tH,iBAAA,WACA,IAAAH,EAAA,wBAAAzvH,KAAA2jG,IAEA,0EAAA8rB,EAAA,KAAAzvH,KAAAkkG,SAAA,oBAAAlkG,KAAAwvH,gBAAA,QAAAC,GAAA,8CAAAzvH,KAAAwvH,gBAAA,cAAAC,GAAA,yBAAA3iG,KAAA,KAaAoiG,EAAAltH,UAAA6tH,iBAAA,WACA,IAAAJ,EAAA,uBAAAzvH,KAAA2jG,IAEA,0EAAA8rB,EAAA,KAAAzvH,KAAAkkG,SAAA,0BAAAlkG,KAAAwvH,gBAAA,kBAAAC,GAAA,4CAAAzvH,KAAAwvH,gBAAA,oBAAAC,GAAA,yBAAA3iG,KAAA,KAaAoiG,EAAAltH,UAAA8tH,kBAAA,WACA,IAAAL,EAAA,mBAAAzvH,KAAA2jG,IAEA,8EAAA8rB,EAAA,KAAAzvH,KAAAkkG,SAAA,sBAAAlkG,KAAAwvH,gBAAA,cAAAC,GAAA,gDAAAzvH,KAAAwvH,gBAAA,gBAAAC,GAAA,yBAAA3iG,KAAA,KAaAoiG,EAAAltH,UAAA+tH,gBAAA,WACA,OAAA12B,EAAA,OACAjwF,UAAA,4BACAuoG,WAAA3xG,KAAA4vH,mBAAA5vH,KAAA6vH,mBAAA7vH,KAAA8vH,qBAAAhjG,KAAA,OAcAoiG,EAAAltH,UAAAguH,cAAA,WACA,OAAA32B,EAAA,OACAjwF,UAAA,0BACAuoG,WAAA,wDAAA3xG,KAAAwvH,gBAAA,+FAAAxvH,KAAAwvH,gBAAA,8FAAAxvH,KAAAwvH,gBAAA,yCAAA1iG,KAAA,OAcAoiG,EAAAltH,UAAAiuH,kBAAA,WACA,IAAAC,EAAAlwH,KAAAkkG,SAAA,8CAEA,OAAA7K,EAAA,OACAjwF,UAAA,8BACAuoG,WAAA,6CAAAue,EAAA,KAAAlwH,KAAAkkG,SAAA,4CAAAgsB,EAAA,yDAAAlwH,KAAAkkG,SAAA,qBAAAp3E,KAAA,OAIAoiG,EAAAltH,UAAAi8D,QAAA,WACA,OAAAj+D,KAAA+vH,kBAAA/vH,KAAAgwH,gBAAAhwH,KAAAiwH,sBAGAf,EAAAltH,UAAA8yB,MAAA,WACA,OAAA90B,KAAAkkG,SAAA,4BAGAgrB,EAAAltH,UAAAm/D,YAAA,WACA,OAAAnhE,KAAAkkG,SAAA,yEAGAgrB,EAAAltH,UAAA6jG,cAAA,WACA,OAAAooB,EAAAjsH,UAAA6jG,cAAAtlG,KAAAP,MAAA,4BAWAkvH,EAAAltH,UAAAy9G,UAAA,WACA,IAAAlnF,EAAAv4B,KAEA,OAAA0X,EAAAo3G,GAAA,SAAAz3B,EAAAxuC,EAAAlnD,GACA,IAAAN,EAAA2tH,GAAAz2F,EAAAqkE,EAAA/zC,EAAAswC,UAAAtwC,EAAA5hB,QAMA,YAJAh6B,IAAA5L,IACAg2F,EAAA11F,GAAAN,GAGAg2F,QAYA63B,EAAAltH,UAAAmuH,UAAA,SAAA9sH,GACA,IAAAg2B,EAAAr5B,KAEAo3F,EAAA03B,GAAA,SAAAjmE,EAAAlnD,GACAstH,GAAA51F,EAAAujE,EAAA/zC,EAAAswC,UAAA91F,EAAA1B,GAAAknD,EAAA5hB,WASAioF,EAAAltH,UAAAotH,YAAA,WACA,IAAAt0F,EAAA96B,KAEAo3F,EAAA03B,GAAA,SAAAjmE,GACA,IAAA/wC,EAAA+wC,EAAA5mD,eAAA,WAAA4mD,EAAA/uC,QAAA,EAEAghB,EAAA8hE,EAAA/zC,EAAAswC,UAAAhX,cAAArqE,KASAo3G,EAAAltH,UAAAutH,gBAAA,WACA,IAAAlsH,OAAA,EAEA,IACAA,EAAAm2C,KAAAhoC,MAA0By3H,EAAA1iI,EAAQ6pH,aAAAC,QAAAnC,KAC7B,MAAAtkG,GACL2uE,EAAA9lE,KAAA7I,GAGAvmB,GACArD,KAAAmwH,UAAA9sH,IASA6rH,EAAAltH,UAAAstH,aAAA,WACA,GAAAtvH,KAAAijF,SAAAosC,yBAAA,CAIA,IAAAhsH,EAAArD,KAAAy/G,YAEA,IACA3+G,OAAAyrB,KAAAlpB,GAAAd,OACQ0mI,EAAA1iI,EAAQ6pH,aAAAE,QAAApC,GAAA10E,KAAAC,UAAAp2C,IAER4lI,EAAA1iI,EAAQ6pH,aAAAG,WAAArC,IAEX,MAAAtkG,GACL2uE,EAAA9lE,KAAA7I,MASAslG,EAAAltH,UAAAw1G,cAAA,WACA,IAAAgZ,EAAAxwH,KAAAqzE,QAAAwxB,SAAA,oBAEA2rB,GACAA,EAAAhZ,iBAWA0X,EAAAltH,UAAA0qG,iBAAA,WACA1sG,KAAA+rG,oBAAA,KACA/rG,KAAAqe,IAAa8qH,EAAA5iI,EAAQ,UAAAvG,KAAAutG,eAErB,IAAAoT,EAAA3gH,KAAAqzE,QAAA/sD,WACAmqG,EAAA9P,KAAA+P,eACAC,EAAAhQ,KAAAiQ,eAEAH,EACAA,EAAAx1B,QACK01B,GACLA,EAAA11B,SAIAi0B,EArVA,CAsVC9jB,IAEDvoB,GAAA2C,kBAAA,oBAAA0pC,IAuBA,IAAA2B,GAAA,SAAA7tC,GAgBA,SAAA6tC,EAAA/pG,EAAAxB,GACAwxE,EAAA92F,KAAA6wH,GAEA,IAAAC,EAAAxrG,EAAAyrG,gBAA8DkY,EAAA1iI,EAAQwqH,eAGtE,OAAAzrG,EAAAyrG,iBACAD,GAAA,GAIA,IAAA7tC,EAAAvtD,IAAiC2jE,UAAAy3B,GAAuCxrG,GAExExF,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA8mB,EAAAm8D,IAsBA,OApBAnjE,EAAAixG,eAAAzrG,EAAAyrG,gBAAqDkY,EAAA1iI,EAAQwqH,eAC7DjxG,EAAAkxG,cAAA,KACAlxG,EAAAmxG,gBAAA,KACAnxG,EAAAoxG,kBAAA9vB,GAAA,WACAthF,EAAAqxG,iBACK,OAAArqG,GAELgqG,GACAhxG,EAAAmxG,gBAAA,IAAAnxG,EAAAixG,eAAAjxG,EAAAoxG,mBACApxG,EAAAmxG,gBAAAG,QAAAtqG,EAAAmhB,QAEAnoB,EAAAkxG,cAAA,WACAlxG,EAAA26D,IAAA42C,eACAlzG,GAAA2B,EAAA26D,IAAA42C,cAAA,SAAAvxG,EAAAoxG,mBAEApxG,EAAAzB,IAAA,OAAAyB,EAAAkxG,gBAGAlxG,EAAA3B,GAAA,OAAA2B,EAAAkxG,gBAEAlxG,EAgDA,OAlGAi3E,EAAA85B,EAAA7tC,GAqDA6tC,EAAA7uH,UAAAq3F,SAAA,WACA,OAAArW,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,UACAoJ,UAAA,wBAWAynH,EAAA7uH,UAAAmvH,cAAA,WAOAnxH,KAAAqzE,QAAA18D,QAAA,iBAGAk6G,EAAA7uH,UAAAyc,QAAA,WACAze,KAAAixH,kBACAjxH,KAAAqzE,QAAAprC,MACAjoC,KAAAixH,gBAAAK,UAAAtxH,KAAAqzE,QAAAprC,MAEAjoC,KAAAixH,gBAAAM,cAGAvxH,KAAAy6E,KAAAz6E,KAAAy6E,IAAA42C,eACAhzG,GAAAre,KAAAy6E,IAAA42C,cAAA,SAAArxH,KAAAkxH,mBAGAlxH,KAAAgxH,eACAhxH,KAAAqe,IAAA,OAAAre,KAAAgxH,eAGAhxH,KAAA+wH,eAAA,KACA/wH,KAAAwxH,eAAA,KACAxxH,KAAAkxH,kBAAA,KACAlxH,KAAAgxH,cAAA,MAGAH,EAnGA,CAoGChuC,IAEDA,GAAA2C,kBAAA,gBAAAqrC,IAeA,IAAAY,GAAA,SAAAt+F,GACA,IAAA8U,EAAA9U,EAAA8U,KAGA,GAAAA,EAAA8C,aAAA,OAEA,OADA5X,EAAA2iF,iBAAA7tE,EAAA5hB,MACA,EAeA,IAAAF,EAAAgN,EAAA0pE,GAAA,UACA60B,KACArrG,EAAA,GAGA,IAAAF,EAAA5jB,OACA,SAIA,QAAAnC,EAAA,EAAiBA,EAAA+lB,EAAA5jB,OAAoBnC,IAAA,CACrC,IAAA8yB,EAAA/M,EAAA/lB,GAAAimB,IAEA6M,IAAA,IAAAw+F,EAAA5+G,QAAAogB,IACAw+F,EAAAroH,KAAA6pB,GAKA,QAAAw+F,EAAAnvH,SAMA,IAAAmvH,EAAAnvH,SACA8jB,EAAAqrG,EAAA,IAGAv+F,EAAA2iF,iBAAAzvF,IACA,IAOAsrG,GAAA7wH,OAAAC,kBAA0D,aAC1DE,IAAA,WACA,OAAAjB,KAAA4xH,WAAA,GAAAjgB,WAEAjtG,IAAA,SAAAZ,GAEA,IAAA+tH,EAAgBsX,EAAA5iI,EAAQ+B,cAAAtI,KAAA8hG,SAAAjuF,eAGxBg+G,EAAAlgB,UAAA7tG,EAGA,IAAAguH,EAAkBqX,EAAA5iI,EAAQwrH,yBAI1B,MAAAF,EAAA/nH,WAAAvH,OACAuvH,EAAAhpH,YAAA+oH,EAAA/nH,WAAA,IAWA,OAPA9J,KAAAkK,UAAA,GAII++H,EAAA1iI,EAAQyrH,QAAAhwH,UAAA8G,YAAAvI,KAAAP,KAAA8xH,GAGZ9xH,KAAA2xG,aAQAsgB,GAAA,SAAAC,EAAAvjH,GAGA,IAFA,IAAA4K,KAEAnZ,EAAA,EAAiBA,EAAA8xH,EAAA3vH,OAAqBnC,IAGtC,GAFAmZ,EAAAzY,OAAAiuB,yBAAAmjG,EAAA9xH,GAAAuO,GAEA4K,KAAA7U,KAAA6U,EAAAtY,IACA,MAOA,OAHAsY,EAAAvY,YAAA,EACAuY,EAAAC,cAAA,EAEAD,GAGA44G,GAAA,SAAAh/F,GACA,OAAA8+F,IAAA9+F,EAAA8U,KAAmCghG,EAAA1iI,EAAQ6rH,iBAAApwH,UAA6BinI,EAAA1iI,EAAQyrH,QAAAhwH,UAAA2vH,IAAA,cAqBhFU,GAAA,SAAAl/F,GACA,IAAA8U,EAAA9U,EAAA8U,KAGA,IAAAA,EAAAqqF,kBAAA,CAIA,IAAAv0B,KACAw0B,EAAAJ,GAAAh/F,GACAq/F,EAAA,SAAAC,GACA,kBACA,QAAA/oC,EAAApnF,UAAAC,OAAAic,EAAAzD,MAAA2uE,GAAArpE,EAAA,EAAqEA,EAAAqpE,EAAarpE,IAClF7B,EAAA6B,GAAA/d,UAAA+d,GAGA,IAAAqyG,EAAAD,EAAAt6G,MAAA8vB,EAAAzpB,GAIA,OAFAizG,GAAAt+F,GAEAu/F,KAIA,6CAAAlmG,QAAA,SAAA3oB,GACAokC,EAAApkC,KAKAk6F,EAAAl6F,GAAAokC,EAAApkC,GAIAokC,EAAApkC,GAAA2uH,EAAAz0B,EAAAl6F,OAGA/C,OAAAC,eAAAknC,EAAA,YAAAvS,GAAA68F,GACA7tH,IAAA8tH,EAAAD,EAAA7tH,QAGAujC,EAAAqqF,kBAAA,WACArqF,EAAAqqF,kBAAA,KACAxxH,OAAAyrB,KAAAwxE,GAAAvxE,QAAA,SAAA3oB,GACAokC,EAAApkC,GAAAk6F,EAAAl6F,KAGA/C,OAAAC,eAAAknC,EAAA,YAAAsqF,IAIAp/F,EAAAuE,IAAA,YAAAuQ,EAAAqqF,qBAOAK,GAAA7xH,OAAAC,kBAAoD,OACpDE,IAAA,WACA,OAAAjB,KAAA+qC,aAAA,OACA8mE,GAA4Bo3B,EAAA1iI,EAAQyrH,QAAAhwH,UAAA64F,aAAAt6F,KAAAP,KAAA,QAGpC,IAEA0E,IAAA,SAAAZ,GAGA,OAFImlI,EAAA1iI,EAAQyrH,QAAAhwH,UAAAw3F,aAAAj5F,KAAAP,KAAA,MAAA8D,GAEZA,KAIA8uH,GAAA,SAAAz/F,GACA,OAAA8+F,IAAA9+F,EAAA8U,KAAmCghG,EAAA1iI,EAAQ6rH,iBAAApwH,UAAA2wH,IAAA,QAkB3CE,GAAA,SAAA1/F,GACA,GAAAA,EAAAulF,kBAAA,CAIA,IAAAzwE,EAAA9U,EAAA8U,KAGA,IAAAA,EAAA6qF,gBAAA,CAIA,IAAAC,EAAAH,GAAAz/F,GACA6/F,EAAA/qF,EAAAuxD,aACAy5B,EAAAhrF,EAAAlS,KAEAj1B,OAAAC,eAAAknC,EAAA,MAAAvS,GAAAq9F,GACAruH,IAAA,SAAAZ,GACA,IAAA4uH,EAAAK,EAAAruH,IAAAnE,KAAA0nC,EAAAnkC,GAKA,OAFAqvB,EAAA2iF,iBAAA7tE,EAAA5hB,KAEAqsG,MAIAzqF,EAAAuxD,aAAA,SAAA33F,EAAAiC,GACA,IAAA4uH,EAAAM,EAAAzyH,KAAA0nC,EAAApmC,EAAAiC,GAMA,MAJA,OAAA0C,KAAA3E,IACAsxB,EAAA2iF,iBAAA7tE,EAAA5hB,KAGAqsG,GAGAzqF,EAAAlS,KAAA,WACA,IAAA28F,EAAAO,EAAA1yH,KAAA0nC,GAWA,OALAwpF,GAAAt+F,KACAA,EAAA2iF,iBAAA,IACAuc,GAAAl/F,IAGAu/F,GAGAzqF,EAAAirF,WACA//F,EAAA2iF,iBAAA7tE,EAAAirF,YACGzB,GAAAt+F,IACHk/F,GAAAl/F,GAGA8U,EAAA6qF,gBAAA,WACA7qF,EAAA6qF,gBAAA,KACA7qF,EAAAlS,KAAAk9F,EACAhrF,EAAAuxD,aAAAw5B,EACAlyH,OAAAC,eAAAknC,EAAA,MAAA8qF,GACA9qF,EAAAqqF,mBACArqF,EAAAqqF,wBAKAoF,GAAAzgC,GAAA,8SASAm8B,GAAA,SAAAxa,GAYA,SAAAwa,EAAA9tG,EAAAE,GACAsxE,EAAA92F,KAAAozH,GAEA,IAAAtzG,EAAAk3E,EAAAh3F,KAAA44G,EAAAr4G,KAAAP,KAAAslB,EAAAE,IAEAzG,EAAAuG,EAAAvG,OACAs0G,GAAA,EAiBA,GAXAt0G,IAAAe,EAAA26D,IAAAy4C,aAAAn0G,EAAAsH,KAAAf,EAAAlE,KAAA,IAAAkE,EAAAlE,IAAAkyG,mBACAxzG,EAAA8wB,UAAA7xB,GAEAe,EAAAyzG,gBAAAzzG,EAAA26D,KAIAn1D,EAAAkuG,iBACA1zG,EAAA2zG,0BAGA3zG,EAAA26D,IAAAi5C,gBAAA,CAEA,IAAAC,EAAA7zG,EAAA26D,IAAA3wE,WACA8pH,EAAAD,EAAApxH,OACAsxH,KAEA,MAAAD,IAAA,CACA,IAAA1qH,EAAAyqH,EAAAC,GACA9xB,EAAA54F,EAAA44F,SAAAjuF,cAEA,UAAAiuF,IACAhiF,EAAA21F,0BAQA31F,EAAAg4F,qBAAAnI,iBAAAzmG,GACA4W,EAAA8e,mBAAAE,SAAA51B,EAAAmB,OACAyV,EAAAwzD,aAAAx0C,SAAA51B,EAAAmB,OACAgpH,GAAAvzG,EAAA26D,IAAA1vC,aAAA,iBAAAinE,GAAA9oG,EAAAmd,OACAgtG,GAAA,IAPAQ,EAAAxqH,KAAAH,IAaA,QAAA9I,EAAA,EAAqBA,EAAAyzH,EAAAtxH,OAAwBnC,IAC7C0f,EAAA26D,IAAAhqE,YAAAojH,EAAAzzH,IAyBA,OArBA0f,EAAAg0G,qBACAh0G,EAAA21F,0BAAA4d,GACA96B,EAAA9lE,KAAiB42G,IAAI3R,KAIrB53G,EAAAi0G,2CAMAv9B,IAAAjB,IAAAS,MAAA,IAAA1wE,EAAAuwF,wBACA/1F,EAAAk0G,aAAA,GAKAl0G,EAAAm0G,yBAEAn0G,EAAAmmF,eACAnmF,EA4yBA,OAr4BAi3E,EAAAq8B,EAAAxa,GAiGAwa,EAAApxH,UAAAyc,QAAA,WACAze,KAAAy6E,KAAAz6E,KAAAy6E,IAAAq4C,iBACA9yH,KAAAy6E,IAAAq4C,kBAEAM,EAAAc,oBAAAl0H,KAAAy6E,KACAz6E,KAAAijF,SAAA,KAGA21B,EAAA52G,UAAAyc,QAAAle,KAAAP,OASAozH,EAAApxH,UAAAyxH,wBAAA,WACAZ,GAAA7yH,OAaAozH,EAAApxH,UAAA+xH,wCAAA,WACA,IAAAzgD,EAAAtzE,KAAAszE,aACA6gD,OAAA,EAGAC,EAAA,WACAD,KAEA,QAAA/zH,EAAA,EAAqBA,EAAAkzE,EAAA/wE,OAAuBnC,IAAA,CAC5C,IAAAiK,EAAAipE,EAAAlzE,GAEA,aAAAiK,EAAAwqB,MACAs/F,EAAA9qH,MACAgB,QACAgqH,WAAAhqH,EAAA9I,SAQA6yH,IACA9gD,EAAAj/C,iBAAA,SAAA+/F,GAEAp0H,KAAAme,GAAA,qBACA,OAAAm1D,EAAAp4C,oBAAA,SAAAk5F,KAGA,IAAAE,EAAA,SAAAA,IACA,QAAAl0H,EAAA,EAAqBA,EAAA+zH,EAAA5xH,OAA6CnC,IAAA,CAClE,IAAAm0H,EAAAJ,EAAA/zH,GAEA,aAAAm0H,EAAAlqH,MAAA9I,MAAAgzH,EAAAlqH,MAAA9I,OAAAgzH,EAAAF,aACAE,EAAAlqH,MAAA9I,KAAAgzH,EAAAF,YAIA/gD,EAAAp4C,oBAAA,SAAAo5F,IAKAt0H,KAAAme,GAAA,mCACAm1D,EAAAp4C,oBAAA,SAAAk5F,GAGA9gD,EAAAp4C,oBAAA,SAAAo5F,GACAhhD,EAAAj/C,iBAAA,SAAAigG,KAIAt0H,KAAAme,GAAA,iCAEAm1D,EAAAp4C,oBAAA,SAAAk5F,GACA9gD,EAAAj/C,iBAAA,SAAA+/F,GAGA9gD,EAAAp4C,oBAAA,SAAAo5F,MAeAlB,EAAApxH,UAAAuoI,gBAAA,SAAAhiI,EAAAiiI,GACA,IAAAx0G,EAAAh2B,KAGA,GAAAwqI,IAAAxqI,KAAA,iBAAAuI,EAAA,WAIA,IAAAkiI,EAAAliI,EAAAsL,cAEA7T,KAAAyqI,EAAA,qBACA3pI,OAAAyrB,KAAAvsB,KAAAyqI,EAAA,qBAAAj+G,QAAA,SAAA6tD,GACA,IAAAm6C,EAAAx+F,EAAAiS,KAAAwiG,EAAA,UAEAjW,EAAAt5F,oBAAAm/C,EAAArkD,EAAAy0G,EAAA,oBAAApwD,MAIAr6E,KAAA,iBAAAuI,EAAA,WAAAiiI,EACAxqI,KAAAyqI,EAAA,yBAEAzqI,KAAA0qI,0BAAAD,KAWArX,EAAApxH,UAAAqoI,0BAAA,SAAAG,GACAxqI,KAAAuqI,gBAAA,QAAAC,IAWApX,EAAApxH,UAAAsoI,0BAAA,SAAAE,GACAxqI,KAAAuqI,gBAAA,QAAAC,IAYApX,EAAApxH,UAAA0oI,0BAAA,SAAA/pI,GACA,IAAA43B,EAAAv4B,KAEAsZ,EAAAg7F,GAAA3zG,GACA6zH,EAAAx0H,KAAAioC,KAAA3uB,EAAAo7F,YACA+f,EAAAz0H,KAAAsZ,EAAAo7F,cAEA,GAAA10G,KAAA,iBAAAsZ,EAAAm7F,YAAA,WAAA+f,KAAAngG,iBAAA,CAGA,IAAAnW,GACAywF,OAAA,SAAA3mG,GACAysH,EAAA99G,SACApO,KAAA,SACA8Q,OAAAo7G,EACAC,cAAAD,EACAx2B,WAAAw2B,KAGA7lB,SAAA,SAAA5mG,GACAysH,EAAA31F,SAAA92B,EAAAqC,QAEAwkG,YAAA,SAAA7mG,GACAysH,EAAAhmB,YAAAzmG,EAAAqC,SAGAsqH,EAAA,WAGA,IAFA,IAAAC,KAEAx0H,EAAA,EAAqBA,EAAAq0H,EAAAlyH,OAAuBnC,IAAA,CAG5C,IAFA,IAAAy0H,GAAA,EAEA1nG,EAAA,EAAuBA,EAAAqnG,EAAAjyH,OAAqB4qB,IAC5C,GAAAqnG,EAAArnG,KAAAsnG,EAAAr0H,GAAA,CACAy0H,GAAA,EACA,MAIAA,GACAD,EAAAvrH,KAAAorH,EAAAr0H,IAIA,MAAAw0H,EAAAryH,OACAkyH,EAAAhmB,YAAAmmB,EAAAj6E,UAIA36C,KAAAsZ,EAAAo7F,WAAA,cAAAx2F,EAEApd,OAAAyrB,KAAArO,GAAAsO,QAAA,SAAA6tD,GACA,IAAAj8D,EAAAF,EAAAm8D,GAEAm6C,EAAAngG,iBAAAgmD,EAAAj8D,GACAma,EAAApa,GAAA,mBAAAnW,GACA,OAAAwsH,EAAAt5F,oBAAAm/C,EAAAj8D,OAKApe,KAAAme,GAAA,YAAAw2G,GACA30H,KAAAme,GAAA,mBAAAnW,GACA,OAAAuwB,EAAAla,IAAA,YAAAs2G,OAYAvB,EAAApxH,UAAA8xH,mBAAA,WACA,IAAAz6F,EAAAr5B,KAEAs0G,GAAAW,MAAAzoF,QAAA,SAAA7rB,GACA04B,EAAAqxG,0BAAA/pI,MAYAyyH,EAAApxH,UAAAq3F,SAAA,WACA,IAAApxD,EAAAjoC,KAAAijF,SAAA7hE,IAMA,IAAA6mB,IAAAjoC,KAAAijF,SAAA6xC,iBAAA90H,KAAA+0H,wBAAA,CAGA,GAAA9sF,EAAA,CACA,IAAA+sF,EAAA/sF,EAAA2pF,WAAA,GAEA3pF,EAAAh/B,YACAg/B,EAAAh/B,WAAA4wF,aAAAm7B,EAAA/sF,GAEAmrF,EAAAc,oBAAAjsF,GACAA,EAAA+sF,MACO,CACP/sF,EAAakhG,EAAA5iI,EAAQ+B,cAAA,SAGrB,IAAA2sH,EAAAj1H,KAAAijF,SAAA7hE,KAAAs5E,GAAA16F,KAAAijF,SAAA7hE,KACAU,EAAA4T,MAAwCu/F,GAExCz+B,KAAA,IAAAx2F,KAAAijF,SAAA4yB,+BACA/zF,EAAAyqF,SAGAhS,GAAAtyD,EAAAnpB,EAAAgD,GACArd,GAAAzE,KAAAijF,SAAAiyC,OACAC,MAAA,cAIAltF,EAAAi7C,SAAAljF,KAAAijF,SAAAC,SAGA,qBAAAljF,KAAAijF,SAAA9sD,SACAqjE,GAAAvxD,EAAA,UAAAjoC,KAAAijF,SAAA9sD,SAQA,IAFA,IAAAi/F,GAAA,yCAEAh1H,EAAA,EAAmBA,EAAAg1H,EAAA7yH,OAA0BnC,IAAA,CAC7C,IAAA8pB,EAAAkrG,EAAAh1H,GACAiB,EAAArB,KAAAijF,SAAA/4D,GAEA,qBAAA7oB,IACAA,EACAm4F,GAAAvxD,EAAA/d,KAEAuwE,GAAAxyD,EAAA/d,GAEA+d,EAAA/d,GAAA7oB,GAIA,OAAA4mC,GAkBAmrF,EAAApxH,UAAAuxH,gBAAA,SAAAtrF,GACA,OAAAA,EAAAotF,cAAA,IAAAptF,EAAAotF,aAAA,CAMA,OAAAptF,EAAAxO,WAAA,CAWA,IAAA67F,GAAA,EACAC,EAAA,WACAD,GAAA,GAGAt1H,KAAAme,GAAA,YAAAo3G,GAEA,IAAAC,EAAA,WAGAF,GACAt1H,KAAA2W,QAAA,cAgBA,OAZA3W,KAAAme,GAAA,iBAAAq3G,QAEAx1H,KAAAwlB,MAAA,WACAxlB,KAAAqe,IAAA,YAAAk3G,GACAv1H,KAAAqe,IAAA,iBAAAm3G,GAEAF,GAEAt1H,KAAA2W,QAAA,eAWA,IAAA8+G,GAAA,aAGAA,EAAApsH,KAAA,kBAGA4+B,EAAAxO,YAAA,GACAg8F,EAAApsH,KAAA,cAIA4+B,EAAAxO,YAAA,GACAg8F,EAAApsH,KAAA,WAIA4+B,EAAAxO,YAAA,GACAg8F,EAAApsH,KAAA,kBAIArJ,KAAAwlB,MAAA,WACAiwG,EAAAjpG,QAAA,SAAAjkB,GACAvI,KAAA2W,QAAApO,IACOvI,UAYPozH,EAAApxH,UAAAo3B,eAAA,SAAAu1C,GACA,IACA3uE,KAAAy6E,IAAAxlD,YAAA05C,EACK,MAAA3mE,GACLuwF,EAAAvwF,EAAA,oCAaAorH,EAAApxH,UAAA6f,SAAA,WACA,IAAAiZ,EAAA96B,KAMA,GAAAA,KAAAy6E,IAAA54D,WAAAlJ,KAAAg9E,IAAAQ,IAAA,IAAAn2F,KAAAy6E,IAAAxlD,YAAA,CAGA,IAAAygG,EAAA,SAAAA,IACA56F,EAAA2/C,IAAAxlD,YAAA,IAEA6F,EAAA2/C,IAAA54D,WAAAlJ,KACAmiB,EAAAnkB,QAAA,kBAEAmkB,EAAAzc,IAAA,aAAAq3G,KAKA,OADA11H,KAAAme,GAAA,aAAAu3G,GACA7nF,IAEA,OAAA7tC,KAAAy6E,IAAA54D,UAAAgsB,KAWAulF,EAAApxH,UAAAiK,MAAA,WACA,OAAAjM,KAAAy6E,IAAAhuE,aAWA2mH,EAAApxH,UAAAkK,OAAA,WACA,OAAAlM,KAAAy6E,IAAAjuE,cAeA4mH,EAAApxH,UAAAiyH,uBAAA,WACA,IAAA94F,EAAAn7B,KAEA,kCAAAA,KAAAy6E,IAAA,CAIA,IAAAk7C,EAAA,WACA31H,KAAA2W,QAAA,oBAAwC6vG,cAAA,KAGxCoP,EAAA,WACA,2BAAA51H,KAAAy6E,KAAA,uBAAAz6E,KAAAy6E,IAAAo7C,yBACA71H,KAAA03B,IAAA,sBAAAi+F,GAEA31H,KAAA2W,QAAA,oBAA0C6vG,cAAA,MAI1CxmH,KAAAme,GAAA,wBAAAy3G,GACA51H,KAAAme,GAAA,qBACAgd,EAAA9c,IAAA,wBAAAu3G,GACAz6F,EAAA9c,IAAA,sBAAAs3G,OAaAvC,EAAApxH,UAAA8zH,mBAAA,WACA,uBAAA91H,KAAAy6E,IAAAs7C,sBAAA,CACA,IAAAhrH,EAAsBk+H,EAAA1iI,EAAQuE,WAAcm+H,EAAA1iI,EAAQuE,UAAAC,WAAA,GAGpD,aAAAvE,KAAAuE,KAAA,uBAAAvE,KAAAuE,GACA,SAGA,UAQAqoH,EAAApxH,UAAAg0H,gBAAA,WACA,IAAArjG,EAAA3yB,KAAAy6E,IAEA9nD,EAAA2E,QAAA3E,EAAA0iG,cAAA1iG,EAAAsjG,eAGAj2H,KAAAy6E,IAAA7gD,OAIA55B,KAAAikC,WAAA,WACAtR,EAAAkF,QACAlF,EAAAojG,yBACO,IAEPpjG,EAAAojG,yBASA3C,EAAApxH,UAAAk0H,eAAA,WACAl2H,KAAAy6E,IAAA07C,wBAkBA/C,EAAApxH,UAAAqkB,IAAA,SAAA49D,GACA,QAAAh3E,IAAAg3E,EACA,OAAAjkF,KAAAy6E,IAAAp0D,IAIArmB,KAAAw9G,OAAAv5B,IASAmvC,EAAApxH,UAAAk1C,MAAA,WACAk8E,EAAAgD,kBAAAp2H,KAAAy6E,MAaA24C,EAAApxH,UAAAkxH,WAAA,WACA,OAAAlzH,KAAAuwC,eACAvwC,KAAAuwC,eAAAlqB,IAEArmB,KAAAy6E,IAAAy4C,YAWAE,EAAApxH,UAAAgyH,YAAA,SAAAnlH,GACA7O,KAAAy6E,IAAA8xB,WAAA19F,GAoBAukH,EAAApxH,UAAA6xB,aAAA,SAAAgB,EAAAC,EAAAxR,GACA,OAAAtjB,KAAAy1G,yBAIAz1G,KAAAy6E,IAAA5mD,aAAAgB,EAAAC,EAAAxR,GAHAs1F,EAAA52G,UAAA6xB,aAAAtzB,KAAAP,KAAA60B,EAAAC,EAAAxR,IAoCA8vG,EAAApxH,UAAA01G,sBAAA,SAAApyF,GACA,IAAAtlB,KAAAy1G,yBACA,OAAAmD,EAAA52G,UAAA01G,sBAAAn3G,KAAAP,KAAAslB,GAEA,IAAAuyF,EAA2BsxB,EAAA5iI,EAAQ+B,cAAA,SAqBnC,OAnBAgd,EAAAuP,OACAgjF,EAAAhjF,KAAAvP,EAAAuP,MAEAvP,EAAAwP,QACA+iF,EAAA/iF,MAAAxP,EAAAwP,QAEAxP,EAAAhC,UAAAgC,EAAA0tF,WACA6E,EAAA7E,QAAA1tF,EAAAhC,UAAAgC,EAAA0tF,SAEA1tF,EAAAxL,UACA+9F,EAAA/9F,QAAAwL,EAAAxL,SAEAwL,EAAA7gB,KACAozG,EAAApzG,GAAA6gB,EAAA7gB,IAEA6gB,EAAAe,MACAwxF,EAAAxxF,IAAAf,EAAAe,KAGAwxF,GAiBAub,EAAApxH,UAAA4yB,mBAAA,SAAAtP,EAAAsyF,GACA,IAAAC,EAAAe,EAAA52G,UAAA4yB,mBAAAr0B,KAAAP,KAAAslB,EAAAsyF,GAMA,OAJA53G,KAAAy1G,0BACAz1G,KAAAioC,KAAAn/B,YAAA+uG,GAGAA,GAWAub,EAAApxH,UAAA60G,sBAAA,SAAAxsG,GAGA,GAFAuuG,EAAA52G,UAAA60G,sBAAAt2G,KAAAP,KAAAqK,GAEArK,KAAAy1G,yBAAA,CACA,IAAA13E,EAAA/9B,KAAA68F,GAAA,SAEAz8F,EAAA29B,EAAAx7B,OAEA,MAAAnC,IACAiK,IAAA0zB,EAAA39B,IAAAiK,IAAA0zB,EAAA39B,GAAAiK,OACArK,KAAAioC,KAAAx3B,YAAAstB,EAAA39B,MAiBAgzH,EAAApxH,UAAA+1G,wBAAA,WACA,uBAAA/3G,KAAAioC,KAAA8vE,wBACA,OAAA/3G,KAAAioC,KAAA8vE,0BAGA,IAAAse,KAaA,MAXA,qBAAAr2H,KAAAioC,KAAAquF,yBAAA,qBAAAt2H,KAAAioC,KAAAsuF,0BACAF,EAAAG,mBAAAx2H,KAAAioC,KAAAquF,wBACAD,EAAAI,iBAAAz2H,KAAAioC,KAAAsuF,yBAGQ0S,EAAA1iI,EAAQmwH,aAA+B,oBAARuS,EAAA1iI,EAAQmwH,YAAAj8F,IAC/C47F,EAAAM,aAA0CsS,EAAA1iI,EAAQmwH,YAAAj8F,MACnCwuG,EAAA1iI,EAAQmwH,aAAgBuS,EAAA1iI,EAAQmwH,YAAAE,QAAsC,kBAARqS,EAAA1iI,EAAQmwH,YAAAE,OAAAC,kBACrFR,EAAAM,aAA0CsS,EAAA1iI,EAAQskB,KAAA4P,MAAcwuG,EAAA1iI,EAAQmwH,YAAAE,OAAAC,iBAGxER,GAGAjD,EAt4BA,CAu4BC1tB,IAID,GAAAjP,IAAA,CASA28B,GAAA0D,SAAmBqS,EAAA5iI,EAAQ+B,cAAA,SAC3B,IAAA+B,GAAc8+H,EAAA5iI,EAAQ+B,cAAA,SAEtB+B,GAAAwqB,KAAA,WACAxqB,GAAA2oG,QAAA,KACA3oG,GAAAyqB,MAAA,UACAs+F,GAAA0D,SAAAhuH,YAAAuB,IAUA+oH,GAAA3wC,YAAA,WAEA,IACA2wC,GAAA0D,SAAA7P,OAAA,GACG,MAAAj/G,GACH,SAGA,SAAAorH,GAAA0D,WAAA1D,GAAA0D,SAAAl0C,cAUAwwC,GAAAxwC,YAAA,SAAAr6E,GACA,OAAA6qH,GAAA0D,SAAAl0C,YAAAr6E,IAWA6qH,GAAA7wC,cAAA,SAAA2C,EAAA5/D,GACA,OAAA8tG,GAAAxwC,YAAAsC,EAAA38E,OAYA6qH,GAAA2D,iBAAA,WAEA,IACA,IAAA9P,EAAAmM,GAAA0D,SAAA7P,OAGA,OADAmM,GAAA0D,SAAA7P,SAAA,KACAA,IAAAmM,GAAA0D,SAAA7P,OACG,MAAAj/G,GACH,WAaAorH,GAAA4D,cAAA,WACA,IACA,IAAA9P,EAAAkM,GAAA0D,SAAA5P,MAUA,OANAkM,GAAA0D,SAAA5P,SACAkM,GAAA0D,SAAA5P,MACA1tB,GAAA45B,GAAA0D,SAAA,iBAEAr8B,GAAA24B,GAAA0D,SAAA,iBAEA5P,IAAAkM,GAAA0D,SAAA5P,MACG,MAAAl/G,GACH,WAWAorH,GAAA6D,uBAAA,WAGA,GAAAthC,IAAAQ,IAAAC,GAAA,GACA,SAGA,IACA,IAAApmD,EAAAojF,GAAA0D,SAAA9mF,aAGA,OADAojF,GAAA0D,SAAA9mF,eAAA,KACAA,IAAAojF,GAAA0D,SAAA9mF,aACG,MAAAhoC,GACH,WAYAorH,GAAA8D,sBAAA,WAGA,IACA,IAAA52G,EAAA,aAEAxf,OAAAC,eAA0BooI,EAAA5iI,EAAQ+B,cAAA,gBAAiCrH,IAAAqf,EAAA5b,IAAA4b,IACnExf,OAAAC,eAA0BooI,EAAA5iI,EAAQ+B,cAAA,gBAAiCrH,IAAAqf,EAAA5b,IAAA4b,IACnExf,OAAAC,eAA0BooI,EAAA5iI,EAAQ+B,cAAA,sBAAuCrH,IAAAqf,EAAA5b,IAAA4b,IACzExf,OAAAC,eAA0BooI,EAAA5iI,EAAQ+B,cAAA,sBAAuCrH,IAAAqf,EAAA5b,IAAA4b,IACtE,MAAAtY,GACH,SAGA,UAUAorH,GAAA+D,yBAAA,WACA,OAAA5gC,IAAAd,IAAAU,IAUAi9B,GAAAgE,0BAAA,WACA,SAAAhE,GAAA0D,WAAA1D,GAAA0D,SAAAO,cAUAjE,GAAAkE,0BAAA,WACA,SAAAlE,GAAA0D,WAAA1D,GAAA0D,SAAAn4F,cASAy0F,GAAAzzB,QAAA,gQAQAyzB,GAAApxH,UAAAs2G,sBAAA8a,GAAA2D,mBAQA3D,GAAApxH,UAAAu2G,oBAAA6a,GAAA4D,gBAWA5D,GAAApxH,UAAAy2G,qBAAA2a,GAAA6D,yBAQA7D,GAAApxH,UAAA02G,kBAAA0a,GAAA8D,wBAUA9D,GAAApxH,UAAA+yH,yBAAAt/B,GAWA29B,GAAApxH,UAAAw2G,0BAAA,EASA4a,GAAApxH,UAAAmzG,wBAAA,EAQAie,GAAApxH,UAAAqzG,0BAAA,EAQA+d,GAAApxH,UAAAyzG,yBAAA2d,GAAA+D,2BAQA/D,GAAApxH,UAAAwhF,0BAAA4vC,GAAAgE,4BAQAhE,GAAApxH,UAAAyhF,0BAAA2vC,GAAAkE,4BAGA,IAAA10C,GAAAwwC,GAAA0D,UAAA1D,GAAA0D,SAAA5wH,YAAAlE,UAAA4gF,YACAwC,GAAA,4CAEAguC,GAAAoE,iBAAA,WAIA5hC,IAAA,IAAAK,KAAAE,KACAi9B,GAAA0D,SAAA5wH,YAAAlE,UAAA4gF,YAAA,SAAAr6E,GACA,OAAAA,GAAA68E,GAAA5+E,KAAA+B,GACA,QAEAq6E,GAAAriF,KAAAP,KAAAuI,MAKA6qH,GAAAqE,mBAAA,WACA,IAAAv2H,EAAAkyH,GAAA0D,SAAA5wH,YAAAlE,UAAA4gF,YAGA,OADAwwC,GAAA0D,SAAA5wH,YAAAlE,UAAA4gF,eACA1hF,GAIAkyH,GAAAoE,mBAEApE,GAAAc,oBAAA,SAAAjsF,GACA,GAAAA,EAAA,CAIAA,EAAAh/B,YACAg/B,EAAAh/B,WAAAwH,YAAAw3B,GAIA,MAAAA,EAAAyrF,gBACAzrF,EAAAx3B,YAAAw3B,EAAAz3B,YAKAy3B,EAAAwyD,gBAAA,OAIA,oBAAAxyD,EAAAlS,MAEA,WACA,IACAkS,EAAAlS,OACO,MAAA/tB,KAHP,KAUAorH,GAAAgD,kBAAA,SAAAnuF,GACA,GAAAA,EAAA,CAIA,IAAA9hB,EAAA8hB,EAAA4lE,iBAAA,UACAztG,EAAA+lB,EAAA5jB,OAEA,MAAAnC,IACA6nC,EAAAx3B,YAAA0V,EAAA/lB,IAKA6nC,EAAAwyD,gBAAA,OAEA,oBAAAxyD,EAAAlS,MAEA,WACA,IACAkS,EAAAlS,OACO,MAAA/tB,KAHP,MA2BA,QAgBA,eAcA,WAcA,WAiBA,OAeA,eAAAwkB,QAAA,SAAA7d,GACAykH,GAAApxH,UAAA2M,GAAA,WACA,OAAA3O,KAAAy6E,IAAA9rE,IAAA3O,KAAAy6E,IAAA1vC,aAAAp8B,OAoBA,QAaA,eAaA,WAgBA,OAcA,eAAA6d,QAAA,SAAA7d,GACAykH,GAAApxH,UAAA,MAAAshG,GAAA30F,IAAA,SAAA7K,GACA9D,KAAAy6E,IAAA9rE,GAAA7K,EAEAA,EACA9D,KAAAy6E,IAAA+e,aAAA7qF,KAEA3O,KAAAy6E,IAAAggB,gBAAA9rF,OAqBA,SAYA,cAaA,WAaA,SAaA,SAmBA,UAcA,QAcA,UAaA,WAcA,QAeA,eAkBA,sBAaA,SAiBA,eAmBA,aAaA,aAaA,eAAA6d,QAAA,SAAA7d,GACAykH,GAAApxH,UAAA2M,GAAA,WACA,OAAA3O,KAAAy6E,IAAA9rE,OAoBA,SAYA,MAaA,SAmBA,UAeA,eAkBA,uBAAA6d,QAAA,SAAA7d,GACAykH,GAAApxH,UAAA,MAAAshG,GAAA30F,IAAA,SAAA7K,GACA9D,KAAAy6E,IAAA9rE,GAAA7K,MAeA,QASA,OASA,QAAA0oB,QAAA,SAAA7d,GACAykH,GAAApxH,UAAA2M,GAAA,WACA,OAAA3O,KAAAy6E,IAAA9rE,QAIA+2F,GAAAiT,mBAAAya,IAWAA,GAAA/Z,uBAWA+Z,GAAA/Z,oBAAAz2B,YAAA,SAAAr6E,GAEA,IACA,OAAA6qH,GAAA0D,SAAAl0C,YAAAr6E,GACG,MAAAP,GACH,WAgBAorH,GAAA/Z,oBAAAp0B,gBAAA,SAAAlmE,EAAAuG,GAGA,GAAAvG,EAAAxW,KACA,OAAA6qH,GAAA/Z,oBAAAz2B,YAAA7jE,EAAAxW,MAGG,GAAAwW,EAAAsH,IAAA,CACH,IAAAu1F,EAAA9J,GAAA/yF,EAAAsH,KAEA,OAAA+sG,GAAA/Z,oBAAAz2B,YAAA,SAAAg5B,GAGA,UAeAwX,GAAA/Z,oBAAAl0B,aAAA,SAAApmE,EAAAoU,EAAA7N,GACA6N,EAAAqqF,OAAAz+F,EAAAsH,MAMA+sG,GAAA/Z,oBAAA56F,QAAA,aAGA20G,GAAA9tC,sBAAA8tC,GAAA/Z,qBAEA3T,GAAAyS,aAAA,QAAAib,IAEA,IAAAD,GAAAl8B,GAAA,8VAIA0gC,IAeA,WAgBA,QAgBA,UAgBA,UAeA,UAgBA,iBAgBA,aAgBA,aAgBA,SAgBA,eAgBA,mBAKAC,IACAC,QAAA,UACAC,eAAA,iBACAC,QAAA,UACAC,OAAA,UAcA7uB,GAAA,SAAAnmB,GAeA,SAAAmmB,EAAA/nF,EAAAkE,EAAAE,GA4BA,GA3BAsxE,EAAA92F,KAAAmpG,GAGA/nF,EAAA3c,GAAA2c,EAAA3c,IAAA6gB,EAAA7gB,IAAA,aAAAu4F,KAOA13E,EAAAxG,EAAAqqF,EAAA8uB,eAAA72G,GAAAkE,GAIAA,EAAAy+E,cAAA,EAGAz+E,EAAA+zE,UAAA,EAGA/zE,EAAAs9E,SAAA,EAIAt9E,EAAA0+E,qBAAA,GAGA1+E,EAAAhC,SACA,uBAAAlC,EAAA82G,QAAA,CACA,IAAAA,EAAA92G,EAAA82G,QAAA,UAEAA,KAAAr9B,eACAv1E,EAAAhC,SAAA40G,EAAAr9B,aAAA,aAEO,CACP,IAAAzyF,EAAAgZ,EAEA,MAAAhZ,GAAA,IAAAA,EAAA4wF,SAAA,CACA,GAAA0B,GAAAtyF,GAAAnG,eAAA,SACAqjB,EAAAhC,SAAAlb,EAAAyyF,aAAA,QACA,MAEAzyF,IAAAa,YAQA,IAAA6W,EAAAk3E,EAAAh3F,KAAAgjF,EAAAziF,KAAAP,KAAA,KAAAslB,EAAAE,IAmBA,GAjBA1F,EAAAq4G,mBAAA,EAIAr4G,EAAAs4G,oBAGAt4G,EAAAimF,UAAA,EAGAjmF,EAAAo1F,aAAA,EAGAp1F,EAAAu4G,aAAA,GAIAv4G,EAAAmjE,WAAAnjE,EAAAmjE,SAAAq5B,YAAAx8F,EAAAmjE,SAAAq5B,UAAA/5G,OACA,UAAAC,MAAA,2HAaA,GATAsd,EAAAsB,MAGAtB,EAAAm1G,cAAA7zG,GAAAs5E,GAAAt5E,GAGAtB,EAAAwD,SAAAxD,EAAAmjE,SAAA3/D,UAGAgC,EAAA++E,UAAA,CAEA,IAAAi0B,KAEAx3H,OAAAw4F,oBAAAh0E,EAAA++E,WAAA73E,QAAA,SAAA+rG,GACAD,EAAAC,EAAA1kH,eAAAyR,EAAA++E,UAAAk0B,KAEAz4G,EAAA04G,WAAAF,OAEAx4G,EAAA04G,WAAArvB,EAAAnnG,UAAAihF,SAAAohB,UAIAvkF,EAAAi8F,UAGAj8F,EAAA24G,QAAAnzG,EAAAsB,QAAA,GAGA9G,EAAA44G,YAAApzG,EAAAinF,SAGAzsF,EAAAi8F,OAAA+L,WAAA,EAKA1mG,EAAAmrF,UAAA,EACAnrF,EAAAq5E,gBAAA,YAGAr5E,EAAA2pB,aAAA,YACAjrB,EAAAmjE,SAAAvpD,UAAA,EAIA5Z,EAAA4Z,SAAA5Z,EAAAmjE,SAAAvpD,UASA5Z,EAAA64G,YAAA,EAEA74G,EAAA26D,IAAA36D,EAAAu5E,WAGAv5E,EAAAi8F,OAAA6c,iBAAA94G,EAAA+4G,sBAGAj2B,GAAA9iF,GAAoB+iF,YAAA,QAMpB,IAAAi2B,EAAApjG,GAAA5V,EAAAmjE,UAGA,GAAA39D,EAAAyzG,QAAA,CACA,IAAAA,EAAAzzG,EAAAyzG,QAEAj4H,OAAAyrB,KAAAwsG,GAAAvsG,QAAA,SAAA+rG,GACA,uBAAAv4H,KAAAu4H,GAGA,UAAA/1H,MAAA,WAAA+1H,EAAA,oBAFAv4H,KAAAu4H,GAAAQ,EAAAR,KAIOz4G,GAGPA,EAAAmjE,SAAA19D,cAAAuzG,EAEAh5G,EAAAk5G,eAEAl5G,EAAAikF,eAGAjkF,EAAAsgG,QAAA,UAAAh/F,EAAA0gF,SAAAjuF,eAIAiM,EAAAysF,WACAzsF,EAAAm6E,SAAA,wBAEAn6E,EAAAm6E,SAAA,yBAIAn6E,EAAA26D,IAAA+e,aAAA,iBACA15E,EAAAsgG,UACAtgG,EAAA26D,IAAA+e,aAAA,aAAA15E,EAAAokF,SAAA,iBAEApkF,EAAA26D,IAAA+e,aAAA,aAAA15E,EAAAokF,SAAA,iBAGApkF,EAAAsgG,WACAtgG,EAAAm6E,SAAA,aAGAn6E,EAAAm5G,qBACAn5G,EAAAm6E,SAAA,eAUAxE,IACA31E,EAAAm6E,SAAA,oBAIAkP,EAAAhlB,QAAArkE,EAAA6jF,KAAA7jF,EAGA,IAAAo5G,EAAArhH,EAAAlU,MAAA,QAgBA,OAdAmc,EAAAm6E,SAAA,QAAAi/B,GAIAp5G,EAAAq5G,YAAA,GACAr5G,EAAAmoF,qBAEAnoF,EAAA4X,IAAA,OAAA5X,EAAAs5G,wBACAt5G,EAAA3B,GAAA,mBAAA2B,EAAAu5G,yBACAv5G,EAAA3B,GAAA,aAAA2B,EAAAw5G,mBAEAx5G,EAAAy5G,cAAA,EACAz5G,EAAA05G,sBAAA,EACA15G,EAAA25G,iBAAA,KACA35G,EA60GA,OAzjHAi3E,EAAAoS,EAAAnmB,GAyPAmmB,EAAAnnG,UAAAyc,QAAA,WAOAze,KAAA2W,QAAA,WAEA3W,KAAAqe,IAAA,WAEAre,KAAA05H,UAAA15H,KAAA05H,SAAAzwH,aACAjJ,KAAA05H,SAAAzwH,WAAAwH,YAAAzQ,KAAA05H,UACA15H,KAAA05H,SAAA,MAIAvwB,EAAAhlB,QAAAnkF,KAAA2jG,KAAA,KAEA3jG,KAAAohB,KAAAphB,KAAAohB,IAAA0F,SACA9mB,KAAAohB,IAAA0F,OAAA,MAGA9mB,KAAAy6E,KAAAz6E,KAAAy6E,IAAA3zD,SACA9mB,KAAAy6E,IAAA3zD,OAAA,MAGA9mB,KAAA+mB,QACA/mB,KAAA+mB,MAAAtI,UACAze,KAAAm4H,mBAAA,EACAn4H,KAAAy4H,QAAA,IAGAz4H,KAAA25H,kBACA35H,KAAA25H,gBAAA,MAGA35H,KAAAohB,MACAphB,KAAAohB,IAAA,MAGAu5F,GAAA36G,MAGAgjF,EAAAhhF,UAAAyc,QAAAle,KAAAP,OAWAmpG,EAAAnnG,UAAAq3F,SAAA,WACA,IAAAj4E,EAAAphB,KAAAohB,IACA6mB,OAAA,EACA6sF,EAAA90H,KAAA25H,gBAAAv4G,EAAAnY,YAAAmY,EAAAnY,WAAA8hC,cAAA3pB,EAAAnY,WAAA8hC,aAAA,mBACA6uF,EAAA,aAAA55H,KAAAohB,IAAA3Y,QAAAoL,cAEAihH,EACA7sF,EAAAjoC,KAAAy6E,IAAAr5D,EAAAnY,WACK2wH,IACL3xF,EAAAjoC,KAAAy6E,IAAAuI,EAAAhhF,UAAAq3F,SAAA94F,KAAAP,KAAA,QAKA,IAAAqlB,EAAAq1E,GAAAt5E,GAEA,GAAAw4G,EAAA,CACA3xF,EAAAjoC,KAAAy6E,IAAAr5D,EACAA,EAAAphB,KAAAohB,IAAuB+nH,EAAA5iI,EAAQ+B,cAAA,SAC/B,MAAA2/B,EAAA08D,SAAApiG,OACA6e,EAAAtY,YAAAm/B,EAAAz3B,YAGAspF,GAAA7xD,EAAA,aACAgyD,GAAAhyD,EAAA,YAGAA,EAAAn/B,YAAAsY,GAEA0zG,EAAA90H,KAAA25H,gBAAA1xF,EAKAnnC,OAAAyrB,KAAA0b,GAAAzb,QAAA,SAAA3oB,GACAud,EAAAvd,GAAAokC,EAAApkC,KA8CA,GAzCAud,EAAAo4E,aAAA,iBAKAhgE,IACApY,EAAAo4E,aAAA,sBAIAp4E,EAAAq5E,gBAAA,SACAr5E,EAAAq5E,gBAAA,UAEA35F,OAAAw4F,oBAAAj0E,GAAAmH,QAAA,SAAAtC,GAIA0vG,GAAA,UAAA1vG,GACA+d,EAAAuxD,aAAAtvE,EAAA7E,EAAA6E,IAGA0vG,GACAx4G,EAAAo4E,aAAAtvE,EAAA7E,EAAA6E,MAOA9I,EAAA8hE,SAAA9hE,EAAA3c,GACA2c,EAAA3c,IAAA,aACA2c,EAAAhY,UAAA,WAGAgY,EAAA0F,OAAAmhB,EAAAnhB,OAAA9mB,KAEAA,KAAAi6F,SAAA,eAKgB,IAARgvC,EAAA1iI,EAAQszH,yBAAA,CAChB75H,KAAA05H,SAAA/4B,GAAA,yBACA,IAAAm5B,EAAAl9B,GAAA,wBACA3uC,EAAA2uC,GAAA,QAEA3uC,EAAA4rC,aAAA75F,KAAA05H,SAAAI,IAAA7sB,YAAAh/C,EAAAz9C,YAIAxQ,KAAAiM,MAAAjM,KAAAijF,SAAAh3E,OACAjM,KAAAkM,OAAAlM,KAAAijF,SAAA/2E,QACAlM,KAAA+5H,MAAA/5H,KAAAijF,SAAA82C,OACA/5H,KAAAg6H,YAAAh6H,KAAAijF,SAAA+2C,aAMA,IAFA,IAAAC,EAAA74G,EAAAkzE,qBAAA,KAEAl0F,EAAA,EAAmBA,EAAA65H,EAAA13H,OAAkBnC,IAAA,CACrC,IAAA85H,EAAAD,EAAA9Q,KAAA/oH,GAEA65F,GAAAigC,EAAA,cACAA,EAAA1gC,aAAA,mBA0BA,OArBAp4E,EAAAkyG,kBAAAlyG,EAAAi0G,aAGAj0G,EAAAnY,aAAA6rH,GACA1zG,EAAAnY,WAAA4wF,aAAA5xD,EAAA7mB,GAQAu4E,EAAAv4E,EAAA6mB,GACAjoC,KAAA4jG,UAAAj6B,QAAAvoD,GAIAphB,KAAAy6E,IAAA+e,aAAA,OAAAx5F,KAAA+sH,WAEA/sH,KAAAy6E,IAAAxyC,EAEAA,GAeAkhE,EAAAnnG,UAAAiK,MAAA,SAAA5K,GACA,OAAArB,KAAAwmG,UAAA,QAAAnlG,IAeA8nG,EAAAnnG,UAAAkK,OAAA,SAAA7K,GACA,OAAArB,KAAAwmG,UAAA,SAAAnlG,IAmBA8nG,EAAAnnG,UAAAwkG,UAAA,SAAA2zB,EAAA94H,GACA,IAAA+4H,EAAAD,EAAA,IAEA,QAAAltH,IAAA5L,EACA,OAAArB,KAAAo6H,IAAA,EAGA,QAAA/4H,EAIA,OAFArB,KAAAo6H,QAAAntH,OACAjN,KAAAq6H,iBAIA,IAAAC,EAAA5zH,WAAArF,GAEAyuC,MAAAwqF,GACA/hC,EAAA5gE,MAAA,mBAAAt2B,EAAA,sBAAA84H,IAIAn6H,KAAAo6H,GAAAE,EACAt6H,KAAAq6H,mBAiBAlxB,EAAAnnG,UAAA+3H,MAAA,SAAA7V,GACA,QAAAj3G,IAAAi3G,EACA,QAAAlkH,KAAAu6H,OAGAv6H,KAAAu6H,SAAArW,EAEAA,EACAlkH,KAAAi6F,SAAA,aAEAj6F,KAAAm6F,YAAA,aAGAn6F,KAAAq6H,kBAyBAlxB,EAAAnnG,UAAAg4H,YAAA,SAAAQ,GACA,QAAAvtH,IAAAutH,EACA,OAAAx6H,KAAAy6H,aAIA,iBAAAj0H,KAAAg0H,GACA,UAAAh4H,MAAA,kGAEAxC,KAAAy6H,aAAAD,EAIAx6H,KAAA+5H,OAAA,GAEA/5H,KAAAq6H,kBAWAlxB,EAAAnnG,UAAAq4H,eAAA,WACA,IAAgB,IAAR4O,EAAA1iI,EAAQszH,yBAAhB,CAiBA,IAAA5tH,OAAA,EACAC,OAAA,EACA8tH,OAAA,EACAU,OAAA,EAKAV,OAFA/sH,IAAAjN,KAAAy6H,cAAA,SAAAz6H,KAAAy6H,aAEAz6H,KAAAy6H,aACKz6H,KAAA26H,aAAA,EAEL36H,KAAA26H,aAAA,IAAA36H,KAAA46H,cAGA,OAIA,IAAAC,EAAAb,EAAAr2H,MAAA,KACAm3H,EAAAD,EAAA,GAAAA,EAAA,GAIA5uH,OAFAgB,IAAAjN,KAAA+6H,OAEA/6H,KAAA+6H,YACK9tH,IAAAjN,KAAAg7H,QAELh7H,KAAAg7H,QAAAF,EAGA96H,KAAA26H,cAAA,IAKAzuH,OAFAe,IAAAjN,KAAAg7H,QAEAh7H,KAAAg7H,QAGA/uH,EAAA6uH,EAKAJ,EADA,aAAAl0H,KAAAxG,KAAAyE,MACA,cAAAzE,KAAAyE,KAEAzE,KAAAyE,KAAA,cAIAzE,KAAAi6F,SAAAygC,GAEA95B,GAAA5gG,KAAA05H,SAAA,YAAAgB,EAAA,sBAA6DzuH,EAAA,wBAAiCC,EAAA,0BAA4CwuH,EAAA,sCAAsC,IAAAI,EAAA,yBAnEhL,CACA,IAAAt0C,EAAA,kBAAAxmF,KAAA+6H,OAAA/6H,KAAA+6H,OAAA/6H,KAAAijF,SAAAh3E,MACAgvH,EAAA,kBAAAj7H,KAAAg7H,QAAAh7H,KAAAg7H,QAAAh7H,KAAAijF,SAAA/2E,OACAgvH,EAAAl7H,KAAA+mB,OAAA/mB,KAAA+mB,MAAAkhB,KAEAizF,IACA10C,GAAA,IACA00C,EAAAjvH,MAAAu6E,GAEAy0C,GAAA,IACAC,EAAAhvH,OAAA+uH,MA0EA9xB,EAAAnnG,UAAAw6G,UAAA,SAAAD,EAAAx9F,GACA,IAAAiX,EAAAh2B,KAGAA,KAAA+mB,OACA/mB,KAAAm7H,cAGA,IAAAC,EAAA93B,GAAAiZ,GACA8e,EAAA9e,EAAAhZ,OAAA,GAAA1vF,cAAA0oG,EAAAllG,MAAA,GAGA,UAAA+jH,GAAAp7H,KAAAohB,MACAskF,GAAAvpB,QAAA,SAAA+3C,oBAAAl0H,KAAAohB,KACAphB,KAAAohB,IAAA0F,OAAA,KACA9mB,KAAAohB,IAAA,MAGAphB,KAAAs7H,UAAAF,EAGAp7H,KAAA+lG,UAAA,EAIA,IAAArsE,EAAA,kBAAA15B,KAAA05B,YAAA15B,KAAA05B,WAGA6hG,GACAx8G,SACA2a,WACAm8E,uBAAA71G,KAAAijF,SAAA4yB,uBACA3yB,SAAAljF,KAAAyE,KACAywH,OAAAl1H,KAAAyE,KAAA,IAAA22H,EAAA,OACAnjB,YAAAj4G,KAAAijF,SAAAg1B,YACA9hF,QAAAn2B,KAAAijF,SAAA9sD,QACAqlG,KAAAx7H,KAAAijF,SAAAu4C,KACAtU,MAAAlnH,KAAAijF,SAAAikC,MACAtgG,OAAA5mB,KAAA4mB,SACAtD,SAAAtjB,KAAAsjB,WACAwxG,eAAA90H,KAAA25H,kBAAA,EACA8B,SAAAz7H,KAAAijF,SAAA,UACAy4C,oBAAA17H,KAAAijF,SAAA04C,sBACAnI,gBAAAxzH,KAAAijF,SAAAuwC,iBAGAze,GAAAE,MAAAzoF,QAAA,SAAA+rG,GACA,IAAAj/G,EAAAy7F,GAAAwjB,GAEAgD,EAAAjiH,EAAAo7F,YAAA1+E,EAAA1c,EAAAq7F,eAGA71F,EAAAy8G,EAAAv7H,KAAAijF,SAAAm4C,IACAt8G,EAAAy8G,EAAAv7H,KAAAijF,SAAAo4C,IACAv8G,EAAAy8G,EAAAv7H,KAAAijF,SAAAs5B,EAAA1oG,gBAEA7T,KAAAohB,MACAm6G,EAAAn6G,IAAAphB,KAAAohB,KAGArC,KAAAsH,MAAArmB,KAAA+7G,OAAA11F,KAAArmB,KAAA+7G,OAAA9mF,YAAA,IACAsmG,EAAAx1H,UAAA/F,KAAA+7G,OAAA9mF,aAIA,IAAA2mG,EAAAl2B,GAAAvpB,QAAAogC,GAEA,IAAAqf,EACA,UAAAp5H,MAAA,kBAAA44H,EAAA,cAAAA,EAAA,wDAGAp7H,KAAA+mB,MAAA,IAAA60G,EAAAL,GAGAv7H,KAAA+mB,MAAAvB,MAAA5jB,GAAA5B,UAAA67H,mBAAA,GAEA5wB,GAAAF,iBAAA/qG,KAAA87H,oBAAA97H,KAAA+mB,OAGA4wG,GAAAnrG,QAAA,SAAAnC,GACA2L,EAAA7X,GAAA6X,EAAAjP,MAAAsD,EAAA2L,EAAA,aAAAstE,GAAAj5E,GAAA,QAGAvpB,OAAAyrB,KAAAqrG,IAAAprG,QAAA,SAAAnC,GACA2L,EAAA7X,GAAA6X,EAAAjP,MAAAsD,EAAA,SAAA0xG,GACA,IAAA/lG,EAAAjP,MAAAipB,gBAAAha,EAAAjP,MAAAoO,UACAa,EAAAoiG,iBAAA/uH,MACA9F,SAAAyyB,EAAA,aAAA4hG,GAAAvtG,GAAA,KAAAzoB,KAAAo0B,GACA3L,MAAA0xG,IAIA/lG,EAAA,aAAA4hG,GAAAvtG,GAAA,KAAA0xG,OAIA/7H,KAAAme,GAAAne,KAAA+mB,MAAA,YAAA/mB,KAAAg8H,sBACAh8H,KAAAme,GAAAne,KAAA+mB,MAAA,YAAA/mB,KAAAi8H,sBACAj8H,KAAAme,GAAAne,KAAA+mB,MAAA,UAAA/mB,KAAAk8H,oBACAl8H,KAAAme,GAAAne,KAAA+mB,MAAA,QAAA/mB,KAAAm8H,kBACAn8H,KAAAme,GAAAne,KAAA+mB,MAAA,UAAA/mB,KAAAo8H,oBACAp8H,KAAAme,GAAAne,KAAA+mB,MAAA,OAAA/mB,KAAAq8H,iBACAr8H,KAAAme,GAAAne,KAAA+mB,MAAA,YAAA/mB,KAAAs8H,sBACAt8H,KAAAme,GAAAne,KAAA+mB,MAAA,QAAA/mB,KAAAu8H,kBACAv8H,KAAAme,GAAAne,KAAA+mB,MAAA,iBAAA/mB,KAAAw8H,2BACAx8H,KAAAme,GAAAne,KAAA+mB,MAAA,mBAAA/mB,KAAAy8H,6BACAz8H,KAAAme,GAAAne,KAAA+mB,MAAA,QAAA/mB,KAAA08H,kBACA18H,KAAAme,GAAAne,KAAA+mB,MAAA,iBAAA/mB,KAAAq6H,gBACAr6H,KAAAme,GAAAne,KAAA+mB,MAAA,eAAA/mB,KAAA28H,yBACA38H,KAAAme,GAAAne,KAAA+mB,MAAA,WAAA/mB,KAAA48H,qBACA58H,KAAAme,GAAAne,KAAA+mB,MAAA,aAAA/mB,KAAA68H,uBAEA78H,KAAA88H,oBAAA98H,KAAA+8H,SAAA,aAEA/8H,KAAAusG,aAAAvsG,KAAA88H,uBACA98H,KAAAg9H,4BAKAh9H,KAAA+mB,MAAAkhB,KAAAh/B,aAAAjJ,KAAAioC,MAAA,UAAAmzF,GAAAp7H,KAAAohB,KACAu4E,EAAA35F,KAAA+mB,MAAAkhB,KAAAjoC,KAAAioC,MAIAjoC,KAAAohB,MACAphB,KAAAohB,IAAA0F,OAAA,KACA9mB,KAAAohB,IAAA,OAWA+nF,EAAAnnG,UAAAm5H,YAAA,WACA,IAAA5iG,EAAAv4B,KAGA+0G,GAAAE,MAAAzoF,QAAA,SAAA+rG,GACA,IAAAj/G,EAAAy7F,GAAAwjB,GAEAhgG,EAAAjf,EAAAq7F,aAAAp8E,EAAAjf,EAAAo7F,gBAEA10G,KAAA87H,gBAAA7wB,GAAAN,iBAAA3qG,KAAA+mB,OAEA/mB,KAAA+lG,UAAA,EAEA/lG,KAAA+mB,MAAAtI,UAEAze,KAAA+mB,OAAA,EAEA/mB,KAAAm4H,oBACAn4H,KAAAy4H,QAAA,GACAz4H,KAAA2W,QAAA,iBAGA3W,KAAAm4H,mBAAA,GAgBAhvB,EAAAnnG,UAAAmxB,KAAA,SAAA8pG,GAKA,YAJAhwH,IAAAgwH,GACA1kC,EAAA9lE,KAAiB42G,IAAIlW,KAGrBnzH,KAAA+mB,OA0BAoiF,EAAAnnG,UAAAg7H,0BAAA,WAEAh9H,KAAAk9H,+BAMAl9H,KAAAme,GAAAne,KAAA+mB,MAAA,YAAA/mB,KAAAm9H,kBACAn9H,KAAAme,GAAAne,KAAA+mB,MAAA,WAAA/mB,KAAA2qI,wBAKA3qI,KAAAme,GAAAne,KAAA+mB,MAAA,aAAA/mB,KAAAo9H,uBACAp9H,KAAAme,GAAAne,KAAA+mB,MAAA,YAAA/mB,KAAAq9H,sBACAr9H,KAAAme,GAAAne,KAAA+mB,MAAA,WAAA/mB,KAAAs9H,qBAIAt9H,KAAAme,GAAAne,KAAA+mB,MAAA,MAAA/mB,KAAAu9H,iBAWAp0B,EAAAnnG,UAAAk7H,6BAAA,WAGAl9H,KAAAqe,IAAAre,KAAA+mB,MAAA,MAAA/mB,KAAAu9H,gBACAv9H,KAAAqe,IAAAre,KAAA+mB,MAAA,aAAA/mB,KAAAo9H,uBACAp9H,KAAAqe,IAAAre,KAAA+mB,MAAA,YAAA/mB,KAAAq9H,sBACAr9H,KAAAqe,IAAAre,KAAA+mB,MAAA,WAAA/mB,KAAAs9H,qBACAt9H,KAAAqe,IAAAre,KAAA+mB,MAAA,YAAA/mB,KAAAm9H,kBACAn9H,KAAAqe,IAAAre,KAAA+mB,MAAA,WAAA/mB,KAAA2qI,yBAUAxhC,EAAAnnG,UAAA65H,iBAAA,WACA77H,KAAAimG,eAGAjmG,KAAA+7G,OAAAkL,QACAjnH,KAAAw9H,UAAA,YAAAx9H,KAAA+7G,OAAAkL,QAIAjnH,KAAA28H,0BAGA38H,KAAAw8H,6BAeArzB,EAAAnnG,UAAAg6H,qBAAA,WAGAh8H,KAAAm6F,YAAA,aACAn6F,KAAAm6F,YAAA,eAGAn6F,KAAA23B,MAAA,MAKA33B,KAAAs3B,UAWAt3B,KAAAy9H,YAAA,GACAz9H,KAAA2W,QAAA,eALA3W,KAAA2W,QAAA,aACA3W,KAAA2W,QAAA,cASA3W,KAAA09H,gBAAA19H,KAAA05B,aAWAyvE,EAAAnnG,UAAA07H,gBAAA,SAAAn1H,GACA,IAAA8wB,EAAAr5B,KAEA,GAAAA,KAAA+mB,OAAA,kBAAAxe,EAAA,CAIA,IAAA2+G,EAAA,WACA,IAAAyW,EAAAtkG,EAAA6tF,QAEA7tF,EAAA6tF,OAAA,GAEA,IAAAvtF,EAAAN,EAAAO,OAEA,GAAAD,KAAAE,MAAAF,EAAAixG,MAIA,OAAAjxG,EAAAixG,MAAA,SAAA5iI,GAEAqxB,EAAA6tF,MAAAyW,MAIAC,OAAA,EAgBA,GAdA,QAAAr1H,GACAq1H,EAAA59H,KAAA45B,OAEAgkG,KAAA/jG,MAAA+jG,EAAAgN,OACAhN,EAAAgN,MAAA,WACA,OAAA1jB,OAIA0W,EADK,UAAAr1H,EACL2+G,IAEAlnH,KAAA45B,OAGAgkG,KAAA/jG,MAAA+jG,EAAAgN,MAIA,OAAAhN,EAAA/jG,KAAA,WACAR,EAAA1iB,SAAsBpO,KAAA,mBAAAmxB,SAAAnxB,MACjBqiI,MAAA,SAAA5iI,GACLqxB,EAAA1iB,SAAsBpO,KAAA,mBAAAmxB,SAAAnxB,QAiBtB4gG,EAAAnnG,UAAA67H,oBAAA,WACA,IAAA34C,EAAA5iF,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAGA+jB,EAAA6+D,EACA38E,EAAA,GAEA,kBAAA8d,IACAA,EAAA6+D,EAAA7+D,IACA9d,EAAA28E,EAAA38E,MAIAvI,KAAA+7G,OAAAh9F,OAAA/e,KAAA+7G,OAAAh9F,WACA/e,KAAA+7G,OAAA51F,QAAAnmB,KAAA+7G,OAAA51F,YAGAE,IAAA9d,IACAA,EAAAuzG,GAAA97G,KAAAqmB,IAIArmB,KAAA+7G,OAAAh9F,OAAA2W,MAAwCwvD,GAAW7+D,MAAA9d,SASnD,IAPA,IAAAyzG,EAAAh8G,KAAA+7G,OAAA51F,QAAAuL,OAAA,SAAAvvB,GACA,OAAAA,EAAAkkB,KAAAlkB,EAAAkkB,UAEAy3G,KACAC,EAAA/9H,KAAA68F,GAAA,UACAmhC,KAEA59H,EAAA,EAAmBA,EAAA29H,EAAAx7H,OAAsBnC,IAAA,CACzC,IAAAkwC,EAAAoqD,GAAAqjC,EAAA39H,IAEA09H,EAAAz0H,KAAAinC,GAEAA,EAAAjqB,KAAAiqB,EAAAjqB,SACA23G,EAAA30H,KAAAinC,EAAAjqB,KAMA23G,EAAAz7H,SAAAy5G,EAAAz5G,OACAvC,KAAA+7G,OAAA51F,QAAA23G,EAGK9hB,EAAAz5G,SACLvC,KAAA+7G,OAAA51F,SAAAnmB,KAAA+7G,OAAAh9F,SAIA/e,KAAA+7G,OAAA11F,OAwCA8iF,EAAAnnG,UAAAi6H,qBAAA,SAAA5xG,GACA,IAAAyQ,EAAA96B,KAIA,IAAAA,KAAAu5H,eAGAv5H,KAAA69H,oBAAAxzG,EAAAhE,MAMAgE,EAAAhE,KAAA,CACA,IAAA43G,EAAA,SAAAA,EAAAj2H,GACA,cAAAA,EAAAO,MACAuyB,EAAA+iG,oBAAA/iG,EAAAiiG,SAAA,eAGAjiG,EAAA/T,MAAA1I,KAAA,yBAAA4/G,IAGAj+H,KAAA+mB,MAAA2Q,KAAA,yBAAAumG,GAIAj+H,KAAA2W,SACA0P,IAAAgE,EAAAhE,IACA9d,KAAA,eAkBA4gG,EAAAnnG,UAAAy7H,WAAA,SAAA59F,GACA,QAAA5yB,IAAA4yB,EAEA,OAAA7/B,KAAAk1G,YAGAr1E,IAAA7/B,KAAAk1G,cAIAl1G,KAAAk1G,YAAAr1E,EAEA7/B,KAAAk1G,aACAl1G,KAAAi6F,SAAA,mBACAj6F,KAAA2W,QAAA,cAEA3W,KAAAm6F,YAAA,qBAcAgP,EAAAnnG,UAAAq6H,gBAAA,WACAr8H,KAAAm6F,YAAA,aACAn6F,KAAAm6F,YAAA,cACAn6F,KAAAi6F,SAAA,eAGAj6F,KAAAy9H,YAAA,GAQAz9H,KAAA2W,QAAA,SAgBAwyF,EAAAnnG,UAAA66H,sBAAA,WACA78H,KAAA+mB,MAAAipB,eAAA,OAAAhwC,KAAA+7G,OAAA6c,mBACA54H,KAAAo4H,iBAAA5rG,QAAA,SAAA0xG,GACA,OAAAA,EAAA36H,SAAA26H,EAAA7zG,SAEArqB,KAAAo4H,qBAEAp4H,KAAA+7G,OAAA6c,iBAAA54H,KAAA+mB,MAAAipB,eAOAhwC,KAAA2W,QAAA,eAYAwyF,EAAAnnG,UAAAk6H,mBAAA,WACA,IAAA/gG,EAAAn7B,KAEAA,KAAAi6F,SAAA,eAOAj6F,KAAA2W,QAAA,WACA3W,KAAA03B,IAAA,wBACA,OAAAyD,EAAAg/D,YAAA,kBAcAgP,EAAAnnG,UAAAm8H,mBAAA,WACAn+H,KAAAm6F,YAAA,eAOAn6F,KAAA2W,QAAA,YAYAwyF,EAAAnnG,UAAAo8H,0BAAA,WACAp+H,KAAAm6F,YAAA,eAQAn6F,KAAA2W,QAAA,mBAYAwyF,EAAAnnG,UAAAq8H,mBAAA,WACAr+H,KAAAm6F,YAAA,eAOAn6F,KAAA2W,QAAA,YAYAwyF,EAAAnnG,UAAAo6H,mBAAA,WACAp8H,KAAAi6F,SAAA,eAOAj6F,KAAA2W,QAAA,YAYAwyF,EAAAnnG,UAAAs8H,kBAAA,WACAt+H,KAAAm6F,YAAA,eAOAn6F,KAAA2W,QAAA,WAcAwyF,EAAAnnG,UAAAs6H,qBAAA,WAGAt8H,KAAAijF,SAAAs7C,YACAhmC,EAAA9lE,KAAA,0EACAzyB,KAAAi1B,YAAAj1B,KAAAijF,SAAAs7C,YAGAv+H,KAAAi6F,SAAA,mBAUAj6F,KAAA2W,QAAA,cAYAwyF,EAAAnnG,UAAAu6H,iBAAA,WACAv8H,KAAAm6F,YAAA,eACAn6F,KAAAi6F,SAAA,cAOAj6F,KAAA2W,QAAA,UAYAwyF,EAAAnnG,UAAAm6H,iBAAA,WACAn8H,KAAAi6F,SAAA,aACAj6F,KAAAijF,SAAAu4C,MACAx7H,KAAAi1B,YAAA,GACAj1B,KAAA45B,QACK55B,KAAAs3B,UACLt3B,KAAA63B,QASA73B,KAAA2W,QAAA,UAWAwyF,EAAAnnG,UAAAw6H,0BAAA,WACAx8H,KAAA6hB,SAAA7hB,KAAA+8H,SAAA,cAcA5zB,EAAAnnG,UAAAm7H,iBAAA,SAAA9yG,GACAoyE,GAAApyE,IAMArqB,KAAA04H,YAIA14H,KAAAs3B,SACAmzE,GAAAzqG,KAAA45B,QAEA55B,KAAA63B,UAeAsxE,EAAAnnG,UAAA2oI,uBAAA,SAAAtgH,GACA,GAAArqB,KAAA04H,UAAA,CAMA,IAAAmS,EAAA9vH,MAAA/Y,UAAAysC,KAAAluC,KAAAP,KAAA68F,GAAA,gDAAA50D,GACA,OAAAA,EAAA67C,SAAAz5D,EAAAhR,UAGAwxH,IACA7qI,KAAAwmH,eACAxmH,KAAAymH,iBAEAzmH,KAAA0mH,uBAcAvd,EAAAnnG,UAAAu7H,eAAA,WACAv9H,KAAAm5H,YAAAn5H,KAAAm5H,eAWAhwB,EAAAnnG,UAAAo7H,sBAAA,WACAp9H,KAAAw+H,cAAAx+H,KAAAm5H,cAWAhwB,EAAAnnG,UAAAq7H,qBAAA,WACAr9H,KAAAw+H,eACAx+H,KAAAioG,sBAgBAkB,EAAAnnG,UAAAs7H,oBAAA,SAAAjzG,GAEAA,EAAA2zE,kBAWAmL,EAAAnnG,UAAAq3H,wBAAA,WACAr5H,KAAAwmH,eACAxmH,KAAAi6F,SAAA,kBAEAj6F,KAAAm6F,YAAA,mBAaAgP,EAAAnnG,UAAAs3H,kBAAA,WACAt5H,KAAAioG,sBAkBAkB,EAAAnnG,UAAAy6H,4BAAA,SAAApyG,EAAAxa,GACAA,GACA7P,KAAAwmH,aAAA32G,EAAA22G,cAQAxmH,KAAA2W,QAAA,qBAWAwyF,EAAAnnG,UAAA06H,iBAAA,WACA,IAAA/kG,EAAA33B,KAAA+mB,MAAA4Q,QAEA33B,KAAA23B,UAYAwxE,EAAAnnG,UAAA46H,oBAAA,WACA,IAAA/sH,EAAA,KAEAvN,UAAAC,OAAA,IACAsN,EAAAvN,UAAA,IASAtC,KAAA2W,QAAA,WAAA9G,IAWAs5F,EAAAnnG,UAAA2gH,SAAA,WACA,OAAA3iH,KAAA+7G,QAgBA5S,EAAAnnG,UAAAw7H,UAAA,SAAAv7G,EAAAkkE,GAGAnmF,KAAAwlB,MAAA,WACA,GAAAvD,KAAAu4F,GACA,OAAAP,GAAAj6G,KAAAg5H,YAAAh5H,KAAA+mB,MAAA9E,EAAAkkE,GACO,GAAAlkE,KAAAw4F,GACP,OAAAP,GAAAl6G,KAAAg5H,YAAAh5H,KAAA+mB,MAAA9E,EAAAkkE,GAGA,IACAnmF,KAAA+mB,OACA/mB,KAAA+mB,MAAA9E,GAAAkkE,GAEO,MAAAn+E,GAEP,MADAuwF,EAAAvwF,GACAA,KAEK,IAgBLmhG,EAAAnnG,UAAA+6H,SAAA,SAAA96G,GACA,GAAAjiB,KAAA+mB,OAAA/mB,KAAA+mB,MAAAg/E,SAAA,CAIA,GAAA9jF,KAAAs4F,GACA,OAAAT,GAAA95G,KAAAg5H,YAAAh5H,KAAA+mB,MAAA9E,GACK,GAAAA,KAAAw4F,GACL,OAAAP,GAAAl6G,KAAAg5H,YAAAh5H,KAAA+mB,MAAA9E,GAMA,IACA,OAAAjiB,KAAA+mB,MAAA9E,KACK,MAAAja,GAGL,QAAAiF,IAAAjN,KAAA+mB,MAAA9E,GAEA,MADAs2E,EAAA,aAAAt2E,EAAA,2BAAAjiB,KAAAs7H,UAAA,wBAAAtzH,GACAA,EAIA,iBAAAA,EAAArH,KAGA,MAFA43F,EAAA,aAAAt2E,EAAA,mBAAAjiB,KAAAs7H,UAAA,gCAAAtzH,GACAhI,KAAA+mB,MAAAg/E,UAAA,EACA/9F,EAKA,MADAuwF,EAAAvwF,GACAA,KAcAmhG,EAAAnnG,UAAA43B,KAAA,WACA,IAAA+9E,EAAA33G,KAWA,GAPAA,KAAAy5H,kBACAz5H,KAAAqe,IAAA,YAAAre,KAAAy5H,kBAMAz5H,KAAA+lG,SAcK,KAAA/lG,KAAAu5H,eAAAv5H,KAAAqmB,OAAArmB,KAAAkzH,cACL,OAAAlzH,KAAA+8H,SAAA,QAUA/8H,KAAAy5H,iBAAA,WACA9hB,EAAA8hB,iBAAA,KACAhvB,GAAAkN,EAAA/9E,SAGA55B,KAAA03B,IAAA,YAAA13B,KAAAy5H,sBA9BA,CAGA,GAAAz5H,KAAAw5H,qBACA,OAGAx5H,KAAAw5H,sBAAA,EACAx5H,KAAAwlB,MAAA,WACAmyF,EAAA6hB,sBAAA,EACA/uB,GAAAkN,EAAA/9E,YAgCAuvE,EAAAnnG,UAAA61B,MAAA,WACA73B,KAAAw9H,UAAA,UAYAr0B,EAAAnnG,UAAAs1B,OAAA,WAEA,WAAAt3B,KAAA+8H,SAAA,WAaA5zB,EAAAnnG,UAAA+0G,OAAA,WACA,OAAA/2G,KAAA+8H,SAAA,WAAAvoG,GAAA,MAgBA20E,EAAAnnG,UAAA0gH,UAAA,SAAAmc,GACA,wBAAAA,EACA,OAAA7+H,KAAA24H,WAEA34H,KAAA24H,aAAAkG,EAEAA,EACA7+H,KAAAi6F,SAAA,iBAEAj6F,KAAAm6F,YAAA,kBAeAgP,EAAAnnG,UAAAizB,YAAA,SAAA05C,GACA,2BAAAA,GACAA,EAAA,IACAA,EAAA,QAEA3uE,KAAAw9H,UAAA,iBAAA7uD,KAUA3uE,KAAA+7G,OAAA9mF,YAAAj1B,KAAA+8H,SAAA,kBACA/8H,KAAA+7G,OAAA9mF,cAqBAk0E,EAAAnnG,UAAA6f,SAAA,SAAA8sD,GACA,QAAA1hE,IAAA0hE,EAEA,YAAA1hE,IAAAjN,KAAA+7G,OAAAl6F,SAAA7hB,KAAA+7G,OAAAl6F,SAAAgsB,IAGA8gC,EAAAjoE,WAAAioE,GAGAA,EAAA,IACAA,EAAAh2D,KAGAg2D,IAAA3uE,KAAA+7G,OAAAl6F,WAEA7hB,KAAA+7G,OAAAl6F,SAAA8sD,EAEAA,IAAAh2D,IACA3Y,KAAAi6F,SAAA,YAEAj6F,KAAAm6F,YAAA,YAMAn6F,KAAA2W,QAAA,oBAaAwyF,EAAAnnG,UAAAghH,cAAA,WACA,OAAAhjH,KAAA6hB,WAAA7hB,KAAAi1B,eAYAk0E,EAAAnnG,UAAA+gH,qBAAA,WACA,OAAAj2G,KAAAuzB,MAAArgC,KAAA6hB,YAAA/U,KAAAuzB,MAAArgC,KAAAi1B,gBAkBAk0E,EAAAnnG,UAAA02B,SAAA,WACA,IAAAA,EAAA14B,KAAA+8H,SAAA,YAMA,OAJArkG,KAAAn2B,SACAm2B,EAAAlE,GAAA,MAGAkE,GAaAywE,EAAAnnG,UAAA8nG,gBAAA,WACA,OAAAA,GAAA9pG,KAAA04B,WAAA14B,KAAA6hB,aAYAsnF,EAAAnnG,UAAAq4B,YAAA,WACA,IAAA3B,EAAA14B,KAAA04B,WACA7W,EAAA7hB,KAAA6hB,WACAlc,EAAA+yB,EAAA/yB,IAAA+yB,EAAAn2B,OAAA,GAMA,OAJAoD,EAAAkc,IACAlc,EAAAkc,GAGAlc,GAiBAwjG,EAAAnnG,UAAAilH,OAAA,SAAA6X,GACA,IAAAjX,OAAA,EAEA,YAAA56G,IAAA6xH,GAEAjX,EAAA/6G,KAAAC,IAAA,EAAAD,KAAAuC,IAAA,EAAA3I,WAAAo4H,KACA9+H,KAAA+7G,OAAAkL,OAAAY,EACA7nH,KAAAw9H,UAAA,YAAA3V,QAEAA,EAAA,GACA7nH,KAAAsnH,YAAAO,MAOAA,EAAAnhH,WAAA1G,KAAA+8H,SAAA,WACAjtF,MAAA+3E,GAAA,EAAAA,IAgBA1e,EAAAnnG,UAAAklH,MAAA,SAAA6X,GACA,QAAA9xH,IAAA8xH,EAIA,OAAA/+H,KAAA+8H,SAAA,aAHA/8H,KAAAw9H,UAAA,WAAAuB,IAkCA51B,EAAAnnG,UAAAg9H,aAAA,SAAAC,GACA,YAAAhyH,IAAAgyH,EACAj/H,KAAAw9H,UAAA,kBAAAyB,GAEAj/H,KAAA+8H,SAAA,qBAmBA5zB,EAAAnnG,UAAAslH,YAAA,SAAAwX,GACA,QAAA7xH,IAAA6xH,GAAA,IAAAA,EAIA,OAAA9+H,KAAA+7G,OAAA+L,WAHA9nH,KAAA+7G,OAAA+L,WAAAgX,GAeA31B,EAAAnnG,UAAA8zH,mBAAA,WACA,OAAA91H,KAAA+8H,SAAA,2BAoBA5zB,EAAAnnG,UAAAwkH,aAAA,SAAA0Y,GACA,QAAAjyH,IAAAiyH,EAIA,QAAAl/H,KAAAm/H,cAHAn/H,KAAAm/H,gBAAAD,GAmBA/1B,EAAAnnG,UAAA0kH,kBAAA,WACA,IAAA0Y,EAAAp1B,GAEAhqG,KAAAwmH,cAAA,GAEA4Y,EAAA1Y,mBASAvoG,GAASgrH,EAAA5iI,EAAQ64H,EAAAC,iBAAAz9H,GAAA5B,KAAA,SAAAs/H,EAAAt3H,GACjBhI,KAAAwmH,aAA0B2iB,EAAA5iI,EAAQ64H,EAAA17C,qBAGlC,IAAA1jF,KAAAwmH,gBACAnoG,GAAc8qH,EAAA5iI,EAAQ64H,EAAAC,iBAAAC,GAMtBt/H,KAAA2W,QAAA,uBAGA3W,KAAAy6E,IAAA2kD,EAAA1Y,sBACK1mH,KAAA+mB,MAAA+uG,qBAGL91H,KAAAw9H,UAAA,oBAIAx9H,KAAAu/H,kBAKAv/H,KAAA2W,QAAA,sBAWAwyF,EAAAnnG,UAAAykH,eAAA,WACA,IAAA2Y,EAAAp1B,GAEAhqG,KAAAwmH,cAAA,GAGA4Y,EAAA1Y,kBACMyiB,EAAA5iI,EAAQ64H,EAAA3Y,kBACTzmH,KAAA+mB,MAAA+uG,qBACL91H,KAAAw9H,UAAA,mBAEAx9H,KAAAw/H,iBAKAx/H,KAAA2W,QAAA,sBAYAwyF,EAAAnnG,UAAAu9H,gBAAA,WACAv/H,KAAAy/H,cAAA,EAGAz/H,KAAA0/H,gBAA2ByJ,EAAA5iI,EAAQ8tF,gBAAAzlF,MAAA+wH,SAGnCxhH,GAAOgrH,EAAA5iI,EAAQ,UAAA3E,GAAA5B,UAAA4/H,qBAGXuJ,EAAA5iI,EAAQ8tF,gBAAAzlF,MAAA+wH,SAAA,SAGZ1lC,GAAakvC,EAAA5iI,EAAQy0F,KAAA,mBAMrBh7F,KAAA2W,QAAA,oBAYAwyF,EAAAnnG,UAAA49H,mBAAA,SAAAv1G,GACA,KAAAA,EAAA00E,WACA,IAAA/+F,KAAAwmH,eACAxmH,KAAAymH,iBAEAzmH,KAAAw/H,mBAYAr2B,EAAAnnG,UAAAw9H,eAAA,WACAx/H,KAAAy/H,cAAA,EACAphH,GAAQ8qH,EAAA5iI,EAAQ,UAAAvG,KAAA4/H,oBAGZuJ,EAAA5iI,EAAQ8tF,gBAAAzlF,MAAA+wH,SAAA3/H,KAAA0/H,gBAGZvlC,GAAgBgvC,EAAA5iI,EAAQy0F,KAAA,mBAQxBh7F,KAAA2W,QAAA,mBAgBAwyF,EAAAnnG,UAAA4gF,YAAA,SAAAr6E,GAIA,IAHA,IAAAwwG,OAAA,EAGA34G,EAAA,EAAA+sB,EAAAntB,KAAAijF,SAAAq5B,UAAgDl8G,EAAA+sB,EAAA5qB,OAAcnC,IAAA,CAC9D,IAAAm8G,EAAApvF,EAAA/sB,GACA+yB,EAAAuyE,GAAAvpB,QAAAogC,GASA,GALAppF,IACAA,EAAA0vD,GAAAC,aAAAy5B,IAIAppF,GAMA,GAAAA,EAAAsvD,gBACAs2B,EAAA5lF,EAAAyvD,YAAAr6E,GAEAwwG,GACA,OAAAA,OATAxgB,EAAA5gE,MAAA,QAAA4kF,EAAA,qEAcA,UAgBApT,EAAAnnG,UAAA69H,aAAA,SAAA15G,GACA,IAAAy4G,EAAA5+H,KAIA+/H,EAAA//H,KAAAijF,SAAAq5B,UAAAlkG,IAAA,SAAAmkG,GACA,OAAAA,EAAA7W,GAAAvpB,QAAAogC,MACK7qF,OAAA,SAAA8a,GACL,IAAA+vE,EAAA/vE,EAAA,GACArZ,EAAAqZ,EAAA,GAGA,OAAArZ,EAEAA,EAAAsvD,eAGA8V,EAAA5gE,MAAA,QAAA4kF,EAAA,sEACA,KAMAyjB,EAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAtL,OAAA,EAYA,OAVAoL,EAAAxxF,KAAA,SAAA2xF,GACA,OAAAF,EAAAzxF,KAAA,SAAA4xF,GAGA,GAFAxL,EAAAsL,EAAAC,EAAAC,GAEAxL,EACA,aAKAA,GAGAyL,OAAA,EACAC,EAAA,SAAAhhD,GACA,gBAAAh5E,EAAAY,GACA,OAAAo4E,EAAAp4E,EAAAZ,KAGAi6H,EAAA,SAAAvyF,EAAAlvB,GACA,IAAAw9F,EAAAtuE,EAAA,GACA9a,EAAA8a,EAAA,GAEA,GAAA9a,EAAAovD,cAAAxjE,EAAA6/G,EAAA37C,SAAAs5B,EAAA1oG,gBACA,OAAgBkL,SAAAoU,KAAAopF,IAchB,OANA+jB,EAFAtgI,KAAAijF,SAAAw9C,YAEAT,EAAA75G,EAAA45G,EAAAQ,EAAAC,IAGAR,EAAAD,EAAA55G,EAAAq6G,GAGAF,IAAA,GAoBAn3B,EAAAnnG,UAAAqkB,IAAA,SAAAtH,GACA,IAAA+gH,EAAA9/H,KAGA,wBAAA+e,EACA,OAAA/e,KAAA+7G,OAAA11F,KAAA,GAIA,IAAAF,EAAA81F,GAAAl9F,GAKAoH,EAAA5jB,QAQAvC,KAAAu5H,cAAA,EAEAv5H,KAAA+7G,OAAA51F,UACAnmB,KAAA69H,oBAAA13G,EAAA,IAGAyqB,GAAA5wC,KAAAmmB,EAAA,YAAAw6G,EAAAjmB,GACAolB,EAAA9G,YAAAte,EAIAolB,EAAA/jB,OAAA51F,UACA25G,EAAAjC,oBAAA8C,GAEA,IAAA/2G,EAAAk2G,EAAAc,KAAAD,GAEA,GAAA/2G,EACA,OAAAzD,EAAA5jB,OAAA,EACAu9H,EAAAz5G,IAAAF,EAAA9O,MAAA,KAGAyoH,EAAAvG,cAAA,EAGAuG,EAAA77F,WAAA,WACAjkC,KAAA23B,OAAsB/0B,KAAA,EAAAD,QAAA3C,KAAAkkG,SAAAlkG,KAAAijF,SAAA49C,wBACb,QAITf,EAAA75B,gBAKA2T,GAAAc,EAAAolB,EAAA/4G,UA1CA/mB,KAAAikC,WAAA,WACAjkC,KAAA23B,OAAoB/0B,KAAA,EAAAD,QAAA3C,KAAAkkG,SAAAlkG,KAAAijF,SAAA49C,wBACb,IA2DP13B,EAAAnnG,UAAA4+H,KAAA,SAAA7hH,GACA,IAAA2hH,EAAA1gI,KAEA+gI,EAAA/gI,KAAA6/H,cAAA9gH,IAEA,OAAAgiH,IAIAv9B,GAAAu9B,EAAA5tG,KAAAnzB,KAAAs7H,YAYAt7H,KAAAwlB,MAAA,WAMAxlB,KAAA+mB,MAAA7gB,YAAAlE,UAAAC,eAAA,aACAjC,KAAAw9H,UAAA,YAAAz+G,GAEA/e,KAAAw9H,UAAA,MAAAz+G,EAAAsH,KAGArmB,KAAAu5H,cAAA,IACK,IAEL,IA1BAv5H,KAAAu5H,cAAA,EAEAv5H,KAAAw8G,UAAAukB,EAAA5tG,KAAA4tG,EAAAhiH,QACA/e,KAAA+mB,MAAAvB,MAAA,WACAk7G,EAAAnH,cAAA,KAEA,KA4BApwB,EAAAnnG,UAAA+zB,KAAA,WACA/1B,KAAAw9H,UAAA,SASAr0B,EAAAnnG,UAAAk1C,MAAA,WACAl3C,KAAAw8G,UAAAx8G,KAAAijF,SAAAq5B,UAAA,SACAt8G,KAAAw9H,UAAA,UAWAr0B,EAAAnnG,UAAAg/H,eAAA,WACA,IAAAjiH,EAAA/e,KAAAihI,gBACA96G,KAOA,OAJA,IAAArlB,OAAAyrB,KAAAxN,GAAAxc,QACA4jB,EAAA9c,KAAA0V,GAGA/e,KAAA+7G,OAAA51F,YAWAgjF,EAAAnnG,UAAAi/H,cAAA,WACA,OAAAjhI,KAAA+7G,OAAAh9F,YAYAoqF,EAAAnnG,UAAAkxH,WAAA,WACA,OAAAlzH,KAAAihI,iBAAAjhI,KAAAihI,gBAAA56G,KAAA,IAaA8iF,EAAAnnG,UAAAk/H,YAAA,WACA,OAAAlhI,KAAAihI,iBAAAjhI,KAAAihI,gBAAA14H,MAAA,IAeA4gG,EAAAnnG,UAAAm0B,QAAA,SAAA90B,GACA,YAAA4L,IAAA5L,GACArB,KAAAw9H,UAAA,aAAAn8H,QACArB,KAAAijF,SAAA9sD,QAAA90B,IAGArB,KAAA+8H,SAAA,YAqBA5zB,EAAAnnG,UAAA03B,SAAA,SAAAr4B,GAEA,QAAA4L,IAAA5L,EACA,OAAArB,KAAAijF,SAAAvpD,WAAA,EAGA,IAAAynG,OAAA,EAGA,kBAAA9/H,GAAA,mBAAAmF,KAAAnF,IACArB,KAAAijF,SAAAvpD,SAAAr4B,EACArB,KAAA09H,gBAAAr8H,GACA8/H,GAAA,GASAnhI,KAAAijF,SAAAvpD,WALKr4B,EAQL8/H,KAAAnhI,KAAAijF,SAAAvpD,SAMA15B,KAAA+mB,OACA/mB,KAAAw9H,UAAA,cAAA2D,IAsBAh4B,EAAAnnG,UAAAi2G,YAAA,SAAA52G,GACA,YAAA4L,IAAA5L,GACArB,KAAAw9H,UAAA,iBAAAn8H,GACArB,KAAAijF,SAAAg1B,YAAA52G,EACArB,MAEAA,KAAA+8H,SAAA,gBAeA5zB,EAAAnnG,UAAAw5H,KAAA,SAAAn6H,GACA,YAAA4L,IAAA5L,GACArB,KAAAw9H,UAAA,UAAAn8H,QACArB,KAAAijF,SAAAu4C,KAAAn6H,IAGArB,KAAA+8H,SAAA,SAgBA5zB,EAAAnnG,UAAA4kB,OAAA,SAAAP,GACA,QAAApZ,IAAAoZ,EACA,OAAArmB,KAAAy4H,QAKApyG,IACAA,EAAA,IAGAA,IAAArmB,KAAAy4H,UAKAz4H,KAAAy4H,QAAApyG,EAGArmB,KAAAw9H,UAAA,YAAAn3G,GAEArmB,KAAAm4H,mBAAA,EASAn4H,KAAA2W,QAAA,kBAiBAwyF,EAAAnnG,UAAA26H,wBAAA,WACA,KAAA38H,KAAAy4H,SAAAz4H,KAAAijF,SAAA04C,wBAAA37H,KAAA+mB,OAAA/mB,KAAA+mB,MAAAH,OAAA,CACA,IAAAw6G,EAAAphI,KAAA+mB,MAAAH,UAAA,GAEAw6G,IAAAphI,KAAAy4H,UACAz4H,KAAAy4H,QAAA2I,EACAphI,KAAAm4H,mBAAA,EAGAn4H,KAAA2W,QAAA,mBAmBAwyF,EAAAnnG,UAAAuqG,SAAA,SAAA2X,GACA,QAAAj3G,IAAAi3G,EACA,QAAAlkH,KAAA04H,UAGAxU,MAGAlkH,KAAA04H,YAAAxU,IAIAlkH,KAAA04H,UAAAxU,EAEAlkH,KAAA88H,uBACA98H,KAAAw9H,UAAA,cAAAtZ,GAGAlkH,KAAA04H,WACA14H,KAAAm6F,YAAA,yBACAn6F,KAAAi6F,SAAA,wBAKAj6F,KAAA2W,QAAA,mBACA3W,KAAA88H,uBACA98H,KAAAg9H,8BAGAh9H,KAAAm6F,YAAA,wBACAn6F,KAAAi6F,SAAA,yBAKAj6F,KAAA2W,QAAA,oBACA3W,KAAA88H,uBACA98H,KAAAk9H,kCAwBA/zB,EAAAnnG,UAAA86H,oBAAA,SAAA5Y,GACA,QAAAj3G,IAAAi3G,EACA,QAAAlkH,KAAAqhI,qBAGAnd,MAGAlkH,KAAAqhI,uBAAAnd,IAIAlkH,KAAAqhI,qBAAAnd,EAEAlkH,KAAAqhI,sBACArhI,KAAAi6F,SAAA,6BAQAj6F,KAAA2W,QAAA,yBAEA3W,KAAAm6F,YAAA,6BAQAn6F,KAAA2W,QAAA,0BAkBAwyF,EAAAnnG,UAAA21B,MAAA,SAAA/N,GACA,YAAA3c,IAAA2c,EACA5pB,KAAA20C,QAAA,KAIA,OAAA/qB,GACA5pB,KAAA20C,OAAA/qB,EACA5pB,KAAAm6F,YAAA,kBACAn6F,KAAAshI,cACAthI,KAAAshI,aAAAr1B,WAKAjsG,KAAA20C,OAAA,IAAAy1D,GAAAxgF,GAGA5pB,KAAAi6F,SAAA,aAIA1B,EAAA5gE,MAAA,SAAA33B,KAAA20C,OAAA/xC,KAAA,IAAAwnG,GAAAE,WAAAtqG,KAAA20C,OAAA/xC,MAAA,IAAA5C,KAAA20C,OAAAhyC,QAAA3C,KAAA20C,aAMA30C,KAAA2W,QAAA,WAaAwyF,EAAAnnG,UAAAimG,mBAAA,SAAA59E,GACArqB,KAAAuhI,eAAA,GAkBAp4B,EAAAnnG,UAAAm3H,WAAA,SAAAjV,GACA,QAAAj3G,IAAAi3G,EACA,OAAAlkH,KAAAq4H,YAKA,GAFAnU,MAEAA,IAAAlkH,KAAAq4H,YAAA,CAMA,GAFAr4H,KAAAq4H,YAAAnU,EAEAlkH,KAAAq4H,YASA,OARAr4H,KAAAuhI,eAAA,EACAvhI,KAAAm6F,YAAA,qBACAn6F,KAAAi6F,SAAA,wBAKAj6F,KAAA2W,QAAA,cAYA3W,KAAA+mB,OACA/mB,KAAA+mB,MAAA2Q,IAAA,qBAAA1vB,GACAA,EAAAu2F,kBACAv2F,EAAAg2F,mBAIAh+F,KAAAuhI,eAAA,EACAvhI,KAAAm6F,YAAA,mBACAn6F,KAAAi6F,SAAA,qBAKAj6F,KAAA2W,QAAA,kBAUAwyF,EAAAnnG,UAAAo3H,uBAAA,WACA,IAAAoI,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,EAAA//H,GAAA5B,UAAAioG,oBAEAsb,EAAA,SAAAv7G,GAGAA,EAAA45H,UAAAH,GAAAz5H,EAAA65H,UAAAH,IACAD,EAAAz5H,EAAA45H,QACAF,EAAA15H,EAAA65H,QACAF,MAIAjhB,EAAA,WACAihB,IAIA3hI,KAAAooG,cAAAo5B,GAIAA,EAAAxhI,KAAAqoG,YAAAs5B,EAAA,MAGAne,EAAA,SAAAn5F,GACAs3G,IAEA3hI,KAAAooG,cAAAo5B,IAIAxhI,KAAAme,GAAA,YAAAuiG,GACA1gH,KAAAme,GAAA,YAAAolG,GACAvjH,KAAAme,GAAA,UAAAqlG,GAIAxjH,KAAAme,GAAA,UAAAwjH,GACA3hI,KAAAme,GAAA,QAAAwjH,GAOA,IAAAG,OAAA,EAEA9hI,KAAAqoG,YAAA,WAEA,GAAAroG,KAAAuhI,cAAA,CAKAvhI,KAAAuhI,eAAA,EAGAvhI,KAAAm5H,YAAA,GAGAn5H,KAAA+jC,aAAA+9F,GAEA,IAAA9tG,EAAAh0B,KAAAijF,SAAA6+C,kBAEA9tG,GAAA,IAMA8tG,EAAA9hI,KAAAikC,WAAA,WAIAjkC,KAAAuhI,eACAvhI,KAAAm5H,YAAA,IAEOnlG,MACF,MAkBLm1E,EAAAnnG,UAAAguC,aAAA,SAAAjU,GACA,QAAA9uB,IAAA8uB,EAOA,OAAA/7B,KAAA+mB,OAAA/mB,KAAA+mB,MAAA0xF,qBACAz4G,KAAA+7G,OAAA6c,kBAAA54H,KAAA+8H,SAAA,gBAEA,EAPA/8H,KAAAw9H,UAAA,kBAAAzhG,IA2BAotE,EAAAnnG,UAAA62H,oBAAA,SAAA98F,GACA,YAAA9uB,IAAA8uB,EACA/7B,KAAAw9H,UAAA,yBAAAzhG,GAGA/7B,KAAA+mB,OAAA/mB,KAAA+mB,MAAA0xF,qBACAz4G,KAAA+8H,SAAA,uBAEA,GAeA5zB,EAAAnnG,UAAAo+G,QAAA,SAAA8D,GACA,QAAAj3G,IAAAi3G,EAKA,QAAAlkH,KAAA+hI,SAJA/hI,KAAA+hI,WAAA7d,GA8BA/a,EAAAnnG,UAAA6xB,aAAA,SAAAgB,EAAAC,EAAAxR,GACA,GAAAtjB,KAAA+mB,MACA,OAAA/mB,KAAA+mB,MAAA8M,aAAAgB,EAAAC,EAAAxR,IAyBA6lF,EAAAnnG,UAAA4yB,mBAAA,SAAAtP,EAAAsyF,GACA,GAAA53G,KAAA+mB,MACA,OAAA/mB,KAAA+mB,MAAA6N,mBAAAtP,EAAAsyF,IAgBAzO,EAAAnnG,UAAA60G,sBAAA,WACA,IAAAxuB,EAAA/lF,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACA0/H,EAAA35C,EAAAh+E,MACAA,OAAA4C,IAAA+0H,EAAA1/H,UAAA,GAAA0/H,EAKA,GAAAhiI,KAAA+mB,MACA,OAAA/mB,KAAA+mB,MAAA8vF,sBAAAxsG,IAgBA8+F,EAAAnnG,UAAA+1G,wBAAA,WACA,OAAA/3G,KAAA+8H,SAAA,4BAWA5zB,EAAAnnG,UAAA24H,WAAA,WACA,OAAA36H,KAAA+mB,OAAA/mB,KAAA+mB,MAAA4zG,YAAA36H,KAAA+mB,MAAA4zG,cAAA,GAWAxxB,EAAAnnG,UAAA44H,YAAA,WACA,OAAA56H,KAAA+mB,OAAA/mB,KAAA+mB,MAAA6zG,aAAA56H,KAAA+mB,MAAA6zG,eAAA,GAiBAzxB,EAAAnnG,UAAAshB,SAAA,SAAA1gB,GACA,QAAAqK,IAAArK,EACA,OAAA5C,KAAA+sH,UAGA/sH,KAAA+sH,UAAAx1G,OAAA3U,GAAAiR,eAaAs1F,EAAAnnG,UAAAqiG,UAAA,WACA,OAAA3uE,GAAAyzE,EAAAnnG,UAAAihF,SAAAohB,UAAArkG,KAAAw4H,aAYArvB,EAAAnnG,UAAAigI,OAAA,WACA,IAAA38G,EAAAoQ,GAAA11B,KAAAijF,UACAllD,EAAAzY,EAAAyY,OAEAzY,EAAAyY,UAEA,QAAA39B,EAAA,EAAmBA,EAAA29B,EAAAx7B,OAAmBnC,IAAA,CACtC,IAAAiK,EAAA0zB,EAAA39B,GAGAiK,EAAAqrB,GAAArrB,GACAA,EAAAyc,YAAA7Z,EACAqY,EAAAyY,OAAA39B,GAAAiK,EAGA,OAAAib,GAqBA6jF,EAAAnnG,UAAAkgI,YAAA,SAAAjkE,EAAA34C,GACA,IAAAw7G,EAAA9gI,KAEAslB,QACAA,EAAA24C,WAAA,GAEA,IAAAmkE,EAAA,IAAAh3B,GAAAprG,KAAAslB,GAQA,OANAtlB,KAAA8kG,SAAAs9B,GACAA,EAAAjkH,GAAA,qBACA2iH,EAAArwH,YAAA2xH,KAGAA,EAAApmD,OACAomD,GAeAj5B,EAAA8uB,eAAA,SAAA72G,GACA,IAAAihH,GACAl8G,WACA4X,WAGAukG,EAAA5nC,GAAAt5E,GACAmhH,EAAAD,EAAA,cAOA,GALAxoC,GAAA14E,EAAA,eACAkhH,EAAAvI,OAAA,GAIA,OAAAwI,EAAA,CAGA,IAAAC,EAA4BmH,IAAcpH,GAAA,MAC1C34G,EAAA44G,EAAA,GACA3yH,EAAA2yH,EAAA,GAEA54G,GACA2uE,EAAA5gE,MAAA/N,GAEA9K,EAAAwjH,EAAAzyH,GAMA,GAHAiP,EAAAujH,EAAAC,GAGAlhH,EAAAsyG,gBAGA,IAFA,IAAA/uB,EAAAvjF,EAAAtX,WAEA1J,EAAA,EAAA+sB,EAAAw3E,EAAApiG,OAA0CnC,EAAA+sB,EAAO/sB,IAAA,CACjD,IAAAw5F,EAAA+K,EAAAvkG,GAEAqiI,EAAA7oC,EAAAkI,SAAAjuF,cAEA,WAAA4uH,EACAJ,EAAAl8G,QAAA9c,KAAAqxF,GAAAd,IACS,UAAA6oC,GACTJ,EAAAtkG,OAAA10B,KAAAqxF,GAAAd,IAKA,OAAAyoC,GAYAl5B,EAAAnnG,UAAAi3H,kBAAA,WACA,IAAA9jE,EAAeg0E,EAAA5iI,EAAQ+B,cAAA,KAIvB,sBAAA6sD,EAAAvmD,OAAA,oBAAAumD,EAAAvmD,OAAA,iBAAAumD,EAAAvmD,OAAA,gBAAAumD,EAAAvmD,OAEA,gBAAAumD,EAAAvmD,QAGAu6F,EA1jHA,CA2jHCtmB,IAmDDkyB,GAAAE,MAAAzoF,QAAA,SAAA+rG,GACA,IAAAj/G,EAAAy7F,GAAAwjB,GAEApvB,GAAAnnG,UAAAsX,EAAAo7F,YAAA,WACA,OAAA10G,KAAA+mB,MACA/mB,KAAA+mB,MAAAzN,EAAAo7F,eAKA10G,KAAAsZ,EAAAq7F,aAAA30G,KAAAsZ,EAAAq7F,cAAA,IAAAr7F,EAAAi7F,UACAv0G,KAAAsZ,EAAAq7F,iBASAxL,GAAAhlB,WAEA,IAAAr5E,GAAgBm+H,EAAA1iI,EAAQuE,UAUxBq+F,GAAAnnG,UAAAihF,UAEAq5B,UAAA5W,GAAA2S,kBAEA1xF,SACAF,SAGAq7G,kBAAA,IAGAtU,iBAKA7oB,UAAA,iJAEArhF,SAAAxY,QAAAu5F,WAAAv5F,GAAAu5F,UAAA,IAAAv5F,GAAA43H,cAAA53H,GAAAwY,WAAA,KAGA+gF,aAGAw8B,oBAAA,mDAUA,QAOA,UAQA,WAqBA,eAwBA,cAAAr0G,QAAA,SAAA+yD,GACA4pB,GAAAnnG,UAAAu9E,GAAA,WACA,OAAAv/E,KAAA+8H,SAAAx9C,MAIAo4C,GAAAnrG,QAAA,SAAAnC,GACA8+E,GAAAnnG,UAAA,aAAAshG,GAAAj5E,GAAA,gBACA,OAAArqB,KAAA2W,QAAA0T,MA8DAw4D,GAAA2C,kBAAA,SAAA2jB,IAaA,IAAAw5B,GAAA,SASAC,GAAA,iBAQAC,MAYAC,GAAA,SAAAniI,GACA,OAAAkiI,GAAA5gI,eAAAtB,IAaAoiI,GAAA,SAAApiI,GACA,OAAAmiI,GAAAniI,GAAAkiI,GAAAliI,QAAAsM,GAeA+1H,GAAA,SAAAl8G,EAAAnmB,GACAmmB,EAAA87G,IAAA97G,EAAA87G,QACA97G,EAAA87G,IAAAjiI,IAAA,GAiBAsiI,GAAA,SAAAn8G,EAAAq4E,EAAA+jC,GACA,IAAA7oD,GAAA6oD,EAAA,2BAEAp8G,EAAAnQ,QAAA0jE,EAAA8kB,GACAr4E,EAAAnQ,QAAA0jE,EAAA,IAAA8kB,EAAAx+F,KAAAw+F,IAiBAgkC,GAAA,SAAAxiI,EAAAglF,GACA,IAAAy9C,EAAA,WAQAH,GAAAjjI,MAA6BW,OAAAglF,SAAA3rE,SAAA,OAA6C,GAE1E,IAAAA,EAAA2rE,EAAAxtE,MAAAnY,KAAAsC,WAKA,OAHA0gI,GAAAhjI,KAAAW,GACAsiI,GAAAjjI,MAA6BW,OAAAglF,SAAA3rE,aAE7BA,GAOA,OAJAlZ,OAAAyrB,KAAAo5D,GAAAn5D,QAAA,SAAA7d,GACAy0H,EAAAz0H,GAAAg3E,EAAAh3E,KAGAy0H,GAmBAC,GAAA,SAAA1iI,EAAA2iI,GAMA,OAFAA,EAAAthI,UAAArB,OAEA,WACAsiI,GAAAjjI,MAA6BW,OAAAglF,OAAA29C,EAAAtpH,SAAA,OAAqD,GAElF,QAAA0vE,EAAApnF,UAAAC,OAAAic,EAAAzD,MAAA2uE,GAAArpE,EAAA,EAAmEA,EAAAqpE,EAAarpE,IAChF7B,EAAA6B,GAAA/d,UAAA+d,GAGA,IAAArG,EAAA,IAAA3E,SAAArT,UAAAJ,KAAAuW,MAAAmrH,GAAA,MAAAhsH,QAAAtX,MAAAsX,OAAAkH,MASA,OANAxe,KAAAW,GAAA,WACA,OAAAqZ,GAGAipH,GAAAjjI,KAAAga,EAAAupH,gBAEAvpH,IAmBAwpH,GAAA,WAUA,SAAAA,EAAA18G,GAGA,GAFAgwE,EAAA92F,KAAAwjI,GAEAxjI,KAAAkG,cAAAs9H,EACA,UAAAhhI,MAAA,0DAGAxC,KAAA8mB,SAIA87E,GAAA5iG,aACAA,KAAA2W,QAEAwsF,GAAAnjG,UAAAkG,YAAAk9F,cACA4/B,GAAAl8G,EAAA9mB,KAAAW,MAIAX,KAAAye,QAAA7c,GAAA5B,UAAAye,SAGAqI,EAAA3I,GAAA,UAAAne,KAAAye,SA+OA,OAvOA+kH,EAAAxhI,UAAA6V,QAAA,WACA,OAAA7X,KAAAkG,YAAAu9H,SAiBAD,EAAAxhI,UAAAuhI,aAAA,WACA,IAAApkC,EAAA78F,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAKA,OAHA68F,EAAAx+F,KAAAX,KAAAW,KACAw+F,EAAAxZ,OAAA3lF,KAAAkG,YACAi5F,EAAAnlF,SAAAha,KACAm/F,GAmBAqkC,EAAAxhI,UAAA2U,QAAA,SAAA0T,GACA,IAAA80E,EAAA78F,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAEA,OAAAqU,GAAA3W,KAAA2hG,YAAAt3E,EAAArqB,KAAAujI,aAAApkC,KAiBAqkC,EAAAxhI,UAAAqhG,mBAAA,SAAAr7F,KAYAw7H,EAAAxhI,UAAAyc,QAAA,WACA,IAAA9d,EAAAX,KAAAW,KACAmmB,EAAA9mB,KAAA8mB,OASA9mB,KAAA2W,QAAA,WACA3W,KAAAqe,MACAyI,EAAAzI,IAAA,UAAAre,KAAAye,SAKAqI,EAAA87G,IAAAjiI,IAAA,EACAX,KAAA8mB,OAAA9mB,KAAAmR,MAAA,KAIA2V,EAAAnmB,GAAA0iI,GAAA1iI,EAAAkiI,GAAAliI,KAeA6iI,EAAAE,QAAA,SAAA/9C,GACA,IAAAzjF,EAAA,kBAAAyjF,EAAAo9C,GAAAp9C,KAEA,0BAAAzjF,IAAAshI,EAAAxhI,UAAAgnG,cAAA9mG,EAAAF,YAoBAwhI,EAAA99C,eAAA,SAAA/kF,EAAAglF,GACA,qBAAAhlF,EACA,UAAA6B,MAAA,yBAAA7B,EAAA,kDAAAA,EAAA,YAAA4oF,EAAA5oF,IAAA,KAGA,GAAAmiI,GAAAniI,GACA43F,EAAA9lE,KAAA,mBAAA9xB,EAAA,wEACK,GAAAwoG,GAAAnnG,UAAAC,eAAAtB,GACL,UAAA6B,MAAA,yBAAA7B,EAAA,0DAGA,uBAAAglF,EACA,UAAAnjF,MAAA,uBAAA7B,EAAA,oDAAAglF,EAAA,YAAA4D,EAAA5D,IAAA,KAeA,OAZAk9C,GAAAliI,GAAAglF,EAIAhlF,IAAAgiI,KACAa,EAAAE,QAAA/9C,GACAwjB,GAAAnnG,UAAArB,GAAAwiI,GAAAxiI,EAAAglF,GAEAwjB,GAAAnnG,UAAArB,GAAA0iI,GAAA1iI,EAAAglF,IAIAA,GAWA69C,EAAAG,iBAAA,SAAAhjI,GACA,GAAAA,IAAAgiI,GACA,UAAAngI,MAAA,mCAEAsgI,GAAAniI,YACAkiI,GAAAliI,UACAwoG,GAAAnnG,UAAArB,KAiBA6iI,EAAAI,WAAA,WACA,IAAA3uB,EAAA3yG,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,GAAAxB,OAAAyrB,KAAAs2G,IAEA/6H,OAAA,EAWA,OATAmtG,EAAAzoF,QAAA,SAAA7rB,GACA,IAAAglF,EAAAo9C,GAAApiI,GAEAglF,IACA79E,QACAA,EAAAnH,GAAAglF,KAIA79E,GAcA07H,EAAAK,iBAAA,SAAAljI,GACA,IAAAglF,EAAAo9C,GAAApiI,GAEA,OAAAglF,KAAA89C,SAAA,IAGAD,EA/QA,GAgSAA,GAAAT,aAOAS,GAAAb,oBAEAa,GAAA99C,eAAAi9C,GAAAa,IAOAr6B,GAAAnnG,UAAA8hI,YAAA,SAAAnjI,GACA,QAAAX,KAAA4iI,MAAA,IAAA5iI,KAAA4iI,IAAAjiI,IAQAwoG,GAAAnnG,UAAA+hI,UAAA,SAAApjI,GACA,QAAAmiI,GAAAniI,IAqBA,IAAA6e,GAAA,SAAAC,EAAAC,GACA,uBAAAA,GAAA,OAAAA,EACA,UAAA1K,UAAA,iFAAA0K,EAAA,YAAA6pE,EAAA7pE,KAGAD,EAAAzd,UAAAlB,OAAAY,OAAAge,KAAA1d,WACAkE,aACA7E,MAAAoe,EACAze,YAAA,EACAyY,UAAA,EACAD,cAAA,KAIAkG,IAEAD,EAAAukH,OAAAtkH,IAoBAukH,GAAA,SAAAvkH,GACA,IAAAwkH,EAAA5hI,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAEAmd,EAAA,WACAC,EAAAvH,MAAAnY,KAAAsC,YAGAukB,KAcA,QAAAlmB,IAZA,iCAAAujI,EAAA,YAAA36C,EAAA26C,KACAA,EAAAh+H,cAAApF,OAAAkB,UAAAkE,cACAuZ,EAAAykH,EAAAh+H,aAEA2gB,EAAAq9G,GACG,oBAAAA,IACHzkH,EAAAykH,GAGA1kH,GAAAC,EAAAC,GAGAmH,EACAA,EAAA5kB,eAAAtB,KACA8e,EAAAzd,UAAArB,GAAAkmB,EAAAlmB,IAIA,OAAA8e,GAiBA2kH,GAAA,SAAA3/H,GACA,WAAAA,EAAAqO,QAAA,KAAArO,EAAA4S,MAAA,GAAA5S,GAoBA,SAAAqmI,GAAArmI,EAAA6gB,EAAAE,GACA,IAAAsB,EAAAgkH,GAAAzG,UAAA5/H,GAEA,GAAAqiB,EAOA,OANAxB,GACAizE,EAAA9lE,KAAA,WAAAhuB,EAAA,0DAEA+gB,GACAsB,EAAAtB,SAEAsB,EAGA,IAAAmhB,EAAA,kBAAAxjC,EAAAm4F,GAAA,IAAAwnC,GAAA3/H,MAEA,IAAAs0F,EAAA9wD,GACA,UAAAjzB,UAAA,sDAGOm0H,EAAA5iI,EAAQy0F,KAAAlX,SAAA77C,IACfswD,EAAA9lE,KAAA,mDAGAnN,QAEAwlH,GAAAxG,MAAA,eAAA93G,QAAA,SAAA+3G,GACA,IAAAr0D,EAAAq0D,EAAAt8F,EAAAvS,GAAApQ,IAEAkkE,EAAAtZ,KAAAn1D,MAAA8O,QAAAqmD,GAKA5qD,EAAAoQ,GAAApQ,EAAA4qD,GAJAqoB,EAAA5gE,MAAA,kDASA,IAAA6sG,EAAA3hD,GAAAC,aAAA,UAQA,OANAh8D,EAAA,IAAA09G,EAAAv8F,EAAA3iB,EAAAE,GAEAslH,GAAAxG,MAAA,SAAA93G,QAAA,SAAA+3G,GACA,OAAAA,EAAAz9G,KAGAA,EAyFA,GAlFAgkH,GAAArG,UAeAqG,GAAAxG,MAAA,SAAA/7H,EAAAg3E,GAKA,OAJAurD,GAAArG,OAAAl8H,GAAAuiI,GAAArG,OAAAl8H,OACAg3E,IACAurD,GAAArG,OAAAl8H,GAAAuiI,GAAArG,OAAAl8H,GAAA+O,OAAAioE,IAEAurD,GAAArG,OAAAl8H,IAYAuiI,GAAApjH,KAAA,SAAAnf,EAAAg3E,GACAurD,GAAAxG,MAAA/7H,EAAAg3E,IAYAurD,GAAApG,SAAA,SAAAn8H,EAAAg3E,GACAurD,GAAAxG,MAAA/7H,KAAA+O,OAAAioE,GAAAnnE,IAAA,SAAAutB,GACA,IAAAm3C,EAAA,SAAAA,IAEA,OADAguD,GAAAnG,WAAAp8H,EAAAu0E,GACAn3C,EAAAxtB,WAAAlL,EAAA3K,YAGA,OAAAw6E,MAgBAguD,GAAAnG,WAAA,SAAAp8H,EAAAg3E,GACA,IAAAznE,EAAAgzH,GAAAxG,MAAA/7H,GAAAuK,QAAAysE,GAEA,QAAAznE,IAAA,KAIAgzH,GAAArG,OAAAl8H,GAAAuiI,GAAArG,OAAAl8H,GAAA8O,QACAyzH,GAAArG,OAAAl8H,GAAA+V,OAAAxG,EAAA,IAEA,KAIY,IAARmxH,EAAA1iI,EAAQszH,0BAAApjC,IAAA,CACZ,IAAAs0C,GAAAnuC,GAAA,wBAEA,IAAAmuC,GAAA,CACAA,GAAApqC,GAAA,uBACA,IAAA1yC,GAAA2uC,GAAA,QAEA3uC,IACAA,GAAA4rC,aAAAkxC,GAAA98E,GAAAz9C,YAEAowF,GAAAmqC,GAAA,kJAOAvqC,GAAA,EAAAsqC,IAOAA,GAAArH,QAAA5rH,EAQAizH,GAAAxlH,QAAA6jF,GAAAnnG,UAAAihF,SAQA6nD,GAAAlG,WAAA,WACA,OAAAz7B,GAAAhlB,SAiBA2mD,GAAAzG,UAAA,SAAA5/H,GACA,IAAA0/E,EAAAglB,GAAAhlB,QACA/iE,OAAA,EAEA,qBAAA3c,EAAA,CACA,IAAAogI,EAAAT,GAAA3/H,GACAqiB,EAAAq9D,EAAA0gD,GAEA,GAAA/9G,EACA,OAAAA,EAGA1F,EAAAw7E,GAAA,IAAAioC,QAEAzjH,EAAA3c,EAGA,GAAAs0F,EAAA33E,GAAA,CACA,IAAA0jH,EAAA1jH,EACA+hE,EAAA2hD,EAAAh+G,OACAo8D,EAAA4hD,EAAA5hD,SAKA,GAAAC,GAAAgB,EAAAjB,GACA,OAAAC,GAAAgB,EAAAjB,KAcA4nD,GAAA/F,cAAA,WACA,OAIAjkI,OAAAyrB,KAAA48E,GAAAhlB,SAAA/rE,IAAA,SAAAvU,GACA,OAAAslG,GAAAhlB,QAAAtgF,KACK6tB,OAAA43E,UAULwhC,GAAA3mD,QAAAglB,GAAAhlB,QAOA2mD,GAAAhoD,aAAAD,GAAAC,aAmBAgoD,GAAAtlD,kBAAA,SAAA+yC,EAAAyM,GACAt/B,GAAAE,OAAAo/B,IACAzsC,EAAA9lE,KAAA,OAAA8lG,EAAA,+GAGA11C,GAAA2C,kBAAAjlF,KAAAsiF,GAAA01C,EAAAyM,IAQA8F,GAAA3uD,QAAAupB,GAAAvpB,QAQA2uD,GAAA3yB,aAAAzS,GAAAyS,aAQA2yB,GAAAvlD,OAUAzkF,OAAAC,eAAA+pI,GAAA,cACAzpI,SACA4jI,WAAA,EACAjkI,YAAA,IAGAF,OAAAC,eAAA+pI,GAAApxB,WAAA,cACAr4G,MAAAo4G,GACAwrB,WAAA,EACAjkI,YAAA,IASA8pI,GAAAvxG,WAUAuxG,GAAAt0C,iBAQAs0C,GAAA/2H,OAAAkwH,GAUA6G,GAAAp1G,gBAUAo1G,GAAAlpI,QAoBAkpI,GAAAplD,eAAA89C,GAAA99C,eAcAolD,GAAAnlD,OAAA,SAAA4yC,EAAA5yC,GAEA,OADA4S,EAAA9lE,KAAA,wEACA+wG,GAAA99C,eAAA6yC,EAAA5yC,IAcAmlD,GAAAlH,WAAAJ,GAAAI,WAWAkH,GAAA/H,UAAAS,GAAAT,UAWA+H,GAAAjH,iBAAAL,GAAAK,iBAeAiH,GAAA5F,YAAA,SAAAtiI,EAAAiN,GACA,IAAAs1H,EAMA,OAJAviI,GAAA,GAAAA,GAAAiR,cAEAi3H,GAAAxlH,QAAA++E,UAAA3uE,GAAAo1G,GAAAxlH,QAAA++E,WAAA8gC,KAA6FA,EAAAviI,GAAAiN,EAAAs1H,IAE7F2F,GAAAxlH,QAAA++E,UAAAzhG,IAQAkoI,GAAAt4G,IAAA+lE,EAUAuyC,GAAAj+F,gBAAAi+F,GAAAt2G,oBASAs2G,GAAAlpB,cAaAkpB,GAAArpB,iBASAqpB,GAAAnpB,mBAQAmpB,GAAAv5B,YAOAu5B,GAAA94B,iBAOA84B,GAAA9uG,eAUA8uG,GAAA3sH,MAOA2sH,GAAApzG,OAOAozG,GAAAzsH,OAOAysH,GAAAn0H,WAaAm0H,GAAA9jH,IAAgBuiH,EAAAhjI,EAOhBukI,GAAAh4B,aAQAg4B,GAAAxsG,cAQAwsG,GAAA/2B,eA4HA,4JAAAvnF,QAAA,SAAA3oB,GACAinI,GAAAjnI,GAAA,WAEA,OADA00F,EAAA9lE,KAAA,WAAA5uB,EAAA,qCAAkDA,EAAA,cAClDi5F,GAAAj5F,GAAAsU,MAAA,KAAA7V,cAcAwoI,GAAAtyC,gBAMAsyC,GAAA1F,IAAAtoC,GAMAguC,GAAA53G,IAAAm/E;;;;;;;AAaA,IAAAjgE,GAAA,SAAAC,EAAAC,GAEA,kBAAA9rC,KAAA8rC,GACAA,GAIA,QAAA9rC,KAAA6rC,KACAA,EAAcw3F,EAAAtjI,EAAUgsC,iBAAkB02F,EAAA1iI,EAAQkhC,SAAAC,KAAA2K,IAGzCw3F,EAAAtjI,EAAUgsC,iBAAAF,EAAAC,KAGnB04F,GAAA,SAAAhxH,EAAAN,GACA,KAAAM,aAAAN,GACA,UAAA1E,UAAA,sCAIAi2H,GAAA,WACA,SAAA7xH,EAAAC,EAAAC,GACA,QAAAlZ,EAAA,EAAmBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CACrC,IAAAmZ,EAAAD,EAAAlZ,GACAmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EACAuY,EAAAC,cAAA,EACA,UAAAD,MAAAE,UAAA,GACA3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAIA,gBAAAG,EAAAC,EAAAC,GAGA,OAFAD,GAAAP,EAAAM,EAAA1X,UAAA2X,GACAC,GAAAR,EAAAM,EAAAE,GACAF,GAdA,GAkBAwxH,GAAA,SAAAC,EAAArpI,EAAAC,EAAA8sB,GACA,OAAA/sB,MAAAuT,SAAArT,WACA,IAAA8sB,EAAAhuB,OAAAiuB,yBAAAjtB,EAAAC,GAEA,QAAAkL,IAAA6hB,EAAA,CACA,IAAA7G,EAAAnnB,OAAAif,eAAAje,GAEA,cAAAmmB,OACA,EAEAkjH,EAAAljH,EAAAlmB,EAAA8sB,GAEG,aAAAC,EACH,OAAAA,EAAAztB,MAEA,IAAAT,EAAAkuB,EAAA7tB,IAEA,YAAAgM,IAAArM,EAIAA,EAAAL,KAAAsuB,QAJA,GAQAu8G,GAAA,SAAA3rH,EAAAC,GACA,uBAAAA,GAAA,OAAAA,EACA,UAAA1K,UAAA,iFAAA0K,EAAA,YAAA6pE,EAAA7pE,KAGAD,EAAAzd,UAAAlB,OAAAY,OAAAge,KAAA1d,WACAkE,aACA7E,MAAAoe,EACAze,YAAA,EACAyY,UAAA,EACAD,cAAA,KAGAkG,IAAA5e,OAAA6e,eAAA7e,OAAA6e,eAAAF,EAAAC,GAAAD,EAAAG,UAAAF,IAGA2rH,GAAA,SAAAtrI,EAAAQ,GACA,IAAAR,EACA,UAAAwf,eAAA,6DAGA,OAAAhf,GAAA,iCAAAA,EAAA,YAAAgpF,EAAAhpF,KAAA,oBAAAA,EAAAR,EAAAQ,GAGA+qI,GAAA,WACA,SAAApiH,EAAAC,EAAA/oB,GACA,IAAAgpB,KACAC,GAAA,EACAC,GAAA,EACAC,OAAAtc,EAEA,IACA,QAAAuc,EAAAC,EAAAN,EAAAhoB,OAAAuoB,cAA+CL,GAAAG,EAAAC,EAAAE,QAAA9N,MAA+BwN,GAAA,EAG9E,GAFAD,EAAA/f,KAAAmgB,EAAAnoB,OAEAjB,GAAAgpB,EAAA7mB,SAAAnC,EAAA,MAEK,MAAAwpB,GACLN,GAAA,EACAC,EAAAK,EACK,QACL,KACAP,GAAAI,EAAA,WAAAA,EAAA,YACO,QACP,GAAAH,EAAA,MAAAC,GAIA,OAAAH,EAGA,gBAAAD,EAAA/oB,GACA,GAAA2a,MAAA8O,QAAAV,GACA,OAAAA,EACK,GAAAhoB,OAAAuoB,YAAA5oB,OAAAqoB,GACL,OAAAD,EAAAC,EAAA/oB,GAEA,UAAA4U,UAAA,yDAjCA,GA8CAu2H,GAAAT,GAAAp1G,aACA81G,GAAAV,GAAA9uG,YACAyvG,GAAAX,GAAAt4G,IAYAk5G,GAAA,SAAAz5G,EAAA1uB,IACA,qBAAAipB,QAAA,SAAA0Q,GACA,QAAAiJ,KAAAlU,EAAApP,YAAAqa,GACA,QAAAkJ,KAAAnU,EAAApP,YAAAqa,GAAAiJ,GAAA,CACA,IAAAE,EAAApU,EAAApP,YAAAqa,GAAAiJ,GAAAC,GAEA7iC,EAAA8iC,EAAAnJ,EAAAiJ,EAAAC,OAqBAV,GAAA,SAAAC,EAAAC,EAAAlpB,GACA,IAAA5U,EAAA89B,EAAAvuB,QAEAqF,KAAA,EAGA,IAFA,IAAAna,EAAAuK,KAAAuC,IAAAs2B,EAAApjC,OAAAqjC,EAAArjC,OAAAma,GAEAtc,EAAAsc,EAAsBtc,EAAAmC,EAAYnC,IAClC0H,EAAA1H,EAAAsc,GAAA6uH,GAAA5lG,EAAAvlC,GAAA0H,EAAA1H,EAAAsc,IAEA,OAAA5U,GAGA+9B,GAAA,SAAApa,EAAAqa,GACAra,EAAAoB,cACApB,EAAAoB,YAAAulB,GAAAtM,EAAAra,EAAAvJ,MAEAuJ,EAAA9pB,MAAA8pB,EAAA9pB,IAAAkrB,cACApB,EAAA9pB,IAAAkrB,YAAAulB,GAAAtM,EAAAra,EAAA9pB,IAAAugB,MAEAuJ,EAAArT,MAAAqT,EAAArT,IAAAyU,cACApB,EAAArT,IAAAyU,YAAAulB,GAAAtM,EAAAra,EAAArT,IAAA8J,OAgBA6jB,GAAA,SAAA9T,EAAAnP,GACA,IAAAhb,EAAAyjI,GAAAt5G,MACAvP,EAAA5a,EAAA8a,UAAAE,EAAAZ,KAEA,IAAAQ,EACA,YAKA,GAAAA,EAAA1B,UAAA8B,EAAA9B,UAAA0B,EAAA1B,SAAAze,SAAAugB,EAAA9B,SAAAze,QAAAmgB,EAAAf,gBAAAmB,EAAAnB,cACA,YAGA,IAAAqkB,EAAAulG,GAAA7oH,EAAAI,GAGAJ,EAAA1B,WACAglB,EAAAhlB,SAAA0kB,GAAAhjB,EAAA1B,SAAA8B,EAAA9B,SAAA8B,EAAAnB,cAAAe,EAAAf,gBAIAqkB,EAAAhlB,SAAAwL,QAAA,SAAAf,GACAoa,GAAApa,EAAAua,EAAAnZ,eAMA,QAAAzsB,EAAA,EAAiBA,EAAA0H,EAAA8a,UAAArgB,OAA6BnC,IAC9C0H,EAAA8a,UAAAxiB,GAAA8hB,MAAAY,EAAAZ,MACApa,EAAA8a,UAAAxiB,GAAA4lC,GAKA,OAFAl+B,EAAA8a,UAAAE,EAAAZ,KAAA8jB,EAEAl+B,GAGAm+B,GAAA,SAAAhU,GAEA,IAAA7xB,EAAA6xB,EAAArP,UAAArgB,OAEA,MAAAnC,IAAA,CACA,IAAAsiB,EAAAuP,EAAArP,UAAAxiB,GAEA6xB,EAAArP,UAAAF,EAAAR,KAAAQ,EACAA,EAAAmK,YAAAulB,GAAAngB,EAAA/P,IAAAQ,EAAAR,KACAQ,EAAAje,GAAArE,EAEAsiB,EAAAZ,aAMAY,EAAAZ,cAEA2pH,GAAAh5G,KAAA,yEAKAyT,GAAA,SAAAjU,GACAy5G,GAAAz5G,EAAA,SAAAkG,GACAA,EAAAjW,MACAiW,EAAAtL,YAAAulB,GAAAngB,EAAA/P,IAAAiW,EAAAjW,SAeAokB,GAAA,SAAAxjB,EAAA8iB,GACA,IAAAW,EAAAzjB,EAAA9B,SAAA8B,EAAA9B,SAAAze,OAAA,GACAikC,OAAA,EASA,OANAA,EADAZ,GAAAW,KAAA1kB,SACA,IAAA0kB,EAAA1kB,SAIA,KAAAiB,EAAAkB,gBAAA,IAEAwiB,GAaAC,GAAA,SAAAC,GAGA,SAAAD,EAAAE,EAAAjgB,EAAAN,GACA4kH,GAAAhrI,KAAAymC,GAEA,IAAA3mB,EAAAurH,GAAArrI,MAAAymC,EAAA7mB,WAAA9e,OAAAif,eAAA0mB,IAAAlmC,KAAAP,OAMA,GAJA8f,EAAA6mB,SACA7mB,EAAA2T,KAAA/M,EACA5G,EAAAsG,mBAEAtG,EAAA6mB,OACA,UAAAnkC,MAAA,wCA+BA,OA3BAsd,EAAA3O,MAAA,eAGA2O,EAAA3B,GAAA,gCACA,kBAAA2B,EAAA3O,QAKA2O,EAAA3O,MAAA,wBAEA2O,EAAA+f,QAAA/f,EAAA2T,KAAAzM,KACA9E,IAAAkwB,GAAAtyB,EAAAmS,OAAA/P,IAAApC,EAAAgD,QAAAZ,KACAkE,gBAAAtG,EAAAsG,iBACO,SAAAuR,EAAAiP,GAEP,GAAA9mB,EAAA+f,QAIA,OAAAlI,EACA7X,EAAA+mB,qBAAA/mB,EAAA+f,QAAA/f,EAAAgD,QAAAZ,IAAA,sBAGApC,EAAAgnB,aAAAhnB,EAAA+f,QAAA/f,EAAAgD,QAAAZ,UAGApC,EA6VA,OAxYAsrH,GAAA3kG,EAAAC,GA8CAukG,GAAAxkG,IACA9kC,IAAA,uBACAN,MAAA,SAAAsqI,EAAAz4G,EAAA6T,GAEA/mC,KAAA6/B,QAAA,KAEAkH,IACA/mC,KAAAmR,MAAA41B,GAGA/mC,KAAA23B,OACAjV,SAAA1iB,KAAAiyB,OAAArP,UAAAsQ,GACAsN,OAAAmrG,EAAAnrG,OACA79B,QAAA,sCAAAuwB,EACA8T,aAAA2kG,EAAA3kG,aACApkC,KAAA+oI,EAAAnrG,QAAA,SAGAxgC,KAAA2W,QAAA,YAOAhV,IAAA,eACAN,MAAA,SAAAsqI,EAAAz4G,GACA,IAAA8C,EAAAh2B,KAGAA,KAAA6/B,QAAA,KACA7/B,KAAAmR,MAAA,gBAEA,IAAA81B,EAAA,IAAuB6iG,EAAA,UAEvB7iG,EAAA59B,KAAAsiI,EAAA3kG,cACAC,EAAAthC,MACAshC,EAAApmB,SAAAqB,IAAAgR,EAGA+T,EAAApmB,SAAAiB,WAAAmlB,EAAApmB,SAAAiB,eAGA,IAAA8jB,EAAAG,GAAA/lC,KAAAiyB,OAAAgV,EAAApmB,UAEA7gB,KAAAgkB,eAAAijB,EAAApmB,SAAAmD,eAEA4hB,GACA5lC,KAAAiyB,OAAA2T,EACA5lC,KAAAknC,OAAAlnC,KAAAiyB,OAAArP,UAAAqkB,EAAApmB,SAAAqB,MAEAliB,KAAA2W,QAAA,qBAIA3W,KAAA8iB,QAAArB,UACQwnH,EAAA1iI,EAAQw9B,aAAA/jC,KAAAmnC,oBAChBnnC,KAAAmnC,mBAAkC8hG,EAAA1iI,EAAQ09B,WAAA,WAC1CjO,EAAArf,QAAA,uBACS2vB,GAAAtmC,KAAA8iB,UAAA8iB,KAGT5lC,KAAA2W,QAAA,qBAQAhV,IAAA,UACAN,MAAA,WACArB,KAAAonC,cACM6hG,EAAA1iI,EAAQw9B,aAAA/jC,KAAAmnC,uBAGdxlC,IAAA,cACAN,MAAA,WACA,GAAArB,KAAA6/B,QAAA,CACA,IAAAwH,EAAArnC,KAAA6/B,QAEA7/B,KAAA6/B,QAAA,KACAwH,EAAAC,mBAAA,KACAD,EAAAzP,YAkBAj2B,IAAA,QACAN,MAAA,SAAAqhB,GACA,IAAA6V,EAAAv4B,KAGA,IAAA0iB,EACA,OAAA1iB,KAAAknC,OAIA,oBAAAlnC,KAAAmR,MACA,UAAA3O,MAAA,qCAAAxC,KAAAmR,OAGA,IAAA41B,EAAA/mC,KAAAmR,MAIA,qBAAAuR,EAAA,CACA,IAAA1iB,KAAAiyB,OAAArP,UAAAF,GACA,UAAAlgB,MAAA,yBAAAkgB,GAEAA,EAAA1iB,KAAAiyB,OAAArP,UAAAF,GAGA,IAAA6kB,GAAAvnC,KAAAknC,QAAAxkB,EAAAR,MAAAliB,KAAAknC,OAAAhlB,IAGA,GAAAliB,KAAAiyB,OAAArP,UAAAF,EAAAR,KAAAT,QAeA,OAbAzhB,KAAA6/B,UACA7/B,KAAA6/B,QAAAyH,mBAAA,KACAtnC,KAAA6/B,QAAAjI,QACA53B,KAAA6/B,QAAA,MAEA7/B,KAAAmR,MAAA,gBACAnR,KAAAknC,OAAAxkB,OAGA6kB,IACAvnC,KAAA2W,QAAA,iBACA3W,KAAA2W,QAAA,iBAMA,GAAA4wB,EAAA,CAOA,GAHAvnC,KAAAmR,MAAA,kBAGAnR,KAAA6/B,QAAA,CACA,GAAAuS,GAAApyC,KAAAiyB,OAAA/P,IAAAQ,EAAAR,OAAAliB,KAAA6/B,QAAA3M,IAGA,OAEAlzB,KAAA6/B,QAAAyH,mBAAA,KACAtnC,KAAA6/B,QAAAjI,QACA53B,KAAA6/B,QAAA,KAIA7/B,KAAAknC,QACAlnC,KAAA2W,QAAA,iBAGA3W,KAAA6/B,QAAA7/B,KAAAyzB,KAAAzM,KACA9E,IAAAkwB,GAAApyC,KAAAiyB,OAAA/P,IAAAQ,EAAAR,KACAkE,gBAAApmB,KAAAomB,iBACO,SAAAuR,EAAAiP,GAEP,GAAArO,EAAAsH,QAAA,CAIA,GAAAlI,EACA,OAAAY,EAAAsO,qBAAAtO,EAAAsH,QAAAnd,EAAAR,IAAA6kB,GAGAxO,EAAAuO,aAAAF,EAAAlkB,EAAAR,KAGA,gBAAA6kB,EACAxO,EAAA5hB,QAAA,kBAEA4hB,EAAA5hB,QAAA,sBAUAhV,IAAA,QACAN,MAAA,WACArB,KAAAonC,cACM6hG,EAAA1iI,EAAQw9B,aAAA/jC,KAAAmnC,oBACd,iBAAAnnC,KAAAmR,QAGAnR,KAAAwnC,SAAA,GAGA,oBAAAxnC,KAAAmR,MAIAnR,KAAAknC,OACAlnC,KAAAmR,MAAA,gBAEAnR,KAAAmR,MAAA,cAEO,0BAAAnR,KAAAmR,QACPnR,KAAAmR,MAAA,oBASAxP,IAAA,OACAN,MAAA,SAAAi5B,GACA,IAAAjB,EAAAr5B,KAEMipI,EAAA1iI,EAAQw9B,aAAA/jC,KAAAmnC,oBAEd,IAAArkB,EAAA9iB,KAAA8iB,QAEA,GAAAwX,EAAA,CACA,IAAAkM,EAAA1jB,IAAAkB,eAAA,UAEAhkB,KAAAmnC,mBAAkC8hG,EAAA1iI,EAAQ09B,WAAA,WAC1C,OAAA5K,EAAAtD,QACSyQ,QAITxmC,KAAAwnC,QAKA1kB,MAAArB,QACAzhB,KAAA2W,QAAA,sBAEA3W,KAAA2W,QAAA,kBAPA3W,KAAAwF,WAgBA7D,IAAA,QACAN,MAAA,WACA,IAAAy5B,EAAA96B,KAEAA,KAAAwnC,SAAA,EAGAxnC,KAAA6/B,QAAA7/B,KAAAyzB,KAAAzM,KACA9E,IAAAliB,KAAA2mC,OACAvgB,gBAAApmB,KAAAomB,iBACO,SAAAuR,EAAAiP,GAEP,GAAA9L,EAAA+E,QAAA,CAOA,GAFA/E,EAAA+E,QAAA,KAEAlI,EAWA,OAVAmD,EAAAnD,OACA6I,OAAAoG,EAAApG,OACA79B,QAAA,sCAAAm4B,EAAA6L,OACAK,aAAAJ,EAAAI,aAEApkC,KAAA,GAEA,iBAAAk4B,EAAA3pB,QACA2pB,EAAA0M,SAAA,GAEA1M,EAAAnkB,QAAA,SAGA,IAAAswB,EAAA,IAAyB6iG,EAAA,UAUzB,OARA7iG,EAAA59B,KAAAu9B,EAAAI,cACAC,EAAAthC,MAEAm1B,EAAA3pB,MAAA,cAEA81B,EAAApmB,SAAAqB,IAAA4Y,EAAA6L,OAGAM,EAAApmB,SAAA+B,WACAkY,EAAA7I,OAAAgV,EAAApmB,SAEAolB,GAAAnL,EAAA7I,QACAiU,GAAApL,EAAA7I,QAEA6I,EAAAnkB,QAAA,uBACAmkB,EAAA+E,SAGA/E,EAAAhY,MAAAmkB,EAAApmB,SAAA+B,UAAA,OAOAkY,EAAA7I,QACApP,aACArC,SACAC,SACAC,qBACAC,cAEAuB,IAAe+mH,EAAA1iI,EAAQkhC,SAAAC,KACvB9kB,YACAV,IAAA4Y,EAAA6L,OACAliC,GAAA,KAGAq2B,EAAA7I,OAAArP,UAAAkY,EAAA6L,QAAA7L,EAAA7I,OAAArP,UAAA,GACAkY,EAAA7I,OAAArP,UAAA,GAAAiK,YAAAiO,EAAA6L,OAGA7L,EAAA7I,OAAArP,UAAA,GAAAd,WAAAgZ,EAAA7I,OAAArP,UAAA,GAAAd,eACAgZ,EAAAgM,aAAAF,EAAA9L,EAAA6L,QACA7L,EAAAnkB,QAAA,0BAIA8vB,EAzYA,CA0YC+kG,IAQD3+F,GAAAi+F,GAAAj+F,gBAUAhB,GAAA,SAAAnpB,EAAAopB,GACA,IAAAhkC,EAAA,EACA1H,EAAA0rC,EAAAppB,EAAAf,cAGA8J,EAAA/I,EAAA1B,SAAA5gB,GAIA,GAAAqrB,EAAA,CACA,wBAAAA,EAAAjmB,MACA,OAAcsC,OAAA2jB,EAAAjmB,MAAAumC,SAAA,GAEd,wBAAAtgB,EAAA9lB,IACA,OACAmC,OAAA2jB,EAAA9lB,IAAA8lB,EAAA5J,SACAkqB,SAAA,GAIA,MAAA3rC,IAAA,CAEA,GADAqrB,EAAA/I,EAAA1B,SAAA5gB,GACA,qBAAAqrB,EAAA9lB,IACA,OAAcmC,SAAA2jB,EAAA9lB,IAAAomC,SAAA,GAKd,GAFAjkC,GAAA2jB,EAAA5J,SAEA,qBAAA4J,EAAAjmB,MACA,OAAcsC,SAAA2jB,EAAAjmB,MAAAumC,SAAA,GAGd,OAAUjkC,SAAAikC,SAAA,IAUVC,GAAA,SAAAtpB,EAAAopB,GAOA,IANA,IAAAhkC,EAAA,EACA2jB,OAAA,EACArrB,EAAA0rC,EAAAppB,EAAAf,cAIQvhB,EAAAsiB,EAAA1B,SAAAze,OAA8BnC,IAAA,CAEtC,GADAqrB,EAAA/I,EAAA1B,SAAA5gB,GACA,qBAAAqrB,EAAAjmB,MACA,OACAsC,OAAA2jB,EAAAjmB,MAAAsC,EACAikC,SAAA,GAMA,GAFAjkC,GAAA2jB,EAAA5J,SAEA,qBAAA4J,EAAA9lB,IACA,OACAmC,OAAA2jB,EAAA9lB,IAAAmC,EACAikC,SAAA,GAKA,OAAUjkC,QAAA,EAAAikC,SAAA,IAgBVE,GAAA,SAAAvpB,EAAAopB,EAAA9R,GACA,IAAAkS,OAAA,EACAC,OAAA,EAMA,MAJA,qBAAAL,IACAA,EAAAppB,EAAAf,cAAAe,EAAA1B,SAAAze,QAGAupC,EAAAppB,EAAAf,cACA,GAIAuqB,EAAAL,GAAAnpB,EAAAopB,GACAI,EAAAH,QAIAG,EAAApkC,QAKAqkC,EAAAH,GAAAtpB,EAAAopB,GACAK,EAAAJ,QAGAI,EAAArkC,OAIAokC,EAAApkC,OAAAkyB,KAkBAnY,GAAA,SAAAa,EAAAopB,EAAA9R,GACA,IAAAtX,EACA,SASA,GANA,kBAAAsX,IACAA,EAAA,GAKA,qBAAA8R,EAAA,CAEA,GAAAppB,EAAAwB,cACA,OAAAxB,EAAAwB,cAIA,IAAAxB,EAAAjB,QACA,OAAawnH,EAAA1iI,EAAQoS,SAKrB,OAAAszB,GAAAvpB,EAAAopB,EAAA9R,IAcAoS,GAAA,SAAA1pB,EAAA2pB,EAAAC,GACA,IAAAC,EAAA,EAEA,GAAAF,EAAAC,EAAA,CACA,IAAAE,GAAAF,EAAAD,GACAA,EAAAG,EAAA,GACAF,EAAAE,EAAA,GAGA,GAAAH,EAAA,GACA,QAAAjsC,EAAAisC,EAA4BjsC,EAAA0M,KAAAuC,IAAA,EAAAi9B,GAA2BlsC,IACvDmsC,GAAA7pB,EAAAsB,eAEAqoB,EAAA,EAGA,QAAA5iB,EAAA4iB,EAA2B5iB,EAAA6iB,EAAe7iB,IAC1C8iB,GAAA7pB,EAAA1B,SAAAyI,GAAA5H,SAGA,OAAA0qB,GAeAE,GAAA,SAAA/pB,GACA,IAAAA,EAAA1B,SAAAze,OACA,SAGA,IAAAnC,EAAAsiB,EAAA1B,SAAAze,OAAA,EACAmqC,EAAAhqB,EAAA1B,SAAA5gB,GAAAyhB,UAAAa,EAAAsB,eACA2oB,EAAAD,EAAA,EAAAhqB,EAAAsB,eAEA,MAAA5jB,IAGA,GAFAssC,GAAAhqB,EAAA1B,SAAA5gB,GAAAyhB,SAEA6qB,GAAAC,EACA,MAIA,OAAA7/B,KAAAC,IAAA,EAAA3M,IAgBA+5B,GAAA,SAAAzX,EAAAsX,EAAA4S,GACA,IAAAlqB,MAAA1B,SACA,YAEA,GAAA0B,EAAAjB,QACA,OAAAI,GAAAa,GAGA,UAAAsX,EACA,YAGAA,KAAA,EAEA,IAAA8R,EAAAc,EAAAH,GAAA/pB,KAAA1B,SAAAze,OAEA,OAAA0pC,GAAAvpB,IAAAf,cAAAmqB,EAAA9R,IAkBA9E,GAAA,SAAAxS,EAAAsX,GACA,IAAA4S,GAAA,EACArI,EAAAvK,GAAA,EACAqK,EAAAlK,GAAAzX,EAAAsX,EAAA4S,GAEA,cAAAvI,EACAwI,KAEAA,GAAAtI,EAAAF,IAGAyI,GAAA,SAAAC,GACA,OAAAA,EAAAjgC,KAAAuzB,MAAA0M,KAAA,GAGAC,GAAA,SAAAC,EAAAF,GAEA,GAAAD,GAAAC,GACA,OAAAA,EAAA,GAAAE,EAKA,IAFA,IAAAC,EAAAH,EAAAz3B,WAAA3R,MAAA,QAAApB,OAEAnC,EAAA,EAAiBA,GAAA8sC,EAAuB9sC,IAAA,CACxC,IAAAmY,EAAAzL,KAAA4L,IAAA,GAAAtY,GACA+sC,EAAAJ,EAAAx0B,EAEA,GAAAu0B,GAAAK,IAAA/sC,IAAA8sC,EACA,OAAAC,EAAAF,GAAA10B,IAKA60B,GAAAJ,GAAAprC,KAAA,QACAyrC,GAAAL,GAAAprC,KAAA,SAaA0rC,GAAA,SAAA5qB,EAAAuS,EAAAoX,EAAAtmC,GACA,IAAA3F,OAAA,EACAqrB,OAAA,EACA8hB,EAAA7qB,EAAA1B,SAAAze,OAEAirC,EAAAvY,EAAAlvB,EAEA,GAAAynC,EAAA,GAGA,GAAAnB,EAAA,EACA,IAAAjsC,EAAAisC,EAAA,EAA8BjsC,GAAA,EAAQA,IAGtC,GAFAqrB,EAAA/I,EAAA1B,SAAA5gB,GACAotC,GAAAH,GAAA5hB,EAAA5J,UACA2rB,EAAA,EACA,OACAC,WAAArtC,EACA2F,YAAAqmC,GAAA1pB,EAAA2pB,EAAAjsC,IAOA,OACAqtC,WAAA,EACA1nC,UAAAkvB,GAOA,GAAAoX,EAAA,GACA,IAAAjsC,EAAAisC,EAAwBjsC,EAAA,EAAOA,IAE/B,GADAotC,GAAA9qB,EAAAsB,eACAwpB,EAAA,EACA,OACAC,WAAA,EACA1nC,UAAAkvB,GAIAoX,EAAA,EAKA,IAAAjsC,EAAAisC,EAAsBjsC,EAAAmtC,EAAiBntC,IAGvC,GAFAqrB,EAAA/I,EAAA1B,SAAA5gB,GACAotC,GAAAJ,GAAA3hB,EAAA5J,UACA2rB,EAAA,EACA,OACAC,WAAArtC,EACA2F,YAAAqmC,GAAA1pB,EAAA2pB,EAAAjsC,IAMA,OACAqtC,WAAAF,EAAA,EACAxnC,UAAAkvB,IAWAyY,GAAA,SAAAhrB,GACA,OAAAA,EAAA8X,cAAA9X,EAAA8X,aAAA3P,KAAA4P,OAWA8O,GAAA,SAAA7mB,GACA,OAAAA,EAAA8X,cAAA9X,EAAA8X,eAAA7hB,KAUA4hB,GAAA,SAAA7X,GACA,IAAAirB,EAAAD,GAAAhrB,GAEA,OAAAA,EAAAkrB,WAAAD,GAUAlE,GAAA,SAAA/mB,GACA,OAAAA,EAAAkrB,UAQAvV,GAAA,SAAAvV,GACA,QAAA1iB,EAAA,EAAiBA,EAAA0iB,EAAA9B,SAAAze,OAA2BnC,IAC5C,GAAA0iB,EAAA9B,SAAA5gB,GAAAuB,IACA,SAGA,UAQA22B,GAAA,SAAAxV,GACA,QAAA1iB,EAAA,EAAiBA,EAAA0iB,EAAA9B,SAAAze,OAA2BnC,IAC5C,GAAA0iB,EAAA9B,SAAA5gB,GAAAgY,IACA,SAGA,UAcA2yB,GAAA,SAAA7gB,EAAAxH,GACA,OAAAA,EAAAZ,YAAAY,EAAAZ,WAAAoI,IAmBAmhB,GAAA,SAAAX,EAAAtX,EAAA1Q,GACA,IAAAod,EAAAx9B,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,KAEA,IAAAyoC,GAAA,YAAAroB,GACA,OAAAmrB,IAGA,IAAAxoC,EAAAqlC,EAAAhoB,EAAAZ,WAAA8I,UAEA,OAAAvlB,EAAA,EAAAy6B,GAAA1M,GAQA8C,GAAA,SAAAjE,EAAAnP,GACA,OAAAmP,EAAArP,UAAArgB,OACA,SAGA,IAAAurC,EAAAhrB,EAAAhB,WAAA8I,WAAAge,OAAAC,UAEA,OAMG,IANH5W,EAAArP,UAAA8O,OAAA,SAAAhP,GACA,QAAA6X,GAAA7X,KAIAA,EAAAZ,WAAA8I,WAAA,GAAAkjB,IACGvrC,QAIH61B,IACAvW,YACAqT,YACAuX,iBACAa,uBACA/S,aACAkP,cACAiE,iBACAnE,kBACApP,eACA9B,SACAC,UACAyS,gBACAM,8BACAnV,6BAOA01G,GAAAd,GAAA9jH,IACA6kH,GAAAf,GAAAp1G,aAEA0pB,GAAA,WACA,IAAAusF,EAAA,SAAAtsF,EAAA/5B,EAAA/hB,GAEA+hB,EAAAumH,IACA73G,QAAA,MACK1O,GAIL,IAAA2B,EAAAo4B,EAAAp4B,eAAA6jH,GAAAr6G,IAAAzJ,IAAAC,cAEA,GAAAA,GAAA,oBAAAA,EAAA,CACA,IAAA+pB,EAAA/pB,EAAA3B,GAEA0rB,IACA1rB,EAAA0rB,GAIA,IAAAnR,EAAA+rG,GAAAtmH,EAAA,SAAAqS,EAAAiJ,GACA,IAAA0e,EAAAzf,EAAAe,UAEAjJ,GAAA2nB,IACAzf,EAAA0f,aAAA10B,KAAA4P,MACAoF,EAAAE,cAAAF,EAAA0f,aAAA1f,EAAAK,YACAL,EAAAC,cAAAwf,EAAAnoC,YAAAmoC,EAAA/8C,OACAs9B,EAAAzM,YACAyM,EAAAzM,UAAAtmB,KAAAuzB,MAAAR,EAAAC,cAAAD,EAAAE,cAAA,SAIAa,EAAApB,UACAK,EAAAisG,gBAAAlrG,EAAApB,SAMA7H,GAAA,cAAAA,EAAA/0B,OACAi9B,EAAAU,UAAA,GAMA5I,GAAAkI,EAAAY,SAAA,MAAAG,EAAA4e,YAAA,MAAA5e,EAAA4e,YAAA,IAAA5e,EAAA4e,aACA7nB,EAAA,IAAAn1B,MAAA,mCAAAq9B,IAAAyf,GAAAzf,EAAAmH,iBAGAzjC,EAAAo0B,EAAAkI,KAEA4f,EAAA5f,EAAAjI,MAQA,OANAiI,EAAAjI,MAAA,WAEA,OADAiI,EAAAY,SAAA,EACAgf,EAAAtnC,MAAA0nB,EAAAv9B,YAEAu9B,EAAA3d,IAAAoD,EAAApD,IACA2d,EAAAK,YAAArV,KAAA4P,MACAoF,GAGA,OAAA8rG,GAaA1/G,GAAA,SAAAC,EAAA9rB,GACA,OAAA8rB,EAAA1mB,MAAApF,GAAA,IAAA8rB,EAAAvmB,IAAAvF,IASA+rB,GAAA,SAAAnkB,EAAA5H,GACA,IAAAiB,EAAA2G,EAAAsN,SAAA,IAEA,WAAAwV,UAAA,IAAAzpB,EAAAkB,QAAAlB,GAAAjB,EAAA,WAEAgsB,GAAA,SAAApkB,GACA,OAAAA,GAAA,IAAAA,EAAA,IACAuP,OAAAC,aAAAxP,GAEA,KAaAqkB,GAAA,SAAA1pB,GACA,IAAA2pB,KAgBA,OAdAxrB,OAAAyrB,KAAA5pB,GAAA6pB,QAAA,SAAA7qB,GACA,IAAAN,EAAAsB,EAAAhB,GAEA8qB,YAAAC,OAAArrB,GACAirB,EAAA3qB,IACAwa,MAAA9a,EAAA+P,OACAyJ,WAAAxZ,EAAAwZ,WACA1D,WAAA9V,EAAA8V,YAGAmV,EAAA3qB,GAAAN,IAIAirB,GAOAK,GAAA,SAAAC,GACA,IAAArL,EAAAqL,EAAArL,YACAhf,OAAAoW,IACA+D,OAAA,GAGA,OAAA6E,EAAAhf,OAAAgf,EAAA7E,OAAAkQ,EAAAC,aAAAC,KAAA,MAMAE,GAAA,SAAAnd,GAOA,IANA,IAAAsM,EAAApB,MAAA/Y,UAAAqV,MAAA9W,KAAAsP,GACA5B,EAAA,GACAnG,EAAA,GACAmlB,OAAA,EACAC,OAAA,EAEAC,EAAA,EAAiBA,EAAAhR,EAAA5Z,OAAA0L,EAAyBkf,IAC1CF,EAAA9Q,EAAA9E,MAAA8V,EAAAlf,EAAAkf,EAAAlf,KAAAmK,IAAA+T,IAAAW,KAAA,IACAI,EAAA/Q,EAAA9E,MAAA8V,EAAAlf,EAAAkf,EAAAlf,KAAAmK,IAAAgU,IAAAU,KAAA,IACAhlB,GAAAmlB,EAAA,IAAAC,EAAA,KAGA,OAAAplB,GAGAslB,GAAA,SAAAof,GACA,IAAArwB,EAAAqwB,EAAArwB,MACA,OAAA6Q,GAAA7Q,IAGAkR,GAAA,SAAAC,GACA,IAAAxlB,EAAA,GACA1H,OAAA,EAEA,IAAAA,EAAA,EAAaA,EAAAktB,EAAA/qB,OAAmBnC,IAChC0H,GAAAmkB,GAAAqB,EAAAltB,GAAA,IAEA,OAAA0H,GAGAilB,GAAAjsB,OAAA+1F,QACAxqE,6BACAM,iBACAK,WACAI,WACAC,gBAWA6X,GAAA,KAMA9K,GAAA,EAAA8K,GACAgJ,GAAA,SAAAC,EAAAC,GACA,IAAAl3B,KACA9W,OAAA,EAEA,GAAA+tC,KAAA5rC,OAEA,IAAAnC,EAAA,EAAeA,EAAA+tC,EAAA5rC,OAAuBnC,IACtCguC,EAAAD,EAAA3oC,MAAApF,GAAA+tC,EAAAxoC,IAAAvF,KACA8W,EAAA7N,MAAA8kC,EAAA3oC,MAAApF,GAAA+tC,EAAAxoC,IAAAvF,KAKA,OAAA0qI,GAAAt2G,iBAAAtd,IAUAwjB,GAAA,SAAAhC,EAAA8U,GACA,OAAAU,GAAAxV,EAAA,SAAAlzB,EAAAG,GACA,OAAAH,EAAA0/B,IAAAsI,GAAA7nC,EAAAu/B,IAAAsI,KAUA7I,GAAA,SAAAwJ,EAAAX,GACA,OAAAU,GAAAC,EAAA,SAAA3oC,GACA,OAAAA,EAAA0/B,IAAAsI,KASApI,GAAA,SAAA1M,GACA,GAAAA,EAAAn2B,OAAA,EACA,OAAAuoI,GAAAt2G,mBAKA,IAFA,IAAAlH,KAEAltB,EAAA,EAAiBA,EAAAs4B,EAAAn2B,OAAqBnC,IAAA,CACtC,IAAAoF,EAAAkzB,EAAA/yB,IAAAvF,EAAA,GACAuF,EAAA+yB,EAAAlzB,MAAApF,GAEAktB,EAAAjkB,MAAA7D,EAAAG,IAGA,OAAAmlI,GAAAt2G,iBAAAlH,IASAkX,GAAA,SAAAtY,GACA,IAAA6jB,KAEA,IAAA7jB,MAAA3pB,OACA,SAGA,QAAAnC,EAAA,EAAiBA,EAAA8rB,EAAA3pB,OAAkBnC,IACnC2vC,EAAA1mC,KAAA6iB,EAAA1mB,MAAApF,GAAA,OAAA8rB,EAAAvmB,IAAAvF,IAGA,OAAA2vC,EAAAjjB,KAAA,OAiBA6d,GAAA,SAAAjS,EAAAzD,GACA,IAAA+a,EAAA1tC,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,KAEA+3B,EAAA3B,EAAAn2B,OAAAm2B,EAAA/yB,IAAA+yB,EAAAn2B,OAAA,KAEA,OAAA83B,EAAApF,GAAA+a,GAQA+7F,GAAA,SAAA59F,GAGA,IAFA,IAAA69F,KAEA5rI,EAAA,EAAiBA,EAAA+tC,EAAA5rC,OAAuBnC,IACxC4rI,EAAA3iI,MACA7D,MAAA2oC,EAAA3oC,MAAApF,GACAuF,IAAAwoC,EAAAxoC,IAAAvF,KAIA,OAAA4rI,GAeA74D,GAAA,SAAAC,EAAAj/C,EAAA1I,GACA,IAAA3E,EAAAqN,EAAAk/C,QAGA,GAAA5nD,EAAA4hC,UAAA5hC,EAAA4hC,SAAA9qD,OAKA,QAAAy7B,KAJAo1C,EAAAxB,oBACAwB,EAAAxB,sBAGAnmD,EAAA6hC,eACA,IAAA8lB,EAAAxB,kBAAA5zC,GAAA,CACAlX,EAAAC,MAAApQ,SAA8BpO,KAAA,QAAA5H,KAAA,YAC9B,IAAA0J,EAAAyc,EAAAwsD,aAAAC,aAAAv1C,GAMAo1C,EAAAxB,kBAAA5zC,GAJA3zB,GAQAyc,EAAA8N,oBACAC,KAAA,WACApwB,GAAAu5B,EACAlJ,MAAAkJ,IACW,GAAA3zB,MAMXohB,EAAA8hC,UAAA9hC,EAAA8hC,SAAAhrD,SAAA6wE,EAAAtB,iBACAsB,EAAAtB,eAAAhrD,EAAA8N,oBACAC,KAAA,WACAC,MAAA,mBACK,GAAAzqB,MACL+oE,EAAAtB,eAAAh+C,gCAAArI,EAAA8hC,SAAAK,eAgBAitB,GAAA,SAAAr1E,EAAAG,EAAA0E,GACA,IAAAjK,OAAA,EACA4D,OAAA,EAEA,GAAAqG,GAIAA,EAAAiG,KAAA,CAIAlQ,EAAAiK,EAAAiG,KAAA/N,OAEA,MAAAnC,IACA4D,EAAAqG,EAAAiG,KAAAlQ,GAGA4D,EAAA+B,WAAAJ,GAAA3B,EAAAiC,SAAAT,GACA6E,EAAAywE,UAAA92E,KAgBAqtE,GAAA,SAAArtE,GACAlD,OAAAsY,iBAAApV,EAAAkiD,OACAzhD,IACAxD,IAAA,WAEA,OADA6pI,GAAAt4G,IAAAC,KAAA,0DACAzuB,EAAA3C,MAAAM,MAGAN,OACAJ,IAAA,WAEA,OADA6pI,GAAAt4G,IAAAC,KAAA,8DACAzuB,EAAA3C,MAAAwO,OAGAyxD,aACArgE,IAAA,WAEA,OADA6pI,GAAAt4G,IAAAC,KAAA,oEACAzuB,EAAA3C,MAAAwO,UAMAyhE,GAAA,SAAAzvD,GACA,IAAA0vD,OAAA,EAOA,OAJAA,EADAzhC,MAAAjuB,IAAA/U,KAAAuB,IAAAwT,KAAAlJ,IACAiwB,OAAAC,UAEAhnB,EAEA0vD,GAWAC,GAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAr4B,EAAY2vF,EAAA1iI,EAAQgzC,eAAkB0vF,EAAA1iI,EAAQsM,OAU9C,GARA6+D,GACAA,EAAAllD,QAAA,SAAA2gC,GACA,IAAA9iD,EAAA8iD,EAAAx6C,OAEA3S,KAAA4xE,kBAAAvnE,GAAAqhB,OAAA,IAAA4tB,EAAA6T,EAAApnD,UAAA/F,KAAAi3C,gBAAAkW,EAAAlnD,QAAAjG,KAAAi3C,gBAAAkW,EAAAtjD,QACK4nE,GAGLE,EAAA,CACA,IAAAE,EAAAP,GAAAG,EAAAn9B,aAAAzyB,UAmBA,GAjBA8vD,EAAAnlD,QAAA,SAAA+gC,GACA,IAAA/f,EAAA+f,EAAAI,QAAA3tD,KAAAi3C,gBAEAsW,EAAAP,OAAAxgC,QAAA,SAAA05B,GACA,IAAAliD,EAAA,IAAAs1C,EAAA9L,IAAA0Y,EAAA7kD,OAAA6kD,EAAAhzB,KAAAgzB,EAAAr2C,MAAA,IAEA7L,EAAAkiD,QACAliD,EAAA3C,MAAA6kD,EACAmrB,GAAArtE,GAEAhE,KAAA8xE,eAAApmD,OAAA1nB,IACOhE,OACFyxE,GAKLA,EAAAK,gBAAAL,EAAAK,eAAAxhE,MAAAmhE,EAAAK,eAAAxhE,KAAA/N,OAAA,CAMA,IALA,IAAA+N,EAAAmhE,EAAAK,eAAAxhE,KACAyhE,KAIA3xE,EAAA,EAAqBA,EAAAkQ,EAAA/N,OAAiBnC,IACtCkQ,EAAAlQ,IACA2xE,EAAA1oE,KAAAiH,EAAAlQ,IAKA,IAAA4xE,EAAAD,EAAAr6D,OAAA,SAAApL,EAAAtI,GACA,IAAAiuE,EAAA3lE,EAAAtI,EAAA+B,eAKA,OAHAksE,EAAA5oE,KAAArF,GACAsI,EAAAtI,EAAA+B,WAAAksE,EAEA3lE,OAIA4lE,EAAApxE,OAAAyrB,KAAAylD,GAAAzpC,KAAA,SAAAhiC,EAAAY,GACA,OAAAyhC,OAAAriC,GAAAqiC,OAAAzhC,KAIA+qE,EAAA1lD,QAAA,SAAAzmB,EAAAqvD,GACA,IAAA+c,EAAAH,EAAAjsE,GACAqsE,EAAAxpC,OAAAspC,EAAA9c,EAAA,KAAAyc,EAGAM,EAAA3lD,QAAA,SAAAxoB,GACAA,EAAAiC,QAAAmsE,SAOA1uB,GAAA,qBAAA/7C,iBACAskI,GAAA,qBAAA9qI,OAAA,WAAAA,SACA+qI,GAAA,yBACAC,GAAAzoF,GAAAyoF,aAAAzoF,GAAA0oF,mBAAA1oF,GAAA2oF,gBAAA3oF,GAAA4oF,cACAlwD,GAAA14B,GAAA04B,KAAA14B,GAAAg9B,WAAAtE,OAAAwE,MACAG,GAAAr9B,GAAAq9B,OAUA,SAAAwrD,GAAAC,EAAAjtD,GACA,gBAAAktD,GACA,IAAA5rI,EAAAb,KAEA,IAAAu/E,EACA,WAAAwB,GAAAyrD,GACK,GAAAzrD,KAAA0rD,EAAA,CAEL,IAAA1tH,EAAAwgE,EAAAjqE,WAAAnS,QAAA,gBAAuD,IAAAkU,MAAA,MACvDq1H,EAAAC,GAAA5tH,GAIA,OAFA/e,KAAAisI,IAAA,IAAAlrD,GAAA2rD,GACAE,GAAA5sI,KAAAisI,IAAAS,GACA1sI,KAAAisI,IAEA,IAAAY,GACAz+G,YAAA,SAAA5tB,GACAK,EAAAstB,WACA8V,WAAA,WACApjC,EAAAstB,WAA2Bte,KAAArP,EAAA6Y,OAAAwzH,QAM3BttD,EAAAh/E,KAAAssI,GACA7sI,KAAAouB,YAAA,SAAA5tB,GACAyjC,WAAA,WACA4oG,EAAA1+G,WAA8Bte,KAAArP,EAAA6Y,OAAAxY,OAG9Bb,KAAA8sI,cAAA,GAKA,GAAA/rD,GAAA,CACA,IAAAgsD,GACAL,GAAAC,GAAA,mCACAK,GAAA,IAAA/xH,WAAA,GAEA,IACA8xH,GAAA,IAAAhsD,GAAA2rD,IAGAK,GAAA3+G,YAAA4+G,OAAA57H,SACG,MAAApJ,GACH+4E,GAAA,KACG,QACH3E,GAAA6wD,gBAAAP,IACAK,IACAA,GAAA3xG,aAKA,SAAAuxG,GAAA9nH,GACA,IACA,OAAAu3D,GAAAC,gBAAA,IAAAoE,MAAA57D,IAAgDtc,KAAA2jI,MAC7C,MAAAlkI,GACH,IAAAw4E,EAAA,IAAA2rD,GAEA,OADA3rD,EAAAyoC,OAAApkG,GACAu3D,GAAAC,gBAAAmE,EAAA0sD,QAAA3kI,QAIA,SAAAqkI,GAAA9rD,EAAA4rD,GACA,GAAA5rD,GAAA4rD,EAAA,CACA,IAAAS,EAAArsD,EAAA1lD,UACA0lD,EAAA4rD,SACA5rD,EAAA1lD,UAAA,WACA0lD,EAAA4rD,QAAAtwD,GAAA6wD,gBAAAnsD,EAAA4rD,QACAS,EAAA5sI,KAAAugF,KAIA,IAAAssD,GAAA,IAAAb,GAAA,yCAAA5kI,EAAA0lI,GACA,IAAAttI,EAAAC,MACA,WAEA,IAEA0jD,EAFA4pF,EAAA,qBAAA3lI,IAAA,qBAAAojB,IAAA,qBAAAhrB,OAKA2jD,EADA,qBAAA/7C,EACAA,EACK,qBAAA2lI,EACLA,EACK,qBAAAvtI,EACLA,KAKA,IAcAqM,EAAA61D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/qD,EAAAC,EAAA+qD,EAAA5qD,EAAA6qD,EAAAC,EAAAC,EAAAC,EAAA1qD,EAAA2qD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAdAwpE,EAAA7pF,EAYAsgB,EAAAl3D,KAAA4L,IAAA,SAKA,WACA,IAAAtY,EAyCA,GAxCA8iE,GACAe,QACAC,QACAC,QACAlC,QACAmC,QACAlC,QACAC,QACAS,QACAR,QACArqD,QACA4qD,QACAN,QACAC,QACAC,QACAC,QACA6B,QACA5B,QACAC,QACAG,QACAyB,QACAxB,QACAyB,QACAC,QACAzB,QACA0B,QACAC,QACAC,QACAlsD,QACAH,QACAD,QACAV,QACAsrD,QACAD,QACAprD,QACAgtD,SAKA,qBAAA3pD,WAAA,CAIA,IAAA7a,KAAA8iE,EACAA,EAAAjhE,eAAA7B,KACA8iE,EAAA9iE,MAAA+J,WAAA,GAAA/J,EAAA+J,WAAA,GAAA/J,EAAA+J,WAAA,GAAA/J,EAAA+J,WAAA,KAIAg5D,EAAA,IAAAloD,YAAA,IAAA9Q,WAAA,OAAAA,WAAA,OAAAA,WAAA,OAAAA,WAAA,KACAk5D,EAAA,IAAApoD,YAAA,IAAA9Q,WAAA,OAAAA,WAAA,OAAAA,WAAA,OAAAA,WAAA,KACAi5D,EAAA,IAAAnoD,YAAA,UACAqoD,EAAA,IAAAroD,YAAA,EACA,MACA,QACA,gBACA,QACA,QACA,QACA,iDAEAsoD,EAAA,IAAAtoD,YAAA,EACA,MACA,QACA,gBACA,QACA,QACA,QACA,iDAEAuoD,GACA7wC,MAAA2wC,EACA1wC,MAAA2wC,GAEAI,EAAA,IAAA1oD,YAAA,EACA,MACA,QACA,SACA,eACA,EACA,QAEAyoD,EAAA,IAAAzoD,YAAA,EACA,MACA,IACA,MAEA2oD,EAAA,IAAA3oD,YAAA,EACA,MACA,UAEA4oD,EAAAD,EACAE,EAAA,IAAA7oD,YAAA,EACA,MACA,QACA,UAEA8oD,EAAAH,EACAH,EAAA,IAAAxoD,YAAA,EACA,MACA,IACA,gBAxGA,GA4GA7O,EAAA,SAAA7D,GACA,IAEAnI,EACA0H,EACAg5B,EAJAyzB,KACAlvD,EAAA,EAKA,IAAAjF,EAAA,EAAiBA,EAAAkC,UAAAC,OAAsBnC,IACvCm0D,EAAAlrD,KAAA/G,UAAAlC,IAGAA,EAAAm0D,EAAAhyD,OAGA,MAAAnC,IACAiF,GAAAkvD,EAAAn0D,GAAA+W,WAQA,IANArP,EAAA,IAAAmT,WAAA5V,EAAA,GACAy7B,EAAA,IAAAC,SAAAj5B,EAAAsJ,OAAAtJ,EAAA+S,WAAA/S,EAAAqP,YACA2pB,EAAAqtB,UAAA,EAAArmD,EAAAqP,YACArP,EAAApD,IAAA6D,EAAA,GAGAnI,EAAA,EAAAiF,EAAA,EAA2BjF,EAAAm0D,EAAAhyD,OAAoBnC,IAC/C0H,EAAApD,IAAA6vD,EAAAn0D,GAAAiF,GACAA,GAAAkvD,EAAAn0D,GAAA+W,WAEA,OAAArP,GAGAm6D,EAAA,WACA,OAAA71D,EAAA82D,EAAAjB,KAAA71D,EAAA82D,EAAAkB,KAAAT,KAGAzB,EAAA,SAAA73D,GACA,OAAA+B,EAAA82D,EAAAhB,KAAA,IAAAjnD,YAAA,EACA,MAGA,EACA,GACA,IACA,EAGA,EACA,GACA,GACA,GACA,MACA,YACA,YAGA,EACA,EAGA5Q,EAAAy8C,iBAAA,EAAAz8C,EAAA48C,yBAAA,EAAA58C,EAAA48C,wBAAA,EAAA58C,EAAA08C,cAAA,YAIAob,EAAA,WACA,OAAA/1D,EAAA82D,EAAAf,KAAAgB,EAAAC,EAAAD,EAAAE,IAGAT,EAAA,SAAAr6D,GACA,OAAA6D,EAAA82D,EAAAN,KAAAY,EAAAj7D,KAEA65D,EAAA,SAAAvyD,GACA,OAAAzD,EAAA82D,EAAAd,KAAAvyD,IAEAkI,EAAA,SAAA1N,GACA,IAAAvC,EAAA,IAAAmT,YAAA,EACA,MACA,QACA,QACA,WAEA5Q,EAAAwX,WAAA,OAAAxX,EAAAwX,WAAA,OAAAxX,EAAAwX,WAAA,UAAAxX,EAAAwX,SACA,OACA,MAYA,OAPAxX,EAAA28C,aACAl/C,EAAA,IAAAuC,EAAA28C,aAAA,OACAl/C,EAAA,IAAAuC,EAAA28C,aAAA,OACAl/C,EAAA,IAAAuC,EAAA28C,aAAA,MACAl/C,EAAA,QAAAuC,EAAA28C,YAGA56C,EAAA82D,EAAAnrD,KAAAjQ,IAEA66D,EAAA,SAAAt4D,GACA,OAAA+B,EAAA82D,EAAAP,KAAA5qD,EAAA1N,GAAAu4D,EAAAv4D,EAAA9B,MAAA+5D,EAAAj4D,KAEAg4D,EAAA,SAAAwC,GACA,OAAAz4D,EAAA82D,EAAAb,KAAA,IAAApnD,YAAA,SACA,WAAA4pD,IAAA,aAAAA,IAAA,UAAAA,IAAA,MAAAA,MAGAvC,EAAA,SAAAj4D,GACA,OAAA+B,EAAA82D,EAAAZ,KAAA,UAAAj4D,EAAA9B,KAAA6D,EAAA82D,EAAA0B,KAAAnB,GAAAr3D,EAAA82D,EAAAoB,KAAAZ,GAAAzB,IAAAa,EAAAz4D,KAEAk4D,EAAA,SAAAsC,EAAA9mC,GACA,IAAA+mC,KACA1kE,EAAA29B,EAAAx7B,OAEA,MAAAnC,IACA0kE,EAAA1kE,GAAAiY,EAAA0lB,EAAA39B,IAEA,OAAAgM,EAAA+L,MAAA,MAAA+qD,EAAAX,KAAAF,EAAAwC,IAAAvtD,OAAAwtD,KAOAtC,EAAA,SAAAzkC,GACA,IAAA39B,EAAA29B,EAAAx7B,OACA2M,KAEA,MAAA9O,IACA8O,EAAA9O,GAAAuX,EAAAomB,EAAA39B,IAGA,OAAAgM,EAAA+L,MAAA,MAAA+qD,EAAAV,KAAAE,EAAA,aAAAprD,OAAApI,GAAAoI,OAAAmrD,EAAA1kC,MAEA0kC,EAAA,SAAA1kC,GACA,IAAA39B,EAAA29B,EAAAx7B,OACA2M,KAEA,MAAA9O,IACA8O,EAAA9O,GAAA4iE,EAAAjlC,EAAA39B,IAEA,OAAAgM,EAAA+L,MAAA,MAAA+qD,EAAAT,MAAAnrD,OAAApI,KAEAwzD,EAAA,SAAA7gD,GACA,IAAA1F,EAAA,IAAAlB,YAAA,EACA,MACA,QACA,QACA,YACA,WAAA4G,IAAA,aAAAA,IAAA,UAAAA,IAAA,MAAAA,EACA,QACA,IACA,IACA,QACA,QACA,yEACA,gDACA,kBAEA,OAAAzV,EAAA82D,EAAAR,KAAAvmD,IAGA0mD,EAAA,SAAAx4D,GACA,IAEA46C,EACA7kD,EAHA2kE,EAAA16D,EAAA06D,YACA5oD,EAAA,IAAAlB,WAAA,EAAA8pD,EAAAxiE,QAOA,IAAAnC,EAAA,EAAiBA,EAAA2kE,EAAAxiE,OAAoBnC,IACrC6kD,EAAA8f,EAAA3kE,GAAA6kD,MAEA9oC,EAAA/b,EAAA,GAAA6kD,EAAA+f,WAAA,EAAA/f,EAAAggB,cAAA,EAAAhgB,EAAAqhB,cAGA,OAAAl6D,EAAA82D,EAAAL,KAAA1mD,IAGA2mD,EAAA,SAAAz4D,GACA,OAAA+B,EAAA82D,EAAAJ,KAAAC,EAAA14D,GAAA+B,EAAA82D,EAAAwB,KAAAX,GAAA33D,EAAA82D,EAAAsB,KAAAX,GAAAz3D,EAAA82D,EAAAuB,KAAAX,GAAA13D,EAAA82D,EAAAqB,KAAAX,KAGA,WACA,IAAAsB,EAAAC,EAEApC,EAAA,SAAA14D,GAEA,OAAA+B,EAAA82D,EAAAH,KAAA,IAAA9nD,YAAA,EACA,MACA,oBAAA5Q,EAAA9B,KAAA28D,EAAA76D,GAAA86D,EAAA96D,KAGA66D,EAAA,SAAA76D,GACA,IAIAjK,EAJAsxD,EAAArnD,EAAAqnD,QACAC,EAAAtnD,EAAAsnD,QACAyT,KACAC,KAIA,IAAAjlE,EAAA,EAAmBA,EAAAsxD,EAAAnvD,OAAgBnC,IACnCglE,EAAA/7D,MAAA,MAAAqoD,EAAAtxD,GAAA+W,cAAA,GACAiuD,EAAA/7D,KAAA,IAAAqoD,EAAAtxD,GAAA+W,YACAiuD,IAAA9tD,OAAAyD,MAAA/Y,UAAAqV,MAAA9W,KAAAmxD,EAAAtxD,KAIA,IAAAA,EAAA,EAAmBA,EAAAuxD,EAAApvD,OAAgBnC,IACnCilE,EAAAh8D,MAAA,MAAAsoD,EAAAvxD,GAAA+W,cAAA,GACAkuD,EAAAh8D,KAAA,IAAAsoD,EAAAvxD,GAAA+W,YACAkuD,IAAA/tD,OAAAyD,MAAA/Y,UAAAqV,MAAA9W,KAAAoxD,EAAAvxD,KAGA,OAAAgM,EAAA82D,EAAAe,KAAA,IAAAhpD,YAAA,YACA,IACA,IACA,IACA,yBACA,MAAA5Q,EAAA4B,QAAA,MAAA5B,EAAA4B,OACA,MAAA5B,EAAA6B,SAAA,MAAA7B,EAAA6B,OACA,SACA,SACA,QACA,IACA,mGACA,KACA,QACAE,EAAA82D,EAAAgB,KAAA,IAAAjpD,YAAA,EACA5Q,EAAAk/C,WACAl/C,EAAAo/C,qBACAp/C,EAAAm/C,SACA,KACAlyC,QAAAo6C,EAAAnvD,SACA+U,OAAA8tD,GAAA9tD,QAAAq6C,EAAApvD,SACA+U,OAAA+tD,KACAj5D,EAAA82D,EAAAiB,KAAA,IAAAlpD,YAAA,aACA,aACA,kBAIAkqD,EAAA,SAAA96D,GACA,OAAA+B,EAAA82D,EAAAmB,KAAA,IAAAppD,YAGA,YACA,IAGA,QACA,SACA,MAAA5Q,EAAA08C,eAAA,MAAA18C,EAAA08C,cAEA,MAAA18C,EAAA68C,aAAA,MAAA78C,EAAA68C,WACA,IACA,KAEA,MAAA78C,EAAA28C,aAAA,MAAA38C,EAAA28C,WAAA,MAGAkb,EAAA73D,KA9EA,GAkFAuN,EAAA,SAAAvN,GACA,IAAAvC,EAAA,IAAAmT,YAAA,EACA,MACA,QACA,SACA,WAAA5Q,EAAA5F,KAAA,aAAA4F,EAAA5F,KAAA,UAAA4F,EAAA5F,KAAA,MAAA4F,EAAA5F,GACA,SACA,WAAA4F,EAAAwX,WAAA,aAAAxX,EAAAwX,WAAA,UAAAxX,EAAAwX,WAAA,MAAAxX,EAAAwX,SACA,gBACA,IACA,IACA,IACA,IACA,0EACA,MAAAxX,EAAA4B,QAAA,MAAA5B,EAAA4B,MAAA,KACA,MAAA5B,EAAA6B,SAAA,MAAA7B,EAAA6B,OAAA,MAGA,OAAAE,EAAA82D,EAAAtrD,KAAA9P,IAOAuQ,EAAA,SAAAhO,GACA,IAAAi7D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EA8BA,OA5BAN,EAAAl5D,EAAA82D,EAAA5qD,KAAA,IAAA2C,YAAA,EACA,QACA,WAAA5Q,EAAA5F,KAAA,aAAA4F,EAAA5F,KAAA,UAAA4F,EAAA5F,KAAA,MAAA4F,EAAA5F,GACA,QACA,QACA,QACA,WAGAkhE,EAAA74D,KAAAuzB,MAAAh2B,EAAAk2D,qBAAAyD,EAAA,IACA4B,EAAA94D,KAAAuzB,MAAAh2B,EAAAk2D,qBAAAyD,EAAA,IAEAuB,EAAAn5D,EAAA82D,EAAAzqD,KAAA,IAAAwC,YAAA,EACA,MAEA0qD,IAAA,OAAAA,IAAA,OAAAA,IAAA,UAAAA,EAAAC,IAAA,OAAAA,IAAA,OAAAA,IAAA,UAAAA,KAKAF,EAAA,GAQA,UAAAr7D,EAAA9B,MACAi9D,EAAAvC,EAAA54D,EAAAq7D,GACAt5D,EAAA82D,EAAA7qD,KAAAitD,EAAAC,EAAAC,KAMAC,EAAA5C,EAAAx4D,GACAm7D,EAAAvC,EAAA54D,EAAAo7D,EAAAljE,OAAAmjE,GACAt5D,EAAA82D,EAAA7qD,KAAAitD,EAAAC,EAAAC,EAAAC,KAQA9tD,EAAA,SAAAtN,GAEA,OADAA,EAAAwX,SAAAxX,EAAAwX,UAAA,WACAzV,EAAA82D,EAAAvrD,KAAAC,EAAAvN,GAAAs4D,EAAAt4D,KAGA24D,EAAA,SAAA34D,GACA,IAAAvC,EAAA,IAAAmT,YAAA,EACA,OACA,WAAA5Q,EAAA5F,KAAA,aAAA4F,EAAA5F,KAAA,UAAA4F,EAAA5F,KAAA,MAAA4F,EAAA5F,GACA,QACA,QACA,QACA,UAUA,MAJA,UAAA4F,EAAA9B,OACAT,IAAAvF,OAAA,MAGA6J,EAAA82D,EAAAF,KAAAl7D,IAGA,WACA,IAAA+9D,EAAAC,EAAAC,EAMAA,EAAA,SAAAhB,EAAAroD,GACA,IAAAspD,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAkBA,OAfApB,EAAAxiE,cACA0K,IAAA83D,EAAA,GAAAljD,WACAmkD,EAAA,QAEA/4D,IAAA83D,EAAA,GAAA1/D,OACA4gE,EAAA,QAEAh5D,IAAA83D,EAAA,GAAA9f,QACAihB,EAAA,QAEAj5D,IAAA83D,EAAA,GAAAoB,wBACAA,EAAA,KAIA,EACA,EAAAH,EAAAC,EAAAC,EAAAC,EAAA,GACA,WAAApB,EAAAxiE,UAAA,aAAAwiE,EAAAxiE,UAAA,UAAAwiE,EAAAxiE,UAAA,MAAAwiE,EAAAxiE,QACA,WAAAma,KAAA,aAAAA,KAAA,UAAAA,KAAA,MAAAA,IAIAopD,EAAA,SAAAz7D,EAAAqS,GACA,IAAAP,EAAA4oD,EAAAqB,EAAAhmE,EAOA,IALA2kE,EAAA16D,EAAA06D,YACAroD,GAAA,MAAAqoD,EAAAxiE,OAEA4Z,EAAA4pD,EAAAhB,EAAAroD,GAEAtc,EAAA,EAAmBA,EAAA2kE,EAAAxiE,OAAoBnC,IACvCgmE,EAAArB,EAAA3kE,GACA+b,IAAA7E,SAAA,WAAA8uD,EAAAvkD,YAAA,aAAAukD,EAAAvkD,YAAA,UAAAukD,EAAAvkD,YAAA,MAAAukD,EAAAvkD,UACA,WAAAukD,EAAA/gE,QAAA,aAAA+gE,EAAA/gE,QAAA,UAAA+gE,EAAA/gE,QAAA,MAAA+gE,EAAA/gE,KACA+gE,EAAAnhB,MAAAohB,WAAA,EAAAD,EAAAnhB,MAAA+f,UAAAoB,EAAAnhB,MAAAggB,cAAA,EAAAmB,EAAAnhB,MAAAqhB,eAAA,EAAAF,EAAAnhB,MAAAshB,cAAA,EAAAH,EAAAnhB,MAAAuhB,gBAAA,MAAAJ,EAAAnhB,MAAAwhB,oBAAA,GAAAL,EAAAnhB,MAAAwhB,qBACA,WAAAL,EAAAD,yBAAA,aAAAC,EAAAD,yBAAA,UAAAC,EAAAD,yBAAA,MAAAC,EAAAD,wBAGA,OAAA/5D,EAAA82D,EAAAD,KAAA,IAAAhoD,WAAAkB,KAGA0pD,EAAA,SAAAx7D,EAAAqS,GACA,IAAAP,EAAA4oD,EAAAqB,EAAAhmE,EAOA,IALA2kE,EAAA16D,EAAA06D,YACAroD,GAAA,KAAAqoD,EAAAxiE,OAEA4Z,EAAA4pD,EAAAhB,EAAAroD,GAEAtc,EAAA,EAAmBA,EAAA2kE,EAAAxiE,OAAoBnC,IACvCgmE,EAAArB,EAAA3kE,GACA+b,IAAA7E,SAAA,WAAA8uD,EAAAvkD,YAAA,aAAAukD,EAAAvkD,YAAA,UAAAukD,EAAAvkD,YAAA,MAAAukD,EAAAvkD,UACA,WAAAukD,EAAA/gE,QAAA,aAAA+gE,EAAA/gE,QAAA,UAAA+gE,EAAA/gE,QAAA,MAAA+gE,EAAA/gE,OAGA,OAAA+G,EAAA82D,EAAAD,KAAA,IAAAhoD,WAAAkB,KAGA8mD,EAAA,SAAA54D,EAAAqS,GACA,gBAAArS,EAAA9B,KACAs9D,EAAAx7D,EAAAqS,GAGAopD,EAAAz7D,EAAAqS,IA7EA,GAiFA,IAAA8wH,GACArrE,OACAC,OACAG,OACAC,OACA51C,YAAA,SAAAmR,GACA,IAEAj2B,EAFA4+D,EAAAvE,IACAwE,EAAAnE,EAAAzkC,GAMA,OAHAj2B,EAAA,IAAAmT,WAAAyrD,EAAAvvD,WAAAwvD,EAAAxvD,YACArP,EAAApD,IAAAgiE,GACA5+D,EAAApD,IAAAiiE,EAAAD,EAAAvvD,YACArP,IAcAkO,EAAA,WACAhW,KAAAuW,KAAA,WACA,IAAA2H,KAOAle,KAAAme,GAAA,SAAA5V,EAAA6V,GACAF,EAAA3V,KACA2V,EAAA3V,OAEA2V,EAAA3V,GAAA2V,EAAA3V,GAAA+O,OAAA8G,IAQApe,KAAAqe,IAAA,SAAA9V,EAAA6V,GACA,IAAAtG,EACA,QAAAoG,EAAA3V,KAGAuP,EAAAoG,EAAA3V,GAAAuK,QAAAsL,GACAF,EAAA3V,GAAA2V,EAAA3V,GAAA8O,QACA6G,EAAA3V,GAAA+V,OAAAxG,EAAA,GACAA,GAAA,IAOA9X,KAAA2W,QAAA,SAAApO,GACA,IAAAgW,EAAAne,EAAAmC,EAAAic,EAEA,GADAD,EAAAL,EAAA3V,GACAgW,EAOA,OAAAjc,UAAAC,OAEA,IADAA,EAAAgc,EAAAhc,OACAnC,EAAA,EAAuBA,EAAAmC,IAAYnC,EACnCme,EAAAne,GAAAG,KAAAP,KAAAsC,UAAA,QAEW,CAGX,IAFAkc,KACApe,EAAAkC,UAAAC,OACAnC,EAAA,EAAuBA,EAAAkC,UAAAC,SAAsBnC,EAC7Coe,EAAAnV,KAAA/G,UAAAlC,IAGA,IADAmC,EAAAgc,EAAAhc,OACAnC,EAAA,EAAuBA,EAAAmC,IAAYnC,EACnCme,EAAAne,GAAA+X,MAAAnY,KAAAwe,KAOAxe,KAAAye,QAAA,WACAP,QAcAlI,EAAAhU,UAAA0c,KAAA,SAAAC,GASA,OARA3e,KAAAme,GAAA,gBAAAtO,GACA8O,EAAAtV,KAAAwG,KAGA7P,KAAAme,GAAA,gBAAAS,GACAD,EAAA1L,MAAA2L,KAGAD,GAOA3I,EAAAhU,UAAAqH,KAAA,SAAAwG,GACA7P,KAAA2W,QAAA,OAAA9G,IAGAmG,EAAAhU,UAAAiR,MAAA,SAAA2L,GACA5e,KAAA2W,QAAA,OAAAiI,IAGA,IAAAjM,EAAAqD,EAUAk+C,EAAA,EACAC,EAAA,IAUAC,EAAA,SAAAj4C,GACA,IAAA/b,EAAA,EACA0H,GACAusD,aAAA,EACAC,YAAA,GAEAD,EAAA,EACAC,EAAA,EAGA,MAAAl0D,EAAA+b,EAAAhF,WAAA,CAEA,GAAAgF,EAAA/b,KAAA+zD,EACA,MAIA,YAAAh4C,EAAA/b,GACAi0D,GAAA,IACAj0D,IAEAi0D,GAAAl4C,EAAA/b,KAGA,YAAA+b,EAAA/b,GACAk0D,GAAA,IACAl0D,IAMA,GAJAk0D,GAAAn4C,EAAA/b,MAIA0H,EAAAysD,SAAAF,IAAAH,EAAA,CACApsD,EAAAusD,cACAvsD,EAAAwsD,cACAxsD,EAAAysD,QAAAp4C,EAAA/E,SAAAhX,IAAAk0D,GACA,MAIAl0D,GAAAk0D,EACAD,EAAA,EACAC,EAAA,EAGA,OAAAxsD,GAIA0sD,EAAA,SAAAC,GAGA,aAAAA,EAAAF,QAAA,GACA,KAIA,MAAAE,EAAAF,QAAA,MAAAE,EAAAF,QAAA,IACA,KAIA,SAAAh9C,OAAAC,aAAAi9C,EAAAF,QAAA,GAAAE,EAAAF,QAAA,GAAAE,EAAAF,QAAA,GAAAE,EAAAF,QAAA,IACA,KAIA,IAAAE,EAAAF,QAAA,GACA,KAKAE,EAAAF,QAAAn9C,SAAA,EAAAq9C,EAAAF,QAAAhyD,OAAA,IAIAmyD,EAAA,SAAAh+C,EAAAi+C,GACA,IACAv0D,EACAqK,EACAiS,EACA7M,EAJAqH,KAOA,QAAAy9C,EAAA,IACA,OAAAz9C,EAKA,IADAzM,EAAA,GAAAkqD,EAAA,GACAv0D,EAAA,EAAiBA,EAAAqK,EAAWrK,IAC5Bsc,EAAA,EAAAtc,EACAyP,GACAtH,KAAA,EAAAosD,EAAAj4C,EAAA,GACAhG,OAIA,EAAAi+C,EAAAj4C,EAAA,KACA7M,EAAA+kD,OAAAD,EAAAj4C,EAAA,MAAAi4C,EAAAj4C,EAAA,GACAxF,EAAA7N,KAAAwG,IAGA,OAAAqH,GAGAw8C,EAAA,SAAAA,IAEAA,EAAA1xD,UAAAuU,KAAAhW,KAAAP,MAEAA,KAAA60D,mBAEA70D,KAAA80D,YAAA,IAAAC,GAAA,KACA,IAAAA,GAAA,KACA,IAAAA,GAAA,KACA,IAAAA,GAAA,MAGA/0D,KAAAk3C,QAGAl3C,KAAA80D,WAAAtoC,QAAA,SAAAwoC,GACAA,EAAA72C,GAAA,OAAAne,KAAA2W,QAAA/U,KAAA5B,KAAA,SACAg1D,EAAA72C,GAAA,OAAAne,KAAA2W,QAAA/U,KAAA5B,KAAA,UACOA,OAGP0zD,EAAA1xD,UAAA,IAAA2Q,EACA+gD,EAAA1xD,UAAAqH,KAAA,SAAAghB,GACA,IAAAoqC,EAAAE,EAGA,gBAAAtqC,EAAAs+B,cAKA8L,EAAAL,EAAA/pC,EAAAu+B,aAGA6L,EAAAJ,cAAAH,IAKAS,EAAAH,EAAAC,GAGAE,IAYA,GAAAtqC,EAAA5T,IAAAzW,KAAAi1D,WAEAj1D,KAAAk1D,qBAAA,MAFA,CAIO,GAAA7qC,EAAA5T,MAAAzW,KAAAi1D,YAAAj1D,KAAAk1D,oBAMP,OALAl1D,KAAAytI,mBACAztI,KAAAytI,cAEAztI,KAAAk1D,qBAAA,IAMAl1D,KAAA60D,gBAAA70D,KAAA60D,gBAAAv9C,OAAAo9C,EAAArqC,EAAA3T,IAAAi+C,IACA30D,KAAAi1D,aAAA5qC,EAAA5T,MACAzW,KAAAytI,YAAA,GAEAztI,KAAAytI,cACAztI,KAAAi1D,WAAA5qC,EAAA5T,MAGAi9C,EAAA1xD,UAAAiR,MAAA,WAEAjT,KAAA60D,gBAAAtyD,QASAvC,KAAA60D,gBAAAroC,QAAA,SAAA2oC,EAAAC,GACAD,EAAAE,aAAAD,IAIAp1D,KAAA60D,gBAAAtsB,KAAA,SAAAhiC,EAAAY,GACA,OAAAZ,EAAAmQ,MAAAvP,EAAAuP,IACAnQ,EAAA8uD,aAAAluD,EAAAkuD,aAEA9uD,EAAAmQ,IAAAvP,EAAAuP,MAGA1W,KAAA60D,gBAAAroC,QAAA,SAAAlQ,GACAA,EAAA/T,KAAA,GAEAvI,KAAAs1D,qBAAAh5C,IAIOtc,MAEPA,KAAA60D,gBAAAtyD,OAAA,EACAvC,KAAA80D,WAAAtoC,QAAA,SAAAwoC,GACAA,EAAA/hD,SACOjT,OAhCPA,KAAA80D,WAAAtoC,QAAA,SAAAwoC,GACAA,EAAA/hD,SACSjT,OAkCT0zD,EAAA1xD,UAAAk1C,MAAA,WACAl3C,KAAAi1D,WAAA,KACAj1D,KAAAk1D,qBAAA,EACAl1D,KAAAytI,YAAA,EACAztI,KAAAu1D,sBAAA,WACAv1D,KAAA80D,WAAAtoC,QAAA,SAAAgpC,GACAA,EAAAte,WAIAwc,EAAA1xD,UAAAszD,qBAAA,SAAAh5C,GAEAtc,KAAAy1D,mBAAAn5C,GACAtc,KAAAu1D,qBAAAj5C,EAAA/T,MAAA,EACOvI,KAAA01D,mBAAAp5C,KACPtc,KAAAu1D,qBAAAj5C,EAAA/T,MAAA,GAEA,OAAAvI,KAAAu1D,qBAAAj5C,EAAA/T,OAKAvI,KAAA80D,YAAAx4C,EAAA/T,MAAA,GAAAvI,KAAAu1D,qBAAAj5C,EAAA/T,OAAAc,KAAAiT,IAGAo3C,EAAA1xD,UAAAyzD,mBAAA,SAAAn5C,GACA,qBAAAA,EAAAs4C,SAEAlB,EAAA1xD,UAAA0zD,mBAAA,SAAAp5C,GACA,qBAAAA,EAAAs4C,SAOA,IAAAe,GACA3K,GAAA,IACA4K,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,GACAC,IAAA,GACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,GACAC,IAAA,GACAC,IAAA,GACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,MAGAC,EAAA,SAAAz4D,GACA,cAAAA,EACA,IAEAA,EAAA+yD,EAAA/yD,MACA2U,OAAAC,aAAA5U,KAIA04D,GAAA,GAIAC,IAAA,4EAIAC,GAAA,WACA,IAAA1zD,KACA1H,EAAAk7D,GAAA,EACA,MAAAl7D,IACA0H,EAAAuB,KAAA,IAEA,OAAAvB,GAGAitD,GAAA,SAAAA,EAAA0G,EAAAC,GACA3G,EAAA/yD,UAAAuU,KAAAhW,KAAAP,MAEAA,KAAA27D,OAAAF,GAAA,EACAz7D,KAAA47D,aAAAF,GAAA,EAEA17D,KAAA67D,MAAA,SAAA77D,KAAA27D,QAAA,EAAA37D,KAAA47D,eAEA57D,KAAA87D,eACA97D,KAAAk3C,QAEAl3C,KAAAqJ,KAAA,SAAAiT,GACA,IAAAzM,EAAAksD,EAAAC,EAAAC,EAAApyD,EAKA,GAHAgG,EAAA,MAAAyM,EAAAs4C,OAGA/kD,IAAA7P,KAAAk8D,kBAeA,GATA,cAAArsD,GACA7P,KAAAk8D,iBAAArsD,EACSA,IAAA7P,KAAAm8D,WACTn8D,KAAAk8D,iBAAA,MAGAF,EAAAnsD,IAAA,EACAosD,EAAA,IAAApsD,EAEAA,IAAA7P,KAAAm8D,SAES,GAAAtsD,IAAA7P,KAAAo8D,wBACTp8D,KAAA0zB,MAAA,aACS,GAAA7jB,IAAA7P,KAAAq8D,gBACTr8D,KAAAs8D,gBAAAhgD,EAAA5F,KAEA1W,KAAAu8D,eAAAjgD,EAAA5F,KAGAqlD,EAAA/7D,KAAAw8D,WACAx8D,KAAAw8D,WAAAx8D,KAAAy8D,cACAz8D,KAAAy8D,cAAAV,EAGA/7D,KAAA08D,UAAApgD,EAAA5F,SACS,GAAA7G,IAAA7P,KAAA28D,gBACT38D,KAAA48D,QAAAtB,GAAA,EACAt7D,KAAA0zB,MAAA,cACS,GAAA7jB,IAAA7P,KAAA68D,gBACT78D,KAAA48D,QAAAtB,GAAA,EACAt7D,KAAA0zB,MAAA,cACS,GAAA7jB,IAAA7P,KAAA88D,gBACT98D,KAAA48D,QAAAtB,GAAA,EACAt7D,KAAA0zB,MAAA,cACS,GAAA7jB,IAAA7P,KAAA+8D,iBACT/8D,KAAAs8D,gBAAAhgD,EAAA5F,KACA1W,KAAAu8D,eAAAjgD,EAAA5F,KACA1W,KAAAg9D,eACAh9D,KAAA08D,UAAApgD,EAAA5F,SACS,GAAA7G,IAAA7P,KAAAi9D,WACT,UAAAj9D,KAAA0zB,MACA1zB,KAAAy8D,cAAAnB,IAAAt7D,KAAAy8D,cAAAnB,IAAAjkD,MAAA,MAEArX,KAAAw8D,WAAAlB,IAAAt7D,KAAAw8D,WAAAlB,IAAAjkD,MAAA,WAES,GAAAxH,IAAA7P,KAAAk9D,wBACTl9D,KAAAu8D,eAAAjgD,EAAA5F,KACA1W,KAAAw8D,WAAAhB,UACS,GAAA3rD,IAAA7P,KAAAm9D,4BACTn9D,KAAAy8D,cAAAjB,UACS,GAAA3rD,IAAA7P,KAAAo9D,0BACTp9D,KAAA0zB,MAAA,eAGS,GAAA1zB,KAAAq9D,mBAAArB,EAAAC,GAKTD,GAAA,EAAAA,IAAA,EACAnyD,EAAAwxD,EAAAW,EAAAC,GACAj8D,UAAA0zB,OAAApX,EAAA5F,IAAA7M,GACA7J,KAAAs9D,eAGS,GAAAt9D,KAAAu9D,eAAAvB,EAAAC,GAOT,UAAAj8D,KAAA0zB,MACA1zB,KAAAy8D,cAAAz8D,KAAAw9D,MAAAx9D,KAAAy8D,cAAAz8D,KAAAw9D,MAAAnmD,MAAA,MAEArX,KAAAw8D,WAAAlB,IAAAt7D,KAAAw8D,WAAAlB,IAAAjkD,MAAA,MAOA2kD,GAAA,EAAAA,IAAA,EACAnyD,EAAAwxD,EAAAW,EAAAC,GACAj8D,UAAA0zB,OAAApX,EAAA5F,IAAA7M,GACA7J,KAAAs9D,eAGS,GAAAt9D,KAAAy9D,aAAAzB,EAAAC,GAETj8D,KAAAs8D,gBAAAhgD,EAAA5F,KAIA1W,UAAA0zB,OAAApX,EAAA5F,IAAA,KACA1W,KAAAs9D,UAEA,SAAArB,IACAj8D,KAAA09D,cAAAphD,EAAA5F,KAAA,MAGA,OAAAulD,IACAj8D,KAAA09D,cAAAphD,EAAA5F,KAAA,WAIS,GAAA1W,KAAA29D,oBAAA3B,EAAAC,GAKTj8D,KAAAs9D,SAAA,EAAArB,OAGS,GAAAj8D,KAAA49D,MAAA5B,EAAAC,GAAA,CAIT,IAAA4B,EAAAtC,GAAAzoD,QAAA,KAAAjD,GAEAguD,IAAA79D,KAAAw9D,OAEAx9D,KAAAs8D,gBAAAhgD,EAAA5F,KACA1W,KAAAw9D,KAAAK,GAIA,EAAA5B,IAAA,IAAAj8D,KAAA89D,YAAAhrD,QAAA,MACA9S,KAAA09D,cAAAphD,EAAA5F,KAAA,MAGA,SAAA7G,KAKA7P,KAAAs9D,QAAA,OAAAztD,IAAA,IAGA7P,KAAA+9D,WAAA9B,IAKA,SAAAA,IACAj8D,KAAA09D,cAAAphD,EAAA5F,KAAA,WAKS1W,KAAAg+D,aAAAhC,KACT,IAAAC,IACAA,EAAA,MAEApyD,EAAAwxD,EAAAW,GACAnyD,GAAAwxD,EAAAY,GACAj8D,UAAA0zB,OAAApX,EAAA5F,IAAA7M,GACA7J,KAAAs9D,SAAAzzD,EAAAtH,aAlKAvC,KAAAk8D,iBAAA,OAsKAnH,GAAA/yD,UAAA,IAAA2Q,EAGAoiD,GAAA/yD,UAAAu6D,eAAA,SAAA7lD,GACA,IAAAunD,EAAAj+D,KAAAw8D,WAEApkD,IAAA,SAAAylD,GACA,OAAAA,EAAAl1D,SAGAmkB,KAAA,MAEA3pB,QAAA,iBAEA86D,EAAA17D,QACAvC,KAAA2W,QAAA,QACA82C,SAAAztD,KAAA08D,UACAhP,OAAAh3C,EACA7M,KAAAo0D,EACAtrD,OAAA3S,KAAA67D,SAQA9G,GAAA/yD,UAAAk1C,MAAA,WACAl3C,KAAA0zB,MAAA,QAKA1zB,KAAA48D,QAAA,EACA58D,KAAA08D,UAAA,EACA18D,KAAAw8D,WAAAhB,KACAx7D,KAAAy8D,cAAAjB,KACAx7D,KAAAk8D,iBAAA,KAGAl8D,KAAAs9D,QAAA,EACAt9D,KAAAw9D,KAAAlC,GAGAt7D,KAAA89D,gBAMA/I,GAAA/yD,UAAA85D,aAAA,WAaA,IAAA97D,KAAA47D,cACA57D,KAAAk+D,MAAA,GACAl+D,KAAAm+D,KAAA,GACAn+D,KAAAo+D,UAAA,GAAAp+D,KAAA27D,SAAA,EACA37D,KAAAq+D,QAAA,IACO,IAAAr+D,KAAA47D,eACP57D,KAAAk+D,MAAA,GACAl+D,KAAAm+D,KAAA,GACAn+D,KAAAo+D,UAAA,GAAAp+D,KAAA27D,SAAA,EACA37D,KAAAq+D,QAAA,IAOAr+D,KAAAm8D,SAAA,EAEAn8D,KAAAo8D,wBAAA,GAAAp8D,KAAAo+D,SACAp+D,KAAAq8D,gBAAA,GAAAr8D,KAAAo+D,SAEAp+D,KAAA28D,gBAAA,GAAA38D,KAAAo+D,SACAp+D,KAAA68D,gBAAA,GAAA78D,KAAAo+D,SACAp+D,KAAA88D,gBAAA,GAAA98D,KAAAo+D,SACAp+D,KAAA+8D,iBAAA,GAAA/8D,KAAAo+D,SAEAp+D,KAAAo9D,0BAAA,GAAAp9D,KAAAo+D,SAEAp+D,KAAAi9D,WAAA,GAAAj9D,KAAAo+D,SACAp+D,KAAAk9D,wBAAA,GAAAl9D,KAAAo+D,SACAp+D,KAAAm9D,4BAAA,GAAAn9D,KAAAo+D,UAcArJ,GAAA/yD,UAAAq7D,mBAAA,SAAArB,EAAAC,GACA,OAAAD,IAAAh8D,KAAAm+D,MAAAlC,GAAA,IAAAA,GAAA,IAcAlH,GAAA/yD,UAAAu7D,eAAA,SAAAvB,EAAAC,GACA,OAAAD,IAAAh8D,KAAAm+D,KAAA,GAAAnC,IAAAh8D,KAAAm+D,KAAA,IAAAlC,GAAA,IAAAA,GAAA,IAcAlH,GAAA/yD,UAAAy7D,aAAA,SAAAzB,EAAAC,GACA,OAAAD,IAAAh8D,KAAAm+D,MAAAlC,GAAA,IAAAA,GAAA,IAcAlH,GAAA/yD,UAAA27D,oBAAA,SAAA3B,EAAAC,GACA,OAAAD,IAAAh8D,KAAAq+D,SAAApC,GAAA,IAAAA,GAAA,IAcAlH,GAAA/yD,UAAA47D,MAAA,SAAA5B,EAAAC,GACA,OAAAD,GAAAh8D,KAAAk+D,OAAAlC,EAAAh8D,KAAAk+D,MAAA,GAAAjC,GAAA,IAAAA,GAAA,KAYAlH,GAAA/yD,UAAA+7D,WAAA,SAAA9B,GACA,OAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,KAWAlH,GAAA/yD,UAAAg8D,aAAA,SAAAtgB,GACA,OAAAA,GAAA,IAAAA,GAAA,KAKAqX,GAAA/yD,UAAA07D,cAAA,SAAAhnD,EAAA4nD,GACAt+D,KAAA89D,YAAA99D,KAAA89D,YAAAxmD,OAAAgnD,GACA,IAAAz0D,EAAAy0D,EAAA5mD,OAAA,SAAA7N,EAAAy0D,GACA,OAAAz0D,EAAA,IAAAy0D,EAAA,KACO,IACPt+D,UAAA0zB,OAAAhd,EAAA7M,IAKAkrD,GAAA/yD,UAAAs6D,gBAAA,SAAA5lD,GACA,GAAA1W,KAAA89D,YAAAv7D,OAAA,CAGA,IAAAsH,EAAA7J,KAAA89D,YAAAvvD,UAAAmJ,OAAA,SAAA7N,EAAAy0D,GACA,OAAAz0D,EAAA,KAAAy0D,EAAA,KACO,IACPt+D,KAAA89D,eACA99D,UAAA0zB,OAAAhd,EAAA7M,KAIAkrD,GAAA/yD,UAAAu8D,MAAA,SAAA7nD,EAAA7M,GACA,IAAA20D,EAAAx+D,KAAAy8D,cAAAz8D,KAAAw9D,MAGAgB,GAAA30D,EACA7J,KAAAy8D,cAAAz8D,KAAAw9D,MAAAgB,GAGAzJ,GAAA/yD,UAAAy8D,OAAA,SAAA/nD,EAAA7M,GACA,IAAA20D,EAAAx+D,KAAAw8D,WAAAlB,IAEAkD,GAAA30D,EACA7J,KAAAw8D,WAAAlB,IAAAkD,GAGAzJ,GAAA/yD,UAAAg7D,aAAA,WACA,IAAA58D,EAEA,IAAAA,EAAA,EAAiBA,EAAAJ,KAAA48D,QAAkBx8D,IACnCJ,KAAAw8D,WAAAp8D,GAAA,GAGA,IAAAA,EAAAJ,KAAA48D,QAA4Bx8D,EAAAk7D,GAAgBl7D,IAC5CJ,KAAAw8D,WAAAp8D,GAAAJ,KAAAw8D,WAAAp8D,EAAA,GAGAJ,KAAAw8D,WAAAlB,IAAA,IAIAvG,GAAA/yD,UAAA08D,QAAA,aAGA,IAAAtL,IACAM,gBACAqB,iBAGA24E,IACArwH,iBAAA,GACAC,iBAAA,GACAC,qBAAA,IAGAtH,GAAA,WAEAC,GAAA,WAEAC,GAAA,SAAA9U,EAAAmO,GACA,IAAA3D,EAAA,EAEAxK,EAAAmO,IAQA3D,GAAA,GAKA,MAAAiB,KAAAuB,IAAAmB,EAAAnO,GAAA6U,GACA7U,GAAAwK,EAAAoK,GAGA,OAAA5U,GAGA+U,GAAA,SAAAA,EAAA7N,GACA,IAAA8N,EAAAC,EAEAF,EAAApU,UAAAuU,KAAAhW,KAAAP,MAEAA,KAAAwW,MAAAjO,EAEAvI,KAAAqJ,KAAA,SAAAwG,GACAA,EAAAtH,OAAAvI,KAAAwW,aAIAvJ,IAAAqJ,IACAA,EAAAzG,EAAA4G,KAGA5G,EAAA4G,IAAAN,GAAAtG,EAAA4G,IAAAH,GACAzG,EAAA6G,IAAAP,GAAAtG,EAAA6G,IAAAJ,GAEAD,EAAAxG,EAAA4G,IAEAzW,KAAA2W,QAAA,OAAA9G,KAGA7P,KAAAiT,MAAA,WACAqD,EAAAD,EACArW,KAAA2W,QAAA,SAGA3W,KAAA4W,cAAA,WACAN,OAAA,EACAD,OAAA,IAIAD,GAAApU,UAAA,IAAA2Q,EAEA,IA+EAg7H,GA/EAC,IACAx3H,2BACAD,mBAGA0vC,GAAA,SAAA1pC,EAAA3W,EAAAG,GACA,IAAAvF,EACA0H,EAAA,GACA,IAAA1H,EAAAoF,EAAqBpF,EAAAuF,EAASvF,IAC9B0H,GAAA,UAAAqU,EAAA/b,GAAAkV,SAAA,KAAA+B,OAAA,GAEA,OAAAvP,GAMAk5D,GAAA,SAAA7kD,EAAA3W,EAAAG,GACA,OAAAmK,mBAAA+1C,GAAA1pC,EAAA3W,EAAAG,KAMAmgD,GAAA,SAAA3pC,EAAA3W,EAAAG,GACA,OAAAsC,SAAA49C,GAAA1pC,EAAA3W,EAAAG,KAEAigD,GAAA,SAAA/1C,GACA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAEAoxD,IACAC,KAAA,SAAA9/C,GACA,IAAAhhB,EACA,OAAAghB,EAAAvR,KAAA,IAKA,IAAAzP,EAAA,EAAmBA,EAAAghB,EAAAvR,KAAAtN,OAAqBnC,IACxC,OAAAghB,EAAAvR,KAAAzP,GAAA,CAEAghB,EAAA+/C,YAAAH,GAAA5/C,EAAAvR,KAAA,EAAAzP,GAEAghB,EAAA/f,MAAA2/D,GAAA5/C,EAAAvR,KAAAzP,EAAA,EAAAghB,EAAAvR,KAAAtN,QAAAY,QAAA,WACA,MAGAie,EAAAvR,KAAAuR,EAAA/f,QAEA+/D,KAAA,SAAAhgD,GACA,IAAAhhB,EACA,OAAAghB,EAAAvR,KAAA,GAKA,IAAAzP,EAAA,EAAmBA,EAAAghB,EAAAvR,KAAAtN,OAAqBnC,IACxC,OAAAghB,EAAAvR,KAAAzP,GAAA,CAEAghB,EAAA+/C,YAAAH,GAAA5/C,EAAAvR,KAAA,EAAAzP,GACAghB,EAAA8R,IAAA8tC,GAAA5/C,EAAAvR,KAAAzP,EAAA,EAAAghB,EAAAvR,KAAAtN,QACA,QAIA8+D,KAAA,SAAAjgD,GACA,IAAAhhB,EAEA,IAAAA,EAAA,EAAmBA,EAAAghB,EAAAvR,KAAAtN,OAAqBnC,IACxC,OAAAghB,EAAAvR,KAAAzP,GAAA,CAEAghB,EAAAglC,MAAAN,GAAA1kC,EAAAvR,KAAA,EAAAzP,GACA,MAGAghB,EAAAkgD,YAAAlgD,EAAAvR,KAAAuH,SAAAhX,EAAA,GACAghB,EAAAvR,KAAAuR,EAAAkgD,cAKAqsE,GAAA,SAAAroH,GACA,IAoBAllB,EApBAoE,GACA6+B,SAAA/d,MAAA+d,OAKA9pB,WAAA+L,KAAA/L,YAKAgoD,EAAA,EAIAnwD,KAIAowD,EAAA,EAQA,GALAmsE,GAAA3rI,UAAAuU,KAAAhW,KAAAP,MAIAA,KAAA4tD,aAAA8/E,GAAAnwH,qBAAAjI,SAAA,IACA9Q,EAAA+U,WACA,IAAAnZ,EAAA,EAAmBA,EAAAoE,EAAA+U,WAAAhX,OAAgCnC,IACnDJ,KAAA4tD,eAAA,KAAAppD,EAAA+U,WAAAnZ,GAAAkV,SAAA,KAAA+B,OAAA,GAIArX,KAAAqJ,KAAA,SAAAub,GACA,IAAAxD,EAAA6kC,EAAAT,EAAAU,EAAA9lD,EAAA+lD,EACA,sBAAAvhC,EAAArc,KAaA,GANAqc,EAAAs7C,yBACAsB,EAAA,EACApwD,EAAA7O,OAAA,GAIA,IAAA6O,EAAA7O,SAAAqiB,EAAA/U,KAAAtN,OAAA,IAAAqiB,EAAA/U,KAAA,SAAA1F,WAAA,IAAAya,EAAA/U,KAAA,SAAA1F,WAAA,IAAAya,EAAA/U,KAAA,SAAA1F,WAAA,IACA3F,EAAA6+B,OAEAo+B,QAAAjvC,IAAA,8CAwBA,GAjBAphB,EAAA/H,KAAAub,GACA48C,GAAA58C,EAAA/U,KAAAsH,WAGA,IAAA/F,EAAA7O,SAKAg/D,EAAA3b,GAAAhhC,EAAA/U,KAAAuH,SAAA,OAIAmqD,GAAA,MAIAC,EAAAD,GAAA,CAWA,IANAngD,GACAvR,KAAA,IAAAoL,WAAAsmD,GACAvU,UACAt2C,IAAAtF,EAAA,GAAAsF,IACAD,IAAArF,EAAA,GAAAqF,KAEArW,EAAA,EAAmBA,EAAAmhE,GACnBngD,EAAAvR,KAAAnL,IAAA0M,EAAA,GAAAvB,KAAAuH,SAAA,EAAAmqD,EAAAnhE,MACAA,GAAAgR,EAAA,GAAAvB,KAAAsH,WACAqqD,GAAApwD,EAAA,GAAAvB,KAAAsH,WACA/F,EAAAupC,QAIAsL,EAAA,GACA,GAAA7kC,EAAAvR,KAAA,KAEAo2C,GAAA,EACAA,GAAAL,GAAAxkC,EAAAvR,KAAAuH,SAAA,QAGAmqD,GAAA3b,GAAAxkC,EAAAvR,KAAAuH,SAAA,SAKA,GAGA,GADAouC,EAAAI,GAAAxkC,EAAAvR,KAAAuH,SAAA6uC,EAAA,EAAAA,EAAA,IACAT,EAAA,EAEA,OAAAic,QAAAjvC,IAAA,+DASA,GAPA2zB,EAAA5uC,OAAAC,aAAA4J,EAAAvR,KAAAo2C,GAAA7kC,EAAAvR,KAAAo2C,EAAA,GAAA7kC,EAAAvR,KAAAo2C,EAAA,GAAA7kC,EAAAvR,KAAAo2C,EAAA,IAEAC,GACAzhD,GAAA0hD,EACAt2C,KAAAuR,EAAAvR,KAAAuH,SAAA6uC,EAAA,GAAAA,EAAAT,EAAA,KAEAU,EAAAvkD,IAAAukD,EAAAzhD,GACAw8D,GAAA/a,EAAAzhD,MACAw8D,GAAA/a,EAAAzhD,IAAAyhD,GAIA,iDAAAA,EAAAE,OAAA,CACA,IAAA1lD,EAAAwlD,EAAAr2C,KACAxK,GAAA,EAAA3E,EAAA,QAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,OAEA2E,GAAA,EACAA,GAAA,EAAA3E,EAAA,GACAwlD,EAAAxB,UAAAr/C,OAKA4H,IAAAmU,EAAA1K,UAAAzJ,IAAAmU,EAAA3K,MACA2K,EAAA1K,IAAAwvC,EAAAxB,UACAtjC,EAAA3K,IAAAyvC,EAAAxB,WAEA1kD,KAAA2W,QAAA,YAAAuvC,GAGA9kC,EAAA4rC,OAAA3jD,KAAA68C,GAEAD,GAAA,GACAA,GAAAT,QACSS,EAAAsb,GACTvhE,KAAA2W,QAAA,OAAAyK,MAGAusH,GAAA3rI,UAAA,IAAA2Q,EAEA,IAKAk7H,GAAAC,GAAAC,GALAzhF,GAAAqhF,GAEAK,GAAAJ,GAAAx3H,wBAMA0oD,GAAA,IAIAC,GAAA,GAMA8uE,GAAA,WACA,IAAAz8H,EAAA,IAAA6J,WAAA6jD,IACAE,EAAA,EAEA6uE,GAAA7rI,UAAAuU,KAAAhW,KAAAP,MAIAA,KAAAqJ,KAAA,SAAA8S,GACA,IAEAsoC,EAFApY,EAAA,EACAC,EAAAwyB,GAKAE,GACAva,EAAA,IAAAxpC,WAAAkB,EAAAhF,WAAA6nD,GACAva,EAAA//C,IAAA0M,EAAAgG,SAAA,EAAA4nD,IACAva,EAAA//C,IAAAyX,EAAA6iD,GACAA,EAAA,GAEAva,EAAAtoC,EAIA,MAAAmwB,EAAAmY,EAAAttC,WAEAstC,EAAApY,KAAA0yB,IAAAta,EAAAnY,KAAAyyB,IAWA1yB,IACAC,MATAtsC,KAAA2W,QAAA,OAAA8tC,EAAArtC,SAAAi1B,EAAAC,IACAD,GAAAyyB,GACAxyB,GAAAwyB,IAaAzyB,EAAAoY,EAAAttC,aACA/F,EAAA1M,IAAA+/C,EAAArtC,SAAAi1B,GAAA,GACA2yB,EAAAva,EAAAttC,WAAAk1B,IAIArsC,KAAAiT,MAAA,WAIA+rD,IAAAF,IAAA1tD,EAAA,KAAA2tD,KACA/+D,KAAA2W,QAAA,OAAAvF,GACA4tD,EAAA,GAEAh/D,KAAA2W,QAAA,UAGAk3H,GAAA7rI,UAAA,IAAA2Q,EAMAm7H,GAAA,WACA,IAAA7uE,EAAAriD,EAAAE,EAAA/c,EACA+tI,GAAA9rI,UAAAuU,KAAAhW,KAAAP,MACAD,EAAAC,KAEAA,KAAAk/D,wBACAl/D,KAAA+c,qBAAA9P,EAEAgyD,EAAA,SAAA1K,EAAA4K,GACA,IAAAziD,EAAA,EAQAyiD,EAAAC,4BACA1iD,GAAA63C,EAAA73C,GAAA,GAGA,QAAAyiD,EAAA52D,KACAqU,EAAA23C,EAAAn9C,SAAAsF,GAAAyiD,GAEAriD,EAAAy3C,EAAAn9C,SAAAsF,GAAAyiD,IAIAviD,EAAA,SAAA23C,EAAA8K,GACAA,EAAAC,eAAA/K,EAAA,GACA8K,EAAAE,oBAAAhL,EAAA,GAGAx0D,EAAA4c,QAAA,GAAA43C,EAAA,QAAAA,EAAA,IACA8K,EAAA1iD,OAAA5c,EAAA4c,QAWAG,EAAA,SAAAy3C,EAAAiL,GACA,IAAAviD,EAAAC,EAAAC,EAAAT,EAOA,KAAA63C,EAAA,IAKAx0D,EAAAgd,iBACA4V,MAAA,KACAC,MAAA,KACA6sC,qBAIAxiD,GAAA,GAAAs3C,EAAA,OAAAA,EAAA,GACAr3C,EAAA,EAAAD,EAAA,EAIAE,GAAA,GAAAo3C,EAAA,QAAAA,EAAA,IAGA73C,EAAA,GAAAS,EACA,MAAAT,EAAAQ,EAAA,CACA,IAAAwiD,EAAAnL,EAAA73C,GACAH,GAAA,GAAAg4C,EAAA73C,EAAA,OAAA63C,EAAA73C,EAAA,GAKAgjD,IAAAguE,GAAArwH,kBAAA,OAAAtd,EAAAgd,gBAAA4V,MACA5yB,EAAAgd,gBAAA4V,MAAApW,EACWmjD,IAAAguE,GAAApwH,kBAAA,OAAAvd,EAAAgd,gBAAA6V,MACX7yB,EAAAgd,gBAAA6V,MAAArW,EACWmjD,IAAAguE,GAAAnwH,uBAEXxd,EAAAgd,gBAAA,kBAAAR,GAAAmjD,GAKAhjD,GAAA,OAAA63C,EAAA73C,EAAA,OAAA63C,EAAA73C,EAAA,IAIA8iD,EAAAziD,gBAAAhd,EAAAgd,kBAMA/c,KAAAqJ,KAAA,SAAAiT,GACA,IAAAxU,KACA4U,EAAA,EAmBA,GAjBA5U,EAAAs3D,6BAAA,GAAA9iD,EAAA,IAGAxU,EAAAyU,IAAA,GAAAD,EAAA,GACAxU,EAAAyU,MAAA,EACAzU,EAAAyU,KAAAD,EAAA,IAOA,GAAAA,EAAA,YACAI,GAAAJ,EAAAI,GAAA,GAIA,IAAA5U,EAAAyU,IACAzU,EAAAS,KAAA,MACA02D,EAAA3iD,EAAAlF,SAAAsF,GAAA5U,GACA9H,KAAA2W,QAAA,OAAA7O,QACS,GAAAA,EAAAyU,MAAAvc,KAAA2c,OAAA,CACT7U,EAAAS,KAAA,MACA02D,EAAA3iD,EAAAlF,SAAAsF,GAAA5U,GACA9H,KAAA2W,QAAA,OAAA7O,GAGA,MAAA9H,KAAAk/D,qBAAA38D,OACAvC,KAAA2/D,YAAAxnD,MAAAnY,UAAAk/D,qBAAAvkB,mBAES1tC,IAAAjN,KAAA+c,gBAGT/c,KAAAk/D,qBAAA71D,MAAAiT,EAAAI,EAAA5U,IAEA9H,KAAA2/D,YAAArjD,EAAAI,EAAA5U,IAIA9H,KAAA2/D,YAAA,SAAArjD,EAAAI,EAAA5U,GAEAA,EAAAyU,MAAAvc,KAAA+c,gBAAA4V,MACA7qB,EAAA43D,WAAAguE,GAAArwH,iBACSvV,EAAAyU,MAAAvc,KAAA+c,gBAAA6V,MACT9qB,EAAA43D,WAAAguE,GAAApwH,iBAIAxV,EAAA43D,WAAA1/D,KAAA+c,gBAAA,kBAAAjV,EAAAyU,KAGAzU,EAAAS,KAAA,MACAT,EAAA+H,KAAAyM,EAAAlF,SAAAsF,GAEA1c,KAAA2W,QAAA,OAAA7O,KAGAgmI,GAAA9rI,UAAA,IAAA2Q,EACAm7H,GAAAluE,cACAC,KAAA,GACAC,KAAA,IAWAiuE,GAAA,WACA,IAAAhuI,EAAAC,KAIA2yB,GACA9iB,QACAxK,KAAA,GAEAutB,GACA/iB,QACAxK,KAAA,GAEA06D,GACAlwD,QACAxK,KAAA,GAEA26D,EAAA,SAAAzL,EAAA72C,GACA,IAAAD,EAGAC,EAAAuiD,aAAA,GAAA1L,EAAA,MAAAA,EAAA,IAGA72C,EAAAwiD,uBAAA,OAAA3L,EAAA,IAIA92C,EAAA82C,EAAA,GAUA,IAAA92C,IAIAC,EAAAhH,KAAA,GAAA69C,EAAA,aAAAA,EAAA,cAAAA,EAAA,cAAAA,EAAA,aAAAA,EAAA,SACA72C,EAAAhH,KAAA,EACAgH,EAAAhH,MAAA,EAAA69C,EAAA,SACA72C,EAAAjH,IAAAiH,EAAAhH,IACA,GAAA+G,IACAC,EAAAjH,KAAA,GAAA89C,EAAA,cAAAA,EAAA,cAAAA,EAAA,cAAAA,EAAA,aAAAA,EAAA,SACA72C,EAAAjH,KAAA,EACAiH,EAAAjH,MAAA,EAAA89C,EAAA,WAMA72C,EAAA7N,KAAA0kD,EAAAn9C,SAAA,EAAAm9C,EAAA,KAEA4L,EAAA,SAAA8tE,EAAA1lI,EAAA63D,GACA,IAOApoD,EAPAqoD,EAAA,IAAAplD,WAAAgzH,EAAA5oI,MACAglB,GACA9hB,QAEAnI,EAAA,EACAsc,EAAA,EACA4jD,GAAA,EAKA,GAAA2tE,EAAAp+H,KAAAtN,UAAA0rI,EAAA5oI,KAAA,IAMA,IAHAglB,EAAA2T,QAAAiwG,EAAAp+H,KAAA,GAAA0M,IAGAnc,EAAA,EAAmBA,EAAA6tI,EAAAp+H,KAAAtN,OAA2BnC,IAC9C4X,EAAAi2H,EAAAp+H,KAAAzP,GAEAigE,EAAA37D,IAAAsT,EAAAnI,KAAA6M,GACAA,GAAA1E,EAAAnI,KAAAsH,WAIA6oD,EAAAK,EAAAh2C,GAIAi2C,EAAA,UAAA/3D,GAAA8hB,EAAA41C,cAAAguE,EAAA5oI,MAGA+6D,GAAAE,KACA2tE,EAAA5oI,KAAA,EACA4oI,EAAAp+H,KAAAtN,OAAA,GAKA+9D,GACAvgE,EAAA4W,QAAA,OAAA0T,KAIA0jH,GAAA/rI,UAAAuU,KAAAhW,KAAAP,MAEAA,KAAAqJ,KAAA,SAAAwG,KAEAwvD,IAAA,aAIA3hD,IAAA,WACA,IAAAuwH,EAAAvuE,EAEA,OAAA7vD,EAAA6vD,YACA,KAAAguE,GAAArwH,iBACA,KAAAqwH,GAAArwH,iBACA4wH,EAAAt7G,EACA+sC,EAAA,QACA,MACA,KAAAguE,GAAApwH,iBACA2wH,EAAAr7G,EACA8sC,EAAA,QACA,MACA,KAAAguE,GAAAnwH,qBACA0wH,EAAAluE,EACAL,EAAA,iBACA,MACA,QAEA,OAKA7vD,EAAAuvD,2BACAe,EAAA8tE,EAAAvuE,GAAA,GAKAuuE,EAAAp+H,KAAAxG,KAAAwG,GACAo+H,EAAA5oI,MAAAwK,OAAAsH,YAEAqoD,IAAA,WACA,IAAAn1C,GACA9hB,KAAA,WACAw1B,WAEAhhB,EAAAlN,EAAAkN,gBAGA,OAAAA,EAAA4V,OACAtI,EAAA0T,OAAA10B,MACAmkD,mBACA+S,oBAAA,GAEA97D,IAAAsY,EAAA4V,MACA6tC,MAAA,MACAj4D,KAAA,UAGA,OAAAwU,EAAA6V,OACAvI,EAAA0T,OAAA10B,MACAmkD,mBACA+S,oBAAA,GAEA97D,IAAAsY,EAAA6V,MACA4tC,MAAA,OACAj4D,KAAA,UAIAxI,EAAA4W,QAAA,OAAA0T,MAESxa,EAAAtH,SAYTvI,KAAAiT,MAAA,WAGAktD,EAAAxtC,EAAA,SACAwtC,EAAAvtC,EAAA,SACAutC,EAAAJ,EAAA,kBACA//D,KAAA2W,QAAA,UAGAo3H,GAAA/rI,UAAA,IAAA2Q,EAEA,IAAA8+C,IACAgP,QAAA,EACA3B,sBACAvL,sBAAAs6E,GACAr6E,qBAAAs6E,GACAr6E,iBAAAs6E,GACA33H,wBAAA43H,GACAt6E,cAAAN,GAAAM,cACAqB,aAAA3B,GAAA2B,aACAzB,eAAAhH,IAGA,QAAA/jD,MAAAmlI,GACAA,GAAAzrI,eAAAsG,MACAkpD,GAAAlpD,IAAAmlI,GAAAnlI,KAIA,IAEA2lI,GAFAC,GAAA18E,GAIA9L,IAAA,qEAUAuoF,GAAA,WACA,IAAA98H,EAEA88H,GAAAlsI,UAAAuU,KAAAhW,KAAAP,MAEAA,KAAAqJ,KAAA,SAAAiT,GACA,IAEAiqC,EACAC,EACAC,EACAC,EACAC,EACAC,EAPAxmD,EAAA,EACAymD,EAAA,EAQA,aAAAvqC,EAAA/T,KAAA,CAOA6I,GACAs1C,EAAAt1C,EACAA,EAAA,IAAA6J,WAAAyrC,EAAAvvC,WAAAmF,EAAAzM,KAAAsH,YACA/F,EAAA1M,IAAAgiD,GACAt1C,EAAA1M,IAAA4X,EAAAzM,KAAA62C,EAAAvvC,aAEA/F,EAAAkL,EAAAzM,KAKA,MAAAzP,EAAA,EAAAgR,EAAA7O,OAGA,SAAA6O,EAAAhR,IAAA,WAAAgR,EAAAhR,EAAA,KAsBA,GAbAomD,EAAA,MAAAp1C,EAAAhR,EAAA,IAIAmmD,GAAA,EAAAn1C,EAAAhR,EAAA,QAAAgR,EAAAhR,EAAA,WAAAgR,EAAAhR,EAAA,OAEAumD,EAAA,WAAAv1C,EAAAhR,EAAA,KACAwmD,EAAA,IAAAD,EAAAhB,IAAA,GAAAv0C,EAAAhR,EAAA,SAEAqmD,EAAArmD,EAAAmmD,EAIAn1C,EAAA+F,WAAAsvC,EACA,OAkBA,GAdAzmD,KAAA2W,QAAA,QACAD,IAAA4F,EAAA5F,IAAAmwC,EAAAD,EACAnwC,IAAA6F,EAAA7F,IAAAowC,EAAAD,EACAD,cACAG,gBAAA,GAAA11C,EAAAhR,EAAA,UACA2mD,cAAA,EAAA31C,EAAAhR,EAAA,YAAAgR,EAAAhR,EAAA,QACA4mD,WAAArB,IAAA,GAAAv0C,EAAAhR,EAAA,SACA6mD,wBAAA,GAAA71C,EAAAhR,EAAA,QAEA8mD,WAAA,GACAr3C,KAAAuB,EAAAgG,SAAAhX,EAAA,EAAAomD,EAAAC,KAIAr1C,EAAA+F,aAAAsvC,EAEA,YADAr1C,OAAAnE,GAIA45C,IAGAz1C,IAAAgG,SAAAqvC,QA9CArmD,MAiDAJ,KAAAiT,MAAA,WACAjT,KAAA2W,QAAA,UAIAu3H,GAAAlsI,UAAA,IAAA2Q,EAEA,IAEA40C,GAFAuY,GAAAouE,GAQA3mF,GAAA,SAAAsnB,GACA,IAEAC,EAAAD,EAAA13D,WAIA43D,EAAA,EAMAC,EAAA,EAGAhvE,KAAAuC,OAAA,WACA,SAAAusE,GAIA9uE,KAAAivE,cAAA,WACA,SAAAH,EAAAE,GAIAhvE,KAAAkvE,SAAA,WACA,IAAA3pE,EAAAspE,EAAA13D,WAAA23D,EACAK,EAAA,IAAAl0D,WAAA,GACAm0D,EAAAtiE,KAAAuC,IAAA,EAAAy/D,GAEA,OAAAM,EACA,UAAA5sE,MAAA,sBAGA2sE,EAAAzqE,IAAAmqE,EAAAz3D,SAAA7R,IAAA6pE,IACAL,EAAA,IAAAhuC,SAAAouC,EAAA/9D,QAAA4vB,UAAA,GAGAguC,EAAA,EAAAI,EACAN,GAAAM,GAIApvE,KAAA2qD,SAAA,SAAAlgD,GACA,IAAA4kE,EACAL,EAAAvkE,GACAskE,IAAAtkE,EACAukE,GAAAvkE,IAEAA,GAAAukE,EACAK,EAAAviE,KAAAuzB,MAAA51B,EAAA,GAEAA,GAAA,EAAA4kE,EACAP,GAAAO,EAEArvE,KAAAkvE,WAEAH,IAAAtkE,EACAukE,GAAAvkE,IAKAzK,KAAA8qD,SAAA,SAAAzlD,GACA,IAAAiqE,EAAAxiE,KAAAuC,IAAA2/D,EAAA3pE,GAIAkqE,EAAAR,IAAA,GAAAO,EAUA,OARAN,GAAAM,EACAN,EAAA,EACAD,IAAAO,EACSR,EAAA,GACT9uE,KAAAkvE,WAGAI,EAAAjqE,EAAAiqE,EACAA,EAAA,EACAC,GAAAD,EAAAtvE,KAAA8qD,SAAAwkB,GAEAC,GAIAvvE,KAAAwvE,iBAAA,WACA,IAAAC,EACA,IAAAA,EAAA,EAAkCA,EAAAT,IAAyCS,EAC3E,QAAAV,EAAA,aAAAU,GAIA,OAFAV,IAAAU,EACAT,GAAAS,EACAA,EAMA,OADAzvE,KAAAkvE,WACAO,EAAAzvE,KAAAwvE,oBAIAxvE,KAAAyqD,sBAAA,WACAzqD,KAAA2qD,SAAA,EAAA3qD,KAAAwvE,qBAIAxvE,KAAA6qD,cAAA,WACA7qD,KAAA2qD,SAAA,EAAA3qD,KAAAwvE,qBAIAxvE,KAAA0qD,sBAAA,WACA,IAAAglB,EAAA1vE,KAAAwvE,mBACA,OAAAxvE,KAAA8qD,SAAA4kB,EAAA,MAIA1vE,KAAAkpD,cAAA,WACA,IAAAqmB,EAAAvvE,KAAA0qD,wBACA,SAAA6kB,EAEA,EAAAA,IAAA,GAEA,GAAAA,IAAA,IAKAvvE,KAAA4qD,YAAA,WACA,WAAA5qD,KAAA8qD,SAAA,IAIA9qD,KAAAwqD,iBAAA,WACA,OAAAxqD,KAAA8qD,SAAA,IAGA9qD,KAAAkvE,YAGA,IAEAk/D,GAAAC,GACA/mF,GAHAgnF,GAAA/mF,GAQA8mF,GAAA,WACA,IACAjuI,EACAgR,EAFA65B,EAAA,EAGAojG,GAAArsI,UAAAuU,KAAAhW,KAAAP,MAEAA,KAAAqJ,KAAA,SAAAwG,GACA,IAAA23C,EAsBA,IApBAp2C,GAGAo2C,EAAA,IAAAvsC,WAAA7J,EAAA+F,WAAAtH,OAAAsH,YACAqwC,EAAA9iD,IAAA0M,GACAo2C,EAAA9iD,IAAAmL,OAAAuB,EAAA+F,YACA/F,EAAAo2C,GALAp2C,EAAAvB,OAmBco7B,EAAA75B,EAAA+F,WAAA,EAAmC8zB,IACjD,OAAA75B,EAAA65B,EAAA,IAEA7qC,EAAA6qC,EAAA,EACA,MAIA,MAAA7qC,EAAAgR,EAAA+F,WAGA,OAAA/F,EAAAhR,IACA,OAEA,OAAAgR,EAAAhR,EAAA,IACAA,GAAA,EACA,MACe,OAAAgR,EAAAhR,EAAA,IACfA,IACA,MAIA6qC,EAAA,IAAA7qC,EAAA,GACAJ,KAAA2W,QAAA,OAAAvF,EAAAgG,SAAA6zB,EAAA,EAAA7qC,EAAA,IAIA,GACAA,UACe,IAAAgR,EAAAhR,MAAAgR,EAAA7O,QACf0oC,EAAA7qC,EAAA,EACAA,GAAA,EACA,MACA,OAEA,OAAAgR,EAAAhR,EAAA,QAAAgR,EAAAhR,EAAA,IACAA,GAAA,EACA,MAIAJ,KAAA2W,QAAA,OAAAvF,EAAAgG,SAAA6zB,EAAA,EAAA7qC,EAAA,IACA6qC,EAAA7qC,EAAA,EACAA,GAAA,EACA,MACA,QAGAA,GAAA,EACA,MAIAgR,IAAAgG,SAAA6zB,GACA7qC,GAAA6qC,EACAA,EAAA,GAGAjrC,KAAAiT,MAAA,WAEA7B,KAAA+F,WAAA,GACAnX,KAAA2W,QAAA,OAAAvF,EAAAgG,SAAA6zB,EAAA,IAGA75B,EAAA,KACA65B,EAAA,EACAjrC,KAAA2W,QAAA,UAGA03H,GAAArsI,UAAA,IAAA2Q,EAKA20C,IACAG,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,GAOAgmF,GAAA,WACA,IACAruI,EACAi+B,EACAqqB,EACAC,EACAC,EACAC,EACAC,EAPAC,EAAA,IAAA2lF,GASAD,GAAApsI,UAAAuU,KAAAhW,KAAAP,MACAD,EAAAC,KAEAA,KAAAqJ,KAAA,SAAAiT,GACA,UAAAA,EAAA/T,OAGAy1B,EAAA1hB,EAAA0hB,QACAqqB,EAAA/rC,EAAA5F,IACA4xC,EAAAhsC,EAAA7F,IAEAiyC,EAAAr/C,KAAAiT,KAGAosC,EAAAvqC,GAAA,gBAAAtO,GACA,IAAAwa,GACA2T,UACAtnB,IAAA2xC,EACA5xC,IAAA6xC,EACAz4C,QAGA,UAAAA,EAAA,IACA,OACAwa,EAAAs+B,YAAA,4CACA,MACA,OACAt+B,EAAAs+B,YAAA,WACAt+B,EAAAu+B,YAAAL,EAAA14C,EAAAuH,SAAA,IACA,MACA,OACAiT,EAAAs+B,YAAA,yBACAt+B,EAAAu+B,YAAAL,EAAA14C,EAAAuH,SAAA,IACAiT,EAAAw+B,OAAAL,EAAAn+B,EAAAu+B,aACA,MACA,OACAv+B,EAAAs+B,YAAA,yBACA,MACA,OACAt+B,EAAAs+B,YAAA,6BACA,MAEA,QACA,MAEA5oD,EAAA4W,QAAA,OAAA0T,KAEAq+B,EAAAvqC,GAAA,kBACApe,EAAA4W,QAAA,UAGA3W,KAAAiT,MAAA,WACAy1C,EAAAz1C,SAYAw1C,EAAA,SAAAh+C,EAAAq+C,GACA,IAEA37B,EACA47B,EAHAC,EAAA,EACAC,EAAA,EAIA,IAAA97B,EAAA,EAAmBA,EAAA1iB,EAAW0iB,IAC9B,IAAA87B,IACAF,EAAAD,EAAAI,gBACAD,GAAAD,EAAAD,EAAA,UAGAC,EAAA,IAAAC,EAAAD,EAAAC,GAYAV,EAAA,SAAA14C,GACA,IAGAs5C,EACAC,EAJA7mD,EAAAsN,EAAAsH,WACAkyC,KACAjpD,EAAA,EAKA,MAAAA,EAAAmC,EAAA,EACA,IAAAsN,EAAAzP,IAAA,IAAAyP,EAAAzP,EAAA,QAAAyP,EAAAzP,EAAA,IACAipD,EAAAhgD,KAAAjJ,EAAA,GACAA,GAAA,GAEAA,IAMA,OAAAipD,EAAA9mD,OACA,OAAAsN,EAIAs5C,EAAA5mD,EAAA8mD,EAAA9mD,OACA6mD,EAAA,IAAAnuC,WAAAkuC,GACA,IAAAG,EAAA,EAEA,IAAAlpD,EAAA,EAAmBA,EAAA+oD,EAAeG,IAAAlpD,IAClCkpD,IAAAD,EAAA,KAEAC,IAEAD,EAAA1O,SAEAyO,EAAAhpD,GAAAyP,EAAAy5C,GAGA,OAAAF,GAYAZ,EAAA,SAAA34C,GACA,IAKAi5C,EACAS,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA9pD,EAlBA+pD,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAuBA,GAPAzB,EAAA,IAAAwlF,GAAAz+H,GACA05C,EAAAT,EAAA0B,mBACAf,EAAAX,EAAA0B,mBACAhB,EAAAV,EAAA0B,mBACA1B,EAAA2B,wBAGAnD,GAAAiC,KACAG,EAAAZ,EAAA4B,wBACA,IAAAhB,GACAZ,EAAA6B,SAAA,GAEA7B,EAAA2B,wBACA3B,EAAA2B,wBACA3B,EAAA6B,SAAA,GACA7B,EAAA8B,eAGA,IADAZ,EAAA,IAAAN,EAAA,KACAtpD,EAAA,EAAuBA,EAAA4pD,EAAsB5pD,IAC7C0oD,EAAA8B,eAGAnC,EADAroD,EAAA,EACA,GAEA,GAFA0oD,GAYA,GAHAA,EAAA2B,wBACAd,EAAAb,EAAA4B,wBAEA,IAAAf,EACAb,EAAA4B,6BACS,OAAAf,EAKT,IAJAb,EAAA6B,SAAA,GACA7B,EAAA+B,gBACA/B,EAAA+B,gBACAjB,EAAAd,EAAA4B,wBACAtqD,EAAA,EAAqBA,EAAAwpD,EAAoCxpD,IACzD0oD,EAAA+B,gBAuBA,GAnBA/B,EAAA2B,wBACA3B,EAAA6B,SAAA,GAEAd,EAAAf,EAAA4B,wBACAZ,EAAAhB,EAAA4B,wBAEAX,EAAAjB,EAAAgC,SAAA,GACA,IAAAf,GACAjB,EAAA6B,SAAA,GAGA7B,EAAA6B,SAAA,GACA7B,EAAA8B,gBAEAT,EAAArB,EAAA4B,wBACAN,EAAAtB,EAAA4B,wBACAL,EAAAvB,EAAA4B,wBACAJ,EAAAxB,EAAA4B,yBAEA5B,EAAA8B,eAEA9B,EAAA8B,cAAA,CAGA,OADAV,EAAApB,EAAA0B,mBACAN,GACA,OACAD,GAAA,KAAkC,MAClC,OACAA,GAAA,OAAoC,MACpC,OACAA,GAAA,OAAoC,MACpC,OACAA,GAAA,OAAoC,MACpC,OACAA,GAAA,OAAoC,MACpC,OACAA,GAAA,OAAoC,MACpC,OACAA,GAAA,OAAoC,MACpC,OACAA,GAAA,OAAoC,MACpC,OACAA,GAAA,OAAoC,MACpC,QACAA,GAAA,OAAoC,MACpC,QACAA,GAAA,OAAoC,MACpC,QACAA,GAAA,OAAoC,MACpC,QACAA,GAAA,QAAqC,MACrC,QACAA,GAAA,KAAkC,MAClC,QACAA,GAAA,KAAkC,MAClC,QACAA,GAAA,KAAkC,MAClC,SAEAA,GAAAnB,EAAA0B,oBAAA,EAAA1B,EAAA0B,mBAAA1B,EAAA0B,oBAAA,EAAA1B,EAAA0B,oBACA,MAGAP,IACAM,EAAAN,EAAA,GAAAA,EAAA,IAIA,OACAV,aACAC,WACAC,uBACAx9C,MAAAa,KAAAwB,MAAA,IAAAu7C,EAAA,KAAAM,EAAA,EAAAC,GAAAG,GACAr+C,QAAA,EAAA69C,IAAAD,EAAA,QAAAO,EAAA,EAAAC,KAIA8jF,GAAApsI,UAAA,IAAA2Q,EAEA,IAMA47H,GANA1uE,IACAzY,WAAAgnF,GACA/mF,cAAAgnF,IAUAE,GAAA,WACA,IAAA9pF,EAAA,IAAAxpC,WACAypC,EAAA,EAEA6pF,GAAAvsI,UAAAuU,KAAAhW,KAAAP,MAEAA,KAAA2kD,aAAA,SAAAC,GACAF,EAAAE,GAGA5kD,KAAA6kD,gBAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAF,EAAAC,EAAA,OAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,MAAAD,EAAAC,EAAA,GACAE,EAAAH,EAAAC,EAAA,GACAG,GAAA,GAAAD,IAAA,EAEA,OAAAC,EACAF,EAAA,GAEAA,EAAA,IAGAhlD,KAAAmlD,cAAA,SAAAL,EAAAC,GACA,IAAAK,GAAA,IAAAN,EAAAC,EAAA,OACAr/C,EAAAo/C,EAAAC,EAAA,MACAM,EAAA,KAAAP,EAAAC,EAAA,GAEA,OAAAM,EAAA3/C,EAAA0/C,GAGAplD,KAAAqJ,KAAA,SAAA8S,GACA,IAEAmpC,EACA1gC,EACAtI,EACAipC,EALAC,EAAA,EACAT,EAAA,EAQAN,EAAAliD,QACAgjD,EAAAd,EAAAliD,OACAkiD,EAAA,IAAAxpC,WAAAkB,EAAAhF,WAAAouC,GACAd,EAAA//C,IAAA+/C,EAAArtC,SAAA,EAAAmuC,IACAd,EAAA//C,IAAAyX,EAAAopC,IAEAd,EAAAtoC,EAGA,MAAAsoC,EAAAliD,OAAAwiD,GAAA,EACA,GAAAN,EAAAM,KAAA,IAAA56C,WAAA,IAAAs6C,EAAAM,EAAA,SAAA56C,WAAA,IAAAs6C,EAAAM,EAAA,SAAA56C,WAAA,GAuBW,MAAAs6C,EAAAM,IAAA,WAAAN,EAAAM,EAAA,KAIX,GAAAN,EAAAliD,OAAAwiD,EAAA,EACA,MAOA,GAJAS,EAAAxlD,KAAAmlD,cAAAV,EAAAM,GAIAS,EAAAf,EAAAliD,OACA,MAGA+Z,GACA/T,KAAA,QACAsH,KAAA40C,EAAArtC,SAAA2tC,IAAAS,GACA9uC,IAAAguC,EACAjuC,IAAAiuC,GAEA1kD,KAAA2W,QAAA,OAAA2F,GACAyoC,GAAAS,OAGAT,QAjDA,CAIA,GAAAN,EAAAliD,OAAAwiD,EAAA,GACA,MAQA,GAJAS,EAAAxlD,KAAA6kD,gBAAAJ,EAAAM,GAIAS,EAAAf,EAAAliD,OACA,MAEAqiB,GACArc,KAAA,iBACAsH,KAAA40C,EAAArtC,SAAA2tC,IAAAS,IAEAxlD,KAAA2W,QAAA,OAAAiO,GACAmgC,GAAAS,EA8BAF,EAAAb,EAAAliD,OAAAwiD,EAGAN,EADAa,EAAA,EACAb,EAAArtC,SAAA2tC,GAEA,IAAA9pC,aAKAszH,GAAAvsI,UAAA,IAAA2Q,EAEA,IA0CA47D,GACAC,GACAC,GACAC,GACA7F,GACAC,GA/CAiE,GAAAwhE,GAEAtjF,IAAA,mBACAC,IAAA,2CACAC,GAAA,SAAA1gD,GACA,IAAAlE,KACA,MAAAkE,IACAlE,EAAA8C,KAAA,GAEA,OAAA9C,GAGA6kD,GAAA,SAAAC,GACA,OAAAvqD,OAAAyrB,KAAA8+B,GAAA3zC,OAAA,SAAApL,EAAA3K,GAIA,OAHA2K,EAAA3K,GAAA,IAAAsZ,WAAAowC,EAAA1pD,GAAA+V,OAAA,SAAAyR,EAAAmiC,GACA,OAAAniC,EAAA7R,OAAAg0C,SAEAh/C,QAKAi/C,IACAC,OAAAP,IAAA,QAAAE,GAAA,WACAM,OAAAR,IAAA,KAAAE,GAAA,WACAO,OAAAT,IAAA,SAAAE,GAAA,WACAQ,OAAAV,IAAA,SAAAE,GAAA,kBAAAA,GAAA,WACAS,OAAAX,IAAA,SAAAE,GAAA,kBAAAA,GAAA,WACAU,OAAAZ,IAAA,SAAAE,GAAA,cAAAA,GAAA,YACAW,OAAAb,IAAA,SAAAE,GAAA,kBAAAA,GAAA,eAAAA,GAAA,YACAY,OAAAd,IAAA,SAAAE,GAAA,kBAAAA,GAAA,eAAAA,GAAA,eAAAA,GAAA,cACAa,OAAAd,GAAAC,GAAA,iBAAAA,GAAA,iBAAAA,GAAA,kBAAAA,GAAA,kBAAAA,GAAA,WACAc,OAAAf,GAAAC,GAAA,iBAAAA,GAAA,iBAAAA,GAAA,kBAAAA,GAAA,kBAAAA,GAAA,kBAAAA,GAAA,YACAe,MAAAhB,GAAAC,GAAA,gBAAAA,GAAA,UAGAqjF,GAAApjF,GAAAG,IAEAkc,GAAA,IAWA8G,GAAA,SAAAI,GACA,OAAAA,EAAAlH,IAGA+G,GAAA,SAAAG,EAAAb,GACA,OAAAa,EAAAb,GAGAW,GAAA,SAAA7pB,GACA,OAAAA,EAAA6iB,IAGAiH,GAAA,SAAA9pB,EAAAkpB,GACA,OAAAlpB,EAAAkpB,GAGAjF,GAAA,SAAAjkB,EAAAkpB,GACA,OAAAS,GAAAG,GAAA9pB,EAAAkpB,KAGAhF,GAAA,SAAAlkB,EAAAkpB,GACA,OAAAU,GAAAC,GAAA7pB,GAAAkpB,IAGA,IAmBA2gE,GAAAC,GAAAC,GAAAC,GAGA9nE,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAtBAE,IACAiH,oBACAC,oBACAC,oBACAC,oBACA7F,oBACAC,qBAGA1hB,GAAAyY,GAAAzY,WAGAmgB,IAAA,qFAEAC,IAAA,iEAEAqnE,GAAA,IAYA/nE,GAAA,WACA,OACAzhE,KAAA,EACA4/C,OACAohB,UAAA,EACArB,UAAA,EACAC,aAAA,EACAqB,cAAA,EACAG,oBAAA,KAKAM,GAAA,SAAAl3D,GACA,OAAAA,EAAA,SAAA1F,WAAA,IAAA0F,EAAA,SAAA1F,WAAA,IAAA0F,EAAA,SAAA1F,WAAA,IASAg9D,GAAA,SAAA5gE,EAAAY,GACA,IAAA/G,EAEA,GAAAmG,EAAAhE,SAAA4E,EAAA5E,OACA,SAIA,IAAAnC,EAAA,EAAiBA,EAAAmG,EAAAhE,OAAcnC,IAC/B,GAAAmG,EAAAnG,KAAA+G,EAAA/G,GACA,SAIA,UAMAgnE,GAAA,SAAAh/B,GACA,IAAAhoC,EACAsnE,EACAC,EAAA,EAGA,IAAAvnE,EAAA,EAAiBA,EAAAgoC,EAAA7lC,OAAkBnC,IACnCsnE,EAAAt/B,EAAAhoC,GACAunE,GAAAD,EAAA73D,KAAAsH,WAGA,OAAAwwD,GAYA+mE,GAAA,SAAArkI,EAAAib,GACA,IAAAusC,KACAgT,EAAA,EACA+C,EAAA,EACAC,EAAA,EACAC,EAAAnvD,IAEA2M,QAEAopH,GAAA1sI,UAAAuU,KAAAhW,KAAAP,MAEAA,KAAAqJ,KAAA,SAAAwG,GACAm3D,GAAA38D,EAAAwF,GAEAxF,GACAk9D,GAAA/6C,QAAA,SAAA7d,GACAtE,EAAAsE,GAAAkB,EAAAlB,KAKAkjD,EAAAxoD,KAAAwG,IAGA7P,KAAA+nE,eAAA,SAAAC,GACAJ,EAAAI,EAAA39D,EAAAmjD,kBAAA+S,qBAGAvgE,KAAAioE,4BAAA,SAAA1H,GACAuH,EAAAvH,GAGAvgE,KAAAkoE,oBAAA,SAAAtjB,GACAijB,EAAAjjB,GAGA5kD,KAAAiT,MAAA,WACA,IAAA+5C,EAAAuV,EAAAH,EAAAlzD,EAGA,IAAA2iD,EAAAtvD,QAKAyqD,EAAAhtD,KAAAmoE,6BAAAtW,GACAxnD,EAAAk2D,oBAAA2G,GAAA78D,EAAAib,EAAAwpH,wBAEA9uI,KAAAooE,mBAAA/9D,EAAA2iD,GAIA3iD,EAAA06D,QAAA/kE,KAAAqoE,qBAAArb,GAGAoV,EAAAorE,EAAAprE,KAAApiE,KAAAsoE,sBAAAtb,IAEA6E,KAEA0Q,EAAAirE,EAAAjrE,KAAAsC,GAAAx6D,IACA6E,EAAA,IAAA+L,WAAAsnD,EAAAprD,WAAAirD,EAAAjrD,YAGA0tD,IAEA31D,EAAAxK,IAAA69D,GACArzD,EAAAxK,IAAA09D,EAAAG,EAAAprD,YAEA8vD,GAAA58D,GAEArK,KAAA2W,QAAA,QAA8BtM,QAAA6E,UAC9BlP,KAAA2W,QAAA,8BA9BA3W,KAAA2W,QAAA,8BAmCA3W,KAAAooE,mBAAA,SAAA/9D,EAAA2iD,GACA,IAAAub,EAKAC,EACApoE,EALAqoE,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAIA,GAAA5b,EAAAzqD,SAIAgmE,EAAAjB,GAAAuB,iBAAAx+D,EAAAk2D,oBAAAl2D,EAAA28C,YAEAyhB,EAAA37D,KAAAwB,KAAAugI,IAAAxkI,EAAA28C,WAAA,OAEA6gB,GAAAC,IAEAY,EAAAH,EAAAz7D,KAAAC,IAAA86D,EAAAC,GAEAa,EAAA77D,KAAAuzB,MAAAqoC,EAAAD,GACAG,EAAAD,EAAAF,KAKAE,EAAA,GAAAC,EAAAimE,GAAA,KAYA,IARArmE,EAAAgmE,GAAAnkI,EAAA28C,YAEAwhB,IAGAA,EAAAxb,EAAA,GAAAn9C,MAGAzP,EAAA,EAAmBA,EAAAuoE,EAAyBvoE,IAC5C4sD,EAAA1uC,OAAAle,EAAA,GACAyP,KAAA24D,IAIAn+D,EAAAk2D,qBAAAzzD,KAAAuzB,MAAAinC,GAAAwB,iBAAAF,EAAAv+D,EAAA28C,eAOAhnD,KAAAmoE,6BAAA,SAAAtW,GACA,OAAAxnD,EAAA0+D,eAAAnB,EACA/V,GAIAxnD,EAAA0+D,cAAApwD,IAEAk5C,EAAAngC,OAAA,SAAAqgC,GAEA,OAAAA,EAAAt7C,KAAAmxD,IACAv9D,EAAA0+D,cAAAj8D,KAAAuC,IAAAhF,EAAA0+D,cAAAhX,EAAAt7C,KACApM,EAAA2+D,cAAA3+D,EAAA0+D,eACA,OAQA/oE,KAAAqoE,qBAAA,SAAArb,GACA,IAAA5sD,EACA2xD,EACAgT,KAEA,IAAA3kE,EAAA,EAAmBA,EAAA4sD,EAAAzqD,OAAmBnC,IACtC2xD,EAAA/E,EAAA5sD,GACA2kE,EAAA17D,MACAhE,KAAA0sD,EAAAliD,KAAAsH,WACA0K,SAAA,OAGA,OAAAkjD,GAIA/kE,KAAAsoE,sBAAA,SAAAtb,GACA,IAAA5sD,EACA2xD,EACA2T,EAAA,EACA71D,EAAA,IAAAoL,WAAAmsD,GAAApa,IAEA,IAAA5sD,EAAA,EAAmBA,EAAA4sD,EAAAzqD,OAAmBnC,IACtC2xD,EAAA/E,EAAA5sD,GAEAyP,EAAAnL,IAAAqtD,EAAAliD,KAAA61D,GACAA,GAAA3T,EAAAliD,KAAAsH,WAEA,OAAAtH,IAIA6+H,GAAA1sI,UAAA,IAAA2Q,EAaA87H,GAAA,SAAApkI,EAAAib,GACA,IAGAujC,EACA8I,EAJAkT,EAAA,EACAxS,KACA4W,KAIA3jD,QAEAmpH,GAAAzsI,UAAAuU,KAAAhW,KAAAP,aAEAqK,EAAA6+D,OAEAlpE,KAAAmpE,aAEAnpE,KAAAqJ,KAAA,SAAA+/D,GACApC,GAAA38D,EAAA++D,GAGA,2BAAAA,EAAAzgB,aAAAE,IACAA,EAAAugB,EAAAvgB,OACAx+C,EAAAqnD,KAAA0X,EAAAv5D,MAEA23D,GAAAh7C,QAAA,SAAA7d,GACAtE,EAAAsE,GAAAk6C,EAAAl6C,IACW3O,OAGX,2BAAAopE,EAAAzgB,aAAAgJ,IACAA,EAAAyX,EAAAv5D,KACAxF,EAAAsnD,KAAAyX,EAAAv5D,OAIAwiD,EAAAhpD,KAAA+/D,IAGAppE,KAAAiT,MAAA,WACA,IAAA+5C,EAAAqc,EAAAC,EAAA/G,EAAAH,EAAAlzD,EAIA,MAAAmjD,EAAA9vD,OAAA,CACA,kCAAA8vD,EAAA,GAAA1J,YACA,MAEA0J,EAAA1X,QAIA,OAAA0X,EAAA9vD,OAGA,OAFAvC,KAAAupE,oBACAvpE,KAAA2W,QAAA,6BAgDA,GAzCAq2C,EAAAhtD,KAAAwpE,qBAAAnX,GACAiX,EAAAtpE,KAAAypE,qBAAAzc,GAoBAsc,EAAA,MAAApa,WAEAma,EAAArpE,KAAA0pE,iBAAArX,EAAA,GAAAhoD,GAEAg/D,GACAC,EAAAK,QAAAN,GAGAC,EAAAnyD,YAAAkyD,EAAAlyD,WACAmyD,EAAAM,UAAAP,EAAAO,SACAN,EAAA5yD,IAAA2yD,EAAA3yD,IACA4yD,EAAA7yD,IAAA4yD,EAAA5yD,IACA6yD,EAAAznD,UAAAwnD,EAAAxnD,UAGAynD,EAAAtpE,KAAA6pE,qBAAAP,IAKAL,EAAA1mE,OAAA,CACA,IAAAunE,EAQA,GALAA,EADAxkD,EAAAykD,eACA/pE,KAAAgqE,gBAAAV,GAEAtpE,KAAAiqE,kBAAAX,IAGAQ,EAiBA,OAfA9pE,KAAAmpE,UAAAQ,SACAO,IAAAZ,EAAAtgE,MACA2oD,IAAAtnD,EAAAsnD,IACAD,IAAArnD,EAAAqnD,MAIA1xD,KAAAmpE,UAAA5mE,OAAAuK,KAAAuC,IAAA,EAAArP,KAAAmpE,UAAA5mE,QAGA8vD,KAGAryD,KAAAupE,oBACAvpE,KAAA2W,QAAA,6BAMAswD,GAAA58D,GAEAi/D,EAAAQ,EAGA9C,GAAA38D,EAAAi/D,GAIAj/D,EAAA06D,QAAA/kE,KAAAqoE,qBAAAiB,GAGAlH,EAAAorE,EAAAprE,KAAApiE,KAAAmqE,oBAAAb,IAEAj/D,EAAAk2D,oBAAA2G,GAAA78D,EAAAib,EAAAwpH,wBAEA9uI,KAAA2W,QAAA,oBAAA2yD,EAAAlxD,IAAA,SAAA8xD,GACA,OACAxzD,IAAAwzD,EAAAxzD,IACAD,IAAAyzD,EAAAzzD,IACAU,WAAA+yD,EAAA/yD,eAKAnX,KAAAmpE,UAAAQ,SACAO,IAAAZ,EAAAtgE,MACA2oD,IAAAtnD,EAAAsnD,IACAD,IAAArnD,EAAAqnD,MAIA1xD,KAAAmpE,UAAA5mE,OAAAuK,KAAAuC,IAAA,EAAArP,KAAAmpE,UAAA5mE,QAGA8vD,KAEAryD,KAAA2W,QAAA,sBAAAtM,EAAAk2D,qBACAvgE,KAAA2W,QAAA,oBAAAtM,EAAAmjD,mBAEA+U,EAAAirE,EAAAjrE,KAAAsC,GAAAx6D,IAIA6E,EAAA,IAAA+L,WAAAsnD,EAAAprD,WAAAirD,EAAAjrD,YAGA0tD,IAEA31D,EAAAxK,IAAA69D,GACArzD,EAAAxK,IAAA09D,EAAAG,EAAAprD,YAEAnX,KAAA2W,QAAA,QAA8BtM,QAAA6E,UAE9BlP,KAAAupE,eAGAvpE,KAAA2W,QAAA,8BAGA3W,KAAAupE,aAAA,WACAtC,GAAA58D,GAIAw+C,OAAA57C,EACA0kD,OAAA1kD,GAKAjN,KAAA0pE,iBAAA,SAAAN,GACA,IASAgB,EACAC,EACAC,EACAC,EACAnqE,EAbAoqE,EAAA,KAIAC,EAAA,IAIAC,EAAA/xD,IAQA,IAAAvY,EAAA,EAAmBA,EAAAJ,KAAAmpE,UAAA5mE,OAA2BnC,IAC9CmqE,EAAAvqE,KAAAmpE,UAAA/oE,GACAkqE,EAAAC,EAAAL,IAGA7/D,EAAAsnD,KAAAwV,GAAA98D,EAAAsnD,IAAA,GAAA4Y,EAAA5Y,IAAA,KAAAtnD,EAAAqnD,KAAAyV,GAAA98D,EAAAqnD,IAAA,GAAA6Y,EAAA7Y,IAAA,MAKA4Y,EAAA7zD,IAAApM,EAAAmjD,kBAAA/2C,MAKA2zD,EAAAhB,EAAA3yD,IAAA6zD,EAAA7zD,IAAA6zD,EAAAzoD,SAIAuoD,IAAAK,GAAAL,GAAAI,KAIAH,GAAAK,EAAAN,KACAC,EAAAE,EACAG,EAAAN,KAKA,OAAAC,EACAA,EAAAH,IAEA,MAGAlqE,KAAA6pE,qBAAA,SAAAP,GACA,IAAAgB,EAiBA,OAfAhB,EAAA,MAAApa,UAAAoa,EAAA/mE,OAAA,IAEA+nE,EAAAhB,EAAA3uB,QAEA2uB,EAAAnyD,YAAAmzD,EAAAnzD,WACAmyD,EAAAM,UAAAU,EAAAV,SAKAN,EAAA,MAAA7yD,IAAA6zD,EAAA7zD,IACA6yD,EAAA,MAAA5yD,IAAA4zD,EAAA5zD,IACA4yD,EAAA,MAAAznD,UAAAyoD,EAAAzoD,UAGAynD,GAOAtpE,KAAAwpE,qBAAA,SAAAnX,GACA,IAAAjyD,EACAsyD,EACAX,KACA/E,KAIA,IAFA+E,EAAA56C,WAAA,EAEA/W,EAAA,EAAmBA,EAAAiyD,EAAA9vD,OAAqBnC,IACxCsyD,EAAAL,EAAAjyD,GAGA,+BAAAsyD,EAAA/J,aAGAoJ,EAAAxvD,SACAwvD,EAAAlwC,SAAA6wC,EAAAj8C,IAAAs7C,EAAAt7C,IACAu2C,EAAA3jD,KAAA0oD,IAEAA,GAAAW,GACAX,EAAA56C,WAAAu7C,EAAA7iD,KAAAsH,WACA46C,EAAAr7C,IAAAg8C,EAAAh8C,IACAq7C,EAAAt7C,IAAAi8C,EAAAj8C,MAGA,8CAAAi8C,EAAA/J,cACAoJ,EAAA7C,UAAA,GAEA6C,EAAAlwC,SAAA6wC,EAAAj8C,IAAAs7C,EAAAt7C,IACAs7C,EAAA56C,YAAAu7C,EAAA7iD,KAAAsH,WACA46C,EAAA1oD,KAAAqpD,IAYA,OANA1F,EAAAzqD,UAAAwvD,EAAAlwC,UAAAkwC,EAAAlwC,UAAA,KACAkwC,EAAAlwC,SAAAmrC,IAAAzqD,OAAA,GAAAsf,UAIAmrC,EAAA3jD,KAAA0oD,GACA/E,GAOAhtD,KAAAypE,qBAAA,SAAAzc,GACA,IAAA5sD,EACA2xD,EACAuY,KACAhB,KAiBA,IAbAgB,EAAAnzD,WAAA,EACAmzD,EAAAV,SAAA,EACAU,EAAAzoD,SAAA,EACAyoD,EAAA5zD,IAAAs2C,EAAA,GAAAt2C,IACA4zD,EAAA7zD,IAAAu2C,EAAA,GAAAv2C,IAGA6yD,EAAAnyD,WAAA,EACAmyD,EAAAM,SAAA,EACAN,EAAAznD,SAAA,EACAynD,EAAA5yD,IAAAs2C,EAAA,GAAAt2C,IACA4yD,EAAA7yD,IAAAu2C,EAAA,GAAAv2C,IAEArW,EAAA,EAAmBA,EAAA4sD,EAAAzqD,OAAmBnC,IACtC2xD,EAAA/E,EAAA5sD,GAEA2xD,EAAA7C,UAGAob,EAAA/nE,SACA+mE,EAAAjgE,KAAAihE,GACAhB,EAAAnyD,YAAAmzD,EAAAnzD,WACAmyD,EAAAM,UAAAU,EAAAV,SACAN,EAAAznD,UAAAyoD,EAAAzoD,UAGAyoD,GAAAvY,GACAuY,EAAAV,SAAA7X,EAAAxvD,OACA+nE,EAAAnzD,WAAA46C,EAAA56C,WACAmzD,EAAA5zD,IAAAq7C,EAAAr7C,IACA4zD,EAAA7zD,IAAAs7C,EAAAt7C,IACA6zD,EAAAzoD,SAAAkwC,EAAAlwC,WAEAyoD,EAAAzoD,UAAAkwC,EAAAlwC,SACAyoD,EAAAV,UAAA7X,EAAAxvD,OACA+nE,EAAAnzD,YAAA46C,EAAA56C,WACAmzD,EAAAjhE,KAAA0oD,IAaA,OATAuX,EAAA/mE,QAAA+nE,EAAAzoD,UAAA,IACAyoD,EAAAzoD,SAAAynD,IAAA/mE,OAAA,GAAAsf,UAEAynD,EAAAnyD,YAAAmzD,EAAAnzD,WACAmyD,EAAAM,UAAAU,EAAAV,SACAN,EAAAznD,UAAAyoD,EAAAzoD,SAGAynD,EAAAjgE,KAAAihE,GACAhB,GAIAtpE,KAAAqoE,qBAAA,SAAAiB,EAAAqB,GACA,IAAA3nE,EACA5C,EACAgmE,EACAkE,EACAvY,EACA2T,EAAAiF,GAAA,EACA5F,KAEA,IAAA/hE,EAAA,EAAmBA,EAAAsmE,EAAA/mE,OAAiBS,IAGpC,IAFAsnE,EAAAhB,EAAAtmE,GAEA5C,EAAA,EAAqBA,EAAAkqE,EAAA/nE,OAAuBnC,IAC5C2xD,EAAAuY,EAAAlqE,GAEAgmE,EAAAU,KAEAV,EAAAV,aACAU,EAAAD,sBAAApU,EAAAr7C,IAAAq7C,EAAAt7C,IACA2vD,EAAAvkD,SAAAkwC,EAAAlwC,SACAukD,EAAA/gE,KAAA,EAAA0sD,EAAAxvD,OACA6jE,EAAA/gE,MAAA0sD,EAAA56C,WAEA46C,EAAA7C,WACAkX,EAAAnhB,MAAA+f,UAAA,GAGAU,GAAAU,EAAA/gE,KAEA0/D,EAAA17D,KAAA+8D,GAGA,OAAArB,GAIA/kE,KAAAmqE,oBAAA,SAAAb,GACA,IAAAtmE,EACA5C,EACA+sB,EACAm9C,EACAvY,EACAW,EACAgT,EAAA,EACAkF,EAAAtB,EAAAnyD,WACA0zD,EAAAvB,EAAAM,SACAkB,EAAAF,EAAA,EAAAC,EACAh7D,EAAA,IAAAoL,WAAA6vD,GACAhqC,EAAA,IAAAC,SAAAlxB,EAAAuB,QAGA,IAAApO,EAAA,EAAmBA,EAAAsmE,EAAA/mE,OAAiBS,IAIpC,IAHAsnE,EAAAhB,EAAAtmE,GAGA5C,EAAA,EAAqBA,EAAAkqE,EAAA/nE,OAAuBnC,IAI5C,IAHA2xD,EAAAuY,EAAAlqE,GAGA+sB,EAAA,EAAuBA,EAAA4kC,EAAAxvD,OAAyB4qB,IAChDulC,EAAAX,EAAA5kC,GAEA2T,EAAAqtB,UAAAuX,EAAAhT,EAAA7iD,KAAAsH,YACAuuD,GAAA,EACA71D,EAAAnL,IAAAguD,EAAA7iD,KAAA61D,GACAA,GAAAhT,EAAA7iD,KAAAsH,WAIA,OAAAtH,GAKA7P,KAAAiqE,kBAAA,SAAAX,GACA,IAAAyB,EAAAC,EAAA1lE,EAAA4kE,EAAA/yD,EAAAyyD,EAAA/nD,EAAAioD,EAEA3yD,EAAAmyD,EAAAnyD,WACAyyD,EAAAN,EAAAM,SACA/nD,EAAAynD,EAAAznD,SACAkpD,EAAAC,EAAA,EAEA,MAAAD,EAAA9B,EAAA1mE,QAAAyoE,EAAA1B,EAAA/mE,OAAA,CAIA,GAHA+C,EAAA2jE,EAAA8B,GACAb,EAAAZ,EAAA0B,GAEA1lE,EAAAoR,MAAAwzD,EAAAxzD,IACA,MAGAwzD,EAAAxzD,IAAApR,EAAAoR,IAGAq0D,KAMAC,IACA7zD,GAAA+yD,EAAA/yD,WACAyyD,GAAAM,EAAAN,SACA/nD,GAAAqoD,EAAAroD,UAGA,WAAAmpD,EAEA1B,EAGA0B,IAAA1B,EAAA/mE,OAEA,MAGAunE,EAAAR,EAAAjyD,MAAA2zD,GACAlB,EAAA3yD,aACA2yD,EAAAjoD,WACAioD,EAAAF,WACAE,EAAApzD,IAAAozD,EAAA,GAAApzD,IACAozD,EAAArzD,IAAAqzD,EAAA,GAAArzD,IAEAqzD,IAKA9pE,KAAAgqE,gBAAA,SAAAV,GACA,IAAAyB,EAAAC,EAAA1lE,EAAA4kE,EAAAe,EAAAC,EAmCAC,EAjCAJ,EAAA9B,EAAA1mE,OAAA,EACAyoE,EAAA1B,EAAA/mE,OAAA,EACA0oE,EAAA,KACAC,GAAA,EAEA,MAAAH,GAAA,GAAAC,GAAA,GAIA,GAHA1lE,EAAA2jE,EAAA8B,GACAb,EAAAZ,EAAA0B,GAEA1lE,EAAAoR,MAAAwzD,EAAAxzD,IAAA,CACAw0D,GAAA,EACA,MAGA5lE,EAAAoR,IAAAwzD,EAAAxzD,IACAq0D,KAIAA,IAAA9B,EAAA1mE,OAAA,IAIA0oE,EAAAD,GAGAA,KAGA,IAAAE,GAAA,OAAAD,EACA,YAWA,GALAE,EADAD,EACAF,EAEAC,EAGA,IAAAE,EACA,OAAA7B,EAGA,IAAAQ,EAAAR,EAAAjyD,MAAA8zD,GACA5d,EAAAuc,EAAApyD,OAAA,SAAA0zD,EAAAlB,GAIA,OAHAkB,EAAAj0D,YAAA+yD,EAAA/yD,WACAi0D,EAAAvpD,UAAAqoD,EAAAroD,SACAupD,EAAAxB,UAAAM,EAAAN,SACAwB,IACYj0D,WAAA,EAAA0K,SAAA,EAAA+nD,SAAA,IAQZ,OANAE,EAAA3yD,WAAAo2C,EAAAp2C,WACA2yD,EAAAjoD,SAAA0rC,EAAA1rC,SACAioD,EAAAF,SAAArc,EAAAqc,SACAE,EAAApzD,IAAAozD,EAAA,GAAApzD,IACAozD,EAAArzD,IAAAqzD,EAAA,GAAArzD,IAEAqzD,GAGA9pE,KAAAqrE,cAAA,SAAAC,GACArC,EAAAqC,IAIAmjE,GAAAzsI,UAAA,IAAA2Q,EAOAq0D,GAAA,SAAA38D,EAAAwF,GACA,kBAAAA,EAAA6G,WACAzJ,IAAA5C,EAAAmjD,kBAAA92C,MACArM,EAAAmjD,kBAAA92C,IAAA7G,EAAA6G,UAGAzJ,IAAA5C,EAAA2+D,cACA3+D,EAAA2+D,cAAAn5D,EAAA6G,IAEArM,EAAA2+D,cAAAl8D,KAAAuC,IAAAhF,EAAA2+D,cAAAn5D,EAAA6G,UAGAzJ,IAAA5C,EAAAkhE,cACAlhE,EAAAkhE,cAAA17D,EAAA6G,IAEArM,EAAAkhE,cAAAz+D,KAAAC,IAAA1C,EAAAkhE,cAAA17D,EAAA6G,MAIA,kBAAA7G,EAAA4G,WACAxJ,IAAA5C,EAAAmjD,kBAAA/2C,MACApM,EAAAmjD,kBAAA/2C,IAAA5G,EAAA4G,UAGAxJ,IAAA5C,EAAA0+D,cACA1+D,EAAA0+D,cAAAl5D,EAAA4G,IAEApM,EAAA0+D,cAAAj8D,KAAAuC,IAAAhF,EAAA0+D,cAAAl5D,EAAA4G,UAGAxJ,IAAA5C,EAAAmhE,cACAnhE,EAAAmhE,cAAA37D,EAAA4G,IAEApM,EAAAmhE,cAAA1+D,KAAAC,IAAA1C,EAAAmhE,cAAA37D,EAAA4G,OASAwwD,GAAA,SAAA58D,UACAA,EAAA0+D,qBACA1+D,EAAAmhE,qBACAnhE,EAAA2+D,qBACA3+D,EAAAkhE,eAWArE,GAAA,SAAA78D,EAAAykI,GACA,IAAAvuE,EACAhoD,EACAwwD,EAAA1+D,EAAA0+D,cAyBA,OAtBA+lE,IACA/lE,GAAA1+D,EAAAmjD,kBAAA/2C,KAKA8pD,EAAAl2D,EAAAmjD,kBAAA+S,oBAGAA,GAAAwI,EAGAxI,EAAAzzD,KAAAC,IAAA,EAAAwzD,GAEA,UAAAl2D,EAAA9B,OAGAgQ,EAAAlO,EAAA28C,WAAA6nF,GACAtuE,GAAAhoD,EACAgoD,EAAAzzD,KAAAuzB,MAAAkgC,IAGAA,GAQAquE,GAAA,SAAAtpH,EAAAgnC,GAIAtsD,KAAAqsD,eAAA,EACArsD,KAAAssD,iBAEA,qBAAAhnC,EAAAomD,MACA1rE,KAAA2rE,cAAArmD,EAAAomD,MAEA1rE,KAAA2rE,aAAA,EAGA3rE,KAAA6sD,iBACA7sD,KAAAysD,WAAA,KACAzsD,KAAA4rE,gBACA5rE,KAAA2sD,mBACA3sD,KAAA4sD,mBACA5sD,KAAA6rE,aAAA,EACA7rE,KAAA8rE,cAAA,EAEA8iE,GAAA5sI,UAAAuU,KAAAhW,KAAAP,MAGAA,KAAAqJ,KAAA,SAAA0jD,GAGA,OAAAA,EAAAljD,KACA7J,KAAA2sD,gBAAAtjD,KAAA0jD,GAGAA,EAAAC,OACAhtD,KAAA4sD,gBAAAvjD,KAAA0jD,IAMA/sD,KAAA6sD,cAAAxjD,KAAA0jD,EAAA1iD,OACArK,KAAA4rE,aAAAviE,KAAA0jD,EAAA79C,OACAlP,KAAA6rE,cAAA9e,EAAA79C,MAAAiI,WAEA,UAAA41C,EAAA1iD,MAAA9B,OACAvI,KAAAysD,WAAAM,EAAA1iD,YAEA,UAAA0iD,EAAA1iD,MAAA9B,OACAvI,KAAA0sD,WAAAK,EAAA1iD,WAKAukI,GAAA5sI,UAAA,IAAA2Q,EACAi8H,GAAA5sI,UAAAiR,MAAA,SAAA2L,GACA,IAOAuuC,EACAD,EACAtgC,EAEAxsB,EAXAsc,EAAA,EACA2N,GACAgjC,YACAC,kBACAC,YACAwe,SAKA3e,EAAA,EAGA,GAAAptD,KAAA6sD,cAAAtqD,OAAAvC,KAAAqsD,eAAA,CACA,0BAAAztC,GAAA,uBAAAA,EAIA,OACS,GAAA5e,KAAA2rE,YAGT,OACS,OAAA3rE,KAAA6sD,cAAAtqD,OAaT,OANAvC,KAAA8rE,qBAEA9rE,KAAA8rE,eAAA9rE,KAAAqsD,iBACArsD,KAAA2W,QAAA,QACA3W,KAAA8rE,cAAA,IAuCA,IAjCA9rE,KAAAysD,YACAW,EAAAptD,KAAAysD,WAAAe,kBAAA92C,IACA8wD,GAAAh7C,QAAA,SAAA7d,GACA0b,EAAA0hD,KAAAp9D,GAAA3O,KAAAysD,WAAA99C,IACS3O,OACFA,KAAA0sD,aACPU,EAAAptD,KAAA0sD,WAAAc,kBAAA92C,IACA6wD,GAAA/6C,QAAA,SAAA7d,GACA0b,EAAA0hD,KAAAp9D,GAAA3O,KAAA0sD,WAAA/9C,IACS3O,OAGT,IAAAA,KAAA6sD,cAAAtqD,OACA8nB,EAAA9hB,KAAAvI,KAAA6sD,cAAA,GAAAtkD,KAEA8hB,EAAA9hB,KAAA,WAGAvI,KAAA8rE,eAAA9rE,KAAA6sD,cAAAtqD,OAEAqqB,EAAA4gH,EAAA5gH,YAAA5sB,KAAA6sD,eAGAxiC,EAAAuC,YAAA,IAAA3R,WAAA2R,EAAAzV,YAIAkT,EAAAuC,YAAAloB,IAAAkoB,GAGAvC,EAAAxa,KAAA,IAAAoL,WAAAjb,KAAA6rE,cAGAzrE,EAAA,EAAiBA,EAAAJ,KAAA4rE,aAAArpE,OAA8BnC,IAC/CiqB,EAAAxa,KAAAnL,IAAA1E,KAAA4rE,aAAAxrE,GAAAsc,GACAA,GAAA1c,KAAA4rE,aAAAxrE,GAAA+W,WAKA,IAAA/W,EAAA,EAAiBA,EAAAJ,KAAA2sD,gBAAApqD,OAAiCnC,IAClD+sD,EAAAntD,KAAA2sD,gBAAAvsD,GACA+sD,EAAApnD,UAAAonD,EAAAM,SAAAL,EACAD,EAAApnD,WAAA,IACAonD,EAAAlnD,QAAAknD,EAAAO,OAAAN,EACAD,EAAAlnD,SAAA,IACAokB,EAAAijC,eAAAH,EAAAx6C,SAAA,EACA0X,EAAAgjC,SAAAhkD,KAAA8jD,GAKA,IAAA/sD,EAAA,EAAiBA,EAAAJ,KAAA4sD,gBAAArqD,OAAiCnC,IAClD8sD,EAAAltD,KAAA4sD,gBAAAxsD,GACA8sD,EAAAS,QAAAT,EAAAx2C,IAAA02C,EACAF,EAAAS,SAAA,IACAtjC,EAAAkjC,SAAAlkD,KAAA6jD,GAIA7iC,EAAAkjC,SAAAK,aAAA5tD,KAAAssD,eAAAsB,aAGA5tD,KAAA6sD,cAAAtqD,OAAA,EACAvC,KAAAysD,WAAA,KACAzsD,KAAA4rE,aAAArpE,OAAA,EACAvC,KAAA2sD,gBAAApqD,OAAA,EACAvC,KAAA6rE,aAAA,EACA7rE,KAAA4sD,gBAAArqD,OAAA,EAGAvC,KAAA2W,QAAA,OAAA0T,GAGArqB,KAAA8rE,eAAA9rE,KAAAqsD,iBACArsD,KAAA2W,QAAA,QACA3W,KAAA8rE,cAAA,IASA6iE,GAAA,SAAArpH,GACA,IAEAmnC,EACAC,EAHA3sD,EAAAC,KACAgsE,GAAA,EAIA2iE,GAAA3sI,UAAAuU,KAAAhW,KAAAP,MAEAslB,QACAtlB,KAAAugE,oBAAAj7C,EAAAi7C,qBAAA,EACAvgE,KAAAisE,qBAEAjsE,KAAAksE,iBAAA,WACA,IAAAC,KACAnsE,KAAAisE,kBAAAE,EAEAA,EAAA5jE,KAAA,MACA4jE,EAAA7f,eAAA,IAAA6hF,GAAA76E,eAGA6Y,EAAAC,UAAA,IAAAW,GACAZ,EAAArZ,6BAAA,IAAAq7E,GAAA/3H,wBAAA,SACA+1D,EAAApZ,qCAAA,IAAAo7E,GAAA/3H,wBAAA,kBACA+1D,EAAAnZ,WAAA,IAAA8M,GACAqM,EAAA9Y,eAAA,IAAAu7E,GAAAtpH,EAAA6mD,EAAA7f,gBACA6f,EAAAE,eAAAF,EAAAC,UAEAD,EAAAC,UAAA1tD,KAAAytD,EAAArZ,8BAAAp0C,KAAAytD,EAAAnZ,YACAmZ,EAAAC,UAAA1tD,KAAAytD,EAAApZ,sCAAAr0C,KAAAytD,EAAA7f,gBAAA5tC,KAAAytD,EAAA9Y,gBAEA8Y,EAAA7f,eAAAnuC,GAAA,qBAAA+nC,GACAimB,EAAAC,UAAAznB,aAAAuB,EAAAxB,aAGAynB,EAAAC,UAAAjuD,GAAA,gBAAAtO,GACA,mBAAAA,EAAAtH,MAAA4jE,EAAAhZ,qBACAzG,MACAc,mBACA+S,oBAAAxgE,EAAAwgE,qBAEAC,MAAA,OACAj4D,KAAA,SAGA4jE,EAAA9Y,eAAAhH,iBACA8f,EAAAhZ,mBAAA,IAAAu7E,GAAAhiF,EAAApnC,GAEA6mD,EAAAnZ,WAAAt0C,KAAAytD,EAAAhZ,oBAAAz0C,KAAAytD,EAAA9Y,mBAKA8Y,EAAA9Y,eAAAl1C,GAAA,OAAAne,KAAA2W,QAAA/U,KAAA5B,KAAA,SAEAmsE,EAAA9Y,eAAAl1C,GAAA,OAAAne,KAAA2W,QAAA/U,KAAA5B,KAAA,UAGAA,KAAAssE,gBAAA,WACA,IAAAH,KACAnsE,KAAAisE,kBAAAE,EAEAA,EAAA5jE,KAAA,KACA4jE,EAAA7f,eAAA,IAAA6hF,GAAA76E,eAGA6Y,EAAAxZ,aAAA,IAAAw7E,GAAA56E,sBACA4Y,EAAAlsD,YAAA,IAAAkuH,GAAA36E,qBACA2Y,EAAAvZ,iBAAA,IAAAu7E,GAAA16E,iBACA0Y,EAAAtZ,6BAAA,IAAAs7E,GAAA/3H,wBAAA,SACA+1D,EAAArZ,6BAAA,IAAAq7E,GAAA/3H,wBAAA,SACA+1D,EAAApZ,qCAAA,IAAAo7E,GAAA/3H,wBAAA,kBACA+1D,EAAAnZ,WAAA,IAAA8M,GACAqM,EAAAlZ,WAAA,IAAA7L,GACA+kB,EAAA/Y,cAAA,IAAA+6E,GAAAz6E,cACAyY,EAAA9Y,eAAA,IAAAu7E,GAAAtpH,EAAA6mD,EAAA7f,gBACA6f,EAAAE,eAAAF,EAAAxZ,aAGAwZ,EAAAxZ,aAAAj0C,KAAAytD,EAAAlsD,aAAAvB,KAAAytD,EAAAvZ,kBAIAuZ,EAAAvZ,iBAAAl0C,KAAAytD,EAAAtZ,8BAAAn0C,KAAAytD,EAAAlZ,YACAkZ,EAAAvZ,iBAAAl0C,KAAAytD,EAAArZ,8BAAAp0C,KAAAytD,EAAAnZ,YAEAmZ,EAAAvZ,iBAAAl0C,KAAAytD,EAAApZ,sCAAAr0C,KAAAytD,EAAA7f,gBAAA5tC,KAAAytD,EAAA9Y,gBAGA8Y,EAAAlZ,WAAAv0C,KAAAytD,EAAA/Y,eAAA10C,KAAAytD,EAAA9Y,gBAEA8Y,EAAAvZ,iBAAAz0C,GAAA,gBAAAtO,GACA,IAAAzP,EAEA,gBAAAyP,EAAAtH,KAAA,CACAnI,EAAAyP,EAAAkuB,OAAAx7B,OAGA,MAAAnC,IACAqsD,GAAA,UAAA58C,EAAAkuB,OAAA39B,GAAAmI,KAGemkD,GAAA,UAAA78C,EAAAkuB,OAAA39B,GAAAmI,OACfmkD,EAAA78C,EAAAkuB,OAAA39B,GACAssD,EAAAc,kBAAA+S,oBAAAxgE,EAAAwgE,sBAJA9T,EAAA58C,EAAAkuB,OAAA39B,GACAqsD,EAAAe,kBAAA+S,oBAAAxgE,EAAAwgE,qBAQA9T,IAAA0f,EAAAjZ,qBACAiZ,EAAA9Y,eAAAhH,iBACA8f,EAAAjZ,mBAAA,IAAAu7E,GAAAhiF,EAAAnnC,GAEA6mD,EAAAjZ,mBAAA/0C,GAAA,6BAAAqvC,GAIAd,IACAA,EAAAc,oBAKA2e,EAAAhZ,mBAAA4U,eAAAva,EAAA/2C,QAIA01D,EAAAjZ,mBAAA/0C,GAAA,oBAAApe,EAAA4W,QAAA/U,KAAA7B,EAAA,YAEAosE,EAAAjZ,mBAAA/0C,GAAA,+BAAAoiD,GACA7T,GACAyf,EAAAhZ,mBAAA8U,4BAAA1H,KAKA4L,EAAAlZ,WAAAv0C,KAAAytD,EAAAjZ,oBAAAx0C,KAAAytD,EAAA9Y,iBAGA3G,IAAAyf,EAAAhZ,qBAEAgZ,EAAA9Y,eAAAhH,iBACA8f,EAAAhZ,mBAAA,IAAAu7E,GAAAhiF,EAAApnC,GAGA6mD,EAAAnZ,WAAAt0C,KAAAytD,EAAAhZ,oBAAAz0C,KAAAytD,EAAA9Y,oBAMA8Y,EAAA9Y,eAAAl1C,GAAA,OAAAne,KAAA2W,QAAA/U,KAAA5B,KAAA,SAEAmsE,EAAA9Y,eAAAl1C,GAAA,OAAAne,KAAA2W,QAAA/U,KAAA5B,KAAA,UAIAA,KAAAusE,uBAAA,SAAAhM,GACA,IAAA4L,EAAAnsE,KAAAisE,kBAEAjsE,KAAAugE,sBACA7T,IACAA,EAAAc,kBAAA/2C,SAAAxJ,EACAy/C,EAAAc,kBAAA92C,SAAAzJ,EACAg6D,GAAAva,GACAA,EAAAc,kBAAA+S,sBACA4L,EAAArZ,8BACAqZ,EAAArZ,6BAAAl8C,iBAGA61C,IACA0f,EAAAjZ,qBACAiZ,EAAAjZ,mBAAAiW,aACAgD,EAAAtZ,6BAAAj8C,iBAEA61C,EAAAe,kBAAA/2C,SAAAxJ,EACAw/C,EAAAe,kBAAA92C,SAAAzJ,EACAg6D,GAAAxa,GACA0f,EAAA/Y,cAAAlc,QACAuV,EAAAe,kBAAA+S,uBAGA4L,EAAApZ,sCACAoZ,EAAApZ,qCAAAn8C,iBAIA5W,KAAAkoE,oBAAA,SAAAtjB,GACA8H,GACA1sD,KAAAisE,kBAAA9Y,mBAAA+U,oBAAAtjB,IAIA5kD,KAAAqrE,cAAA,SAAApC,GACAxc,GAAAzsD,KAAAisE,kBAAA/Y,oBACAlzD,KAAAisE,kBAAA/Y,mBAAAmY,cAAApC,IAKAjpE,KAAAqJ,KAAA,SAAAwG,GACA,GAAAm8D,EAAA,CACA,IAAAQ,EAAAzF,GAAAl3D,GAEA28D,GAAA,QAAAxsE,KAAAisE,kBAAA1jE,KACAvI,KAAAksE,mBACWM,GAAA,OAAAxsE,KAAAisE,kBAAA1jE,MACXvI,KAAAssE,kBAEAN,GAAA,EAEAhsE,KAAAisE,kBAAAI,eAAAhjE,KAAAwG,IAIA7P,KAAAiT,MAAA,WACA+4D,GAAA,EAEAhsE,KAAAisE,kBAAAI,eAAAp5D,SAIAjT,KAAA2zD,cAAA,WACA3zD,KAAAisE,kBAAA7Y,eACApzD,KAAAisE,kBAAA7Y,cAAAlc,UAIAy3F,GAAA3sI,UAAA,IAAA2Q,EAEA,IAAAsmE,IACAroB,WAAA+9E,GACAt9E,mBAAAo9E,GACAn9E,mBAAAo9E,GACAnnE,oBACAC,qBAGAH,IACAvF,UAAA0rE,EACA58E,WAAAqoB,GAAAroB,WACAU,mBAAA2nB,GAAA3nB,mBACAD,mBAAA4nB,GAAA5nB,oBAGA09E,GAAA,SAAA/0H,EAAAN,GACA,KAAAM,aAAAN,GACA,UAAA1E,UAAA,sCAIAg6H,GAAA,WACA,SAAA51H,EAAAC,EAAAC,GACA,QAAAlZ,EAAA,EAAuBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CACzC,IAAAmZ,EAAAD,EAAAlZ,GACAmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EACAuY,EAAAC,cAAA,EACA,UAAAD,MAAAE,UAAA,GACA3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAIA,gBAAAG,EAAAC,EAAAC,GAGA,OAFAD,GAAAP,EAAAM,EAAA1X,UAAA2X,GACAC,GAAAR,EAAAM,EAAAE,GACAF,GAdA,GA6BAs/D,GAAA,SAAAC,GACAA,EAAA96D,GAAA,gBAAAsN,GAKA,IAAAyvD,EAAAzvD,EAAAmB,YAEAnB,EAAAmB,aACA/c,KAAAqrE,EAAA9pE,OACAyJ,WAAAqgE,EAAArgE,WACA1D,WAAA+jE,EAAA/jE,YAGA,IAAAgkE,EAAA1vD,EAAA5b,KAEA4b,EAAA5b,KAAAsrE,EAAA/pE,OACAm8H,EAAAn/G,aACA4oD,OAAA,OACAvrD,UACA5Q,WAAAsgE,EAAAtgE,WACA1D,WAAAgkE,EAAAhkE,aACSsU,EAAA5b,SAGTopE,EAAA7lB,eACA6lB,EAAA7lB,cAAAj1C,GAAA,gBAAAgvC,GACAogF,EAAAn/G,aACA4oD,OAAA,UACAnnE,KAAAs9C,MAKA8rB,EAAA96D,GAAA,gBAAAtO,GACA09H,EAAAn/G,aAA8B4oD,OAAA,WAG9BiC,EAAA96D,GAAA,mBAAAi9D,GACAmyD,EAAAn/G,aACA4oD,OAAA,UACAoE,eAaAlC,GAAA,WACA,SAAAA,EAAA5zD,GACAypH,GAAA/uI,KAAAk5E,GAEAl5E,KAAAslB,cACAtlB,KAAAuW,OAwFA,OAjFAy4H,GAAA91D,IACAv3E,IAAA,OACAN,MAAA,WACArB,KAAAi5E,YACAj5E,KAAAi5E,WAAAx6D,UAEAze,KAAAi5E,WAAA,IAAA5R,GAAAzW,WAAA5wD,KAAAslB,SACA0zD,GAAAh5E,KAAAi5E,eAWAt3E,IAAA,OACAN,MAAA,SAAAwO,GAEA,IAAA4b,EAAA,IAAAxQ,WAAApL,SAAAgL,WAAAhL,EAAAsH,YAEAnX,KAAAi5E,WAAA5vE,KAAAoiB,MASA9pB,IAAA,QACAN,MAAA,WACArB,KAAAuW,UAYA5U,IAAA,qBACAN,MAAA,SAAAwO,GACA,IAAAonC,EAAApnC,EAAAonC,iBAAA,EAEAj3C,KAAAi5E,WAAA1M,uBAAAz/D,KAAAoB,MAAA,IAAA+oC,OAGAt1C,IAAA,sBACAN,MAAA,SAAAwO,GACA7P,KAAAi5E,WAAA/Q,oBAAAp7D,KAAAwB,KAAA,IAAAuB,EAAAwrE,iBAWA15E,IAAA,QACAN,MAAA,SAAAwO,GACA7P,KAAAi5E,WAAAhmE,WAGAtR,IAAA,gBACAN,MAAA,WACArB,KAAAi5E,WAAAtlB,mBAGAhyD,IAAA,gBACAN,MAAA,SAAAwO,GACA7P,KAAAi5E,WAAA5N,cAAAx7D,EAAAo5D,gBAAA5xD,aAGA6hE,EA7FA,GAwGAoC,GAAA,SAAAv7E,GACAA,EAAAouB,UAAA,SAAA9D,GACA,SAAAA,EAAAxa,KAAAmnE,QAAA3sD,EAAAxa,KAAAyV,QACAtlB,KAAAo5E,gBAAA,IAAAF,GAAA7uD,EAAAxa,KAAAyV,UAIAtlB,KAAAo5E,kBACAp5E,KAAAo5E,gBAAA,IAAAF,IAGA7uD,EAAAxa,MAAAwa,EAAAxa,KAAAmnE,QAAA,SAAA3sD,EAAAxa,KAAAmnE,QACAh3E,KAAAo5E,gBAAA/uD,EAAAxa,KAAAmnE,SACAh3E,KAAAo5E,gBAAA/uD,EAAAxa,KAAAmnE,QAAA3sD,EAAAxa,SAMAo/H,GAAA,IAAA3zD,GAAAv7E,IA5tJA,KA6uJAuyE,GAAA,SAAA9R,GACA,uBAAAh6D,KAAAg6D,IAWA+R,GAAA,SAAA/R,GACA,wBAAAh6D,KAAAg6D,IAYAgS,GAAA,SAAAjqE,GACA,IAAAzG,GAAgByG,KAAA,GAAAkqE,eAChBA,EAAAlqE,EAAAI,OAAAhF,MAAA,KAeA,OAZA7B,EAAAyG,KAAAkqE,EAAA93B,QAAAhyC,OACA8pE,EAAAjmD,QAAA,SAAAkmD,GACA,IAAAC,EAAAD,EAAA/pE,OAAAhF,MAAA,KAEA,GAAAgvE,EAAApwE,OAAA,GACA,IAAA5B,EAAAgyE,EAAA,GAAAxvE,QAAA,SAAAwF,OACAtH,EAAAsxE,EAAA,GAAAxvE,QAAA,SAAAwF,OAEA7G,EAAA2wE,WAAA9xE,GAAAU,KAIAS,GAWAyvB,GAAA,SAAAE,GACA,OAAAA,EAAArZ,IAAA,SAAAooD,GACA,OAAAA,EAAAr9D,QAAA,+BAAA0vE,EAAAC,EAAAC,GACA,IAAAC,GAAA,KAAApqC,OAAAkqC,GAAAx9D,SAAA,KAAA+B,OAAA,GACA47D,GAAA,KAAArqC,OAAAmqC,GAAAz9D,SAAA,KAAA+B,OAAA,GAEA,cAAA27D,EAAA,KAAAC,OAaA4J,GAAA,SAAA1oD,EAAAqH,GACA,IAAA43C,EAAAj/C,EAAA+lB,gBAAA1e,GACAshD,EAAAh8E,OAAAY,OAAA,MAEAo7E,EAAAhmC,UAAA,EACAgmC,EAAAC,YAAA3J,EAEA,IAAA4J,EAAA,SAAAr7E,GACA,oBAAAyxE,EAAAzxE,GACAm7E,EAAAn7E,GAAA,WACA,OAAAyxE,EAAAzxE,GAAAwW,MAAAi7D,EAAA9wE,YAEK,qBAAAw6E,EAAAn7E,IACLb,OAAAC,eAAA+7E,EAAAn7E,GACAV,IAAA,WACA,OAAAmyE,EAAAzxE,IAEA+C,IAAA,SAAAZ,GACA,OAAAsvE,EAAAzxE,GAAAmC,MAMA,QAAAnC,KAAAyxE,EACA4J,EAAAr7E,GAGA,OAAAm7E,GAgBAG,GAAA,SAAA7rE,EAAA0V,EAAAiS,GACA,IAAAjS,IAAA1V,EAAA7O,OACA,SAIA,IAAA26E,EAAApwE,KAAAwB,KAAA,KAAAwY,EAAAmO,cAAA8D,EAAA,IAEA34B,OAAA,EAEA,IAAAA,EAAA,EAAaA,EAAAgR,EAAA7O,OAAmBnC,IAChC,GAAAgR,EAAAhR,GAAAsW,IAAAwmE,EACA,MAIA,OAAA9rE,EAAAiG,MAAAjX,IAiBA+8E,GAAA,SAAA/rE,EAAAk4D,EAAAnmE,GACA,IAAAmmE,EAAA/mE,OACA,OAAA6O,EAGA,GAAAjO,EAKA,OAAAmmE,EAAAjyD,QAGA,IAAA7R,EAAA8jE,EAAA,GAAA5yD,IAEAtW,EAAA,EAEA,IAAAA,EAASA,EAAAgR,EAAA7O,OAAmBnC,IAC5B,GAAAgR,EAAAhR,GAAAsW,KAAAlR,EACA,MAIA,OAAA4L,EAAAiG,MAAA,EAAAjX,GAAAkX,OAAAgyD,IAeA8T,GAAA,SAAAhsE,EAAA5L,EAAAG,EAAAozB,GACA,IAAA00B,EAAA3gD,KAAAwB,KAAA,KAAA9I,EAAAuzB,IACA20B,EAAA5gD,KAAAwB,KAAA,KAAA3I,EAAAozB,IACAskD,EAAAjsE,EAAAiG,QAEAjX,EAAAgR,EAAA7O,OAEA,MAAAnC,IACA,GAAAgR,EAAAhR,GAAAsW,KAAAg3C,EACA,MAIA,QAAAttD,EAEA,OAAAi9E,EAGA,IAAAlwD,EAAA/sB,EAAA,EAEA,MAAA+sB,IACA,GAAA/b,EAAA+b,GAAAzW,KAAA+2C,EACA,MASA,OAJAtgC,EAAArgB,KAAAC,IAAAogB,EAAA,GAEAkwD,EAAA/+D,OAAA6O,EAAA/sB,EAAA+sB,EAAA,GAEAkwD,GAiBAC,GAAA,SAAArqD,GAGA,SAAAqqD,EAAAnpD,EAAA1C,GACAu5G,GAAAhrI,KAAAs9E,GAEA,IAAAx9D,EAAAurH,GAAArrI,MAAAs9E,EAAA19D,WAAA9e,OAAAif,eAAAu9D,IAAA/8E,KAAAP,KAAA8qI,GAAA9uG,cAEAlc,EAAA06B,iBAAA,EACA16B,EAAAy9D,mBACAz9D,EAAA09D,iBAAA,EAEA19D,EAAAw0B,aAAAngB,EACArU,EAAA29D,QAAAhsD,EACA3R,EAAAg6D,YAAA,KACAh6D,EAAAm6D,YAAA,KACAn6D,EAAA+5D,gBAAA,EACA/5D,EAAA85D,yBAAA,EACA95D,EAAA49D,cACA59D,EAAAs6D,aAAA,EACAt6D,EAAA69D,YAAAmtD,GAAAvxG,QAAAC,YAAA,GAEA,IAAAlU,GACAomD,OAAA,EACA3B,eAAAjqD,EAAA69D,aAmKA,OAhKA79D,EAAA29D,QAAAjxD,QAAA,SAAAg0C,GACA8R,GAAA9R,GACA1gD,EAAAg6D,YAAAtZ,EACO+R,GAAA/R,KACP1gD,EAAAm6D,YAAAzZ,KAMA1gD,EAAAi3D,YAAA,IAAAq2D,GACAttH,EAAAi3D,YAAA3oD,aAAmC4oD,OAAA,OAAA1xD,YAEnCxF,EAAAi3D,YAAA5oD,UAAA,SAAA9D,GACA,eAAAA,EAAAxa,KAAAmnE,OACAl3D,EAAA89D,MAAAvzD,GAGA,SAAAA,EAAAxa,KAAAmnE,OACAl3D,EAAA+9D,MAAAxzD,GAGA,YAAAA,EAAAxa,KAAAmnE,OACAl3D,EAAAg+D,eAAAzzD,QADA,GAOAvpB,OAAAC,eAAA+e,EAAA,mBACA7e,IAAA,WACA,OAAAjB,KAAAw6C,kBAEA91C,IAAA,SAAAmK,GACA,kBAAAA,MAAA,IACA7O,KAAAw6C,iBAAA3rC,EACA7O,KAAA45E,yBAAA,EAGA55E,KAAA09E,WAAAn7E,OAAA,EACAvC,KAAAo6E,aAAA,EAIAp6E,KAAA+2E,YAAA3oD,aACA4oD,OAAA,qBACA//B,gBAAApoC,QAOA/N,OAAAC,eAAA+e,EAAA,qBACA7e,IAAA,WACA,OAAAjB,KAAA+9E,cAAA/9E,KAAAg+E,cAAAC,mBAEAv5E,IAAA,SAAAc,GACAxF,KAAA+9E,eACA/9E,KAAA+9E,aAAAE,kBAAAz4E,GAEAxF,KAAAg+E,eACAh+E,KAAAg+E,aAAAC,kBAAAz4E,MAMA1E,OAAAC,eAAA+e,EAAA,YACA7e,IAAA,WACA,SAAAjB,KAAAw9E,kBAAAx9E,KAAA65E,gBAAA75E,KAAAg+E,cAAAh+E,KAAAg+E,aAAAlnC,UAAA92C,KAAA+9E,cAAA/9E,KAAA+9E,aAAAjnC,aAMAh2C,OAAAC,eAAA+e,EAAA,YACA7e,IAAA,WACA,IAAAuE,EAAA,KACAG,EAAA,KACAkpC,EAAA,EACAC,KACAxhB,KAGA,IAAAttB,KAAA+9E,eAAA/9E,KAAAg+E,aACA,OAAA8sD,GAAAj+F,kBAIA,IAAA7sC,KAAA+9E,aACA,OAAA/9E,KAAAg+E,aAAAtlD,SAEA,IAAA14B,KAAAg+E,aACA,OAAAh+E,KAAA+9E,aAAArlD,SAIA,GAAA14B,KAAA65E,eACA,OAAA75E,KAAA+9E,aAAArlD,SAIA,OAAA14B,KAAA+9E,aAAArlD,SAAAn2B,QAAA,IAAAvC,KAAAg+E,aAAAtlD,SAAAn2B,OACA,OAAAuoI,GAAAj+F,kBAKA,IAAAqxC,EAAAl+E,KAAA+9E,aAAArlD,SACAylD,EAAAn+E,KAAAg+E,aAAAtlD,SACAjuB,EAAAyzE,EAAA37E,OAGA,MAAAkI,IACAqkC,EAAAzlC,MAAwBmkC,KAAA0wC,EAAA14E,MAAAiF,GAAAlC,KAAA,UACxBumC,EAAAzlC,MAAwBmkC,KAAA0wC,EAAAv4E,IAAA8E,GAAAlC,KAAA,QAExBkC,EAAA0zE,EAAA57E,OACA,MAAAkI,IACAqkC,EAAAzlC,MAAwBmkC,KAAA2wC,EAAA34E,MAAAiF,GAAAlC,KAAA,UACxBumC,EAAAzlC,MAAwBmkC,KAAA2wC,EAAAx4E,IAAA8E,GAAAlC,KAAA,QASxB,IANAumC,EAAAvG,KAAA,SAAAhiC,EAAAY,GACA,OAAAZ,EAAAinC,KAAArmC,EAAAqmC,OAKA/iC,EAAA,EAAuBA,EAAAqkC,EAAAvsC,OAAwBkI,IAC/C,UAAAqkC,EAAArkC,GAAAlC,MACAsmC,IAIA,IAAAA,IACArpC,EAAAspC,EAAArkC,GAAA+iC,OAEW,QAAAsB,EAAArkC,GAAAlC,OACXsmC,IAIA,IAAAA,IACAlpC,EAAAmpC,EAAArkC,GAAA+iC,OAKA,OAAAhoC,GAAA,OAAAG,IACA2nB,EAAAjkB,MAAA7D,EAAAG,IACAH,EAAA,KACAG,EAAA,MAIA,OAAAmlI,GAAAt2G,iBAAAlH,MAGAxN,EAkaA,OA5lBAsrH,GAAA9tD,EAAArqD,GAsMAg4G,GAAA3tD,IACA37E,IAAA,QACAN,MAAA,SAAAgpB,GACA,IAAAoB,EAAApB,EAAAxa,KAAA4b,QAGAA,EAAA5b,KAAA,IAAAoL,WAAAwQ,EAAA5b,KAAAwa,EAAAxa,KAAAgL,WAAAwP,EAAAxa,KAAAsH,YAEAsU,EAAAmB,YAAA,IAAA3R,WAAAwQ,EAAAmB,YAAA/c,KAAA4b,EAAAmB,YAAA/R,WAAA4Q,EAAAmB,YAAAzV,YAEAg8D,GAAAnzE,UAAAs0C,aAAA7oB,GAGAzrB,KAAAu9E,gBAAAl0E,KAAAoiB,MAeA9pB,IAAA,QACAN,MAAA,SAAAgpB,GAEA,WAAArqB,KAAAs0C,aAAA7a,WAOAz5B,KAAAo+E,0BANAp+E,KAAAu9E,gBAAAh7E,OAAA,KAoBAZ,IAAA,2BACAN,MAAA,WACA,IAAA20B,EAAAh2B,KAEAkjE,GAAA,iBAEAA,EAAA12C,QAAA,SAAAjkB,GAGA,GAAAytB,EAAAztB,EAAA,YAKAytB,EAAAztB,EAAA,YAIA,IAAA6I,EAAA,KAIA,GAAA4kB,EAAAse,aAAA/rC,EAAA,WACA6I,EAAA4kB,EAAAse,aAAA/rC,EAAA,WAWA6I,EAAA0lC,UAAA,MACS,CACT,IAAAunC,EAAA91E,EAAA,SACAizB,EAAAjzB,EAAA,gBAAsCytB,EAAAqoD,GAAA,IAEtCjtE,EAAAyrE,GAAA7mD,EAAAse,aAAAmlC,mBAAAj+C,GAEAxF,EAAAse,aAAA/rC,EAAA,WAAA6I,EAGA4kB,EAAAztB,EAAA,WAAA6I,GAGA,oCAAAob,QAAA,SAAAnC,GACAjZ,EAAAijB,iBAAAhK,EAAA,WAEA,aAAA9hB,IAAAytB,EAAA6jD,eAAA,CAIA,cAAAxvD,IACA2L,EAAAztB,EAAA,WAAAuuC,UAAA,GAGA,IAAAwnC,EAAApb,EAAAqb,MAAA,SAAAj9E,GAGA,kBAAAA,IAAA00B,EAAA6jD,kBAIAtxE,IAAAjH,IAAA00B,EAAA10B,EAAA,aAAA00B,EAAA10B,EAAA,WAAAw1C,YAMA,OAAAwnC,EACAtoD,EAAArf,QAAA0T,QADA,aAmBA1oB,IAAA,eACAN,MAAA,SAAAoqB,GAIA,GAFAzrB,KAAAw9E,iBAAA,EAEAx9E,KAAAg+E,cAAAh+E,KAAAg+E,aAAAtlD,SAAAn2B,OAAA,CACA,IAAA47E,EAAAn+E,KAAAg+E,aAAAtlD,SAEA14B,KAAA+2E,YAAA3oD,aACA4oD,OAAA,sBACAqE,YAAA8C,EAAAx4E,IAAAw4E,EAAA57E,OAAA,KAIAvC,KAAA+9E,cACA/9E,KAAA+2E,YAAA3oD,aACA4oD,OAAA,gBACA/N,gBAAAgU,GAAAj9E,KAAA09E,WAAA19E,KAAAs0C,aAAA++B,QAAArzE,KAAAo6E,gBAIAp6E,KAAA+2E,YAAA3oD,aACA4oD,OAAA,OAIAnnE,KAAA4b,EAAAra,OAIAyJ,WAAA4Q,EAAA5Q,WACA1D,WAAAsU,EAAAtU,aACOsU,EAAAra,SACPpR,KAAA+2E,YAAA3oD,aAAoC4oD,OAAA,aAcpCr1E,IAAA,iBACAN,MAAA,SAAAgpB,GACArqB,KAAA09E,WAAAP,GAAAn9E,KAAA09E,WAAArzD,EAAAxa,KAAAurE,QAAAp7E,KAAA29E,gBAaAh8E,IAAA,SACAN,MAAA,SAAAmE,EAAAG,GAeA,GAdA3F,KAAA+9E,eACA/9E,KAAA+9E,aAAAjnC,UAAA,EACA92C,KAAA+9E,aAAApnC,OAAAnxC,EAAAG,GACA3F,KAAA09E,WAAAN,GAAAp9E,KAAA09E,WAAAl4E,EAAAG,EAAA3F,KAAAo6E,gBAEAp6E,KAAA65E,gBAAA75E,KAAAg+E,eACAh+E,KAAAg+E,aAAAlnC,UAAA,EACA92C,KAAAg+E,aAAArnC,OAAAnxC,EAAAG,IAIAk1E,GAAAr1E,EAAAG,EAAA3F,KAAA8xE,gBAGA9xE,KAAA4xE,kBACA,QAAAvnE,KAAArK,KAAA4xE,kBACAiJ,GAAAr1E,EAAAG,EAAA3F,KAAA4xE,kBAAAvnE,OAcA1I,IAAA,0BACAN,MAAA,WACA,IAAAm9E,GACA7rD,OACA3R,YACA7E,MAAA,GAEAyW,OACA5R,YACA7E,MAAA,GAEAkxC,YACAE,aAKAixB,EAAAx+E,KAAAu9E,gBAAA7lE,OAAA,SAAA+mE,EAAAhzD,GACA,IAAAljB,EAAAkjB,EAAAljB,KACAsH,EAAA4b,EAAA5b,KACA+c,EAAAnB,EAAAmB,YAqBA,OAnBA6xD,EAAAl2E,GAAAyY,SAAA3X,KAAAwG,GACA4uE,EAAAl2E,GAAA4T,OAAAtM,EAAAsH,WAEAsnE,EAAAl2E,GAAAqkB,cAGAnB,EAAA4hC,WACAoxB,EAAApxB,SAAAoxB,EAAApxB,SAAA/1C,OAAAmU,EAAA4hC,WAGA5hC,EAAAsgD,OACA0S,EAAAl2E,GAAAwjE,KAAAtgD,EAAAsgD,MAIAtgD,EAAA8hC,WACAkxB,EAAAlxB,SAAAkxB,EAAAlxB,SAAAj2C,OAAAmU,EAAA8hC,WAGAkxB,GACOD,GAIPx+E,KAAA+9E,cAAA/9E,KAAAg+E,eAGA,IAAAQ,EAAA7rD,MAAAxW,QACAnc,KAAAi6E,YAAA,MAEA,IAAAuE,EAAA5rD,MAAAzW,QACAnc,KAAA85E,YAAA,MAGA95E,KAAA06E,4BAGA8D,EAAA5rD,MAAAm5C,MACA/rE,KAAAs0C,aAAA39B,SAAmCpO,KAAA,YAAAwjE,KAAAyS,EAAA5rD,MAAAm5C,OAEnCyS,EAAA7rD,MAAAo5C,MACA/rE,KAAAs0C,aAAA39B,SAAmCpO,KAAA,YAAAwjE,KAAAyS,EAAA7rD,MAAAo5C,OAGnC/rE,KAAA45E,2BACA55E,KAAA65E,gBAAA75E,KAAAg+E,eACAQ,EAAA5rD,MAAA5R,SAAA2oD,QAAA6U,EAAA5rD,MAAAhG,aACA4xD,EAAA5rD,MAAAzW,OAAAqiE,EAAA5rD,MAAAhG,YAAAzV,YAEAnX,KAAA45E,yBAAA,GAGA,IAAA8E,GAAA,EAGA1+E,KAAA+9E,cAAAS,EAAA7rD,MAAAxW,OACAqiE,EAAA7rD,MAAA3R,SAAA2oD,QAAA6U,EAAA7rD,MAAA/F,aACA4xD,EAAA7rD,MAAAxW,OAAAqiE,EAAA7rD,MAAA/F,YAAAzV,WACAnX,KAAA2+E,yBAAAH,EAAA7rD,MAAA3yB,KAAA+9E,cAEAvM,GAAAxxE,KAAAw+E,EAAAnxB,SAAAmxB,EAAAjxB,YACOvtD,KAAA+9E,eAAA/9E,KAAA65E,gBAAA75E,KAAAg+E,eAOPU,GAAA,IAGA1+E,KAAA65E,gBAAA75E,KAAAg+E,cACAh+E,KAAA2+E,yBAAAH,EAAA5rD,MAAA5yB,KAAAg+E,cAGAh+E,KAAAu9E,gBAAAh7E,OAAA,EAEAm8E,GACA1+E,KAAA2W,QAAA,aAIA3W,KAAAw9E,iBAAA,KAaA77E,IAAA,2BACAN,MAAA,SAAAo9E,EAAAG,GACA,IAAAliE,EAAA,EACAmiE,OAAA,EAEA,GAAAJ,EAAAtiE,MAAA,CACA0iE,EAAA,IAAA5jE,WAAAwjE,EAAAtiE,OAGAsiE,EAAAz9D,SAAAwL,QAAA,SAAAf,GACAozD,EAAAn6E,IAAA+mB,EAAA/O,GACAA,GAAA+O,EAAAtU,aAGA,IACAynE,EAAA9nC,UAAA,EACA8nC,EAAA7lC,aAAA8lC,GACS,MAAAlnD,GACT33B,KAAAs0C,aAAA++B,SACArzE,KAAAs0C,aAAA++B,QAAA17C,OACA/0B,MAAA,EACA2F,KAAA,oBACA5F,QAAAg1B,EAAAh1B,QACAm8E,cAAAnnD,SAeAh2B,IAAA,QACAN,MAAA,WACArB,KAAA+9E,cACA/9E,KAAA+9E,aAAAnmD,SAEA53B,KAAA65E,gBAAA75E,KAAAg+E,cACAh+E,KAAAg+E,aAAApmD,QAEA53B,KAAA+2E,aACA/2E,KAAA+2E,YAAA3oD,aAAsC4oD,OAAA,UAEtCh3E,KAAAu9E,gBAAAh7E,OAAA,EACAvC,KAAAw9E,iBAAA,MAGAF,EA7lBA,CA8lBCwtD,GAAA9uG,aAeDw9C,GAAA,SAAAvmD,GAGA,SAAAumD,IACAwxD,GAAAhrI,KAAAw5E,GAEA,IAAA15D,EAAAurH,GAAArrI,MAAAw5E,EAAA55D,WAAA9e,OAAAif,eAAAy5D,IAAAj5E,KAAAP,OAEA+B,OAAA,EAIA,IAAAA,KAFA+d,EAAA25D,mBAAA,IAAmCwvD,EAAA1iI,EAAQ6tB,YAE3CtU,EAAA25D,mBACA13E,KAAAy3E,EAAAx3E,WAAA,oBAAA8d,EAAA25D,mBAAA13E,KACA+d,EAAA/d,GAAA+d,EAAA25D,mBAAA13E,GAAAH,KAAAke,EAAA25D,qBA+NA,OAxNA35D,EAAAu0B,UAAAxG,IACA/sC,OAAAC,eAAA+e,EAAA,YACA7e,IAAA,WACA,OAAAjB,KAAAq0C,YAAA17B,IACA3Y,KAAAq0C,UAEAr0C,KAAAy5E,mBAAA53D,UAEAnd,IAAA,SAAAmd,GACA7hB,KAAAq0C,UAAAxyB,EACAA,IAAAlJ,MACA3Y,KAAAy5E,mBAAA53D,eAKA/gB,OAAAC,eAAA+e,EAAA,YACA7e,IAAA,WACA,OAAAjB,KAAAq0C,YAAA17B,IACAmyH,GAAAt2G,mBAAA,EAAAx0B,KAAAy5E,mBAAA53D,YAEA7hB,KAAAy5E,mBAAAvkD,YAIAp0B,OAAAC,eAAA+e,EAAA,cACA7e,IAAA,WACA,OAAAjB,KAAAy5E,mBAAAhgD,cAIA34B,OAAAC,eAAA+e,EAAA,uBACA7e,IAAA,WACA,OAAAjB,KAAA05E,wBAMA55D,EAAAu0D,iBAEAv0D,EAAA45D,wBAQA55D,EAAA65D,2BAAA,WAMA,GAJA75D,EAAA45D,qBAAAn3E,OAAA,EAIA,IAAAud,EAAAu0D,cAAA9xE,OAAA,CACA,IAAA6wE,EAAAtzD,EAAAu0D,cAAA,GAKA,OAHAjB,EAAAwG,yBAAA,EACAxG,EAAAyG,gBAAAzG,EAAA0G,iBACAh6D,EAAA45D,qBAAArwE,KAAA+pE,GAaA,IALA,IAAA2G,GAAA,EACAC,GAAA,EAIA55E,EAAA,EAAqBA,EAAA0f,EAAAuzD,QAAA10C,cAAAp8B,OAAwCnC,IAAA,CAC7D,IAAAiK,EAAAyV,EAAAuzD,QAAA10C,cAAAv+B,GAEA,GAAAiK,EAAA4zB,SAAA,SAAA5zB,EAAAwqB,KAAA,CAGAklD,GAAA,EACAC,GAAA,EACA,OAIAl6D,EAAAu0D,cAAA7nD,QAAA,SAAA4mD,EAAAt7D,GAQA,GAFAs7D,EAAAwG,yBAAA,EAEAxG,EAAA6G,aAAA7G,EAAA0G,YAEA1G,EAAAyG,eAAAE,OACS,GAAA3G,EAAA6G,cAAA7G,EAAA0G,YAIT1G,EAAAyG,gBAAA,EACAG,GAAA,OACS,IAAA5G,EAAA6G,aAAA7G,EAAA0G,cAOT1G,EAAAyG,eAAA/hE,EAAAkiE,KACA5G,EAAAyG,gBACA,OAIA/5D,EAAA45D,qBAAArwE,KAAA+pE,MAIAtzD,EAAAo6D,qBAAA,WACAp6D,EAAAu0D,cAAA7nD,QAAA,SAAA4mD,GACAA,EAAAwG,yBAAA,KAIA95D,EAAAs3D,YAAA,WACAt3D,EAAAu0D,cAAA7nD,QAAA,SAAA4mD,GACAA,EAAA2D,aACA3D,EAAA2D,YAAA3oD,aAAgD4oD,OAAA,qBAKhDl3D,EAAAq6D,yBAAA,SAAA9vD,GACAvK,EAAAu0D,cAAA7nD,QAAA,SAAApb,GACA,OAAAA,EAAAgpE,aAAA/vD,EAAA0O,YAKA,0CAAAvM,QAAA,SAAA6tD,GACAr6E,KAAAy5E,mBAAAplD,iBAAAgmD,EAAAr6E,KAAA2W,QAAA/U,KAAA5B,QACK8f,GAILA,EAAA3B,GAAA,sBAAAkM,GAEA,IAAAsI,EAAkBw2G,EAAA5iI,EAAQ+zE,cAAA,SAAAx6D,EAAAy6D,KAAA,MAE1B5nD,IAIA7S,EAAAuzD,QAAAy3D,GAAAn4G,EAAA1pB,YAIA6W,EAAAuzD,QAAAtsD,MAAA5I,GAAA,YAAA2B,EAAAs3D,aAIAt3D,EAAAuzD,QAAAtsD,MAAA5I,GAAA,2BAAA2B,EAAAq6D,0BAEAr6D,EAAAuzD,QAAA10C,aAAA7e,EAAAuzD,QAAA10C,gBACA7e,EAAAuzD,QAAA10C,cAAAxgB,GAAA,SAAA2B,EAAA65D,4BACA75D,EAAAuzD,QAAA10C,cAAAxgB,GAAA,WAAA2B,EAAA65D,4BACA75D,EAAAuzD,QAAA10C,cAAAxgB,GAAA,cAAA2B,EAAA65D,6BAGA75D,EAAAuzD,QAAAl1D,GAAA,cAAA2B,EAAAo6D,yBAGAp6D,EAAA3B,GAAA,uBAAAkM,GAGA,IAFA,IAAAxI,EAAAyvD,GAAAxxD,EAAA+B,UAEAzhB,EAAA,EAAqBA,EAAA0f,EAAAu0D,cAAA9xE,OAAgCnC,IAAA,CACrD,IAAAo6E,EAAA16D,EAAAu0D,cAAAj0E,GACAkQ,EAAAkqE,EAAA1I,gBAAA0I,EAAA1I,eAAAxhE,KAEAA,KAAA/N,SACA+N,IAAA/N,OAAA,GAAA0D,QAAA4b,MAOA/B,EAAA3B,GAAA,uBAAAkM,GACArqB,KAAAq0E,cAAA7nD,QAAA,SAAA4mD,GACAA,EAAA2D,aACA3D,EAAA2D,YAAA37C,cAIAp7B,KAAAq0E,cAAA9xE,OAAA,EACAvC,KAAAqzE,UAIArzE,KAAAqzE,QAAA10C,aAAA3+B,KAAAqzE,QAAA10C,gBACA3+B,KAAAqzE,QAAA10C,cAAAtgB,IAAA,SAAAre,KAAA25E,4BACA35E,KAAAqzE,QAAA10C,cAAAtgB,IAAA,WAAAre,KAAA25E,4BACA35E,KAAAqzE,QAAA10C,cAAAtgB,IAAA,cAAAre,KAAA25E,6BAOA35E,KAAAqzE,QAAAoH,MACAz6E,KAAAqzE,QAAAh1D,IAAA,cAAAre,KAAAk6E,sBACAl6E,KAAAqzE,QAAAtsD,MAAA1I,IAAA,YAAAre,KAAAo3E,aACAp3E,KAAAqzE,QAAAtsD,MAAA1I,IAAA,2BAAAre,KAAAm6E,8BAGAr6D,EAmFA,OA/TAsrH,GAAA5xD,EAAAvmD,GAuPAg4G,GAAAzxD,IACA73E,IAAA,oBACAN,MAAA,SAAAmE,EAAAG,GACA,IAAAgyB,OAAA,EAEA,GAAA33B,KAAA6hB,WAAAlJ,IAIA,MAHAgf,EAAA,IAAAn1B,MAAA,oFACAm1B,EAAAh3B,KAAA,oBACAg3B,EAAA/0B,KAAA,GACA+0B,GAGAhyB,EAAA3F,KAAAy5E,mBAAA53D,UAAAiuB,MAAA9vC,KAAAy5E,mBAAA53D,aACA7hB,KAAAy5E,mBAAA53D,SAAAlc,MAaAhE,IAAA,kBACAN,MAAA,SAAAkH,GACA,IAAA6I,OAAA,EACAsjE,EAAAlC,GAAAjqE,GAIA,4BAAA/B,KAAAkuE,EAAAnsE,MAAA,CACA,IAAAkpB,KAEAijD,EAAAjC,YAAAiC,EAAAjC,WAAAhhD,SACAA,EAAAijD,EAAAjC,WAAAhhD,OAAA9tB,MAAA,KACA8tB,EAAAF,GAAAE,GACAA,IAAAC,OAAA,SAAA8uC,GACA,OAAA8R,GAAA9R,IAAA+R,GAAA/R,MAIA,IAAA/uC,EAAAlvB,SACAkvB,GAAA,4BAGArgB,EAAA,IAAAksE,GAAAt9E,KAAAyxB,GAEA,IAAAzxB,KAAAq0E,cAAA9xE,SAMAvC,KAAAq0E,cAAA,GAAAqG,2BACAtpE,EAAAspE,2BAIA16E,KAAAq0E,cAAA,GAAAwF,gBAAA,QAIAzoE,EAAApR,KAAAy5E,mBAAAv/B,gBAAA3xC,GAIA,OADAvI,KAAAq0E,cAAAhrE,KAAA+H,GACAA,MAGAooE,EAhUA,CAiUCsxD,GAAA9uG,aAKD6/C,GAAA,EASAivD,GAAA/uD,gBASA,IAAAC,GAAA,SAAAC,EAAAzH,GACA,IAAArgD,EAAA22G,GAAA/uD,aAAAE,GAEA,IAAA9nD,EAGA,UAAA3xB,MAAA,qCAFA2xB,EAAAxd,SAAyBpO,KAAA,aAAAisE,WAYzB0H,GAAA,WACA,QAAW+sD,EAAA1iI,EAAQ6tB,eAAkB60G,EAAA1iI,EAAQ6tB,YAAAyH,iBAAgCotG,EAAA1iI,EAAQ6tB,YAAAyH,gBAAA,6CAUrFzH,GAAA,WAMA,GALAp0B,KAAAo0B,aACA4nD,QACAE,+BAGAA,KACA,WAAA1C,GAGA,UAAAh3E,MAAA,2DAGA4xB,GAAA4nD,QACA5nD,GAAA8nD,8BAQA,IAAAgzD,IASA7yD,gBAAA,SAAAv6E,GACA,IAAAw6E,EAAA,yBACAppD,OAAA,EAGA,OAAApxB,aAAA03E,IACAtmD,EAAY+1G,EAAA1iI,EAAQ61E,IAAAC,gBAAAv6E,EAAA23E,oBACpB33E,EAAAy4E,KAAArnD,EACAA,GAIApxB,aAAA03E,IAQAtmD,EAAAopD,EAAAT,GAEAA,KAGAivD,GAAA/uD,aAAA7oD,GAAApxB,EAEAoxB,IAdAA,EAAY+1G,EAAA1iI,EAAQ61E,IAAAC,gBAAAv6E,GACpBA,EAAAy4E,KAAArnD,EACAA,KAgBA43G,GAAA12G,eACA02G,GAAA1uD,IAAA8yD,GAEA,IAAAC,GAAArE,GAAA9uG,YACAozG,GAAAtE,GAAAp1G,aAeA25G,GAAA,SAAAC,EAAAC,GAQA,IAPA,IAAA3pG,EAAAwpG,GAAAE,GAEAztH,SAAA0tH,EAAA1tH,SACA8mE,oBAAA4mD,EAAA5mD,sBAIAvoF,EAAA,EAAiBA,EAAAmvI,EAAA3sH,UAAArgB,OAAgCnC,IAAA,CACjD,IAAAovI,EAAAzpG,GAAAH,EAAA2pG,EAAA3sH,UAAAxiB,IAEAovI,IACA5pG,EAAA4pG,GAkBA,OAbA9D,GAAA6D,EAAA,SAAAp3G,EAAA5vB,EAAA8yB,EAAAvG,GACA,GAAAqD,EAAAvV,WAAAuV,EAAAvV,UAAArgB,OAAA,CACA,IAAA2f,EAAAiW,EAAAvV,UAAA,GAAAV,IACAutH,EAAA1pG,GAAAH,EAAAzN,EAAAvV,UAAA,IAEA6sH,IACA7pG,EAAA6pG,EAEA7pG,EAAA/iB,YAAAta,GAAA8yB,GAAAvG,GAAAlS,UAAA,GAAAgjB,EAAAhjB,UAAAV,OAKA0jB,GAGA8pG,GAAA,SAAAhpG,GAMA,SAAAgpG,EAAAC,EAAAjpH,EAAAN,EAAAoQ,GACAw0G,GAAAhrI,KAAA0vI,GAEA,IAAA5vH,EAAAurH,GAAArrI,MAAA0vI,EAAA9vH,WAAA9e,OAAAif,eAAA2vH,IAAAnvI,KAAAP,OAKA,GAHA8f,EAAA2T,KAAA/M,EACA5G,EAAAsG,mBAEAupH,EACA,UAAAntI,MAAA,oDAcA,OAVAsd,EAAA3B,GAAA,iCACA2B,EAAA8vH,gBAIA9vH,EAAA3B,GAAA,gCACA2B,EAAA+vH,kBAIA,kBAAAF,GACA7vH,EAAA6mB,OAAAgpG,EACA7vH,EAAA3O,MAAA,eACAk6H,GAAAvrH,KAGAA,EAAA0V,sBAAAgB,EAEA1W,EAAA3O,MAAA,gBACA2O,EAAA0nB,SAAA,EAEA1nB,EAAAgD,MAAA6sH,GAEI1G,EAAA1iI,EAAQ09B,WAAA,WACZnkB,EAAAnJ,QAAA,mBACK,GACLmJ,GAwXA,OApaAsrH,GAAAsE,EAAAhpG,GA+CAukG,GAAAyE,IACA/tI,IAAA,UACAN,MAAA,WACArB,KAAAonC,cACM6hG,EAAA1iI,EAAQw9B,aAAA/jC,KAAAmnC,uBAGdxlC,IAAA,cACAN,MAAA,WACA,GAAArB,KAAA6/B,QAAA,CACA,IAAAwH,EAAArnC,KAAA6/B,QAEA7/B,KAAA6/B,QAAA,KACAwH,EAAAC,mBAAA,KACAD,EAAAzP,YAIAj2B,IAAA,QACAN,MAAA,SAAAqhB,GAEA,IAAAA,EACA,OAAA1iB,KAAAknC,OAIA,oBAAAlnC,KAAAmR,MACA,UAAA3O,MAAA,qCAAAxC,KAAAmR,OAGA,IAAA41B,EAAA/mC,KAAAmR,MAGA,qBAAAuR,EAAA,CACA,IAAA1iB,KAAAiyB,OAAArP,UAAAF,GACA,UAAAlgB,MAAA,yBAAAkgB,GAEAA,EAAA1iB,KAAAiyB,OAAArP,UAAAF,GAGA,IAAA6kB,GAAAvnC,KAAAknC,QAAAxkB,EAAAR,MAAAliB,KAAAknC,OAAAhlB,IAEAliB,KAAAmR,MAAA,gBAGAo2B,IAKAvnC,KAAAknC,QACAlnC,KAAA2W,QAAA,iBAGA3W,KAAAknC,OAAAxkB,EAEA1iB,KAAA6vI,gBAGA,gBAAA9oG,GACA/mC,KAAA2W,QAAA,mBAIAhV,IAAA,QACAN,MAAA,WACArB,KAAAonC,cACA,iBAAApnC,KAAAmR,QAGAnR,KAAAwnC,SAAA,MAIA7lC,IAAA,OACAN,MAAA,WAGArB,KAAAwnC,QAKAxnC,KAAA2W,QAAA,kBAJA3W,KAAAwF,WAeA7D,IAAA,iBACAN,MAAA,WACA,IAAA4wB,EAAmBnxB,OAAAipI,EAAA,KAAAjpI,CAAKd,KAAA8vI,YACxBl8C,YAAA5zF,KAAA2mC,OACA0jD,aAAArqF,KAAA+vI,gBAGA99G,EAAA/P,IAAAliB,KAAA2mC,OAKA,QAAAvmC,EAAA,EAAqBA,EAAA6xB,EAAArP,UAAArgB,OAA6BnC,IAAA,CAClD,IAAA4vI,EAAA,mBAAA5vI,EAEA6xB,EAAArP,UAAAxiB,GAAA8hB,IAAA8tH,EAEA/9G,EAAArP,UAAAotH,GAAA/9G,EAAArP,UAAAxiB,GAkBA,OAbAsrI,GAAAz5G,EAAA,SAAAkG,EAAA+E,EAAAiJ,EAAAC,GACA,GAAAjO,EAAAvV,WAAAuV,EAAAvV,UAAArgB,OAAA,CACA,IAAA0tI,EAAA,mBAAA/yG,EAAA,IAAAiJ,EAAA,IAAAC,EAEAjO,EAAAvV,UAAA,GAAAV,IAAA+tH,EAEAh+G,EAAArP,UAAAqtH,GAAA93G,EAAAvV,UAAA,MAIAqjB,GAAAhU,GACAiU,GAAAjU,GAEAA,KAGAtwB,IAAA,QACAN,MAAA,WACA,IAAA20B,EAAAh2B,KAEAA,KAAAwnC,SAAA,EAGAxnC,KAAA6/B,QAAA7/B,KAAAyzB,KAAAzM,KACA9E,IAAAliB,KAAA2mC,OACAvgB,gBAAApmB,KAAAomB,iBACO,SAAAuR,EAAAiP,GAEP,GAAA5Q,EAAA6J,QAAA,CAOA,GAFA7J,EAAA6J,QAAA,KAEAlI,EAWA,OAVA3B,EAAA2B,OACA6I,OAAAoG,EAAApG,OACA79B,QAAA,uCAAAqzB,EAAA2Q,OACAK,aAAAJ,EAAAI,aAEApkC,KAAA,GAEA,iBAAAozB,EAAA7kB,QACA6kB,EAAAwR,SAAA,GAEAxR,EAAArf,QAAA,SAGAqf,EAAA85G,WAAAlpG,EAAAI,aAEAJ,EAAAklG,iBAAAllG,EAAAklG,gBAAAoE,KACAl6G,EAAAm6G,cAAAtlH,KAAArZ,MAAAo1B,EAAAklG,gBAAAoE,MAEAl6G,EAAAm6G,cAAAtlH,KAAA4P,MAGAzE,EAAAo6G,uBAAAp6G,EAAAq6G,yBAAAzuI,KAAAo0B,UAaAr0B,IAAA,yBACAN,MAAA,SAAAwa,GACA,IAAA0c,EAAAv4B,KAEAswI,EAAsBxvI,OAAAipI,EAAA,KAAAjpI,CAAcd,KAAA8vI,YAIpC,cAAAQ,GACAtwI,KAAA+vI,cAAA/vI,KAAAmwI,cAAAtlH,KAAA4P,MACA5e,KAGA,WAAAy0H,EAAAruH,QACAjiB,KAAA+vI,cAAAO,EAAAjvI,MAAAwpB,KAAA4P,MACA5e,UAGA7b,KAAA6/B,QAAA7/B,KAAAyzB,KAAAzM,KACA9E,IAAAkwB,GAAApyC,KAAA2mC,OAAA2pG,EAAAjvI,OACA4gB,OAAAquH,EAAAruH,OACAmE,gBAAApmB,KAAAomB,iBACO,SAAAuR,EAAAiP,GAEP,GAAArO,EAAAsH,QAAA,CAIA,GAAAlI,EAIA,OADAY,EAAAw3G,cAAAx3G,EAAA43G,cAAAtlH,KAAA4P,MACA5e,IAGA,IAAA00H,OAAA,EAQAA,EANA,SAAAD,EAAAruH,OACA2kB,EAAAklG,iBAAAllG,EAAAklG,gBAAAoE,KAKArlH,KAAArZ,MAAAo1B,EAAAklG,gBAAAoE,MAFA33G,EAAA43G,cAKAtlH,KAAArZ,MAAAo1B,EAAAI,cAGAzO,EAAAw3G,cAAAQ,EAAA1lH,KAAA4P,MAEA5e,WAUAla,IAAA,2BACAN,MAAA,WACA,IAAAg4B,EAAAr5B,KAEAA,KAAAiyB,OAAAjyB,KAAAwwI,iBAEAxwI,KAAAmR,MAAA,cAEAnR,KAAA2W,QAAA,kBAEA3W,KAAAknC,QAGAlnC,KAAA8iB,MAAA9iB,KAAAiyB,OAAArP,UAAA,IAIMqmH,EAAA1iI,EAAQ09B,WAAA,WACd5K,EAAA1iB,QAAA,mBACO,GAQP3W,KAAAiyB,OAAA02D,qBACQsgD,EAAA1iI,EAAQ09B,WAAA,WAChB5K,EAAA1iB,QAAA,wBACS3W,KAAAiyB,OAAA02D,wBAUThnF,IAAA,cACAN,MAAA,WACA,IAAAy5B,EAAA96B,KAEAA,KAAA6/B,QAAA7/B,KAAAyzB,KAAAzM,KACA9E,IAAAliB,KAAA2mC,OACAvgB,gBAAApmB,KAAAomB,iBACO,SAAAuR,EAAAiP,GAEP,GAAA9L,EAAA+E,QAAA,CAOA,GAFA/E,EAAA+E,QAAA,KAEAlI,EAWA,OAVAmD,EAAAnD,OACA6I,OAAAoG,EAAApG,OACA79B,QAAA,uCAAAm4B,EAAA6L,OACAK,aAAAJ,EAAAI,aAEApkC,KAAA,GAEA,iBAAAk4B,EAAA3pB,QACA2pB,EAAA0M,SAAA,GAEA1M,EAAAnkB,QAAA,SAGAmkB,EAAAg1G,WAAAlpG,EAAAI,aAEA,IAAAuoG,EAAAz0G,EAAA01G,iBAEA11G,EAAA7I,OAAAo9G,GAAAv0G,EAAA7I,OAAAs9G,GAEQtG,EAAA1iI,EAAQ09B,WAAA,WAChBnJ,EAAAnkB,QAAA,wBACSmkB,EAAA7I,OAAA02D,2BAWThnF,IAAA,gBACAN,MAAA,WACA,IAAA85B,EAAAn7B,KAEAsvI,OAAA,EACAC,OAAA,EAEAvvI,KAAAw1B,uBACA85G,EAAAtvI,KAAAw1B,sBAAAvD,OACAs9G,EAAAvvI,KAAAw1B,sBAAAg7G,mBAEAlB,EAAAtvI,KAAAiyB,OACAs9G,EAAAvvI,KAAAwwI,kBAGA,IAAAC,EAAApB,GAAAC,EAAAC,GAEAkB,GACAzwI,KAAAw1B,sBACAx1B,KAAAw1B,sBAAAvD,OAAAw+G,EAEAzwI,KAAAiyB,OAAAw+G,EAEAzwI,KAAAknC,OAAAupG,EAAA7tH,UAAA5iB,KAAAknC,OAAAhlB,MAEAliB,KAAA2W,QAAA,qBAGA3W,KAAA8iB,QAAArB,UACAzhB,KAAAmnC,mBAAkC8hG,EAAA1iI,EAAQ09B,WAAA,WAC1C9I,EAAAxkB,QAAA,uBACS2vB,GAAAtmC,KAAA8iB,UAAA2tH,KAGTzwI,KAAA2W,QAAA,sBAGA+4H,EAraA,CAsaCP,IAEDuB,GAAA,SAAA3xH,GACA,OAAA+rH,GAAAt4G,IAAA6Q,MACAynG,GAAAt4G,IAAA6Q,MAAAzhC,KAAAkpI,GAAA,OAAA/rH,EAAA,MAGA,cAGA,SAAAuB,MAqBA,IAAAy5B,GAAA,WACA,SAAAA,EAAA5lB,EAAAqH,EAAAjzB,EAAAooI,GACA3F,GAAAhrI,KAAA+5C,GAEA/5C,KAAAu6C,cACAv6C,KAAAq6C,iBAAA,KACAr6C,KAAAw6C,iBAAA,EACAx6C,KAAAm0B,cACAn0B,KAAAy6C,kBAAA,EACAz6C,KAAAwW,MAAAjO,EACAvI,KAAA80C,UAAAtZ,EACAx7B,KAAAsjC,QAAAotG,GAAA,iBAAAnoI,EAAA,KAAAizB,EAAA,KAEA,WAAArH,EAAAsF,WACAtF,EAAAE,iBAAA,aAAAr0B,KAAA4wI,oBAAAhvI,KAAA5B,KAAAw7B,EAAAm1G,IAEA3wI,KAAA4wI,oBAAAp1G,EAAAm1G,GA4MA,OAxMA1F,GAAAlxF,IACAp4C,IAAA,sBACAN,MAAA,SAAAm6B,EAAAm1G,GACA,IAAA7wH,EAAA9f,KAEAA,KAAAi6C,cAAAj6C,KAAAm0B,YAAA+lB,gBAAA1e,GAEAx7B,KAAAsjC,QAAA,wBAEAqtG,IACAA,EAAAh6H,QAAA,qBAEA3W,KAAAm0B,YAAAkgD,cAAA9xE,OAAA,GAKAouI,EAAAxyH,GAAA,+BACA2B,EAAA+wH,WAMA7wI,KAAA6wI,YAGAlvI,IAAA,SACAN,MAAA,WACA,IAAA20B,EAAAh2B,KAEAA,KAAA8wI,UAAA,EAIA9wI,KAAAm6C,qBAAA,WACA,IAAAC,EAAApkB,EAAAqkB,iBAEArkB,EAAAqkB,iBAAA,KAEArkB,EAAAsN,QAAA,aAAAkB,GAAAxO,EAAA0C,YAAA,KAEA0hB,GACAA,IAGApkB,EAAAskB,gBAGAt6C,KAAAi6C,cAAA5lB,iBAAA,YAAAr0B,KAAAm6C,sBAEAn6C,KAAAs6C,kBAWA34C,IAAA,QACAN,MAAA,SAAAwa,GACA,IAAA0c,EAAAv4B,KAEAA,KAAAy6C,kBACAz6C,KAAA06C,eAAA,WACAniB,EAAA0hB,cAAAriB,SACS/b,MAaTla,IAAA,eACAN,MAAA,SAAA8a,EAAAN,GACA,IAAAwd,EAAAr5B,KAEAA,KAAAy6C,kBAAA,EACAz6C,KAAA06C,eAAA,WACArhB,EAAA4gB,cAAAlB,aAAA58B,IACON,MAUPla,IAAA,WACAN,MAAA,WACA,OAAArB,KAAAi6C,cAGAj6C,KAAAi6C,cAAAvhB,SAFAoyG,GAAAt2G,sBAcA7yB,IAAA,SACAN,MAAA,SAAAmE,EAAAG,GACA,IAAAm1B,EAAA96B,KAEAA,KAAAy6C,kBACAz6C,KAAA06C,eAAA,WACA5f,EAAAwI,QAAA,WAAA99B,EAAA,OAAAG,EAAA,KACAm1B,EAAAmf,cAAAtD,OAAAnxC,EAAAG,IACS2a,OAWT3e,IAAA,WACAN,MAAA,WACA,OAAArB,KAAAi6C,eAAAj6C,KAAAi6C,cAAAnD,UAAA92C,KAAAq6C,oBAUA14C,IAAA,kBACAN,MAAA,SAAAqb,GACA,IAAAye,EAAAn7B,KAQA,MANA,qBAAA0c,IACA1c,KAAA06C,eAAA,WACAvf,EAAA8e,cAAAhD,gBAAAv6B,IAEA1c,KAAAw6C,iBAAA99B,GAEA1c,KAAAw6C,oBAQA74C,IAAA,iBACAN,MAAA,SAAAkC,EAAAsY,GACA7b,KAAAu6C,WAAAlxC,MAAA9F,EAAA3B,KAAA5B,MAAA6b,IACA7b,KAAAs6C,kBAQA34C,IAAA,eACAN,MAAA,WACA,IAAAkd,OAAA,GAEAve,KAAA82C,YAAA92C,KAAAu6C,WAAAh4C,QAAAvC,KAAA8wI,WACAvyH,EAAAve,KAAAu6C,WAAAI,QACA36C,KAAAq6C,iBAAA97B,EAAA,GACAA,EAAA,SASA5c,IAAA,UACAN,MAAA,WACArB,KAAAi6C,cAAA/e,oBAAA,YAAAl7B,KAAAm6C,sBACAn6C,KAAAi6C,eAAA,SAAAj6C,KAAAm0B,YAAAsF,YACAz5B,KAAAi6C,cAAAriB,YAIAmiB,EA5NA,GA+NAg3F,IACAvjH,mBAAA,GACAC,uBAAA,GACAC,wBAAA,EAGAC,mBAAA,IAEAC,sBAAA,EACAC,0BAAA,GACAC,2BAAA,GAGAkR,IACAC,QAAA,EACAC,SAAA,IACAC,SAAA,KAUAC,GAAA,SAAA7d,GACA,IAAA8d,OAAA,EACAC,OAAA,EAMA,OAFAA,EAAA/d,EAAA7E,OAAA6E,EAAAhf,OAAA,EACA88B,EAAA9d,EAAA7E,OACA,SAAA2iB,EAAA,IAAAC,GASAC,GAAA,SAAA9T,GACA,IAAA+T,KAKA,OAHA/T,EAAAlK,YACAie,EAAAC,MAAAL,GAAA3T,EAAAlK,YAEAie,GAQAE,GAAA,SAAAC,GACAA,EAAAnT,QAAA,SAAAm/G,GACAA,EAAA/zG,WASAgI,GAAA,SAAAC,GACA,OACAzM,UAAAyM,EAAAzM,UACA0M,cAAAD,EAAAC,eAAA,EACAC,cAAAF,EAAAE,eAAA,IAUAC,GAAA,SAAAC,GACA,IAAAJ,EAAAI,EAAA5mB,OACA0mB,EAAAlV,KAAA4P,MAAAoF,EAAAK,YACAC,GACA/M,UAAAza,IACAmnB,cAAA,EACAC,iBAAA,GASA,OANAI,EAAAL,cAAAG,EAAAG,OAIAD,EAAA/M,UAAAtmB,KAAAuzB,MAAAF,EAAAL,cAAAK,EAAAJ,cAAA,OAEAI,GAUAG,GAAA,SAAA3I,EAAAkI,GACA,OAAAA,EAAAU,UAEAC,OAAAX,EAAAW,OACA79B,QAAA,iCAAAk9B,EAAA3d,IACAtf,KAAAo8B,GAAAE,QACAlY,IAAA6Y,GAIAA,EAAAY,SAEAD,OAAAX,EAAAW,OACA79B,QAAA,+BAAAk9B,EAAA3d,IACAtf,KAAAo8B,GAAAG,QACAnY,IAAA6Y,GAIAlI,GAEA6I,OAAAX,EAAAW,OACA79B,QAAA,+BAAAk9B,EAAA3d,IACAtf,KAAAo8B,GAAAC,QACAjY,IAAA6Y,GAIA,MAYAa,GAAA,SAAAjV,EAAAkV,GACA,gBAAAhJ,EAAAkI,GACA,IAAAe,EAAAf,EAAAe,SACAC,EAAAP,GAAA3I,EAAAkI,GAEA,GAAAgB,EACA,OAAAF,EAAAE,EAAApV,GAGA,QAAAmV,EAAAzpB,WACA,OAAAwpB,GACAH,OAAAX,EAAAW,OACA79B,QAAA,2BAAAk9B,EAAA3d,IACAtf,KAAAo8B,GAAAC,QACAjY,IAAA6Y,GACOpU,GAGP,IAAAqV,EAAA,IAAAC,SAAAH,GAGA,OADAnV,EAAA9pB,IAAAwa,MAAA,IAAAF,aAAA6kB,EAAAE,UAAA,GAAAF,EAAAE,UAAA,GAAAF,EAAAE,UAAA,GAAAF,EAAAE,UAAA,MACAL,EAAA,KAAAlV,KAYAwV,GAAA,SAAAxV,EAAAkV,GACA,gBAAAhJ,EAAAkI,GACA,IAAAe,EAAAf,EAAAe,SACAC,EAAAP,GAAA3I,EAAAkI,GAEA,OAAAgB,EACAF,EAAAE,EAAApV,GAIA,IAAAmV,EAAAzpB,WACAwpB,GACAH,OAAAX,EAAAW,OACA79B,QAAA,qCAAAk9B,EAAA3d,IACAtf,KAAAo8B,GAAAC,QACAjY,IAAA6Y,GACOpU,IAGPA,EAAArT,IAAA+D,MAAA,IAAAlB,WAAA4kB,EAAAe,UACAD,EAAA,KAAAlV,MAcAyV,GAAA,SAAAzV,EAAAkV,GACA,gBAAAhJ,EAAAkI,GACA,IAAAe,EAAAf,EAAAe,SACAC,EAAAP,GAAA3I,EAAAkI,GAEA,OAAAgB,EACAF,EAAAE,EAAApV,GAIA,IAAAmV,EAAAzpB,WACAwpB,GACAH,OAAAX,EAAAW,OACA79B,QAAA,qCAAAk9B,EAAA3d,IACAtf,KAAAo8B,GAAAC,QACAjY,IAAA6Y,GACOpU,IAGPA,EAAA0U,MAAAP,GAAAC,GAEApU,EAAA9pB,IACA8pB,EAAA0V,eAAA,IAAAlmB,WAAA4kB,EAAAe,UAEAnV,EAAAtP,MAAA,IAAAlB,WAAA4kB,EAAAe,UAGAD,EAAA,KAAAlV,MAYA2V,GAAA,SAAA7L,EAAA9J,EAAA4V,GACA,IAAAC,EAAA,SAAAA,EAAAjX,GACA,GAAAA,EAAAxa,KAAAkP,SAAA0M,EAAA8V,UAAA,CACAhM,EAAA2F,oBAAA,UAAAoG,GACA,IAAAtmB,EAAAqP,EAAAxa,KAAAmL,UAGA,OADAyQ,EAAAtP,MAAA,IAAAlB,WAAAD,EAAAmB,MAAAnB,EAAAH,WAAAG,EAAA7D,YACAkqB,EAAA,KAAA5V,KAIA8J,EAAAlB,iBAAA,UAAAiN,GAIA/L,EAAAnH,YAAA/B,IACAtN,OAAA0M,EAAA8V,UACA9mB,UAAAgR,EAAA0V,eACAx/B,IAAA8pB,EAAA9pB,IAAAwa,MACAiG,GAAAqJ,EAAA9pB,IAAAygB,MACGqJ,EAAA0V,eAAA/vB,OAAAqa,EAAA9pB,IAAAwa,MAAA/K,UASHowB,GAAA,SAAAC,GACA,OAAAA,EAAA/pB,OAAA,SAAAgqB,EAAA9X,GACA,OAAAA,EAAAhnB,KAAA8+B,EAAA9+B,KAAAgnB,EAAA8X,KAeAC,GAAA,SAAAhC,EAAApK,EAAA8L,GACA,IAAAI,KACAh3B,EAAA,EAEA,gBAAAktB,EAAAlM,GAQA,GAPAkM,IAEA+H,GAAAC,GACA8B,EAAAp4B,KAAAsuB,IAEAltB,GAAA,EAEAA,IAAAk1B,EAAAp9B,OAAA,CAIA,GAFAkpB,EAAAmW,iBAAA/W,KAAA4P,MAEAgH,EAAAl/B,OAAA,GACA,IAAAs/B,EAAAL,GAAAC,GAEA,OAAAJ,EAAAQ,EAAApW,GAEA,OAAAA,EAAA0V,eACAC,GAAA7L,EAAA9J,EAAA4V,GAGAA,EAAA,KAAA5V,MAeAqW,GAAA,SAAArW,EAAAsW,GACA,gBAAA1X,GAQA,OAPAoB,EAAA0U,MAAA2qG,GAAAp1G,aAAAjK,EAAA0U,MAAAH,GAAA3V,KAGAoB,EAAA0U,MAAA6B,sBAAAvW,EAAA0U,MAAAL,gBACArU,EAAA0U,MAAA6B,qBAAAnX,KAAA4P,OAGAsH,EAAA1X,EAAAoB,KAoDAwW,GAAA,SAAA0pG,EAAAzpG,EAAAC,EAAA1W,EAAAsW,EAAAV,GACA,IAAA1B,KACAgB,EAAAgB,GAAAhC,EAAAwC,EAAAd,GAGA,GAAA5V,EAAA9pB,IAAA,CACA,IAAAygC,EAAA0oG,GAAAp1G,aAAAwM,GACAhgB,IAAAuJ,EAAA9pB,IAAAkrB,YACAwV,aAAA,gBAEAC,EAAA5B,GAAAjV,EAAAkV,GACA4B,EAAAopG,EAAAvpG,EAAAE,GAEA3C,EAAAt2B,KAAAk5B,GAIA,GAAA9W,EAAArT,MAAAqT,EAAArT,IAAA+D,MAAA,CACA,IAAAqmB,EAAAsoG,GAAAp1G,aAAAwM,GACAhgB,IAAAuJ,EAAArT,IAAAyU,YACAwV,aAAA,cACA7C,QAAAD,GAAA9T,EAAArT,OAEAqqB,EAAAxB,GAAAxV,EAAAkV,GACA+B,EAAAipG,EAAAnpG,EAAAC,GAEA9C,EAAAt2B,KAAAq5B,GAGA,IAAAC,EAAAmoG,GAAAp1G,aAAAwM,GACAhgB,IAAAuJ,EAAAoB,YACAwV,aAAA,cACA7C,QAAAD,GAAA9T,KAEAmX,EAAA1B,GAAAzV,EAAAkV,GACAkC,EAAA8oG,EAAAhpG,EAAAC,GAKA,OAHAC,EAAAxO,iBAAA,WAAAyN,GAAArW,EAAAsW,IACApC,EAAAt2B,KAAAw5B,GAEA,WACA,OAAAnD,GAAAC,KAUAjP,IACAC,WAAA,OACAC,yBAAA,UAEAC,aAAA,KAQAkB,GAAA,WACA,IAAAN,EAAAnvB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAEAwF,GACA4zB,WAAA,GAEA6hB,OAAA,EAgBA,OAdAz1C,EAAA4zB,WAAAjK,EAAA9tB,MAAA,KAAApB,OACAuF,EAAA4zB,WAAA5zB,EAAA4zB,YAAA,EAGA6hB,EAAA,8BAAApzB,KAAAsH,GACA8rB,IACAz1C,EAAA6oB,WAAA4sB,EAAA,GACAz1C,EAAA8oB,yBAAA2sB,EAAA,IAIAz1C,EAAA+oB,aAAA,8CAAA1G,KAAAsH,GACA3pB,EAAA+oB,aAAA/oB,EAAA+oB,cAAA/oB,EAAA+oB,aAAA,GAEA/oB,GAYAkpI,GAAA,SAAA1/G,GACA,OAAAA,EAAAnuB,QAAA,+BAAAD,GACA,OAAAquB,IAAAruB,IAAA,MAWAsuB,GAAA,SAAAjpB,EAAA4G,EAAAsiB,GAIA,OAAAlpB,EAAA,IAAA4G,EAAA,aAAoCsiB,EAAAC,OAAA,SAAAjxB,GACpC,QAAAA,IACGqsB,KAAA,WAQH6E,GAAA,SAAA7O,GAKA,OAAAA,EAAA9B,UAAA8B,EAAA9B,SAAAze,QAAAugB,EAAA9B,SAAA,GAAA5I,IACA,MAEA,QASAwZ,GAAA,SAAA9O,GAGA,IAAA+O,EAAA/O,EAAAhB,eAEA,OAAA+P,EAAAC,OACAC,GAAAF,EAAAC,QAEApB,IAGAugH,GAAA,SAAAh/G,EAAAi/G,GACA,IAAAj/G,EAAApP,YAAArC,QAAA0wH,EACA,YAGA,IAAA5+G,EAAAL,EAAApP,YAAArC,MAAA0wH,GAEA,IAAA5+G,EACA,YAGA,QAAA3xB,KAAA2xB,EAAA,CACA,IAAA6+G,EAAA7+G,EAAA3xB,GAEA,GAAAwwI,EAAAr3H,SAAAq3H,EAAAvuH,UAEA,OAAAmP,GAAAo/G,EAAAvuH,UAAA,GAAAd,WAAAgQ,QAAAjB,aAIA,aAiBAugH,GAAA,SAAAn/G,EAAAnP,GACA,IAAAoP,EAAAP,GAAA7O,GACAqP,EAAAP,GAAA9O,GACA+O,EAAA/O,EAAAhB,eAEAsQ,GAAA,EACAC,GAAA,EAEA,IAAAvP,EAEA,SAGA,GAAAmP,EAAApP,YAAArC,OAAAqR,EAAArR,MAAA,CACA,IAAA8R,EAAAL,EAAApP,YAAArC,MAAAqR,EAAArR,OAGA,GAAA8R,EAKA,QAAAC,KAJAF,GAAA,EAEAD,GAAA,EAEAE,EAIA,IAAAA,EAAAC,GAAArQ,MAAAoQ,EAAAC,GAAA3P,UAAA,CACAwP,GAAA,EACA,OAQAC,IAAAF,EAAAtB,eACAuB,IAIAD,EAAAtB,aAAAogH,GAAAh/G,EAAAJ,EAAArR,QAGA2R,EAAAtB,eACAi6G,GAAAt4G,IAAAC,KAAA,+HACAN,EAAAtB,aAAAH,GAAAG,eAKA,IAAA6B,KAEAP,EAAAxB,aACA+B,EAAAC,MAAA,GAAAR,EAAAxB,WAAAwB,EAAAvB,0BAGAuB,EAAAtB,eACA6B,EAAAE,MAAA,WAAAT,EAAAtB,cAKA,IAAAgC,EAAArB,GAAA,QAAAU,GAAAQ,EAAAE,QACAE,EAAAtB,GAAA,QAAAU,GAAAQ,EAAAC,QACAI,EAAAvB,GAAA,QAAAU,GAAAQ,EAAAC,MAAAD,EAAAE,QAEA,OAAAP,GACAD,GAAAM,EAAAC,OACAG,EAAAD,GAGAT,GAAAM,EAAAC,OASAI,EAAAF,IANAA,KAWAH,EAAAC,OAMAI,IALAF,IAoBAmV,GAAA,SAAAC,EAAAlmC,GACA,IAAA+F,OAAA,EAEA,OAAAmgC,GAIAngC,EAAWmhI,EAAA1iI,EAAQ2hC,iBAAAD,GACnBngC,EAIAA,EAAA/F,GAHA,IALA,IAkBAomC,GAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAF,EAAA/wB,QAEA+wB,EAAAG,KAAA,SAAA9iC,EAAAG,GACA,IAAA4iC,EAAAH,EAAA5iC,EAAAG,GAEA,WAAA4iC,EACAF,EAAAx1B,QAAArN,GAAA6iC,EAAAx1B,QAAAlN,GAEA4iC,KAcAC,GAAA,SAAAhjC,EAAAG,GACA,IAAA8iC,OAAA,EACAC,OAAA,EAWA,OATAljC,EAAAqc,WAAA8I,YACA8d,EAAAjjC,EAAAqc,WAAA8I,WAEA8d,KAAmCugG,EAAA1iI,EAAQqiC,OAAAC,UAC3CjjC,EAAAkc,WAAA8I,YACA+d,EAAA/iC,EAAAkc,WAAA8I,WAEA+d,KAAqCsgG,EAAA1iI,EAAQqiC,OAAAC,UAE7CH,EAAAC,GAYAG,GAAA,SAAArjC,EAAAG,GACA,IAAAmjC,OAAA,EACAC,OAAA,EAgBA,OAdAvjC,EAAAqc,WAAA4I,YAAAjlB,EAAAqc,WAAA4I,WAAAze,QACA88B,EAAAtjC,EAAAqc,WAAA4I,WAAAze,OAGA88B,KAA2BkgG,EAAA1iI,EAAQqiC,OAAAC,UAEnCjjC,EAAAkc,WAAA4I,YAAA9kB,EAAAkc,WAAA4I,WAAAze,QACA+8B,EAAApjC,EAAAkc,WAAA4I,WAAAze,OAGA+8B,KAA6BigG,EAAA1iI,EAAQqiC,OAAAC,UAIrCE,IAAAC,GAAAvjC,EAAAqc,WAAA8I,WAAAhlB,EAAAkc,WAAA8I,UACAnlB,EAAAqc,WAAA8I,UAAAhlB,EAAAkc,WAAA8I,UAEAme,EAAAC,GAkBAC,GAAA,SAAAhX,EAAAiX,EAAAC,EAAAC,GAEA,IAAAC,EAAApX,EAAArP,UAAAxK,IAAA,SAAAsK,GACA,IAAAzW,OAAA,EACAC,OAAA,EACAknB,OAAA,EAQA,OANAnnB,EAAAyW,EAAAZ,WAAA4I,YAAAhI,EAAAZ,WAAA4I,WAAAze,MACAC,EAAAwW,EAAAZ,WAAA4I,YAAAhI,EAAAZ,WAAA4I,WAAAxe,OACAknB,EAAA1Q,EAAAZ,WAAA8I,UAEAwI,KAA6B61G,EAAA1iI,EAAQqiC,OAAAC,WAGrCzV,YACAnnB,QACAC,SACAwW,cAIAylB,GAAAkB,EAAA,SAAA5jC,EAAAG,GACA,OAAAH,EAAA2tB,UAAAxtB,EAAAwtB,YAKAiW,IAAA3X,OAAA,SAAA4X,GACA,OAAAlR,GAAAmR,eAAAD,EAAA5mB,YAKA,IAAA8mB,EAAAH,EAAA3X,OAAA,SAAA4X,GACA,OAAAlR,GAAAmC,UAAA+O,EAAA5mB,YAGA8mB,EAAAjnC,SAIAinC,EAAAH,EAAA3X,OAAA,SAAA4X,GACA,OAAAlR,GAAAqR,WAAAH,EAAA5mB,aAMA,IAAAgnB,EAAAF,EAAA9X,OAAA,SAAA4X,GACA,OAAAA,EAAAlW,UAAA29G,GAAApjH,mBAAAub,IAGAS,EAAAD,IAAAnnC,OAAA,GAIAqnC,EAAAF,EAAAhY,OAAA,SAAA4X,GACA,OAAAA,EAAAlW,YAAAuW,EAAAvW,YACG,GAGHyW,EAAAH,EAAAhY,OAAA,SAAA4X,GACA,OAAAA,EAAAr9B,OAAAq9B,EAAAp9B,SAIAi8B,GAAA0B,EAAA,SAAApkC,EAAAG,GACA,OAAAH,EAAAwG,MAAArG,EAAAqG,QAIA,IAAA69B,EAAAD,EAAAnY,OAAA,SAAA4X,GACA,OAAAA,EAAAr9B,QAAAk9B,GAAAG,EAAAp9B,SAAAk9B,IAGAO,EAAAG,IAAAvnC,OAAA,GAEA,IAAAwnC,EAAAD,EAAApY,OAAA,SAAA4X,GACA,OAAAA,EAAAlW,YAAAuW,EAAAvW,YACG,GAEH4W,OAAA,EACAC,OAAA,EACAC,OAAA,EAIAH,IACAC,EAAAH,EAAAnY,OAAA,SAAA4X,GACA,OAAAA,EAAAr9B,MAAAk9B,GAAAG,EAAAp9B,OAAAk9B,IAIAa,EAAAD,EAAAtY,OAAA,SAAA4X,GACA,OAAAA,EAAAr9B,QAAA+9B,EAAA,GAAA/9B,OAAAq9B,EAAAp9B,SAAA89B,EAAA,GAAA99B,SAKAy9B,EAAAM,IAAA1nC,OAAA,GACA2nC,EAAAD,EAAAvY,OAAA,SAAA4X,GACA,OAAAA,EAAAlW,YAAAuW,EAAAvW,YACK,IAIL,IAAA+W,EAAAD,GAAAH,GAAAH,GAAAJ,EAAA,IAAAH,EAAA,GAEA,OAAAc,IAAAznB,SAAA,MAeA0nB,GAAA,WACA,OAAAnB,GAAAjpC,KAAA4iB,UAAAqP,OAAAjyB,KAAAqqC,gBAAA5jC,SAAAuhC,GAAAhoC,KAAA+mB,MAAAkhB,KAAA,aAAAxhC,SAAAuhC,GAAAhoC,KAAA+mB,MAAAkhB,KAAA,gBA+BAwC,GAAA,SAAAjmC,GACA,IAAAytB,EAAAztB,EAAAytB,OACAgD,EAAAzwB,EAAAywB,YACA7B,EAAA5uB,EAAA4uB,UACAi+G,EAAA7sI,EAAAqd,SACA6oB,EAAAlmC,EAAAkmC,gBACAC,EAAAnmC,EAAAmmC,kBACA/pB,EAAApc,EAAAoc,gBACA0U,EAAA9wB,EAAA8wB,eAKAsV,EAAA3Y,EAAArP,UAAA8O,OAAA,SAAAhP,GACA,OAAA0V,GAAAmR,eAAA7mB,KAKAmoB,EAAAD,EAAAlZ,OAAA0G,GAAAmC,WAEAsQ,EAAAtoC,SAIAsoC,EAAAD,EAAAlZ,OAAA,SAAAhP,GACA,OAAA0V,GAAAqR,WAAA/mB,MAIA,IAAAooB,EAAAD,EAAAnZ,OAAA0G,GAAA2S,aAAAnpC,KAAA,mBAEAopC,EAAAF,EAAA1yB,IAAA,SAAAsK,GACA,IAAAuoB,EAAA3V,EAAA4V,aAAAxoB,EAAA2uH,EAAAzwH,EAAAqU,GAGAkW,EAAAF,EAAA,IACAG,EAAAhT,GAAAiT,2BAAAX,EAAAtX,EAAA1Q,GACA4oB,EAAAF,EAAAD,EAAAR,EAEA,OACAjoB,WACA4oB,uBAIAC,EAAAP,EAAAtZ,OAAA,SAAA8Z,GACA,OAAAA,EAAAF,mBAAA,IAQA,OAJAnD,GAAAoD,EAAA,SAAAhlC,EAAAY,GACA,OAAAshC,GAAAthC,EAAAub,SAAAnc,EAAAmc,YAGA6oB,EAAAhpC,OACAgpC,EAAA,IAGApD,GAAA6C,EAAA,SAAAzkC,EAAAY,GACA,OAAAZ,EAAA+kC,kBAAAnkC,EAAAmkC,oBAGAN,EAAA,WAcAS,GAAA,WAGA,IAAA7oB,EAAA5iB,KAAA4iB,UAAAqP,OAAArP,UAAA8O,OAAA0G,GAAAmC,WAGA4N,GAAAvlB,EAAA,SAAArc,EAAAY,GACA,OAAAshC,GAAAliC,EAAAY,KAQA,IAAAukC,EAAA9oB,EAAA8O,OAAA,SAAAhP,GACA,OAAAqP,GAAArP,EAAAZ,WAAAgQ,QAAAnB,aAGA,OAAA+a,EAAA,UAQAyH,GAAA,IAYAC,GAAA,SAAA1wB,EAAAyR,EAAAkf,GACA,IAAA3wB,IAAAyR,EACA,SAGA,IAAAnT,EAAA0B,EAAA1B,SAIAsyB,EAAAD,IAAAryB,EAAAze,OAKA,OAAAmgB,EAAAjB,SAAA,SAAA0S,EAAAsF,YAAA6Z,GAGAC,GAAA,SAAAxG,GACA,wBAAAA,GAAAn0B,SAAAm0B,IAGAyG,GAAA,SAAA5d,EAAA6d,EAAAC,GAGA,eAAA9d,GAAA6d,GAAAC,EAIAA,EAAAC,eAAAD,EAAAE,cAIAH,EAAAG,gBAAAF,EAAAE,cACA,6LAGAH,EAAAG,eAAAF,EAAAE,cACA,kMAGA,KAXA,4CAJA,MA+BAC,GAAA,SAAAy9F,EAAAr8G,EAAAjR,GACA,IAAA8vB,OAAA,EAaA,OATAA,EAFAw9F,EAAA/uI,QAAA+uI,EAAA9rI,MAAA,MAAA8rI,EAAA9rI,MAAA,GAAAyvB,EAEAq8G,EAAA9rI,MAAA,GAGAyvB,EAAA,GAMAnoB,KAAAuC,IAAAykC,EAAA7e,EAAAjR,IAGAutH,GAAA,SAAAj7F,GACA,IAAAk7F,EAAAl7F,EAAA7qB,QACAjmB,EAAAgsI,EAAAhsI,MACAG,EAAA6rI,EAAA7rI,IACA8rI,EAAAn7F,EAAA5zB,SACAgvH,EAAAD,EAAA9vH,cACAld,EAAAgtI,EAAAhtI,GACAktI,EAAAF,EAAAzwH,SACAA,OAAA/T,IAAA0kI,OACA75H,EAAAw+B,EAAA7I,WACA/oB,EAAA4xB,EAAA5xB,SAEA,qBAAA5M,EAAA,SAAA45H,EAAA,MAAAA,EAAA1wH,EAAAze,QAAA,oBAAAkC,EAAA,QAAAe,EAAA,OAAAG,EAAA,kBAAA+e,EAAA,KAAAoI,KAAA,MAWAinB,GAAA,SAAA9gB,GAGA,SAAA8gB,EAAAvvC,GACAwmI,GAAAhrI,KAAA+zC,GAGA,IAAAj0B,EAAAurH,GAAArrI,MAAA+zC,EAAAn0B,WAAA9e,OAAAif,eAAAg0B,IAAAxzC,KAAAP,OAEA,IAAAwE,EACA,UAAAwQ,UAAA,wCAEA,uBAAAxQ,EAAAywB,YACA,UAAAjgB,UAAA,mCAEA,IAAAxQ,EAAA2vB,YACA,UAAAnf,UAAA,4BAwEA,OArEA8K,EAAAsT,UAAA5uB,EAAA4uB,UACAtT,EAAAk0B,YAAwBjY,KAAA,EAAAtxB,MAAA,GACxBqV,EAAAm0B,UAAApG,IACA/tB,EAAAo0B,cACAp0B,EAAA2tB,WAAA,KAGA3tB,EAAA2U,WAAAjwB,EAAA4wB,UACAtV,EAAAq0B,aAAA3vC,EAAAywB,YACAnV,EAAAyU,UAAA/vB,EAAA0wB,SACApV,EAAAs0B,SAAA5vC,EAAA2wB,QACArV,EAAAu0B,UAAA7vC,EAAAqd,SACA/B,EAAAw0B,aAAA9vC,EAAA2vB,YACArU,EAAA2T,KAAAjvB,EAAAkiB,IACA5G,EAAAy0B,YAAA/vC,EAAAoxB,WACA9V,EAAA00B,oBAAA,EACA10B,EAAA6U,sBAAAnwB,EAAAmxB,qBACA7V,EAAA20B,kBAAAjwC,EAAA6wB,iBACAvV,EAAA8xH,YAAAptI,EAAAqtI,WACA/xH,EAAAgyH,OAAA,OAGAhyH,EAAA40B,oBAAA,KACA50B,EAAA60B,YAAA,EACA70B,EAAA80B,kBAAA,EACA90B,EAAA+0B,gBAAA,KACA/0B,EAAAg1B,UAAA,KACAh1B,EAAAi1B,eAAA,KACAj1B,EAAAk1B,YAAA,KAGAl1B,EAAAm1B,qBAAA,KACAn1B,EAAAo1B,iBAEAp1B,EAAAiV,WAAAvwB,EAAA+wB,UAKAzV,EAAA4U,gBAAAlwB,EAAA8wB,eACAxV,EAAAq1B,YACA9B,aAAA,EACA7F,KAAA,GAGA1tB,EAAA4U,gBAAAvW,GAAA,4BACA,OAAA2B,EAAAnJ,QAAA,oBAGAmJ,EAAAw0B,aAAAjgB,iBAAA,wBACA,OAAAvU,EAAAia,QAAA,IAIAja,EAAAs1B,gBAAA,EAEAt1B,EAAAwjB,QAAAotG,GAAA,iBAAA5wH,EAAAy0B,YAAA,KAEAzzC,OAAAC,eAAA+e,EAAA,SACA7e,IAAA,WACA,OAAAjB,KAAA8xI,QAEAptI,IAAA,SAAAqtI,GACAA,IAAA/xI,KAAA8xI,SACA9xI,KAAAsjC,QAAAtjC,KAAA8xI,OAAA,OAAAC,GACA/xI,KAAA8xI,OAAAC,MAIAjyH,EA2qCA,OAlwCAsrH,GAAAr3F,EAAA9gB,GAgGAg4G,GAAAl3F,IACApyC,IAAA,cACAN,MAAA,WACArB,KAAAq1C,sBAAA,EACAr1C,KAAAs1C,cAAA,EACAt1C,KAAAu1C,qBAAA,EACAv1C,KAAAw1C,sBAAA,EACAx1C,KAAAy1C,qBAAA,EACAz1C,KAAA01C,sBAAA,EACA11C,KAAAg5B,mBAAA,KAQAr3B,IAAA,UACAN,MAAA,WACArB,KAAAmR,MAAA,WACAnR,KAAA63B,QACA73B,KAAA21C,SACA31C,KAAA+0C,gBACA/0C,KAAA+0C,eAAAt2B,UAEAze,KAAAk0C,iBASAvyC,IAAA,QACAN,MAAA,WACA,YAAArB,KAAAmR,OAOAnR,KAAA21C,SAMA31C,KAAAmR,MAAA,QAIAnR,KAAAs3B,UACAt3B,KAAA41C,kBAjBA51C,KAAA60C,kBACA70C,KAAA60C,gBAAA,SA2BAlzC,IAAA,SACAN,MAAA,WACArB,KAAA60C,iBACA70C,KAAA60C,gBAAAgB,gBAIA71C,KAAA60C,gBAAA,QAWAlzC,IAAA,QACAN,MAAA,SAAAy0C,GAMA,MALA,qBAAAA,IACA91C,KAAA20C,OAAAmB,GAGA91C,KAAA60C,gBAAA,KACA70C,KAAA20C,UAGAhzC,IAAA,cACAN,MAAA,WACArB,KAAA+5B,QAAA,EACA/5B,KAAA63B,QACA73B,KAAA2W,QAAA,YAWAhV,IAAA,YACAN,MAAA,WACA,OAAArB,KAAA+0C,eAIA/0C,KAAA+0C,eAAArc,WAHAoyG,GAAAt2G,sBAkBA7yB,IAAA,cACAN,MAAA,SAAA+W,GACA,IAAA45H,EAAA1vI,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,IAAAA,UAAA,GAEA,IAAA8V,EACA,YAGA,IAAA3T,EAAAkoB,GAAAvU,GACA29B,EAAA/1C,KAAAk1C,cAAAzwC,GAUA,OARAutI,IAAAj8F,GAAA39B,EAAA+D,QACAnc,KAAAk1C,cAAAzwC,GAAAsxC,GACAlpB,YAAAzU,EAAAyU,YACAtL,UAAAnJ,EAAAmJ,UACApF,MAAA/D,EAAA+D,QAIA45B,GAAA39B,KAWAzW,IAAA,qBACAN,MAAA,WACA,OAAArB,KAAAg2C,YAIAh2C,KAAA+0C,gBAAA/0C,KAAA80C,WAAA,SAAA90C,KAAAmR,SAAAnR,KAAAs3B,YAQA31B,IAAA,OACAN,MAAA,WAMA,GAJArB,KAAA41C,iBAIA51C,KAAAg2C,UAAA,CAQA,GAHAh2C,KAAA00B,gBAAAuhB,mBAAAj2C,KAAAg2C,WAGA,SAAAh2C,KAAAmR,OAAAnR,KAAAk2C,qBACA,OAAAl2C,KAAAm2C,SAKAn2C,KAAAk2C,sBAAA,UAAAl2C,KAAAmR,OAAA,SAAAnR,KAAAmR,QAIAnR,KAAAmR,MAAA,aAYAxP,IAAA,QACAN,MAAA,WAIA,OAHArB,KAAAmR,MAAA,QACAnR,KAAA+0C,eAAA,IAAAgF,GAAA/5C,KAAAs0C,aAAAt0C,KAAA80C,UAAA90C,KAAAu0C,YAAAv0C,KAAAiyI,sBACAjyI,KAAA26B,kBACA36B,KAAA41C,oBAUAj0C,IAAA,WACAN,MAAA,SAAA+0C,GACA,IAAA9wB,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAEA,GAAA8zC,EAAA,CAIA,IAAAC,EAAAr2C,KAAAg2C,UACAM,EAAAt2C,KAAA60C,gBAEA70C,KAAAg2C,UAAAI,EACAp2C,KAAAg1C,YAAA1vB,EAKAtlB,KAAAy0B,eACA2hB,EAAAG,UACA50B,cAAAy0B,EAAAz0B,cACA6rB,KAAA,IAIA,IAAA0kG,EAAA77F,IAAA5xC,GAAA,KAUA,GARAzE,KAAAsjC,QAAA,oBAAA4uG,EAAA,OAAA97F,EAAA3xC,GAAA,KAIAzE,KAAA2W,QAAA,kBAIA,SAAA3W,KAAAmR,OAAAnR,KAAAk2C,qBACA,OAAAl2C,KAAAm2C,QAGA,GAAAE,KAAAn0B,MAAAk0B,EAAAl0B,IAAA,CAaA,IAAAs0B,EAAAJ,EAAAz0B,cAAA00B,EAAA10B,cAEA3hB,KAAAsjC,QAAA,sBAAAkT,EAAA,KAKA,OAAAx2C,KAAAytC,aACAztC,KAAAytC,YAAA+I,GAMAF,IACAA,EAAA7I,YAAA+I,EAKAF,EAAA7I,YAAA,IACA6I,EAAA7qB,QAAA2qB,EAAAp1B,SAAAs1B,EAAA7I,cAIAztC,KAAA00B,gBAAA+hB,uBAAAJ,EAAAD,QArCA,OAAAp2C,KAAAytC,YAGAztC,KAAA09B,mBA6CA/7B,IAAA,QACAN,MAAA,WACArB,KAAA00C,sBACQu0F,EAAA1iI,EAAQw9B,aAAA/jC,KAAA00C,qBAEhB10C,KAAA00C,oBAAA,SAWA/yC,IAAA,SACAN,MAAA,WACA,cAAArB,KAAA00C,uBAaA/yC,IAAA,WACAN,MAAA,SAAAq1C,EAAAi6F,GACA3wI,KAAA80C,YAIA90C,KAAA80C,UAAA4B,EACA12C,KAAAiyI,qBAAAtB,EAGA,SAAA3wI,KAAAmR,OAAAnR,KAAAk2C,sBACAl2C,KAAAm2C,YASAx0C,IAAA,kBACAN,MAAA,WACArB,KAAA+5B,QAAA,EACA/5B,KAAAk5B,cACAl5B,KAAA22C,OAAA,EAAA32C,KAAAq0C,aACAr0C,KAAA2W,QAAA,sBAWAhV,IAAA,cACAN,MAAA,WACArB,KAAAo1C,gBAAA,EACAp1C,KAAA09B,kBASA/7B,IAAA,eACAN,MAAA,WACArB,KAAAytC,WAAA,KACAztC,KAAAm1C,WAAA,KACAn1C,KAAA43B,WAUAj2B,IAAA,SACAN,MAAA,SAAAmE,EAAAG,GACA3F,KAAA+0C,gBACA/0C,KAAA+0C,eAAA4B,OAAAnxC,EAAAG,GAEAk1E,GAAAr1E,EAAAG,EAAA3F,KAAA20B,0BAUAhzB,IAAA,iBACAN,MAAA,WACArB,KAAA00C,qBACQu0F,EAAA1iI,EAAQw9B,aAAA/jC,KAAA00C,qBAGhB10C,KAAA00C,oBAAiCu0F,EAAA1iI,EAAQ09B,WAAAjkC,KAAA42C,mBAAAh1C,KAAA5B,MAAA,MAWzC2B,IAAA,qBACAN,MAAA,WACA,UAAArB,KAAAmR,OACAnR,KAAA62C,cAGA72C,KAAA00C,qBACQu0F,EAAA1iI,EAAQw9B,aAAA/jC,KAAA00C,qBAGhB10C,KAAA00C,oBAAiCu0F,EAAA1iI,EAAQ09B,WAAAjkC,KAAA42C,mBAAAh1C,KAAA5B,MAAAmzC,OAczCxxC,IAAA,cACAN,MAAA,WACA,IAAArB,KAAA+0C,eAAA+B,WAAA,CAIA92C,KAAAm1C,aACAn1C,KAAAm1C,WAAAn1C,KAAA00B,gBAAAwW,aAAAlrC,KAAAg2C,UAAAh2C,KAAAq0C,YAAAr0C,KAAA40C,iBAAA50C,KAAAm0C,iBAIA,IAAAmC,EAAAt2C,KAAA+2C,aAAA/2C,KAAAg3C,YAAAh3C,KAAAg2C,UAAAh2C,KAAAytC,WAAAztC,KAAAy0B,aAAAz0B,KAAAm0C,eAAAn0C,KAAAm1C,YAEA,GAAAmB,EAAA,CAIA,IAAAxc,EAAAsZ,GAAApzC,KAAAg2C,UAAAh2C,KAAAs0C,aAAAgC,EAAA7I,YAEA3T,EACA95B,KAAA62B,eAIAyf,EAAA7I,aAAAztC,KAAAg2C,UAAAh1B,SAAAze,OAAA,aAAAvC,KAAAs0C,aAAA7a,YAAAz5B,KAAAo0C,eAUAkC,EAAA5xB,WAAA1kB,KAAA40C,kBAAA,OAAA0B,EAAA5G,gBAAA4G,EAAA5G,eAAA1vC,KAAA+0C,eAAAkC,qBACAj3C,KAAA00B,gBAAAwiB,QACAZ,EAAAW,gBAAAX,EAAA5G,gBAGA1vC,KAAAm3C,aAAAb,SAiBA30C,IAAA,eACAN,MAAA,SAAAq3B,EAAAhW,EAAA+qB,EAAArY,EAAAH,EAAAgW,GACA,IAAAmM,EAAA,EACA1H,OAAA,EAEAhX,EAAAn2B,SACA60C,EAAA1e,EAAA/yB,IAAA+yB,EAAAn2B,OAAA,IAGA,IAAA80C,EAAAvqC,KAAAC,IAAA,EAAAqqC,EAAAniB,GAEA,IAAAvS,EAAA1B,SAAAze,OACA,YAKA,GAAA80C,GAAAr3C,KAAAy0C,oBACA,YAKA,IAAArf,GAAAiiB,GAAA,EACA,YAOA,UAAApM,EAEA,OADAwC,EAAAztC,KAAAs3C,yBAAA50B,GACA1iB,KAAAu3C,qBAAA70B,EAAA+qB,EAAA,SAIA,UAAAA,EAAA,CACA,IAAAhiB,EAAA/I,EAAA1B,SAAAysB,GAOA,OAJAiC,EADAjkB,KAAA9lB,IACA8lB,EAAA9lB,IAEAyxC,EAEAp3C,KAAAu3C,qBAAA70B,EAAA+qB,EAAA,EAAAiC,GAAA,GAMA,GAAA1vC,KAAAo1C,eAAA,CAEA,IAAAoC,EAAApf,GAAAkV,oBAAA5qB,EAAA00B,EAAAnM,EAAAoI,aAAApI,EAAAuC,MAEAC,EAAA+J,EAAA/J,WACAiC,EAAA8H,EAAAzxC,cACO,CAEP,IAAAosI,EAAA/5G,GAAAkV,oBAAA5qB,EAAAuS,EAAAgW,EAAAoI,aAAApI,EAAAuC,MAEAC,EAAA0kG,EAAA1kG,WACAiC,EAAAyiG,EAAApsI,UAGA,OAAA/F,KAAAu3C,qBAAA70B,EAAA+qB,EAAAiC,GAAA,MAcA/tC,IAAA,2BACAN,MAAA,SAAAqhB,GACA,IAAAsT,EAAAh2B,KAEA,QAAAA,KAAA40C,iBACA,SAGA,IAAA6C,EAAA/0B,EAAA1B,SAAA5I,IAAA,SAAAjW,EAAA/B,GACA,OACAskB,SAAAviB,EAAAuiB,SACA2uB,aAAAjzC,KAEOsxB,OAAA,SAAAvvB,GACP,OAAAA,EAAAuiB,WAAAsR,EAAA4e,mBAGA,OAAA6C,EAAAl1C,OACAk1C,EAAA3qC,KAAAuC,IAAAooC,EAAAl1C,OAAA,MAAA8wC,aAGAvmC,KAAAC,IAAA2V,EAAA1B,SAAAze,OAAA,QAGAZ,IAAA,uBACAN,MAAA,SAAAqhB,EAAA+qB,EAAAiC,EAAAgI,GACA,GAAAjK,EAAA,GAAAA,GAAA/qB,EAAA1B,SAAAze,OACA,YAGA,IAAAkpB,EAAA/I,EAAA1B,SAAAysB,GAEA,OACAlM,UAAA,kBAAAz0B,KAAA6qC,SAEAz1B,IAAAuJ,EAAAoB,YAEA4gB,aAGAiK,gBACAhI,iBAEAhtB,WAEAvG,MAAA,KAEAglB,eAAA,KAGA8V,gBAAA,KAEAvyB,SAAA+G,EAAA/G,SAEA7C,SAAA4J,EAAA5J,SAEA4J,cAgBA9pB,IAAA,qBACAN,MAAA,SAAA8+B,GACA,GAAAngC,KAAAyzB,KAAA1M,MAAAuQ,WAIAt3B,KAAAg1C,YAAAhhB,UAEAh0B,KAAAg2C,UAAAl0B,WAAA8I,UACA,SAMA,GAAAC,KAAA4P,OAAA0F,EAAA6B,sBAAAnX,KAAA4P,OAAA,IACA,SAGA,IAAAxF,EAAAj1B,KAAAm0C,eACAyD,EAAAzX,EAAA/M,UACAsX,EAAA1qC,KAAA60C,gBAAAhzB,SAEAg2B,EAAAzf,GAAAiT,2BAAAX,EAAAkN,EAAA53C,KAAAg2C,UAAA7V,EAAAL,eAKAsyG,EAAAznG,GAAA3qC,KAAAg3C,YAAA/hB,EAAAj1B,KAAAyzB,KAAA1M,MAAAipB,gBAAA,EAIA,GAAA6H,GAAAu6F,EACA,SAGA,IAAAt6F,EAAArN,IACAxY,OAAAjyB,KAAAyzB,KAAA7Q,UAAAqP,OACAgD,cACA7B,UAAAwkB,EACA/1B,SAAA7hB,KAAAq0C,YACA3J,kBACAC,kBAAAynG,EACAxxH,gBAAA5gB,KAAA40C,iBACAtf,eAAAt1B,KAAA00B,kBAGA,GAAAojB,EAAA,CAIA,IAAAxM,EAAAuM,EAAAu6F,EAEAr6F,EAAAzM,EAAAwM,EAAAxM,kBAEA0M,EAAA,GASA,OAJAo6F,GAAAltG,KACA8S,EAAA,IAGAF,EAAAp1B,UAAAo1B,EAAAp1B,SAAAR,MAAAliB,KAAAg2C,UAAA9zB,KAAA61B,EAAAC,GACA,GAMAh4C,KAAAozB,UAAA0kB,EAAAp1B,SAAAZ,WAAA8I,UAAAmmH,GAAApjH,mBAAA,EACA3tB,KAAA43B,QACA53B,KAAA2W,QAAA,eACA,OAcAhV,IAAA,kBACAN,MAAA,SAAAgpB,EAAA4tB,GACAj4C,KAAA60C,iBAAAoD,EAAA1W,YAAAvhC,KAAA60C,gBAAAtT,YAAAvhC,KAAAk4C,mBAAAD,EAAA9X,QAIAngC,KAAA2W,QAAA,eAUAhV,IAAA,eACAN,MAAA,SAAAi1C,GACAt2C,KAAAmR,MAAA,UACAnR,KAAA60C,gBAAAyB,EACAt2C,KAAAm4C,gBAAA7B,GAEAA,EAAAT,cAAA5T,GAAAjiC,KAAAyzB,KAAAzM,IAAAhnB,KAAAg1C,YAAAh1C,KAAA+0B,WAAA/0B,KAAAo4C,4BAAA9B,GAEAt2C,KAAAq4C,gBAAAz2C,KAAA5B,WAAAs4C,wBAAA12C,KAAA5B,UAaA2B,IAAA,kBACAN,MAAA,SAAAi1C,GACA,IAAAxC,EAAAD,GAAA7zC,KAAAu0B,YAAAv0B,KAAAm0C,eAAAn0C,KAAAg2C,UAAAhyB,gBAAA,IAQA8vB,EAAA,GACA9zC,KAAA22C,OAAA,EAAA7C,MAeAnyC,IAAA,8BACAN,MAAA,SAAAi1C,GACA,IAAA7qB,EAAA6qB,EAAA7qB,QACAwsB,GACAprB,YAAApB,EAAAoB,YACAtL,UAAAkK,EAAAlK,UACAggB,UAAA+U,EAAA/U,WAGA,GAAA9V,EAAA9pB,IAAA,CAGA,IAAAygB,EAAAqJ,EAAA9pB,IAAAygB,IAAA,IAAAnG,aAAA,MAAAq6B,EAAA7I,WAAA6I,EAAA5zB,SAAAf,gBAEAs2B,EAAAt2C,KACAkrB,YAAApB,EAAA9pB,IAAAkrB,YACAzK,MAQA,OAJAqJ,EAAArT,MACA6/B,EAAA7/B,IAAApY,KAAA4sB,YAAAnB,EAAArT,MAGA6/B,KAWAt2C,IAAA,0BACAN,MAAA,SAAAs2B,EAAAsgB,GAWA,GARAj4C,KAAAs1C,eAAA,EAEA2C,EAAA9X,QACAngC,KAAAq1C,uBAAA4C,EAAA9X,MAAAL,cACA9/B,KAAA01C,uBAAAuC,EAAA9X,MAAAJ,eAIA//B,KAAA60C,iBASA,GAAAoD,EAAA1W,YAAAvhC,KAAA60C,gBAAAtT,UAAA,CAKA,GAAA5J,EAOA,OANA33B,KAAA60C,gBAAA,KACA70C,KAAAmR,MAAA,QAKAwmB,EAAA/0B,OAAAo8B,GAAAG,aACAn/B,KAAAu1C,sBAAA,IAIAv1C,KAAA63B,QAKAF,EAAA/0B,OAAAo8B,GAAAE,SACAl/B,KAAAw1C,uBAAA,EACAx1C,KAAAozB,UAAA,EACApzB,KAAAi0C,UAAApG,SACA7tC,KAAA2W,QAAA,qBAMA3W,KAAAy1C,sBAAA,EACAz1C,KAAA23B,cACA33B,KAAA2W,QAAA,WAMA3W,KAAAozB,UAAA6kB,EAAA9X,MAAA/M,UACApzB,KAAAi0C,UAAAgE,EAAA9X,MAAAJ,cAIAkY,EAAA7/B,MACA6/B,EAAA7/B,IAAApY,KAAA4sB,YAAAqrB,EAAA7/B,KAAA,IAGApY,KAAAu4C,wBAAAN,SAzDAj4C,KAAAu1C,sBAAA,KAoEA5zC,IAAA,0BACAN,MAAA,SAAA42C,GACA,IAAA3B,EAAAt2C,KAAA60C,gBAEAyB,EAAAn6B,MAAA87B,EAAA97B,MACA87B,EAAA7/B,MACAk+B,EAAA7qB,QAAArT,IAAA+D,MAAA87B,EAAA7/B,IAAA+D,OAGAm6B,EAAA1U,iBAAAqW,EAAArW,iBACA5hC,KAAAw4C,oBAUA72C,IAAA,iBACAN,MAAA,WACA,IAAAk3B,EAAAv4B,KAEA,GAAAA,KAAA60C,gBAAA,CAKA,IAAAyB,EAAAt2C,KAAA60C,gBACAppB,EAAA6qB,EAAA7qB,QACAgtB,EAAAz4C,KAAA00B,gBAAAgkB,iBAAApC,GAKA,qBAAAt2C,KAAAw0C,gBAAAiE,IAGAA,EAAA9E,eAAA8E,EAAA7E,iBACA5zC,KAAAw0C,gBACAb,cAAA8E,EAAA9E,cACAC,cAAA6E,EAAA7E,gBAIA,IAAA+E,EAAAnF,GAAAxzC,KAAAu0C,YAAAv0C,KAAAw0C,eAAAiE,GAEA,GAAAE,EAMA,OALA34C,KAAA23B,OACAh1B,QAAAg2C,EACAplB,kBAAA5a,WAEA3Y,KAAA2W,QAAA,SAIA,GAAA2/B,EAAAoB,cAIA,OAHA13C,KAAA2W,QAAA,kBACA3W,KAAA60C,gBAAA,UACA70C,KAAAmR,MAAA,SAIA,OAAAmlC,EAAAW,iBAAAX,EAAAW,kBAAAj3C,KAAA+0C,eAAAkC,oBACAj3C,KAAA+0C,eAAAkC,gBAAAX,EAAAW,iBAEAj3C,KAAA2W,QAAA,oBAGA,IAAAiiC,EAAA54C,KAAA00B,gBAAAmkB,mBAAAvC,EAAA5xB,UAaA,GAXA,OAAAk0B,GACA54C,KAAA2W,SACApO,KAAA,qBACAwwB,QAAA6f,IAIA54C,KAAAmR,MAAA,YAIAsa,EAAArT,IAAA,CACA,IAAA0gC,EAAAnsB,GAAAlB,EAAArT,KAEA,IAAApY,KAAAi1C,sBAAAj1C,KAAAi1C,uBAAA6D,EAAA,CACA,IAAAlsB,EAAA5sB,KAAA4sB,YAAAnB,EAAArT,KAEApY,KAAA+0C,eAAAgE,aAAAnsB,EAAAzQ,MAAA,WACAoc,EAAA0c,qBAAA6D,KAKAxC,EAAAn/B,WAAAm/B,EAAAn6B,MAAAhF,WACA,kBAAAsU,EAAAjmB,OAAA,kBAAAimB,EAAA9lB,IACA3F,KAAAg5B,oBAAAvN,EAAA9lB,IAAA8lB,EAAAjmB,MAEAxF,KAAAg5B,oBAAAvN,EAAA5J,SAGA7hB,KAAAsjC,QAAAiuG,GAAAj7F,IAEAt2C,KAAA+0C,eAAAgE,aAAAzC,EAAAn6B,MAAAnc,KAAAg5C,iBAAAp3C,KAAA5B,YA/EAA,KAAAmR,MAAA,WA2FAxP,IAAA,mBACAN,MAAA,WACA,IAAArB,KAAA60C,gBAKA,OAJA70C,KAAAmR,MAAA,aACAnR,KAAAs3B,UACAt3B,KAAA41C,kBAKA,IAAAU,EAAAt2C,KAAA60C,gBACAppB,EAAA6qB,EAAA7qB,QACAwtB,EAAA,OAAAj5C,KAAAytC,WAsBA,GApBAztC,KAAA60C,gBAAA,KACA70C,KAAAk5C,kBAAA5C,GACAt2C,KAAAm5C,uBAAA7C,GAEAt2C,KAAAmR,MAAA,QAEAnR,KAAAytC,WAAA6I,EAAA7I,WACAztC,KAAAo1C,gBAAA,EACAp1C,KAAA40C,iBAAA0B,EAAA5xB,SAMA1kB,KAAA2W,QAAA,kBAMA8U,EAAA9lB,KAAA3F,KAAAm0C,eAAA1oB,EAAA9lB,IAAA,EAAA2wC,EAAA5zB,SAAAsB,eACAhkB,KAAA26B,sBADA,CAOAse,GACAj5C,KAAA2W,QAAA,mBAEA3W,KAAA2W,QAAA,YAKA,IAAAmjB,EAAAsZ,GAAAkD,EAAA5zB,SAAA1iB,KAAAs0C,aAAAgC,EAAA7I,WAAA,GAEA3T,GACA95B,KAAA62B,cAGA72B,KAAAs3B,UACAt3B,KAAA41C,qBAeAj0C,IAAA,oBACAN,MAAA,SAAAi1C,GACA,IAAAva,EAAA/7B,KAAAg0C,WAAAjY,KAGAqd,EAAAvuB,KAAA4P,MAAA6b,EAAA1U,iBAAA,EAEAyX,EAAAvsC,KAAAuzB,MAAAiW,EAAAn/B,WAAAiiC,EAAA,OAIAp5C,KAAAg0C,WAAAjY,OAAAsd,EAAAtd,KAAA/7B,KAAAg0C,WAAAvpC,SAcA9I,IAAA,yBACAN,MAAA,SAAAi1C,GACA,GAAAt2C,KAAA20B,sBAAA,CAIA,IAAAlJ,EAAA6qB,EAAA7qB,QACAjmB,EAAAimB,EAAAjmB,MACAG,EAAA8lB,EAAA9lB,IAGA,GAAA4tC,GAAA/tC,IAAA+tC,GAAA5tC,GAAA,CAIAk1E,GAAAr1E,EAAAG,EAAA3F,KAAA20B,uBAEA,IAAA2kB,EAAgB2vF,EAAA1iI,EAAQgzC,eAAkB0vF,EAAA1iI,EAAQsM,OAClDxR,GACA+xB,UAAAkjB,EAAA5zB,SAAAZ,WAAA8I,UACAD,WAAA2rB,EAAA5zB,SAAAZ,WAAA4I,WACA+G,OAAA6kB,EAAA5zB,SAAAZ,WAAAgQ,OACA3a,WAAAm/B,EAAAn/B,WACA+K,IAAAo0B,EAAAp0B,IACAwC,SAAA4xB,EAAA5xB,SACAhC,SAAA4zB,EAAA5zB,SAAAR,IACA1c,QACAG,OAEAkK,EAAA2pC,KAAAC,UAAAp4C,GACA2C,EAAA,IAAAs1C,EAAA9zC,EAAAG,EAAAkK,GAIA7L,EAAA3C,QAEArB,KAAA20B,sBAAAjJ,OAAA1nB,SAGA+vC,EAnwCA,CAowCC+2F,GAAA9uG,aAMDyhB,GAAA,IAAAxiC,WAAA,OAAAtX,MAAA,IAAAyU,IAAA,SAAAslC,GACA,OAAAA,EAAAvzC,WAAA,MAGAwzC,GAAA,SAAAC,GACA,OAAArmC,OAAAC,aAAAW,MAAA,KAAAylC,IAWAC,GAAA,SAAAC,GAGA,SAAAD,EAAAr5C,GACA,IAAA8gB,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACA0oI,GAAAhrI,KAAA69C,GAIA,IAAA/9B,EAAAurH,GAAArrI,MAAA69C,EAAAj+B,WAAA9e,OAAAif,eAAA89B,IAAAt9C,KAAAP,KAAAwE,EAAA8gB,IAKA,OAHAxF,EAAAw0B,aAAA,KAEAx0B,EAAAi+B,gBAAA,KACAj+B,EAwYA,OArZAsrH,GAAAvtF,EAAAC,GAuBAmtF,GAAAptF,IACAl8C,IAAA,YACAN,MAAA,WACA,IAAArB,KAAA+9C,kBAAA/9C,KAAA+9C,gBAAAztC,KAAA/N,OACA,OAAAuoI,GAAAt2G,mBAGA,IAAAlkB,EAAAtQ,KAAA+9C,gBAAAztC,KACA9K,EAAA8K,EAAA,GAAAvK,UACAJ,EAAA2K,IAAA/N,OAAA,GAAAwD,UAEA,OAAA+kI,GAAAt2G,mBAAAhvB,EAAAG,QAeAhE,IAAA,cACAN,MAAA,SAAA+W,GACA,IAAA45H,EAAA1vI,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,IAAAA,UAAA,GAEA,IAAA8V,EACA,YAGA,IAAA3T,EAAAkoB,GAAAvU,GACA29B,EAAA/1C,KAAAk1C,cAAAzwC,GAEA,GAAAutI,IAAAj8F,GAAA39B,EAAA+D,MAAA,CAKA,IAAA6hC,EAAAP,GAAAtmC,WAAAiB,EAAA+D,MAAAhF,WACA8mC,EAAA,IAAAhjC,WAAA+iC,GAEAC,EAAAv5C,IAAA0T,EAAA+D,OACA8hC,EAAAv5C,IAAA+4C,GAAArlC,EAAA+D,MAAAhF,YAEAnX,KAAAk1C,cAAAzwC,GAAAsxC,GACAlpB,YAAAzU,EAAAyU,YACAtL,UAAAnJ,EAAAmJ,UACApF,MAAA8hC,GAIA,OAAAlI,GAAA39B,KAWAzW,IAAA,qBACAN,MAAA,WACA,OAAArB,KAAAg2C,WAAAh2C,KAAA+9C,kBAAA/9C,KAAAs3B,YAYA31B,IAAA,QACAN,MAAA,WAGA,OAFArB,KAAAmR,MAAA,QACAnR,KAAA26B,kBACA36B,KAAA41C,oBAaAj0C,IAAA,QACAN,MAAA,SAAA68C,GACA,2BAAAA,EACAl+C,KAAA+9C,iBAGA/9C,KAAA+9C,gBAAAG,EAIA,SAAAl+C,KAAAmR,OAAAnR,KAAAk2C,sBACAl2C,KAAAm2C,QAGAn2C,KAAA+9C,oBAUAp8C,IAAA,SACAN,MAAA,SAAAmE,EAAAG,GACAk1E,GAAAr1E,EAAAG,EAAA3F,KAAA+9C,oBAcAp8C,IAAA,cACAN,MAAA,WACA,IAAA20B,EAAAh2B,KAEAA,KAAAm1C,aACAn1C,KAAAm1C,WAAAn1C,KAAA00B,gBAAAwW,aAAAlrC,KAAAg2C,UAAAh2C,KAAAq0C,YAAAr0C,KAAA40C,iBAAA50C,KAAAm0C,iBAIA,IAAAmC,EAAAt2C,KAAA+2C,aAAA/2C,KAAAg3C,YAAAh3C,KAAAg2C,UAAAh2C,KAAAytC,WAAAztC,KAAAy0B,aAAAz0B,KAAAm0C,eAAAn0C,KAAAm1C,YAIA,GAFAmB,EAAAt2C,KAAAm+C,mBAAA7H,GAEAA,EAAA,CAIA,UAAAt2C,KAAA00B,gBAAA0pB,2BAAA9H,EAAA5xB,UAAA,CAGA,IAAA25B,EAAA,WACAroB,EAAA7kB,MAAA,QACA6kB,EAAAsB,UAEAtB,EAAA4f,kBAMA,OAFA51C,KAAA00B,gBAAAgD,IAAA,kBAAA2mB,QACAr+C,KAAAmR,MAAA,uBAIAnR,KAAAm3C,aAAAb,OAeA30C,IAAA,qBACAN,MAAA,SAAAi1C,GACA,MAAAA,KAAA7qB,QAAA6yB,MACAhI,EAAAt2C,KAAAu3C,qBAAAjB,EAAA5zB,SAAA4zB,EAAA7I,WAAA,EAAA6I,EAAA5G,eAAA4G,EAAAz0B,SAAAy0B,EAAAoB,eAEA,OAAApB,KAUA30C,IAAA,iBACAN,MAAA,WACA,IAAAk3B,EAAAv4B,KAEA,GAAAA,KAAA60C,iBAAA70C,KAAA+9C,gBAAA,CAKA/9C,KAAAmR,MAAA,YAEA,IAAAmlC,EAAAt2C,KAAA60C,gBACAppB,EAAA6qB,EAAA7qB,QAGA,GAAyB,oBAARw9G,EAAA1iI,EAAQmI,QAAA1O,KAAA+9C,iBAAA/9C,KAAA+9C,gBAAAh3B,MAAA,CAEzB,IAAAy3B,EAAA,WACAjmB,EAAAigB,kBAeA,OAZAx4C,KAAAmR,MAAA,mBACAnR,KAAA+9C,gBAAAh3B,MAAA2Q,IAAA,cAAA8mB,QACAx+C,KAAA+9C,gBAAAh3B,MAAA2Q,IAAA,wBACAa,EAAAwlB,gBAAAh3B,MAAA1I,IAAA,cAAAmgC,GACAjmB,EAAAZ,OACAh1B,QAAA,yBAEA41B,EAAApnB,MAAA,QACAonB,EAAAV,QACAU,EAAA5hB,QAAA,WAMA8U,EAAAgzB,WAAA,EAEA,IACAz+C,KAAA0+C,cAAApI,GACO,MAAAtuC,GAMP,OALAhI,KAAA23B,OACAh1B,QAAAqF,EAAArF,UAEA3C,KAAAmR,MAAA,QACAnR,KAAA63B,QACA73B,KAAA2W,QAAA,SAKA,GAFA3W,KAAA2+C,mBAAArI,EAAAt2C,KAAA00B,gBAAAknB,UAAAtF,EAAA5xB,UAAA1kB,KAAAg2C,WAEAM,EAAAoB,cAIA,OAHA13C,KAAA2W,QAAA,kBACA3W,KAAA60C,gBAAA,UACA70C,KAAAmR,MAAA,SAIAmlC,EAAAn/B,WAAAm/B,EAAAn6B,MAAAhF,WAEAnX,KAAAg5B,oBAAAvN,EAAA5J,SAEAy0B,EAAAhmC,KAAA/N,QAEAvC,KAAA22C,OAAAL,EAAAhmC,KAAA,GAAArK,QAAAqwC,EAAAhmC,KAAAgmC,EAAAhmC,KAAA/N,OAAA,GAAA0D,SAGAqwC,EAAAhmC,KAAAkc,QAAA,SAAAxoB,GACAu0B,EAAAwlB,gBAAAryB,OAAA1nB,KAGAhE,KAAAg5C,wBAlEAh5C,KAAAmR,MAAA,WA8EAxP,IAAA,gBACAN,MAAA,SAAAi1C,GACA,IAAAplC,OAAA,EACA0tC,GAAA,EAEyB,oBAARqqF,EAAA1iI,EAAQ8K,YACzBH,EAAA,IAAsB+3H,EAAA1iI,EAAQ8K,YAAA,SAE9BH,EAAkB+3H,EAAA1iI,EAAQmI,OAAAiB,gBAC1BivC,GAAA,GAGA,IAAA3X,EAAA,IAAuBgiG,EAAA1iI,EAAQmI,OAAAsC,OAAei4H,EAAA1iI,EAAU0iI,EAAA1iI,EAAQ0K,MAAAC,GAahE,GAXAolC,EAAAhmC,QACAgmC,EAAAuI,cAAkCrsC,OAAA,EAAAC,MAAA,GAElCw0B,EAAAj0B,MAAAsjC,EAAAhmC,KAAAjH,KAAAzH,KAAA00C,EAAAhmC,MACA22B,EAAA10B,eAAA,SAAA6F,GACA,OAAAk+B,EAAAuI,aAAAzmC,GAEA6uB,EAAA11B,eAAA,SAAAomB,GACAmzG,GAAAt4G,IAAAC,KAAA,wCAAAkF,EAAAh1B,UAGA2zC,EAAA7qB,QAAArT,IAAA,CACA,IAAA0mC,EAAAxI,EAAA7qB,QAAArT,IAAA+D,MAEAyiC,IACAE,EAAAnB,GAAAmB,IAGA7X,EAAAz1B,MAAAstC,GAGA,IAAAC,EAAAzI,EAAAn6B,MAEAyiC,IACAG,EAAApB,GAAAoB,IAGA9X,EAAAz1B,MAAAutC,GACA9X,EAAAh0B,WAkBAtR,IAAA,qBACAN,MAAA,SAAAi1C,EAAA2G,EAAAv6B,GACA,IAAA+I,EAAA6qB,EAAA7qB,QAEA,GAAAwxB,EAOA,GAAA3G,EAAAhmC,KAAA/N,OAAA,CAQA,IAAAs8C,EAAAvI,EAAAuI,aACAG,EAAAH,EAAArsC,OAAA,IAAAqsC,EAAApsC,MAAAwqC,EAAAlkB,QAQA,GANAud,EAAAhmC,KAAAkc,QAAA,SAAAxoB,GAEAA,EAAA+B,WAAAi5C,EACAh7C,EAAAiC,SAAA+4C,KAGAt8B,EAAA6zB,SAAA,CACA,IAAA0I,EAAA3I,EAAAhmC,KAAA,GAAAvK,UACAm5C,EAAA5I,EAAAhmC,KAAAgmC,EAAAhmC,KAAA/N,OAAA,GAAAwD,UAEA2c,EAAA6zB,UACA50B,cAAAe,EAAAf,cAAA20B,EAAA7I,WACAD,KAAA1gC,KAAAuC,IAAA4vC,EAAAC,EAAAzzB,EAAA5J,iBAnBA4J,EAAA6yB,OAAA,MAwBAT,EAtZA,CAuZC9J,IASD3oB,GAAA,SAAA/gB,EAAAghB,GAGA,IAFA,IAAA/a,EAAAjG,EAAAiG,KAEAlQ,EAAA,EAAiBA,EAAAkQ,EAAA/N,OAAiBnC,IAAA,CAClC,IAAA4D,EAAAsM,EAAAlQ,GAEA,GAAAirB,GAAArnB,EAAAsnB,aAAAD,GAAArnB,EAAAunB,UACA,OAAAvnB,EAGA,aAGAwnB,GAAA,SAAA1I,EAAAzY,GACA,IAAAqS,EAAApa,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,KAEA,GAAAwgB,EAAA9B,SAOA,IAHA,IAAAqK,EAAA3O,EACA1Y,OAAA,EAEA5D,EAAA,EAAiBA,EAAA0iB,EAAA9B,SAAAze,OAA2BnC,IAAA,CAC5C,IAAAqrB,EAAA3I,EAAA9B,SAAA5gB,GAUA,GARA4D,IAKAA,EAAAonB,GAAA/gB,EAAAghB,EAAAI,EAAA5J,SAAA,IAGA7d,EAAA,CACA,aAAAynB,EAAA,CAEAznB,EAAAiC,QAAAolB,EACArnB,EAAAunB,UAAAF,EACAA,GAAAI,EAAA5J,SACA7d,EAAA,KACA,SAGA,GAAAqnB,EAAArnB,EAAAiC,QAAA,CAEAolB,GAAAI,EAAA5J,SACA,SAIA7d,EAAAiC,SAAAwlB,EAAA5J,cAWA,GATA,WAAA4J,IACAznB,EAAA,IAAkBilI,EAAA1iI,EAAQsM,OAAAwY,IAAAI,EAAA5J,SAAA4J,EAAArH,QAC1BpgB,EAAAsnB,YAAAD,EAGArnB,EAAAunB,UAAAF,EAAA3kB,WAAA+kB,EAAArH,QACA/Z,EAAAqhB,OAAA1nB,IAGA,eAAAynB,EAAA,CAEA,IAAAE,OAAA,EACAC,OAAA,EAKAymH,EAAA5mH,EAAAnH,WAAA3gB,MAAA,KAAAyU,IAAA1R,YAEA4rI,EAAAhH,GAAA+G,EAAA,GAEA1mH,EAAA2mH,EAAA,GACA1mH,EAAA0mH,EAAA,GAEAtuI,EAAA,IAAkBilI,EAAA1iI,EAAQsM,OAAAwY,IAAAI,EAAA5J,SAAA,IAC1B7d,EAAAsnB,YAAAD,EAAAM,EACA3nB,EAAAunB,UAAAvnB,EAAAsnB,YAAAM,EACAvhB,EAAAqhB,OAAA1nB,GAGAqnB,GAAAI,EAAA5J,WAQA0wH,GAAcpI,EAAA5jI,EAAWs2C,QAEzB7B,KAIAr6C,KAAA,MACAs6C,IAAA,SAAA3lB,EAAA5S,EAAA2uH,EAAAzwH,EAAAqU,GACA,GAAAo8G,IAAA14H,IAAA,CACA,IAAAsyB,GACAuC,KAAA,EACA6F,aAAA,GAGA,OAAApI,EAEA,eAKAtqC,KAAA,kBACAs6C,IAAA,SAAA3lB,EAAA5S,EAAA2uH,EAAAzwH,EAAAqU,GACA,IAAAK,EAAA4lB,sBACA,YAGA,IAAAl6B,EAAA0B,EAAA1B,aACAiqB,EAAA,KACAqQ,EAAA,KAEArmB,KAAA,EAEA,QAAA70B,EAAA,EAAmBA,EAAA4gB,EAAAze,OAAqBnC,IAAA,CACxC,IAAAqrB,EAAAzK,EAAA5gB,GAEA,GAAAqrB,EAAA3H,eAAA,CACA,IAAA0nE,EAAA//D,EAAA3H,eAAAs3B,UAAA,IACAo3F,EAAAhnD,EAAAl2D,EAAA4lB,sBACAK,EAAAzuC,KAAAuB,IAAA4mB,EAAAu9G,GAIA,UAAAl3F,KAAAC,EACA,MAGAD,EAAAC,EACAtQ,GACAuC,KAAAglG,EACAn/F,aAAAjzC,IAIA,OAAA6qC,KAMAtqC,KAAA,UACAs6C,IAAA,SAAA3lB,EAAA5S,EAAA2uH,EAAAzwH,EAAAqU,GACA,IAAAjU,EAAA0B,EAAA1B,aACAiqB,EAAA,KACAqQ,EAAA,KAEArmB,KAAA,EAEA,QAAA70B,EAAA,EAAmBA,EAAA4gB,EAAAze,OAAqBnC,IAAA,CACxC,IAAAqrB,EAAAzK,EAAA5gB,GAEA,GAAAqrB,EAAA/G,WAAA9D,GAAA,qBAAA6K,EAAAjmB,MAAA,CACA,IAAA+1C,EAAAzuC,KAAAuB,IAAA4mB,EAAAxJ,EAAAjmB,OAIA,UAAA81C,KAAAC,EACA,QAGAtQ,GAAA,OAAAqQ,MAAAC,KACAD,EAAAC,EACAtQ,GACAuC,KAAA/hB,EAAAjmB,MACA6tC,aAAAjzC,KAKA,OAAA6qC,KAMAtqC,KAAA,gBACAs6C,IAAA,SAAA3lB,EAAA5S,EAAA2uH,EAAAzwH,EAAAqU,GACA,IAAAgW,EAAA,KAIA,GAFAhW,KAAA,EAEAvS,EAAA3B,qBAAA2B,EAAA3B,oBAAAxe,OAGA,IAFA,IAAA+4C,EAAA,KAEAl7C,EAAA,EAAqBA,EAAAsiB,EAAA3B,oBAAAxe,OAAyCnC,IAAA,CAC9D,IAAAizC,EAAA3wB,EAAA3B,oBAAA3gB,GACAwW,EAAA8L,EAAAd,sBAAAxhB,EAAA,EACAo7C,EAAAlmB,EAAAmmB,gBAAA7kC,GAEA,GAAA4kC,EAAA,CACA,IAAAD,EAAAzuC,KAAAuB,IAAA4mB,EAAAumB,EAAAhO,MAIA,UAAA8N,KAAAC,EACA,QAGAtQ,GAAA,OAAAqQ,MAAAC,KACAD,EAAAC,EACAtQ,GACAuC,KAAAgO,EAAAhO,KACA6F,kBAMA,OAAApI,KAMAtqC,KAAA,WACAs6C,IAAA,SAAA3lB,EAAA5S,EAAA2uH,EAAAzwH,EAAAqU,GACA,GAAAvS,EAAA6zB,SAAA,CACA,IAAAtL,GACAuC,KAAA9qB,EAAA6zB,SAAA/I,KACA6F,aAAA3wB,EAAA6zB,SAAA50B,cAAAe,EAAAf,eAGA,OAAAspB,EAEA,eAIAyQ,GAAA,SAAAzoB,GAGA,SAAAyoB,IACAsvF,GAAAhrI,KAAA07C,GAIA,IAAA57B,EAAAurH,GAAArrI,MAAA07C,EAAA97B,WAAA9e,OAAAif,eAAA27B,IAAAn7C,KAAAP,OAUA,OARA8f,EAAA67B,mBAAA1uC,EAGA6S,EAAA87B,aACA97B,EAAA27B,mBACA37B,EAAAo7B,sBAAA,KAEAp7B,EAAAwjB,QAAAotG,GAAA,kBACA5wH,EAsaA,OAvbAsrH,GAAA1vF,EAAAzoB,GAoCAg4G,GAAAvvF,IACA/5C,IAAA,eACAN,MAAA,SAAAqhB,EAAA2uH,EAAAzwH,EAAAqU,GACA,IAAA4mB,EAAA77C,KAAA87C,eAAAp5B,EAAA2uH,EAAAzwH,EAAAqU,GAEA,OAAA4mB,EAAAt5C,OAUAvC,KAAA+7C,iBAAAF,GAAgDl6C,IAAA,OAAAN,MAAA4zB,IANhD,QAsBAtzB,IAAA,iBACAN,MAAA,SAAAqhB,EAAA2uH,GACA,IAAA3uH,MAAA1B,SACA,YAGA,IAAA66B,EAAA77C,KAAA87C,eAAAp5B,EAAA2uH,EAAA3uH,EAAAd,sBAAA,GAGA,IAAAi6B,EAAAt5C,OACA,YAGA,IAAA0oC,EAAAjrC,KAAA+7C,iBAAAF,GACAl6C,IAAA,eACAN,MAAA,IASA,OAJA4pC,EAAAoI,aAAA,IACApI,EAAAuC,OAAA,GAGA1gC,KAAAuB,IAAA48B,EAAAuC,KAAApB,GAAA1pB,EAAAuoB,EAAAoI,aAAA,OAmBA1xC,IAAA,iBACAN,MAAA,SAAAqhB,EAAA2uH,EAAAzwH,EAAAqU,GAIA,IAHA,IAAA4mB,KAGAz7C,EAAA,EAAqBA,EAAA46C,GAAAz4C,OAAgCnC,IAAA,CACrD,IAAA47C,EAAAhB,GAAA56C,GACA6qC,EAAA+Q,EAAAf,IAAAj7C,KAAA0iB,EAAA2uH,EAAAzwH,EAAAqU,GAEAgW,IACAA,EAAA+Q,WAAAr7C,KACAk7C,EAAAxyC,MACA2yC,WAAAr7C,KACAsqC,eAKA,OAAA4Q,KAoBAl6C,IAAA,mBACAN,MAAA,SAAAw6C,EAAAxiC,GAKA,IAJA,IAAA4iC,EAAAJ,EAAA,GAAA5Q,UACAiR,EAAApvC,KAAAuB,IAAAwtC,EAAA,GAAA5Q,UAAA5xB,EAAA1X,KAAA0X,EAAAhY,OACA86C,EAAAN,EAAA,GAAAG,SAEA57C,EAAA,EAAqBA,EAAAy7C,EAAAt5C,OAAuBnC,IAAA,CAC5C,IAAAg8C,EAAAtvC,KAAAuB,IAAAwtC,EAAAz7C,GAAA6qC,UAAA5xB,EAAA1X,KAAA0X,EAAAhY,OAEA+6C,EAAAF,IACAA,EAAAE,EACAH,EAAAJ,EAAAz7C,GAAA6qC,UACAkR,EAAAN,EAAAz7C,GAAA47C,UAMA,OAFAh8C,KAAAsjC,QAAA,kBAAAjqB,EAAA1X,IAAA,KAAA0X,EAAAhY,MAAA,2BAAA86C,EAAA,YAAAF,EAAAzO,KAAA,kBAAAyO,EAAA5I,aAAA,KAEA4I,KAaAt6C,IAAA,yBACAN,MAAA,SAAAg1C,EAAAD,GAKA,IAJA,IAAAI,EAAAJ,EAAAz0B,cAAA00B,EAAA10B,cAIAvhB,EAAAo2C,EAAA,EAAyCp2C,GAAA,EAAQA,IAAA,CACjD,IAAAi8C,EAAAhG,EAAAr1B,SAAA5gB,GAEA,GAAAi8C,GAAA,qBAAAA,EAAA72C,MAAA,CACA4wC,EAAAG,UACA50B,cAAA00B,EAAA10B,cAAAvhB,EACAotC,KAAA6O,EAAA72C,OAEAxF,KAAAsjC,QAAA,gCAAA8S,EAAAG,SAAA/I,KAAA,oBAAA4I,EAAAG,SAAA50B,cAAA,KACA3hB,KAAA2W,QAAA,kBACA,WAaAhV,IAAA,qBACAN,MAAA,SAAAqhB,GACA,IAAA1iB,KAAAk7C,uBAAAx4B,EAAA1B,UAAA0B,EAAA1B,SAAAze,QAAAmgB,EAAA1B,SAAA,GAAA8C,eAAA,CACA,IAAAw4B,EAAA55B,EAAA1B,SAAA,GAAA8C,eAAAs3B,UAAA,IAEAp7C,KAAAk7C,uBAAAoB,MAUA36C,IAAA,QACAN,MAAA,WACArB,KAAA27C,mBAAA1uC,KAaAtL,IAAA,mBACAN,MAAA,SAAAi1C,GACA,IAAA7qB,EAAA6qB,EAAA7qB,QACA/I,EAAA4zB,EAAA5zB,SACA+1B,OAAA,EAuBA,OApBAA,EADAhtB,EAAArT,IACApY,KAAAu8C,iBAAAjG,GAEAt2C,KAAAw8C,gBAAAlG,GAGAmC,GACAz4C,KAAAy8C,6BAAAnG,EAAAmC,KACAz4C,KAAA08C,2BAAApG,GAIA5zB,EAAA6zB,WACA7zB,EAAA6zB,UACA50B,cAAAe,EAAAf,cAAA20B,EAAA7I,WACAD,KAAA/hB,EAAAjmB,SAMAizC,KAaA92C,IAAA,mBACAN,MAAA,SAAAi1C,GACA,IAAA7qB,EAAA6qB,EAAA7qB,QACAkxB,EAAuBstF,EAAA1jI,EAAQwQ,UAAA0U,EAAArT,IAAA+D,OAC/BpW,EAAsBkkI,EAAA1jI,EAAQR,UAAA42C,EAAArG,EAAAn6B,OAM9B,OAJA,OAAAm6B,EAAAW,kBACAX,EAAAW,iBAAAlxC,IAIAP,MAAAO,EACAJ,IAAAI,EAAA0lB,EAAA5J,aAcAlgB,IAAA,kBACAN,MAAA,SAAAi1C,GACA,IAAAsG,EAAA21F,GAAAj8F,EAAAn6B,MAAAnc,KAAA27C,eACAmB,OAAA,EACAC,OAAA,EAEA,OAAAH,GAIAA,EAAAjqB,OAAA,IAAAiqB,EAAAjqB,MAAApwB,QACAvC,KAAA27C,cAAAiB,EAAAjqB,MAAA,GAAAlc,IACAqmC,EAAAF,EAAAjqB,MAAA,GAAAqqB,QACAD,EAAAH,EAAAjqB,MAAA,GAAAqqB,SACOJ,EAAAhqB,OAAA,IAAAgqB,EAAAhqB,MAAArwB,SACPvC,KAAA27C,cAAAiB,EAAAhqB,MAAA,GAAAnc,IACAqmC,EAAAF,EAAAhqB,MAAA,GAAAoqB,QACAD,EAAAH,EAAAhqB,MAAA,GAAAoqB,UAIAx3C,MAAAs3C,EACAn3C,IAAAo3C,EACAnJ,cAAAgJ,EAAAjqB,OAAA,IAAAiqB,EAAAjqB,MAAApwB,OACAoxC,cAAAiJ,EAAAhqB,OAAA,IAAAgqB,EAAAhqB,MAAArwB,SAjBA,QAqBAZ,IAAA,6BACAN,MAAA,SAAAqjB,GACA,2BAAA1kB,KAAA47C,UAAAl3B,GACA,KAEA1kB,KAAA47C,UAAAl3B,GAAA8oB,QAGA7rC,IAAA,qBACAN,MAAA,SAAAqjB,GACA,2BAAA1kB,KAAA47C,UAAAl3B,GACA,KAEA1kB,KAAA47C,UAAAl3B,GAAAqU,WAiBAp3B,IAAA,+BACAN,MAAA,SAAAi1C,EAAAmC,GACA,IAAAhtB,EAAA6qB,EAAA7qB,QACAwxB,EAAAj9C,KAAA47C,UAAAtF,EAAA5xB,UAEA,UAAA4xB,EAAAW,gBACAgG,GACAzP,KAAA8I,EAAA5G,eACA3W,QAAAud,EAAA5G,eAAA+I,EAAAjzC,OAEAxF,KAAA47C,UAAAtF,EAAA5xB,UAAAu4B,EACAj9C,KAAA2W,QAAA,mBAEA3W,KAAAsjC,QAAA,6BAAAgT,EAAA5xB,SAAA,YAAAu4B,EAAAzP,KAAA,eAAAyP,EAAAlkB,QAAA,KAEAtN,EAAAjmB,MAAA8wC,EAAA5G,eACAjkB,EAAA9lB,IAAA8yC,EAAA9yC,IAAAs3C,EAAAlkB,YACO,KAAAkkB,EAIP,SAHAxxB,EAAAjmB,MAAAizC,EAAAjzC,MAAAy3C,EAAAlkB,QACAtN,EAAA9lB,IAAA8yC,EAAA9yC,IAAAs3C,EAAAlkB,QAKA,YAaAp3B,IAAA,6BACAN,MAAA,SAAAi1C,GACA,IAAA5zB,EAAA4zB,EAAA5zB,SACA+I,EAAA6qB,EAAA7qB,QAKA,GAAAA,EAAA7U,cACA5W,KAAAy7C,gBAAAhwB,EAAA/G,WACA8oB,KAAA/hB,EAAAjmB,MACA03C,SAAA,QAEO,GAAAx6B,EAAA3B,qBAAA2B,EAAA3B,oBAAAxe,OAGP,QAAAnC,EAAA,EAAuBA,EAAAsiB,EAAA3B,oBAAAxe,OAAyCnC,IAAA,CAChE,IAAAizC,EAAA3wB,EAAA3B,oBAAA3gB,GACAwW,EAAA8L,EAAAd,sBAAAxhB,EAAA,EACA+8C,EAAA9J,EAAAiD,EAAA7I,WACAyP,EAAApwC,KAAAuB,IAAA8uC,GAEA,IAAAn9C,KAAAy7C,gBAAA7kC,IAAA5W,KAAAy7C,gBAAA7kC,GAAAsmC,WAAA,CACA,IAAA1P,OAAA,EAGAA,EADA2P,EAAA,EACA1xB,EAAAjmB,MAAA4mC,GAAA1pB,EAAA4zB,EAAA7I,WAAA4F,GAEA5nB,EAAA9lB,IAAAymC,GAAA1pB,EAAA4zB,EAAA7I,WAAA,EAAA4F,GAGArzC,KAAAy7C,gBAAA7kC,IACA42B,OACA0P,kBAOAxB,EAxbA,CAybCovF,GAAA9uG,aAEDy2G,GAAA,IAAAlG,GAAA,wCAAA5kI,EAAA0lI,GACA,IAAAttI,EAAAC,MACA,WAEA,IAEA0jD,EAFA4pF,EAAA,qBAAA3lI,IAAA,qBAAAojB,IAAA,qBAAAhrB,OAKA2jD,EADA,qBAAA/7C,EACAA,EACK,qBAAA2lI,EACLA,EACK,qBAAAvtI,EACLA,KAKA,IAAAwtI,EAAA7pF,EAgBA,SAAAxnC,EAAAgnC,GACA,OAAAA,EAAA9rC,SAAA,EAAA8rC,EAAA/rC,WAAA+rC,IAAA/rC,WAAA,IAGA,IAAA43H,EAAA,SAAA/0H,EAAAN,GACA,KAAAM,aAAAN,GACA,UAAA1E,UAAA,sCAIAg6H,EAAA,WACA,SAAA51H,EAAAC,EAAAC,GACA,QAAAlZ,EAAA,EAAuBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CACzC,IAAAmZ,EAAAD,EAAAlZ,GACAmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EACAuY,EAAAC,cAAA,EACA,UAAAD,MAAAE,UAAA,GACA3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAIA,gBAAAG,EAAAC,EAAAC,GAGA,OAFAD,GAAAP,EAAAM,EAAA1X,UAAA2X,GACAC,GAAAR,EAAAM,EAAAE,GACAF,GAdA,GAkBAg5H,EAAA,SAAAjzH,EAAAC,GACA,uBAAAA,GAAA,OAAAA,EACA,UAAA1K,UAAA,iFAAA0K,EAAA,YAAA6pE,EAAA7pE,KAGAD,EAAAzd,UAAAlB,OAAAY,OAAAge,KAAA1d,WACAkE,aACA7E,MAAAoe,EACAze,YAAA,EACAyY,UAAA,EACAD,cAAA,KAGAkG,IAAA5e,OAAA6e,eAAA7e,OAAA6e,eAAAF,EAAAC,GAAAD,EAAAG,UAAAF,IAGAizH,EAAA,SAAA5yI,EAAAQ,GACA,IAAAR,EACA,UAAAwf,eAAA,6DAGA,OAAAhf,GAAA,iCAAAA,EAAA,YAAAgpF,EAAAhpF,KAAA,oBAAAA,EAAAR,EAAAQ,GA+CAo/C,EAAA,WACA,IAAAC,sCACAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAF,EAAA,GACAG,EAAAF,EAAA,GACA1/C,OAAA,EACAgP,OAAA,EACA6wC,OAAA,EACAv/C,KACAw/C,KACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EACAl+C,OAAA,EACAm+C,OAAA,EACAC,OAAA,EAGA,IAAAngD,EAAA,EAAiBA,EAAA,IAASA,IAC1B8/C,GAAAx/C,EAAAN,MAAA,OAAAA,GAAA,IAAAA,KAGA,IAAAgP,EAAA6wC,EAAA,GAAwBF,EAAA3wC,GAAUA,GAAA+wC,GAAA,EAAAF,EAAAC,EAAAD,IAAA,EAYlC,IAVA99C,EAAA89C,KAAA,EAAAA,GAAA,EAAAA,GAAA,EAAAA,GAAA,EACA99C,KAAA,MAAAA,EAAA,GACA49C,EAAA3wC,GAAAjN,EACA69C,EAAA79C,GAAAiN,EAGAixC,EAAA3/C,EAAA0/C,EAAA1/C,EAAAy/C,EAAAz/C,EAAA0O,KACAmxC,EAAA,SAAAF,EAAA,MAAAD,EAAA,IAAAD,EAAA,SAAA/wC,EACAkxC,EAAA,IAAA5/C,EAAAyB,GAAA,SAAAA,EAEA/B,EAAA,EAAmBA,EAAA,EAAOA,IAC1By/C,EAAAz/C,GAAAgP,GAAAkxC,KAAA,GAAAA,IAAA,EACAR,EAAA1/C,GAAA+B,GAAAo+C,KAAA,GAAAA,IAAA,EAKA,IAAAngD,EAAA,EAAiBA,EAAA,EAAOA,IACxBy/C,EAAAz/C,GAAAy/C,EAAAz/C,GAAAiX,MAAA,GACAyoC,EAAA1/C,GAAA0/C,EAAA1/C,GAAAiX,MAAA,GAEA,OAAAuoC,GAEAY,EAAA,KAUAC,EAAA,WACA,SAAAA,EAAA9+C,GACAotI,EAAA/uI,KAAAygD,GAgBAD,IACAA,EAAAb,KAGA3/C,KAAA0gD,UAAAF,EAAA,MAAAnpC,QAAAmpC,EAAA,MAAAnpC,QAAAmpC,EAAA,MAAAnpC,QAAAmpC,EAAA,MAAAnpC,QAAAmpC,EAAA,MAAAnpC,UAAAmpC,EAAA,MAAAnpC,QAAAmpC,EAAA,MAAAnpC,QAAAmpC,EAAA,MAAAnpC,QAAAmpC,EAAA,MAAAnpC,QAAAmpC,EAAA,MAAAnpC,UACA,IAAAjX,OAAA,EACA+sB,OAAA,EACAwzB,OAAA,EACAC,OAAA,EACAC,OAAA,EACAd,EAAA//C,KAAA0gD,QAAA,MACAZ,EAAA9/C,KAAA0gD,QAAA,GACAI,EAAAn/C,EAAAY,OACAw+C,EAAA,EAEA,OAAAD,GAAA,IAAAA,GAAA,IAAAA,EACA,UAAAt+C,MAAA,wBAQA,IALAo+C,EAAAj/C,EAAA0V,MAAA,GACAwpC,KACA7gD,KAAAqgB,MAAAugC,EAAAC,GAGAzgD,EAAA0gD,EAAwB1gD,EAAA,EAAA0gD,EAAA,GAAqB1gD,IAC7CugD,EAAAC,EAAAxgD,EAAA,IAGAA,EAAA0gD,IAAA,OAAAA,GAAA1gD,EAAA0gD,IAAA,KACAH,EAAAZ,EAAAY,IAAA,QAAAZ,EAAAY,GAAA,YAAAZ,EAAAY,GAAA,UAAAZ,EAAA,IAAAY,GAGAvgD,EAAA0gD,IAAA,IACAH,KAAA,EAAAA,IAAA,GAAAI,GAAA,GACAA,KAAA,OAAAA,GAAA,KAIAH,EAAAxgD,GAAAwgD,EAAAxgD,EAAA0gD,GAAAH,EAIA,IAAAxzB,EAAA,EAAmB/sB,EAAG+sB,IAAA/sB,IACtBugD,EAAAC,EAAA,EAAAzzB,EAAA/sB,IAAA,GAEAygD,EAAA1zB,GADA/sB,GAAA,GAAA+sB,EAAA,EACAwzB,EAEAb,EAAA,GAAAC,EAAAY,IAAA,KAAAb,EAAA,GAAAC,EAAAY,GAAA,SAAAb,EAAA,GAAAC,EAAAY,GAAA,QAAAb,EAAA,GAAAC,EAAA,IAAAY,IA4DA,OAzCAF,EAAAz+C,UAAAwY,QAAA,SAAAe,EAAAC,EAAAC,EAAAC,EAAAslC,EAAAtkC,GACA,IAAA/a,EAAA3B,KAAAqgB,KAAA,GAEA9Z,EAAAgV,EAAA5Z,EAAA,GACAwF,EAAAuU,EAAA/Z,EAAA,GACAlB,EAAAgb,EAAA9Z,EAAA,GACAjB,EAAA8a,EAAA7Z,EAAA,GACAs/C,OAAA,EACAhyC,OAAA,EACAiyC,OAAA,EAGAC,EAAAx/C,EAAAY,OAAA,IACAnC,OAAA,EACAghD,EAAA,EACAC,EAAArhD,KAAA0gD,QAAA,GAGAY,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAtB,EAAAsB,EAAA,GAGA,IAAAjhD,EAAA,EAAmBA,EAAA+gD,EAAkB/gD,IACrC6gD,EAAAK,EAAA/6C,IAAA,IAAAg7C,EAAAp6C,GAAA,QAAAq6C,EAAA/gD,GAAA,OAAAghD,EAAA,IAAA/gD,GAAAiB,EAAAy/C,GACAnyC,EAAAqyC,EAAAn6C,IAAA,IAAAo6C,EAAA9gD,GAAA,QAAA+gD,EAAA9gD,GAAA,OAAA+gD,EAAA,IAAAl7C,GAAA5E,EAAAy/C,EAAA,GACAF,EAAAI,EAAA7gD,IAAA,IAAA8gD,EAAA7gD,GAAA,QAAA8gD,EAAAj7C,GAAA,OAAAk7C,EAAA,IAAAt6C,GAAAxF,EAAAy/C,EAAA,GACA1gD,EAAA4gD,EAAA5gD,IAAA,IAAA6gD,EAAAh7C,GAAA,QAAAi7C,EAAAr6C,GAAA,OAAAs6C,EAAA,IAAAhhD,GAAAkB,EAAAy/C,EAAA,GACAA,GAAA,EACA76C,EAAA06C,EAAiB95C,EAAA8H,EAAOxO,EAAAygD,EAIxB,IAAA9gD,EAAA,EAAmBA,EAAA,EAAOA,IAC1B4gD,GAAA,GAAA5gD,GAAAsc,GAAAqjC,EAAAx5C,IAAA,QAAAw5C,EAAA54C,GAAA,YAAA44C,EAAAt/C,GAAA,UAAAs/C,EAAA,IAAAr/C,GAAAiB,EAAAy/C,KACAH,EAAA16C,EAAiBA,EAAAY,EAAMA,EAAA1G,EAAMA,EAAAC,EAAMA,EAAAugD,GAInCR,EA7HA,GAwIAzqC,EAAA,WACA,SAAAA,IACA+4H,EAAA/uI,KAAAgW,GAEAhW,KAAAke,aA8FA,OAnFAlI,EAAAhU,UAAAmc,GAAA,SAAA5V,EAAA6V,GACApe,KAAAke,UAAA3V,KACAvI,KAAAke,UAAA3V,OAEAvI,KAAAke,UAAA3V,GAAAc,KAAA+U,IAYApI,EAAAhU,UAAAqc,IAAA,SAAA9V,EAAA6V,GACA,IAAApe,KAAAke,UAAA3V,GACA,SAGA,IAAAuP,EAAA9X,KAAAke,UAAA3V,GAAAuK,QAAAsL,GAGA,OADApe,KAAAke,UAAA3V,GAAA+V,OAAAxG,EAAA,GACAA,GAAA,GAUA9B,EAAAhU,UAAA2U,QAAA,SAAApO,GACA,IAAAgW,EAAAve,KAAAke,UAAA3V,GAEA,GAAAgW,EAQA,OAAAjc,UAAAC,OAGA,IAFA,IAAAA,EAAAgc,EAAAhc,OAEAnC,EAAA,EAAyBA,EAAAmC,IAAYnC,EACrCme,EAAAne,GAAAG,KAAAP,KAAAsC,UAAA,SAMA,IAHA,IAAAkc,EAAAzD,MAAA/Y,UAAAqV,MAAA9W,KAAA+B,UAAA,GACAswI,EAAAr0H,EAAAhc,OAEAknB,EAAA,EAA0BA,EAAAmpH,IAAcnpH,EACxClL,EAAAkL,GAAAtR,MAAAnY,KAAAwe,IASAxI,EAAAhU,UAAAyc,QAAA,WACAze,KAAAke,cAWAlI,EAAAhU,UAAA0c,KAAA,SAAAC,GACA3e,KAAAme,GAAA,gBAAAtO,GACA8O,EAAAtV,KAAAwG,MAIAmG,EAlGA,GAgHA68H,EAAA,SAAAhzH,GAGA,SAAAgzH,IACA9D,EAAA/uI,KAAA6yI,GAEA,IAAA/yH,EAAA6yH,EAAA3yI,KAAA6f,EAAAtf,KAAAP,KAAAgW,IAKA,OAHA8J,EAAA8hC,QACA9hC,EAAA0mB,MAAA,EACA1mB,EAAA+hC,SAAA,KACA/hC,EA+BA,OAzCA4yH,EAAAG,EAAAhzH,GAmBAgzH,EAAA7wI,UAAA8/C,YAAA,WACA9hD,KAAA4hD,KAAAjH,OAAA36C,GACAA,KAAA4hD,KAAAr/C,OACAvC,KAAA6hD,SAAA5d,WAAAjkC,KAAA8hD,YAAAlgD,KAAA5B,WAAAwmC,OAEAxmC,KAAA6hD,SAAA,MAUAgxF,EAAA7wI,UAAAqH,KAAA,SAAA04C,GACA/hD,KAAA4hD,KAAAv4C,KAAA04C,GACA/hD,KAAA6hD,WACA7hD,KAAA6hD,SAAA5d,WAAAjkC,KAAA8hD,YAAAlgD,KAAA5B,WAAAwmC,SAIAqsG,EA1CA,CA2CK78H,GAaLsE,EAAA,SAAAC,GACA,OAAAA,GAAA,UAAAA,IAAA,YAAAA,IAAA,EAAAA,IAAA,IAgBAu4H,EAAA,SAAAr4H,EAAA9Y,EAAA+Y,GAEA,IAAAC,EAAA,IAAAC,WAAAH,EAAArJ,OAAAqJ,EAAAI,WAAAJ,EAAAtD,YAAA,GAEA2D,EAAA,IAAA2lC,EAAA1lC,MAAA/Y,UAAAqV,MAAA9W,KAAAoB,IAGAqZ,EAAA,IAAAC,WAAAR,EAAAtD,YACA+D,EAAA,IAAAN,WAAAI,EAAA5J,QAIA+J,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EAGAC,OAAA,EAWA,IAPAR,EAAAT,EAAA,GACAU,EAAAV,EAAA,GACAW,EAAAX,EAAA,GACAY,EAAAZ,EAAA,GAIAiB,EAAA,EAAsBA,EAAAhB,EAAApY,OAA6BoZ,GAAA,EAGnDJ,EAAAjB,EAAAK,EAAAgB,IACAH,EAAAlB,EAAAK,EAAAgB,EAAA,IACAF,EAAAnB,EAAAK,EAAAgB,EAAA,IACAD,EAAApB,EAAAK,EAAAgB,EAAA,IAGAb,EAAAN,QAAAe,EAAAC,EAAAC,EAAAC,EAAAR,EAAAS,GAIAT,EAAAS,GAAArB,EAAAY,EAAAS,GAAAR,GACAD,EAAAS,EAAA,GAAArB,EAAAY,EAAAS,EAAA,GAAAP,GACAF,EAAAS,EAAA,GAAArB,EAAAY,EAAAS,EAAA,GAAAN,GACAH,EAAAS,EAAA,GAAArB,EAAAY,EAAAS,EAAA,GAAAL,GAGAH,EAAAI,EACAH,EAAAI,EACAH,EAAAI,EACAH,EAAAI,EAGA,OAAAV,GAeA+3H,EAAA,WACA,SAAAA,EAAAt4H,EAAA9Y,EAAA+Y,EAAAmB,GACAkzH,EAAA/uI,KAAA+yI,GAEA,IAAA9kI,EAAA8kI,EAAAj3H,KACAnB,EAAA,IAAAC,WAAAH,EAAArJ,QACA4J,EAAA,IAAAC,WAAAR,EAAAtD,YACA/W,EAAA,EAMA,IAJAJ,KAAA+b,aAAA,IAAA82H,EAGA7yI,KAAA+b,aAAA1S,KAAArJ,KAAAgc,cAAArB,EAAAvD,SAAAhX,IAAA6N,GAAAtM,EAAA+Y,EAAAM,IACA5a,EAAA6N,EAAsB7N,EAAAua,EAAApY,OAAwBnC,GAAA6N,EAC9CyM,EAAA,IAAAuB,aAAA3B,EAAAK,EAAAva,EAAA,IAAAka,EAAAK,EAAAva,EAAA,IAAAka,EAAAK,EAAAva,EAAA,IAAAka,EAAAK,EAAAva,EAAA,MACAJ,KAAA+b,aAAA1S,KAAArJ,KAAAgc,cAAArB,EAAAvD,SAAAhX,IAAA6N,GAAAtM,EAAA+Y,EAAAM,IAGAhb,KAAA+b,aAAA1S,KAAA,WAEAwS,EAAA,KAAAK,EAAAlB,MA4BA,OAfA+3H,EAAA/wI,UAAAga,cAAA,SAAAvB,EAAA9Y,EAAA+Y,EAAAM,GACA,kBACA,IAAAmB,EAAA22H,EAAAr4H,EAAA9Y,EAAA+Y,GAEAM,EAAAtW,IAAAyX,EAAA1B,EAAAI,cAIAm0H,EAAA+D,EAAA,OACApxI,IAAA,OACAV,IAAA,WAEA,gBAGA8xI,EAhDA,GAiEA1mH,EAAA,SAAA1pB,GACA,IAAA2pB,KAgBA,OAdAxrB,OAAAyrB,KAAA5pB,GAAA6pB,QAAA,SAAA7qB,GACA,IAAAN,EAAAsB,EAAAhB,GAEA8qB,YAAAC,OAAArrB,GACAirB,EAAA3qB,IACAwa,MAAA9a,EAAA+P,OACAyJ,WAAAxZ,EAAAwZ,WACA1D,WAAA9V,EAAA8V,YAGAmV,EAAA3qB,GAAAN,IAIAirB,GAWA4B,EAAA,SAAAnuB,GACAA,EAAAouB,UAAA,SAAA9D,GACA,IAAAxa,EAAAwa,EAAAxa,KACA4K,EAAA,IAAAQ,WAAApL,EAAA4K,UAAA0B,MAAAtM,EAAA4K,UAAAI,WAAAhL,EAAA4K,UAAAtD,YACAxV,EAAA,IAAAsa,YAAApM,EAAAlO,IAAAwa,MAAAtM,EAAAlO,IAAAkZ,WAAAhL,EAAAlO,IAAAwV,WAAA,GACAiL,EAAA,IAAAnG,YAAApM,EAAAuS,GAAAjG,MAAAtM,EAAAuS,GAAAvH,WAAAhL,EAAAuS,GAAAjL,WAAA,GAGA,IAAA47H,EAAAt4H,EAAA9Y,EAAAygB,EAAA,SAAAwH,EAAAzN,GACAoxH,EAAAn/G,YAAA/B,GACAtN,OAAAlP,EAAAkP,OACA/D,UAAAmB,KACWA,EAAA/K,aAMX4hI,EAAA,IAAA9kH,EAAAnuB,IAnrBA,KA8rBAg9B,GAAA,SAAA5E,GACA,IAAAtD,EAAAsD,EAAAre,QAAA,qBAMA,OAJAqe,EAAA1U,iBAAA0U,EAAA1U,gBAAA3Q,QAAA,6CACA+hB,EAAA,aAGAA,GAYAmI,GAAA,SAAAC,EAAAC,GACAD,EAAArF,QACAqF,EAAApF,QAEAqF,KAAAjE,uBACAiE,EAAAjE,qBAAApB,QACAqF,EAAAjE,qBAAA,OAaAkE,GAAA,SAAA7B,EAAA4B,GAGAA,EAAAjE,qBAAAqC,EACAA,EAAAvF,QAkBAqH,GAAA,SAAA70B,EAAA/D,GACA,kBACA,IAAAyuI,EAAAzuI,EAAA6xB,eACA4G,EAAAg2G,EAAA1qI,GACA+0B,EAAA21G,EAAA38G,KACA4G,EAAA14B,EAAAiyB,WAAAluB,GAEAg1B,EAAAL,EAAAK,cACAC,EAAAN,EAAAM,YAAAD,GACAE,EAAAP,EAAAjE,qBAEA+D,GAAAC,EAAAC,GAEAM,IAKAA,EAAAlC,gBAYA2B,EAAAS,eAEAP,GAAAK,EAAAlC,eAAA4B,IAbAO,GAKAH,EAAA3C,qBA0BAgD,GAAA,SAAAp1B,EAAA/D,GACA,kBACA,IAAA0uI,EAAA1uI,EAAA6xB,eACA4G,EAAAi2G,EAAA3qI,GACA+0B,EAAA41G,EAAA58G,KACA4G,EAAA14B,EAAAiyB,WAAAluB,GAEAg1B,EAAAL,EAAAK,cACAC,EAAAN,EAAAM,YAAAD,GACAE,EAAAP,EAAAjE,qBAEA+D,GAAAC,EAAAC,GAEAM,IAKAA,EAAAlC,eAQAmC,IAAAD,EAAAlC,gBAQA2B,EAAA5yB,OAEA4yB,EAAA5yB,MAAAkzB,GAIAN,EAAAtC,kBAEAwC,GAAAK,EAAAlC,eAAA4B,IAZAC,GAAAK,EAAAlC,eAAA4B,GARAI,EAAA3C,qBAwBAkD,IAcArd,MAAA,SAAAjY,EAAA/D,GACA,kBACA,IAAAy4B,EAAAz4B,EAAA6xB,eAAA9tB,GACA20B,EAAA14B,EAAAiyB,WAAAluB,GACAmuB,EAAAlyB,EAAAkyB,yBAEAsG,GAAAC,EAAAC,GAGA,IAAAK,EAAAL,EAAAK,cACAC,EAAAN,EAAAM,cACA/4B,GAAA+4B,EAAA9L,OAAA,SAAA2J,GACA,OAAAA,EAAAvhB,UACO,IAAA0jB,EAAA,IAAA/4B,GACPq5B,EAAAZ,EAAAa,OAAAt5B,GAEA,GAAA84B,IAAAO,EAAA,CAWA,QAAAE,KAFA8sG,GAAAt4G,IAAAC,KAAA,oFAEAyK,EAAAa,OACAb,EAAAa,OAAAC,GAAAC,QAAAf,EAAAa,OAAAC,KAAAF,EAGAZ,EAAAS,sBAZAjH,GACA/zB,QAAA,2DA0BAge,UAAA,SAAApY,EAAA/D,GACA,kBACA,IAAAy4B,EAAAz4B,EAAA6xB,eAAA9tB,GACA20B,EAAA14B,EAAAiyB,WAAAluB,GAEAuiI,GAAAt4G,IAAAC,KAAA,4EAEAuK,GAAAC,EAAAC,GAEA,IAAA7yB,EAAA6yB,EAAAK,cAEAlzB,IACAA,EAAA9I,KAAA,YAGA27B,EAAAS,oBAKAO,IAYA1d,MAAA,SAAAjY,EAAA+yB,EAAA92B,GACA,GAAA82B,EAAA,CAKA,IAAAnI,EAAA3uB,EAAA2uB,KACAoD,EAAA/xB,EAAA+xB,eACA0G,EAAAz4B,EAAA6xB,eAAA9tB,GAEA+yB,EAAAnd,GAAA,4BACA,IAAA2E,EAAAwY,EAAAxY,QAEAma,EAAAva,SAAAI,EAAAyT,KAIApD,EAAAmE,UAAAxU,EAAArB,SAAA,SAAA0R,EAAAgD,YACA8G,EAAAlH,SAIAuF,EAAAnd,GAAA,4BACA8e,EAAAva,SAAA4Y,EAAAxY,QAAAyT,GAGApD,EAAAmE,UACA2F,EAAAlH,SAIAuF,EAAAnd,GAAA,QAAA0f,GAAAt1B,KAAA/D,MAaAmc,UAAA,SAAApY,EAAA+yB,EAAA92B,GACA,IAAA2uB,EAAA3uB,EAAA2uB,KACAoD,EAAA/xB,EAAA+xB,eACA0G,EAAAz4B,EAAA6xB,eAAA9tB,GACA20B,EAAA14B,EAAAiyB,WAAAluB,GAEA+yB,EAAAnd,GAAA,4BACA,IAAA2E,EAAAwY,EAAAxY,QAEAma,EAAAva,SAAAI,EAAAyT,GACA0G,EAAA5yB,MAAA6yB,EAAAK,iBAIApK,EAAAmE,UAAAxU,EAAArB,SAAA,SAAA0R,EAAAgD,YACA8G,EAAAlH,SAIAuF,EAAAnd,GAAA,4BACA8e,EAAAva,SAAA4Y,EAAAxY,QAAAyT,GAGApD,EAAAmE,UACA2F,EAAAlH,SAIAuF,EAAAnd,GAAA,QAAA0f,GAAAt1B,KAAA/D,MAIA2uI,GAAA,SAAA5qI,EAAAgqB,GACA,gBAAA7P,GACA,OAAAA,EAAAZ,WAAAvZ,KAAAgqB,IAIA6gH,GAAA,SAAAvmH,GACA,gBAAAnK,GACA,OAAAA,EAAAmK,kBAIAsR,IAUA3d,MAAA,SAAAjY,EAAA/D,GACA,IAAAkiB,EAAAliB,EAAAkiB,IACAmrH,EAAArtI,EAAAqtI,WACA50G,EAAAz4B,EAAA6xB,eAAA9tB,GACA6d,EAAA5hB,EAAA+xB,eAAAnQ,gBACAitH,EAAA7uI,EAAAytB,OACApP,EAAAwwH,EAAAxwH,YACAD,EAAAywH,EAAAzwH,UACA0wH,EAAA9uI,EAAAiyB,WAAAluB,GACA7E,EAAA4vI,EAAA5vI,OACAq6B,EAAAu1G,EAAAv1G,OACAvH,EAAAhyB,EAAAgyB,qBAQA,QAAAjE,KAJA1P,EAAAta,IAAA,IAAAzH,OAAAyrB,KAAA1J,EAAAta,IAAAhG,SACAsgB,EAAAta,IAA2B+tB,MAAQxc,SAAWA,SAAA,MAG9C+I,EAAAta,GAAA,CACA7E,EAAA6uB,KACA7uB,EAAA6uB,OAKA,IAAAghH,EAAA3wH,EAAA8O,OAAAyhH,GAAA5qI,EAAAgqB,IAEA,QAAA8L,KAAAxb,EAAAta,GAAAgqB,GAAA,CACA,IAAA4F,EAAAtV,EAAAta,GAAAgqB,GAAA8L,GAIAm1G,EAAAD,EAAA7hH,OAAA0hH,GAAAj7G,EAAAtL,cAEA2mH,EAAAjxI,eAMA41B,EAAAtL,YAGA,IAAAyO,OAAA,EAkBA,GAfAA,EADAnD,EAAAtL,YACA,IAAA4Z,GAAAtO,EAAAtL,YAAAnG,EAAAN,GACS+R,EAAAvV,WAAA,SAAAivH,EACT,IAAAnC,GAAAv3G,EAAAvV,UAAA,GAAA8D,EAAAN,EAAAoQ,GAIA,KAGA2B,EAAA2yG,GAAAp1G,cAA6CjxB,GAAA45B,EAAA/C,kBAAmDnD,GAEhG+F,GAAA31B,KAAA4vB,EAAAmD,eAAA92B,GAEAd,EAAA6uB,GAAAlpB,KAAA8uB,GAEA,qBAAA4F,EAAAM,GAAA,CACA,IAAAh0B,EAAA,IAAAygI,GAAAxsG,YACA75B,GAAA45B,EACAxJ,KAAAkI,GAAA5E,GACA8F,SAAA,EACA3a,SAAA6U,EAAA7U,SACAxJ,QAAAqe,EAAAre,QACAgb,MAAAuJ,IAGAN,EAAAM,GAAAh0B,IAMA4yB,EAAA9e,GAAA,QAAA0f,GAAAt1B,KAAA/D,KAWAmc,UAAA,SAAApY,EAAA/D,GACA,IAAA2uB,EAAA3uB,EAAA2uB,KACAzM,EAAAliB,EAAAkiB,IACAmrH,EAAArtI,EAAAqtI,WACA50G,EAAAz4B,EAAA6xB,eAAA9tB,GACA6d,EAAA5hB,EAAA+xB,eAAAnQ,gBACAvD,EAAAre,EAAAytB,OAAApP,YACA4wH,EAAAjvI,EAAAiyB,WAAAluB,GACA7E,EAAA+vI,EAAA/vI,OACAq6B,EAAA01G,EAAA11G,OACAvH,EAAAhyB,EAAAgyB,qBAEA,QAAAjE,KAAA1P,EAAAta,GAKA,QAAA81B,KAJA36B,EAAA6uB,KACA7uB,EAAA6uB,OAGA1P,EAAAta,GAAAgqB,GACA,IAAA1P,EAAAta,GAAAgqB,GAAA8L,GAAA1a,OAAA,CAYA,IAAAwU,EAAAtV,EAAAta,GAAAgqB,GAAA8L,GAEA/C,OAAA,EAiBA,GAfA,QAAAu2G,EACAv2G,EAAA,IAAAmL,GAAAtO,EAAAtL,YAAAnG,EAAAN,GACS,SAAAyrH,IACTv2G,EAAA,IAAAo0G,GAAAv3G,EAAAvV,UAAA,GAAA8D,EAAAN,EAAAoQ,IAGA2B,EAAA2yG,GAAAp1G,cACAjxB,GAAA45B,EACA/C,kBACSnD,GAET+F,GAAA31B,KAAA4vB,EAAAmD,eAAA92B,GAEAd,EAAA6uB,GAAAlpB,KAAA8uB,GAEA,qBAAA4F,EAAAM,GAAA,CACA,IAAAh0B,EAAA8oB,EAAAyB,oBACAnwB,GAAA45B,EACAxJ,KAAA,YACAoJ,SAAA,EACA3a,SAAA6U,EAAA7U,SACAwR,MAAAuJ,IACW,GAAAh0B,MAEX0zB,EAAAM,GAAAh0B,GAMA4yB,EAAA9e,GAAA,QAAA0f,GAAAt1B,KAAA/D,KAWAkc,kBAAA,SAAAnY,EAAA/D,GACA,IAAA2uB,EAAA3uB,EAAA2uB,KACAtQ,EAAAre,EAAAytB,OAAApP,YACA6wH,EAAAlvI,EAAAiyB,WAAAluB,GACA7E,EAAAgwI,EAAAhwI,OACAq6B,EAAA21G,EAAA31G,OAEA,QAAAxL,KAAA1P,EAAAta,GAKA,QAAA81B,KAJA36B,EAAA6uB,KACA7uB,EAAA6uB,OAGA1P,EAAAta,GAAAgqB,GAAA,CACA,IAAA4F,EAAAtV,EAAAta,GAAAgqB,GAAA8L,GAIA,GAAAlG,EAAA5U,WAAArgB,MAAA,UAMAQ,EAAA6uB,GAAAlpB,KAAAyhI,GAAAp1G,cAAqDjxB,GAAA45B,GAAmBlG,IAExE,qBAAA4F,EAAAM,IAAA,CACA,IAAAh0B,EAAA8oB,EAAAyB,oBACAnwB,GAAA0zB,EAAA5U,WACAsR,KAAA,WACAoJ,SAAA,EACA3a,SAAA6U,EAAA7U,SACAwR,MAAAuJ,IACW,GAAAh0B,MAEX0zB,EAAAM,GAAAh0B,MAqBAmzB,GAAA,SAAAj1B,EAAA/D,GACA,gBAAA6F,GACA,IAAAmsB,EAAAhyB,EAAAgyB,qBACA9yB,EAAAc,EAAAiyB,WAAAluB,GAAA7E,OAEAof,EAAA0T,EAAA1T,QAEA,IAAAA,EACA,YAGA,IAAA2b,EAAA,KAQA,OANA3b,EAAAhB,WAAAvZ,KACAk2B,EAAA/6B,EAAAof,EAAAhB,WAAAvZ,KAGAk2B,KAAA/6B,EAAA4yB,KAEA,qBAAAjsB,EACAo0B,EAGA,OAAAp0B,EAGA,KAGAo0B,EAAA/M,OAAA,SAAApY,GACA,OAAAA,EAAA7U,KAAA4F,EAAA5F,KACK,WAIL84B,IAaA/c,MAAA,SAAAjY,EAAA/D,GACA,kBACA,IAAAu5B,EAAAv5B,EAAAiyB,WAAAluB,GAAAw1B,OAEA,QAAAt5B,KAAAs5B,EACA,GAAAA,EAAAt5B,GAAAw5B,QACA,OAAAF,EAAAt5B,GAIA,cAeAkc,UAAA,SAAApY,EAAA/D,GACA,kBACA,IAAAu5B,EAAAv5B,EAAAiyB,WAAAluB,GAAAw1B,OAEA,QAAAt5B,KAAAs5B,EACA,eAAAA,EAAAt5B,GAAAlD,KACA,OAAAw8B,EAAAt5B,GAIA,eAiCA2xB,GAAA,SAAA5xB,IACA,uCAAAgoB,QAAA,SAAAjkB,GACA41B,GAAA51B,KAAA/D,KAGA,IAAAiyB,EAAAjyB,EAAAiyB,WACAD,EAAAhyB,EAAAgyB,qBACArD,EAAA3uB,EAAA2uB,KACAzM,EAAAliB,EAAAkiB,KAIA,qBAAA8F,QAAA,SAAAjkB,GACAkuB,EAAAluB,GAAAi1B,eAAAj1B,EAAA/D,GACAiyB,EAAAluB,GAAAg1B,eAAAh1B,KAAA/D,GACAiyB,EAAAluB,GAAA60B,kBAAA70B,EAAA/D,GACAiyB,EAAAluB,GAAAo1B,kBAAAp1B,EAAA/D,KAKA,IAAA8tB,EAAAmE,EAAAjW,MAAAgd,cACAjL,GAAAD,EAAAZ,OAAA,SAAA2J,GACA,OAAAA,EAAAvhB,UACG,IAAAwY,EAAA,IAAA7tB,GAEHgyB,EAAAjW,MAAAud,OAAAxL,GAAA0L,SAAA,EACAxH,EAAAjW,MAAAmd,iBAEAnH,EAAArY,GAAA,0BACA,qBAAAqO,QAAA,SAAAjkB,GACA,OAAAkuB,EAAAluB,GAAA60B,qBAKA,IAAAsB,EAAA,WACAjI,EAAAjW,MAAAmd,iBACAxK,EAAAxc,SAAkBpO,KAAA,QAAA5H,KAAA,sBAclB,QAAA8D,KAXA0uB,EAAAwL,cAAAtK,iBAAA,SAAAqK,GACAvL,EAAAyL,mBAAAvK,iBAAA,SAAAoC,EAAA9V,UAAAgd,gBAEAjX,EAAAvI,GAAA,qBACAgV,EAAAwL,cAAAzD,oBAAA,SAAAwD,GACAvL,EAAAyL,mBAAA1D,oBAAA,SAAAzE,EAAA9V,UAAAgd,kBAIAxK,EAAA0L,YAAA,SAEApI,EAAAjW,MAAAud,OACA5K,EAAAwL,cAAAG,SAAArI,EAAAjW,MAAAud,OAAAt5B,KAYAyvB,GAAA,WACA,IAAAuC,KAcA,OAZA,uCAAAjK,QAAA,SAAAjkB,GACAkuB,EAAAluB,IACA7E,UACAq6B,UACA9E,qBAAA,KACAuE,YAAAld,GACAid,YAAAjd,GACA8c,eAAA9c,GACAqd,eAAArd,MAIAmW,GAOAjG,GAAA,IAEAC,QAAA,EAIAK,IAAA,uIACAC,GAAA,SAAAC,GACA,OAAAhxB,KAAAixB,oBAAAD,GAAAhxB,KAAAkxB,mBAAAF,IAYAgC,GAAA,SAAAC,GAGA,SAAAD,EAAA1N,GACA0lH,GAAAhrI,KAAAgzB,GAEA,IAAAlT,EAAAurH,GAAArrI,MAAAgzB,EAAApT,WAAA9e,OAAAif,eAAAiT,IAAAzyB,KAAAP,OAEAkzB,EAAA5N,EAAA4N,IACA9M,EAAAd,EAAAc,gBACA+M,EAAA7N,EAAA6N,KACAC,EAAA9N,EAAA8N,UACAC,EAAA/N,EAAA+N,UACAC,EAAAhO,EAAAgO,WACAC,EAAAjO,EAAAiO,kBACAC,EAAAlO,EAAAkO,yBACAq+G,EAAAvsH,EAAAusH,WAEA,IAAA3+G,EACA,UAAA1wB,MAAA,wCAGAiuB,GAAA4C,EAEAvT,EAAAsG,kBACAtG,EAAAiH,MAAAoM,EACArT,EAAA2T,KAAAN,EAAAzM,IACA5G,EAAA8xH,YAAAC,EACA/xH,EAAA6T,YAAAL,EACAxT,EAAAyT,oBACAzT,EAAA0T,2BACA1T,EAAA6T,cACA7T,EAAA8T,cAAA9T,EAAAiH,MAAA8M,aAAA,sBACA/T,EAAA8T,cAAAE,gCAAA,IAGAhU,EAAAiU,iBACA3N,gBAAAtG,EAAAsG,gBACA4N,QAAA,MAGAlU,EAAAmU,YAAAC,KAEApU,EAAAqU,YAAA,IAAA22G,GAAA12G,YAGAtU,EAAAqU,YAAAE,iBAAA,aAAAvU,EAAAwU,kBAAA1yB,KAAAke,IAEAA,EAAAyU,UAAAu2G,GAAAt2G,mBACA1U,EAAA2U,WAAA,WACA,UAGA3U,EAAA4U,gBAAA,IAAAgnB,GAAAp2B,GACAxF,EAAA6U,sBAAAxB,EAAAyB,oBACAC,KAAA,WACAC,MAAA,qBACK,GAAAzqB,MAELyV,EAAAiV,WAAA,IAAA09G,GAEA,IAAAz9G,GACAtO,IAAA5G,EAAA2T,KACAU,YAAArU,EAAAqU,YACAc,YAAAnV,EAAAiH,MAAAkO,YAAArzB,KAAAke,EAAAiH,OACAmO,SAAA,WACA,OAAApV,EAAAoV,YAEAC,QAAA,WACA,OAAArV,EAAAiH,MAAAoO,WAEAtT,SAAA,WACA,OAAA/B,EAAAqU,YAAAtS,UAEAuT,UAAA,WACA,OAAAtV,EAAA2U,cAEAY,iBAAA,WACA,OAAAvV,EAAAuV,oBAEAjC,YACAkC,eAAAxV,EAAA4U,gBACAa,UAAAzV,EAAAiV,WACA88G,WAAA/xH,EAAA8xH,aAgCA,OA7BA9xH,EAAA0V,sBAAA,SAAA1V,EAAA8xH,YAAA,IAAAlC,GAAAx8G,EAAApT,EAAA2T,KAAA3T,EAAAsG,iBAAA,IAAAqgB,GAAAvT,EAAApT,EAAA2T,KAAA3T,EAAAsG,iBACAtG,EAAA2V,sCAIA3V,EAAAoR,mBAAA,IAAA6iB,GAAA+2F,GAAAp1G,aAAAV,GACAW,qBAAA7V,EAAA6U,sBACAiB,WAAA,SACKtQ,GAGLxF,EAAAmR,oBAAA,IAAA8iB,GAAA+2F,GAAAp1G,aAAAV,GACAY,WAAA,UACKtQ,GAELxF,EAAA+V,uBAAA,IAAAgoB,GAAAitF,GAAAp1G,aAAAV,GACAY,WAAA,QACKtQ,GAELxF,EAAAgW,+BAGAhF,GAAAtE,QAAA,SAAAwE,GACAlR,EAAAkR,EAAA,KAAAD,GAAAnvB,KAAAke,EAAAkR,KAGAlR,EAAAwjB,QAAAotG,GAAA,OAEA5wH,EAAA0V,sBAAAO,OACAjW,EAygCA,OA3nCAsrH,GAAAp4G,EAAAC,GA4HAg4G,GAAAj4G,IACArxB,IAAA,sCACAN,MAAA,WACA,IAAA20B,EAAAh2B,KAEAA,KAAAw1B,sBAAArX,GAAA,4BACA,IAAA2E,EAAAkT,EAAAR,sBAAA1S,QACAmT,EAAA,IAAAD,EAAAR,sBAAAxR,eAAA,IAIAkS,GAAAF,EAAAR,sBAAAvD,OAAA+D,EAAAR,sBAAA1S,SACAkT,EAAAjC,gBAAAC,QAAA,EAEAgC,EAAAjC,gBAAAC,QAAAiC,EAKAnT,EAAArB,SAAA,SAAAuU,EAAAjP,MAAAoP,YACAH,EAAA9E,mBAAAxO,SAAAI,EAAAkT,EAAAjC,iBACAiC,EAAA9E,mBAAA6E,QAGAK,IACAy7G,WAAA77G,EAAA47G,YACAv7G,gBACA7V,MAAAwV,EAAA/E,oBACAtQ,UAAAqV,EAAAH,uBACAS,KAAAN,EAAA9E,oBAEAiC,KAAA6C,EAAAjP,MACAwP,eAAAP,EAAAjC,gBACAyC,qBAAAR,EAAAR,sBACA9O,IAAAsP,EAAAvC,KACAxB,OAAA+D,EAAA/D,SACAwE,WAAAT,EAAA/B,YACAyC,yBAAAV,EAAAU,yBAAA90B,KAAAo0B,KAGAA,EAAAW,sBAAAX,EAAA/D,SAAAnP,GAEA,IACAkT,EAAAY,sBACS,MAAA5uB,GAET,OADA8iI,GAAAt4G,IAAAC,KAAA,iCAAAzqB,GACAguB,EAAA7B,YAAA0C,YAAA,UAEAb,EAAAc,iBAEAd,EAAArf,QAAA,0BAGA3W,KAAAw1B,sBAAArX,GAAA,4BACA,IAAA4Y,EAAAf,EAAAR,sBAAA1S,QAEA,IAAAiU,EAAA,CAGAf,EAAA29G,8BAEA,IAAA38G,OAAA,EAYA,OAVAhB,EAAAxC,2BACAwD,EAAAhB,EAAAiB,yBAGAD,IACAA,EAAAhB,EAAAkB,kBAGAlB,EAAAmB,cAAAH,OACAhB,EAAAR,sBAAA1S,MAAAkT,EAAAmB,eAsBA,GAlBAnB,EAAArC,aACAqC,EAAAoB,cAAAL,GAOAf,EAAA9E,mBAAAxO,SAAAqU,EAAAf,EAAAjC,iBACAiC,EAAAqB,iBAKArB,EAAAjP,MAAAuQ,UACAtB,EAAA9E,mBAAA6E,QAGAgB,EAAAtV,QAAA,CACA,IAAA8V,EAAA,WACA,IAAA+5G,EAAAt7G,EAAAd,WAEA,IAAAo8G,EAAA/uI,QACAyzB,EAAA7B,YAAAqD,kBAAA85G,EAAA9rI,MAAA,GAAA8rI,EAAA3rI,IAAA,KAIA,GAAAqwB,EAAAnU,aAAAlJ,IAAA,CACA,IAAA8e,EAAA,SAAAA,IACAzB,EAAAnU,aAAAlJ,IACA4e,IAEAvB,EAAAjP,MAAA2Q,IAAA,iBAAAD,IAIAzB,EAAAjP,MAAA2Q,IAAA,iBAAAD,QAEAF,OAKAv3B,KAAAw1B,sBAAArX,GAAA,mBACA6X,EAAAU,yBAAAV,EAAAR,sBAAAmC,SAGA33B,KAAAw1B,sBAAArX,GAAA,2BACA6X,EAAA9E,mBAAA0G,QACA5B,EAAA9E,mBAAA2G,UAGA73B,KAAAw1B,sBAAArX,GAAA,yBACA,IAAA2E,EAAAkT,EAAAR,sBAAA1S,QACAmT,EAAA,IAAAD,EAAAR,sBAAAxR,eAAA,IAIAkS,GAAAF,EAAAR,sBAAAvD,OAAA+D,EAAAR,sBAAA1S,SACAkT,EAAAjC,gBAAAC,QAAA,EAEAgC,EAAAjC,gBAAAC,QAAAiC,EAOAD,EAAA9E,mBAAAxO,SAAAI,EAAAkT,EAAAjC,iBACAiC,EAAA9E,mBAAA6E,OAEAC,EAAAjP,MAAApQ,SACApO,KAAA,cACAuvB,SAAA,MAIA93B,KAAAw1B,sBAAArX,GAAA,+BACA,IAAA4Y,EAAAf,EAAAR,sBAAA1S,QACAiV,EAAA/B,EAAAgC,oBAAAjB,GAEAgB,IAKA/B,EAAAU,0BACA/zB,QAAA,iCAGAqzB,EAAAjP,MAAApQ,QAAA,oBAIA3W,KAAAw1B,sBAAArX,GAAA,+BACA6X,EAAAjP,MAAApQ,SAA8BpO,KAAA,QAAA5H,KAAA,6BAE9BX,KAAAw1B,sBAAArX,GAAA,8BACA6X,EAAAjP,MAAApQ,SAA8BpO,KAAA,QAAA5H,KAAA,+BAW9BgB,IAAA,wBACAN,MAAA,SAAA4wB,EAAAnP,GACA,IAAAD,EAAAoP,EAAApP,gBACAoV,GAAA,EACAC,EAAAp3B,OAAAyrB,KAAA1J,EAAArC,OAEA,QAAAU,KAAA2B,EAAArC,MACA,QAAAsU,KAAAjS,EAAArC,MAAAU,GAAA,CACA,IAAAiX,EAAAtV,EAAArC,MAAAU,GAAA4T,GAEAqD,EAAAjW,MACA+V,GAAA,GAKAA,GACAj4B,KAAA+mB,MAAApQ,SAA4BpO,KAAA,QAAA5H,KAAA,gBAG5BG,OAAAyrB,KAAA1J,EAAAlC,WAAApe,QACAvC,KAAA+mB,MAAApQ,SAA4BpO,KAAA,QAAA5H,KAAA,eAG5B8vB,GAAA2H,SAAAC,MAAAvV,IACA9iB,KAAA+mB,MAAApQ,SAA4BpO,KAAA,QAAA5H,KAAA,YAG5B8vB,GAAA2H,SAAAE,OAAAxV,IACA9iB,KAAA+mB,MAAApQ,SAA4BpO,KAAA,QAAA5H,KAAA,aAG5Bu3B,EAAA31B,QAAAzB,OAAAyrB,KAAA1J,EAAArC,MAAA0X,EAAA,KAAA31B,OAAA,GACAvC,KAAA+mB,MAAApQ,SAA4BpO,KAAA,QAAA5H,KAAA,wBAG5BX,KAAA2zB,aACA3zB,KAAA+mB,MAAApQ,SAA4BpO,KAAA,QAAA5H,KAAA,6BAW5BgB,IAAA,+BACAN,MAAA,WACA,IAAAk3B,EAAAv4B,KAEAA,KAAAkxB,mBAAA/S,GAAA,6BACA,IAAAqa,EAAAD,EAAArB,iBACAuB,EAAAF,EAAA/C,sBAAA1S,QACA4V,EAAAH,EAAAxR,MAAA2R,WACAC,EAAAD,EAAAn2B,OAAAm2B,EAAA/yB,IAAA+yB,EAAAn2B,OAAA,GAAAg2B,EAAAxR,MAAAkO,cAAA,EAEA2D,EAAAL,EAAAK,uBAMAH,EAAAhX,SAGA8W,EAAA1W,WAAAkvH,GAAAljH,2BAEA2K,EAAA1W,WAAA8I,UAAA6N,EAAA3W,WAAA8I,WAGA+N,GAAAC,IACAL,EAAA/C,sBAAA1S,MAAA0V,GAGAD,EAAAxR,MAAApQ,QAAA,qBAEA3W,KAAAkxB,mBAAA/S,GAAA,sBACAoa,EAAA5hB,QAAA,cAGA3W,KAAAkxB,mBAAA/S,GAAA,mBACAoa,EAAA7B,yBAAA6B,EAAArH,mBAAAyG,WAGA33B,KAAAkxB,mBAAA/S,GAAA,4BACAoa,EAAAM,sBAGA74B,KAAAkxB,mBAAA/S,GAAA,6BACAoa,EAAAxR,MAAApQ,SAA8BpO,KAAA,QAAA5H,KAAA,2BAE9BX,KAAAixB,oBAAA9S,GAAA,4BACAoa,EAAAM,sBAGA74B,KAAAkxB,mBAAA/S,GAAA,mBACAoa,EAAAO,kBAGA94B,KAAAkxB,mBAAA/S,GAAA,wBACAoa,EAAA7B,0BACA/zB,QAAA,mGACS6tB,MAGTxwB,KAAAkxB,mBAAA/S,GAAA,6BAGAoa,EAAAxR,MAAApQ,QAAA,eAGA3W,KAAAkxB,mBAAA/S,GAAA,8BAAAkM,GAGAkO,EAAAxR,MAAApQ,SACApO,KAAA,2BACAwwB,QAAA1O,EAAA0O,YAIA/4B,KAAAixB,oBAAA9S,GAAA,mBACAoa,EAAAO,qBAIAn3B,IAAA,sBACAN,MAAA,WACA,OAAAyL,KAAAC,IAAA/M,KAAAixB,oBAAA+H,mBAAAh5B,KAAAkxB,mBAAA8H,uBAQAr3B,IAAA,OACAN,MAAA,WACArB,KAAAkxB,mBAAA6E,OACA/1B,KAAAi0B,YAAAzT,MAAAyY,sBACAj5B,KAAAixB,oBAAA8E,OAEA/1B,KAAAi0B,YAAAtT,UAAAsY,sBACAj5B,KAAA61B,uBAAAE,UAcAp0B,IAAA,qBACAN,MAAA,WACA,IAAAyhB,EAAA9iB,KAAAk3B,iBAEApU,IAAA9iB,KAAAw1B,sBAAA1S,UACA9iB,KAAAw1B,sBAAA1S,SAEA9iB,KAAAkxB,mBAAAgI,kBAUAv3B,IAAA,OACAN,MAAA,WACA,IAAArB,KAAA82B,iBAAA,CAIA92B,KAAA+mB,MAAAoS,SACAn5B,KAAA+mB,MAAAqS,eAAA,GAGAp5B,KAAAy0B,cACAz0B,KAAA+1B,OAGA,IAAAu7G,EAAAtxI,KAAA+mB,MAAAmO,WAIA,OAAAl1B,KAAA+mB,MAAAlF,aAAAlJ,KACA3Y,KAAA+mB,MAAAkO,cAAAq8G,EAAA9rI,MAAA,GACAxF,KAAA+mB,MAAAqS,eAAAk4G,EAAA3rI,IAAA2rI,EAAA/uI,OAAA,SAFA,MAaAZ,IAAA,iBACAN,MAAA,WACA,IAAAg4B,EAAAr5B,KAEA8iB,EAAA9iB,KAAAw1B,sBAAA1S,QAOA,IAAAA,GAAA9iB,KAAA+mB,MAAAuQ,UAAAt3B,KAAAy0B,aACA,SAIA,IAAA3R,EAAArB,QAAA,CACA,IAAA6vH,EAAAtxI,KAAAk1B,WAEA,IAAAo8G,EAAA/uI,OAGA,SAGA,GAAAuoI,GAAAvxG,QAAAC,YAAA,IAAAx5B,KAAA+mB,MAAA0S,aAWA,OARAz5B,KAAA+mB,MAAA2Q,IAAA,4BACA2B,EAAA1iB,QAAA,aACA0iB,EAAAtS,MAAAqS,eAAAk4G,EAAA3rI,IAAA,IACA0zB,EAAA5E,WAAA,WACA,aAIA,EAIAz0B,KAAA2W,QAAA,aAEA3W,KAAA+mB,MAAAqS,eAAAk4G,EAAA3rI,IAAA,IAQA,OALA3F,KAAAy0B,WAAA,WACA,UAGAz0B,KAAA+1B,QACA,KAUAp0B,IAAA,oBACAN,MAAA,WAIA,IACArB,KAAA42B,sBACO,MAAA5uB,GAEP,OADA8iI,GAAAt4G,IAAAC,KAAA,kCAAAzqB,GACAhI,KAAAm0B,YAAA0C,YAAA,UAMA,GAAA72B,KAAA+mB,MAAA2S,WAAA,CACA,IAAAC,EAAA35B,KAAA+mB,MAAA6S,OAIA,qBAAAD,GAAA,oBAAAA,EAAAE,MACAF,EAAAE,KAAA,cAAA7xB,MAIAhI,KAAA2W,QAAA,iBAaAhV,IAAA,gBACAN,MAAA,WACA,IAAAy4B,EAAA95B,KAAAkxB,mBAAA6I,OAEA/5B,KAAAi0B,YAAAzT,MAAAyY,uBAMAa,GAJA95B,KAAAkxB,mBAAAsjB,gBAAAx0C,KAAAkxB,mBAAAsjB,eAAAZ,cAIA9Z,GAAA95B,KAAAixB,oBAAA8I,OAGA/5B,KAAAixB,oBAAA8I,QAIAD,GACA95B,KAAAm0B,YAAA0C,iBAWAl1B,IAAA,sBACAN,MAAA,SAAAqhB,GACA,IAAA4uH,EAAAtxI,KAAAk1B,WAEA,IAAAo8G,EAAA/uI,OAEA,SAGA,IAAAy3B,EAAAh6B,KAAA00B,gBAAAuF,eAAAvX,EAAA1iB,KAAAm0B,YAAAtS,UAEA,UAAAmY,EACA,SAKA,IAAAE,EAAAzJ,GAAA2H,SAAA+B,YAAAzX,EAAAsX,GACA/E,EAAAj1B,KAAA+mB,MAAAkO,cACAyD,EAAA14B,KAAA+mB,MAAA2R,WAEA,IAAAA,EAAAn2B,OAEA,OAAA23B,EAAAjF,GAAAmF,GAEA,IAAAC,EAAA3B,EAAA/yB,IAAA+yB,EAAAn2B,OAAA,GAIA,OAAA83B,EAAApF,GAAAmF,IAAAF,EAAAG,GAAAD,MAeAz4B,IAAA,2BACAN,MAAA,WACA,IAAAs2B,EAAAr1B,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MACAixB,EAAAjxB,UAAA,GAEAm2B,OAAA,EACAD,OAAA,EAYA,GANAC,EAAAd,EAAAjV,UAAA1iB,KAAAw1B,sBAAA1S,QAEAyQ,KAAAoE,EAAApE,mBAAAvzB,KAAAuzB,mBAIAkF,EAAA,CACAz4B,KAAA23B,QAEA,IACA,OAAA33B,KAAAm0B,YAAA0C,YAAA,WACS,MAAA7uB,GACT,OAAAhI,KAAA2W,QAAA,UAIA,IAAA2jB,EAAA,IAAAt6B,KAAAw1B,sBAAAvD,OAAArP,UAAA8O,OAAA6I,IAAAh4B,OAEA,OAAA+3B,GAEAwwG,GAAAt4G,IAAAC,KAAA,mGAEAzyB,KAAA+mB,MAAApQ,QAAA,iBACA3W,KAAAw1B,sBAAAO,KAAAuE,KAGA7B,EAAA+B,aAAA3P,KAAA4P,MAAA,IAAAlH,EACAvzB,KAAA+mB,MAAApQ,QAAA,qBACA3W,KAAA+mB,MAAApQ,SAA0BpO,KAAA,QAAA5H,KAAA,8BAG1B63B,EAAAx4B,KAAAk3B,iBACA4zG,GAAAt4G,IAAAC,KAAA,sDAAAkF,EAAAh1B,QAAA,IAAAg1B,EAAAh1B,QAAA,uCAEA3C,KAAAw1B,sBAAA1S,MAAA0V,OAQA72B,IAAA,eACAN,MAAA,WACArB,KAAAkxB,mBAAA2G,QACA73B,KAAAi0B,YAAAzT,MAAAyY,sBACAj5B,KAAAixB,oBAAA4G,QAEA73B,KAAAi0B,YAAAtT,UAAAsY,sBACAj5B,KAAA61B,uBAAAgC,WAYAl2B,IAAA,iBACAN,MAAA,SAAA4zB,GACA,IAAAyD,EAAAgC,GAAA16B,KAAA+mB,MAAA2R,WAAAzD,GAEA,OAAAj1B,KAAAw1B,uBAAAx1B,KAAAw1B,sBAAA1S,SAOA9iB,KAAAw1B,sBAAA1S,QAAA9B,SAQA0X,KAAAn2B,OACA0yB,GAKAj1B,KAAAkxB,mBAAAyJ,kBACA36B,KAAAkxB,mBAAA0G,QACA53B,KAAAi0B,YAAAzT,MAAAyY,uBACAj5B,KAAAixB,oBAAA0J,kBACA36B,KAAAixB,oBAAA2G,SAEA53B,KAAAi0B,YAAAtT,UAAAsY,uBACAj5B,KAAA61B,uBAAA8E,kBACA36B,KAAA61B,uBAAA+B,cAIA53B,KAAA+1B,QA/BA,KAyCAp0B,IAAA,WACAN,MAAA,WACA,OAAArB,KAAAw1B,sBAIAx1B,KAAAm0B,YACAn0B,KAAAm0B,YAAAtS,SAGA4O,GAAA2H,SAAAvW,SAAA7hB,KAAAw1B,sBAAA1S,SAPA,KAiBAnhB,IAAA,WACAN,MAAA,WACA,OAAArB,KAAAu0B,aAGA5yB,IAAA,oBACAN,MAAA,WACA,IAAAu5B,OAAA,EACAC,OAAA,EAEA,GAAA76B,KAAAw1B,sBAAA,CAIA,IAAA1S,EAAA9iB,KAAAw1B,sBAAA1S,QAEA,GAAAA,EAAA,CAIA,IAAAkX,EAAAh6B,KAAA00B,gBAAAuF,eAAAnX,EAAA9iB,KAAAm0B,YAAAtS,UAEA,UAAAmY,IAKAY,EAAAnK,GAAA2H,SAAAlD,SAAApS,EAAAkX,GAEA,IAAAY,EAAAr4B,QAAA,CAIA,GAAAvC,KAAAi0B,YAAAzT,MAAAyY,qBAAA,CAIA,GAHAnW,EAAA9iB,KAAAi0B,YAAAzT,MAAAyY,qBAAAnW,QACAkX,EAAAh6B,KAAA00B,gBAAAuF,eAAAnX,EAAA9iB,KAAAm0B,YAAAtS,UAEA,OAAAmY,EACA,OAKA,GAFAa,EAAApK,GAAA2H,SAAAlD,SAAApS,EAAAkX,GAEA,IAAAa,EAAAt4B,OACA,OAIAs4B,EAIOA,EAAAr1B,MAAA,GAAAo1B,EAAAj1B,IAAA,IAAAi1B,EAAAp1B,MAAA,GAAAq1B,EAAAl1B,IAAA,GAEP3F,KAAAu0B,UAAAqG,EAEA56B,KAAAu0B,UAAAu2G,GAAAt2G,mBAAAqG,EAAAr1B,MAAA,GAAAo1B,EAAAp1B,MAAA,GAAAq1B,EAAAr1B,MAAA,GAAAo1B,EAAAp1B,MAAA,GAAAq1B,EAAAl1B,IAAA,GAAAi1B,EAAAj1B,IAAA,GAAAk1B,EAAAl1B,IAAA,GAAAi1B,EAAAj1B,IAAA,MALA3F,KAAAu0B,UAAAqG,EAQA56B,KAAAsjC,QAAA,qBAAAkB,GAAAxkC,KAAAu0B,WAAA,KAEAv0B,KAAA+mB,MAAApQ,QAAA,yBAQAhV,IAAA,iBACAN,MAAA,WACA,IAAAy5B,EAAA96B,KAEA+6B,EAAA/6B,KAAAm0B,YAAAtS,SACAmZ,EAAAvK,GAAA2H,SAAAvW,SAAA7hB,KAAAw1B,sBAAA1S,SACA4V,EAAA14B,KAAA+mB,MAAA2R,WACAuC,EAAA,SAAAA,IACAH,EAAA3G,YAAAtS,SAAAmZ,EACAF,EAAA/T,MAAApQ,QAAA,kBAEAmkB,EAAA3G,YAAA+G,oBAAA,aAAAD,IAGAvC,EAAAn2B,OAAA,IACAy4B,EAAAluB,KAAAC,IAAAiuB,EAAAtC,EAAA/yB,IAAA+yB,EAAAn2B,OAAA,KAIAw4B,IAAAC,IAEA,SAAAh7B,KAAAm0B,YAAAsF,WACAz5B,KAAAm0B,YAAAE,iBAAA,aAAA4G,GAEAA,QAWAt5B,IAAA,UACAN,MAAA,WACA,IAAA85B,EAAAn7B,KAEAA,KAAA+0B,WAAAqG,YACAp7B,KAAAw1B,sBAAA/W,UACAze,KAAAkxB,mBAAAzS,WAEA,qBAAA+N,QAAA,SAAAjkB,GACA,IAAA7E,EAAAy3B,EAAAlH,YAAA1rB,GAAA7E,OAEA,QAAAe,KAAAf,EACAA,EAAAe,GAAA+nB,QAAA,SAAA6O,GACAA,EAAAC,gBACAD,EAAAC,eAAA7c,cAMAze,KAAAixB,oBAAAxS,UACAze,KAAA61B,uBAAApX,aAUA9c,IAAA,SACAN,MAAA,WACA,OAAArB,KAAAw1B,sBAAAvD,UAUAtwB,IAAA,QACAN,MAAA,WAEA,OAAArB,KAAAw1B,sBAAA1S,SAAA9iB,KAAAm3B,iBAUAx1B,IAAA,sBACAN,MAAA,WACA,IAAAyhB,EAAA9iB,KAAAw1B,sBAAA1S,QACAyY,OAAA,EAIA,GAAAzY,GAAA,SAAA9iB,KAAAm0B,YAAAsF,WAAA,CAKA,GADA8B,EAAA61G,GAAApxI,KAAAw1B,sBAAAvD,OAAAnP,GACAyY,EAAAh5B,OAAA,EAEA,OADAvC,KAAA23B,MAAA,mEAAA7U,EAAA+J,YACA7sB,KAAAm0B,YAAA0C,YAAA,UAGA72B,KAAA4zI,0BAAAr4G,GAGAv7B,KAAAy7B,6BAAA3Y,OAGAnhB,IAAA,4BACAN,MAAA,SAAAk6B,GAKA,IAAAo1G,EAEAp1G,EAAAh5B,OAAA,IAEA,IAAAg5B,EAAA,GAAAzoB,QAAA,MAGAyoB,EAAA,KAAAA,EAAA,GAEA,IAAAuvG,GAAA9uG,YAGA,KAEAh8B,KAAAkxB,mBAAAsK,SAAAD,EAAA,GAAAo1G,GACAp1G,EAAA,IACAv7B,KAAAixB,oBAAAuK,SAAAD,EAAA,GAAAo1G,MASAhvI,IAAA,8BACAN,MAAA,WACArB,KAAAiyB,SAAArP,UAAA4J,QAAA,SAAAmP,GACAA,EAAA7Z,WAAAgQ,QAAyCm3G,EAAA1iI,EAAQ6tB,aAAgB60G,EAAA1iI,EAAQ6tB,YAAAyH,kBAAiCotG,EAAA1iI,EAAQ6tB,YAAAyH,gBAAA,sBAAwCm1G,GAAAr1G,EAAA7Z,WAAAgQ,QAAA,OAC1J6J,EAAAnB,aAAA7hB,UAqBAhX,IAAA,+BACAN,MAAA,SAAAyhB,GACA,IAAA4Y,EAAA,EACA/K,EAAA,KACAc,OAAA,EAEA3O,EAAAhB,WAAAgQ,SACAL,EAAAM,GAAAjP,EAAAhB,WAAAgQ,QACAnB,EAAAc,EAAAd,WACA+K,EAAAjK,EAAAiK,YAGA17B,KAAAiyB,SAAArP,UAAA4J,QAAA,SAAAmP,GACA,IAAAC,GACAF,WAAA,EACA/K,WAAA,MAGAgL,EAAA7Z,WAAAgQ,SACA8J,EAAA7J,GAAA4J,EAAA7Z,WAAAgQ,SAKA8J,EAAAF,iBACAC,EAAAnB,aAAA7hB,KAKAijB,EAAAjL,iBACAgL,EAAAnB,aAAA7hB,UAKAhX,IAAA,gBACAN,MAAA,SAAAyhB,GACA,IAAApG,EAAA,EACA40H,EAAAtxI,KAAAk1B,WAEAo8G,EAAA/uI,SACAma,EAAA40H,EAAA9rI,MAAA,IAGAgmB,GAAA1I,EAAA9iB,KAAA4zB,cAAAlX,MAUA/a,IAAA,mBACAN,MAAA,WACA,IAAA4zB,EAAAj1B,KAAA+mB,MAAAkO,cACA6G,EAAAi1G,GAAAvjH,mBACAuO,EAAAg1G,GAAArjH,wBACA3gB,EAAAD,KAAAC,IAAA+uB,EAAAi1G,GAAAtjH,wBAEA,OAAA3gB,KAAAuC,IAAAysB,EAAA7G,EAAA8G,EAAAhvB,MAUApL,IAAA,qBACAN,MAAA,WACA,IAAA4zB,EAAAj1B,KAAA+mB,MAAAkO,cACA6G,EAAAi1G,GAAAnjH,sBACAmO,EAAAg1G,GAAAjjH,2BACA/gB,EAAAD,KAAAC,IAAA+uB,EAAAi1G,GAAAljH,2BAEA,OAAA/gB,KAAAuC,IAAAysB,EAAA7G,EAAA8G,EAAAhvB,OAGAimB,EA5nCA,CA6nCC83G,GAAA9uG,aAcDmV,GAAA,SAAAC,EAAAC,EAAAC,GACA,gBAAAC,GACA,IAAA7uB,EAAA0uB,EAAAnf,OAAArP,UAAAyuB,GACAG,EAAAjI,GAAA7mB,GACA+uB,EAAAlX,GAAA7X,GAEA,2BAAA6uB,EACAE,GAGAF,SACA7uB,EAAAkrB,SAEAlrB,EAAAkrB,UAAA,EAGA2D,IAAAE,GAAAD,IAEAF,IACAC,EACAH,EAAAz6B,QAAA,oBAEAy6B,EAAAz6B,QAAA,sBAGA46B,KAYAG,GAAA,SAAAA,EAAAC,EAAAjvB,EAAAje,GACAumI,GAAAhrI,KAAA0xC,GAGA,IAAAE,EAAAD,EAAAE,0BAAAC,mBAAAlwC,KAAA+vC,EAAAE,2BAGA,GAAAnvB,EAAAZ,WAAA4I,WAAA,CACA,IAAAC,EAAAjI,EAAAZ,WAAA4I,WAEA1qB,KAAAiM,MAAA0e,EAAA1e,MACAjM,KAAAkM,OAAAye,EAAAze,OAGAlM,KAAAozB,UAAA1Q,EAAAZ,WAAA8I,UAIA5qB,KAAAyE,KAIAzE,KAAAi+B,QAAAkT,GAAAQ,EAAA/uB,UAAAF,EAAAR,IAAA0vB,IAUAG,GAAA,SAAAJ,GACA,IAAA/uB,EAAA+uB,EAAA/uB,UAGA+uB,EAAAK,gBAAA,WACA,OAAApvB,EAAAqP,OAAArP,UAAA8O,OAAA,SAAA5O,GACA,OAAAymB,GAAAzmB,KACK1K,IAAA,SAAApQ,EAAA5H,GACL,WAAAsxC,GAAAC,EAAA3pC,IAAAka,SAgBA6gB,IAAA,8CAMAC,GAAA,WAMA,SAAAA,EAAA1d,GACA,IAAAxF,EAAA9f,KAEAgrI,GAAAhrI,KAAAgjC,GAEAhjC,KAAA+mB,MAAAzB,EAAA6N,KACAnzB,KAAAk1B,SAAA5P,EAAA4P,SAEAl1B,KAAAijC,mBAAA,EACAjjC,KAAAkjC,iBAAA,KACAljC,KAAAmjC,OAAA,KACAnjC,KAAAojC,yBAAA,KACApjC,KAAAsjC,QAAAotG,GAAA,mBAEA1wI,KAAAsjC,QAAA,cAEA,IAAAC,EAAA,WACA,OAAAzjB,EAAA0jB,uBAEAC,EAAA,WACA,OAAA3jB,EAAA4jB,gBAEAC,EAAA,WACA,OAAA7jB,EAAA8jB,gBAEAC,EAAA,WACA,OAAA/jB,EAAAgkB,kBAGA9jC,KAAA+mB,MAAA5I,GAAA,kBAAA0lB,GACA7jC,KAAA+mB,MAAA5I,GAAA,UAAAslB,GACAzjC,KAAA+mB,MAAA5I,GAAA4kB,GAAAY,GACA3jC,KAAA+mB,MAAA5I,GAAA,UAAAolB,GAGAvjC,KAAAye,QAAA,WACAqB,EAAAwjB,QAAA,WACAxjB,EAAAiH,MAAA1I,IAAA,kBAAAwlB,GACA/jB,EAAAiH,MAAA1I,IAAA,UAAAolB,GACA3jB,EAAAiH,MAAA1I,IAAA0kB,GAAAY,GACA7jB,EAAAiH,MAAA1I,IAAA,UAAAklB,GACAzjB,EAAAsjB,0BACQ6lG,EAAA1iI,EAAQw9B,aAAAjkB,EAAAsjB,0BAEhBtjB,EAAA8jB,gBAwVA,OA9UAqnG,GAAAjoG,IACArhC,IAAA,sBACAN,MAAA,WACArB,KAAAgkC,oBAEAhkC,KAAAojC,0BACQ6lG,EAAA1iI,EAAQw9B,aAAA/jC,KAAAojC,0BAIhBpjC,KAAAojC,yBAAsC6lG,EAAA1iI,EAAQ09B,WAAAjkC,KAAAwjC,oBAAA5hC,KAAA5B,MAAA,QAY9C2B,IAAA,oBACAN,MAAA,WACA,GAAArB,KAAA+mB,MAAAoO,WAAAn1B,KAAA8jC,iBAGA,OAFA9jC,KAAAijC,mBAAA,OACAjjC,KAAAkjC,iBAAAljC,KAAA+mB,MAAAkO,eAIA,IAAAj1B,KAAA+mB,MAAAuQ,WAAAt3B,KAAA+mB,MAAAoO,UAAA,CAIA,IAAAF,EAAAj1B,KAAA+mB,MAAAkO,cACAyD,EAAA14B,KAAA+mB,MAAA2R,WAEA,GAAA14B,KAAAkjC,mBAAAjO,KAAAyD,EAAAn2B,QAAA0yB,EAAAmF,IAAA1B,EAAA/yB,IAAA+yB,EAAAn2B,OAAA,IAMA,OAAAvC,KAAA0jC,eAGA1jC,KAAAijC,oBAAA,GAAAhO,IAAAj1B,KAAAkjC,kBACAljC,KAAAijC,qBACAjjC,KAAAkkC,YACOjP,IAAAj1B,KAAAkjC,iBACPljC,KAAAijC,sBAEAjjC,KAAAijC,mBAAA,EACAjjC,KAAAkjC,iBAAAjO,OAYAtzB,IAAA,eACAN,MAAA,WACArB,KAAAijC,mBAAA,EAEAjjC,KAAAmjC,SACAnjC,KAAAsjC,QAAA,gBACAS,aAAA/jC,KAAAmjC,SAGAnjC,KAAAmjC,OAAA,QAWAxhC,IAAA,iBACAN,MAAA,WACA,IAAA8zB,EAAAn1B,KAAA+mB,MAAAoO,UACAD,EAAAl1B,KAAAk1B,WACAD,EAAAj1B,KAAA+mB,MAAAkO,cACAkP,OAAA,EAEA,GAAAhP,GAAAn1B,KAAAokC,qBAAAlP,EAAAD,GAAA,CACA,IAAAoP,EAAAnP,EAAAvvB,IAAAuvB,EAAA3yB,OAAA,GAGA4hC,EAAAE,EAGA,GAAAlP,GAAAn1B,KAAAskC,sBAAApP,EAAAD,GAAA,CACA,IAAAsP,EAAArP,EAAA1vB,MAAA,GAIA2+B,EAAAI,EAAAnK,GAGA,2BAAA+J,IACAnkC,KAAAsjC,QAAA,8CAAArO,EAAA,wBAAAuP,GAAAtP,GAAA,gBAAAiP,EAAA,KAEAnkC,KAAA+mB,MAAAqS,eAAA+K,IACA,MAaAxiC,IAAA,WACAN,MAAA,WACA,IAAArB,KAAA0jC,eAAA,CAKA,IAAAzO,EAAAj1B,KAAA+mB,MAAAkO,cACAyD,EAAA14B,KAAA+mB,MAAA2R,WACAjvB,EAAAixB,GAAAhC,EAAAzD,GAUA,OAAAxrB,EAAAlH,QAAA0yB,EAAA,GAAAxrB,EAAA9D,IAAA,IACA3F,KAAA4jC,eACA5jC,KAAA+mB,MAAAqS,eAAAnE,GAEAj1B,KAAAsjC,QAAA,cAAArO,EAAA,oCAAAxrB,EAAAjE,MAAA,UAAAiE,EAAA9D,IAAA,4EAGA3F,KAAA+mB,MAAApQ,SAA4BpO,KAAA,QAAA5H,KAAA,8BAP5B,MAsBAgB,IAAA,eACAN,MAAA,WACA,IAAA6zB,EAAAl1B,KAAAk1B,WACAD,EAAAj1B,KAAA+mB,MAAAkO,cAEA,GAAAj1B,KAAA+mB,MAAAoO,WAAAn1B,KAAA8jC,iBAEA,SAGA,GAAA9jC,KAAA+mB,MAAAoO,WAAA,OAAAn1B,KAAAmjC,OAEA,SAGA,GAAAnjC,KAAAskC,sBAAApP,EAAAD,GAAA,CACA,IAAAwP,EAAAvP,EAAAvvB,IAAAuvB,EAAA3yB,OAAA,GAQA,OANAvC,KAAAsjC,QAAA,mCAAArO,EAAA,0CAAAwP,GACAzkC,KAAA4jC,eACA5jC,KAAA+mB,MAAAqS,eAAAqL,GAGAzkC,KAAA+mB,MAAApQ,SAA4BpO,KAAA,QAAA5H,KAAA,qBAC5B,EAGA,IAAA+3B,EAAA14B,KAAA+mB,MAAA2R,WACAgM,EAAAC,GAAAjM,EAAAzD,GAEA,GAAAj1B,KAAA4kC,gBAAAF,EAAAhM,EAAAzD,GAUA,OALAj1B,KAAA4jC,eACA5jC,KAAA+mB,MAAAqS,eAAAnE,GAGAj1B,KAAA+mB,MAAApQ,SAA4BpO,KAAA,QAAA5H,KAAA,yBAC5B,EAIA,GAAA+jC,EAAAniC,OAAA,GACA,IAAAsiC,EAAAH,EAAAl/B,MAAA,GAAAyvB,EAKA,OAHAj1B,KAAAsjC,QAAA,cAAArO,EAAA,uBAAA4P,EAAA,gBAAAH,EAAAl/B,MAAA,IAEAxF,KAAAmjC,OAAAc,WAAAjkC,KAAA8kC,YAAAljC,KAAA5B,MAAA,IAAA6kC,EAAA5P,IACA,EAIA,YAGAtzB,IAAA,uBACAN,MAAA,SAAA6zB,EAAAD,GACA,QAAAC,EAAA3yB,QAKA0yB,EAAAC,EAAAvvB,IAAAuvB,EAAA3yB,OAAA,GAAA63B,MAOAz4B,IAAA,wBACAN,MAAA,SAAA6zB,EAAAD,GACA,SAAAC,EAAA3yB,QAEA2yB,EAAA1vB,MAAA,MAAAyvB,EAAAC,EAAA1vB,MAAA,GAAA40B,OAOAz4B,IAAA,kBACAN,MAAA,SAAAqjC,EAAAhM,EAAAzD,GACA,OAAAyP,EAAAniC,OAAA,CAGA,IAAAwiC,EAAA/kC,KAAAglC,uBAAAtM,EAAAzD,GAEA,GAAA8P,EAGA,OAFA/kC,KAAAsjC,QAAA,mCAAAyB,EAAAv/B,MAAA,OAAAu/B,EAAAp/B,IAAA,6BAAAsvB,IAEA,EAIA,YAWAtzB,IAAA,cACAN,MAAA,SAAA4jC,GACA,IAAAvM,EAAA14B,KAAA+mB,MAAA2R,WACAzD,EAAAj1B,KAAA+mB,MAAAkO,cACAyP,EAAAC,GAAAjM,EAAAzD,GAEAj1B,KAAA4jC,eAEA,IAAAc,EAAAniC,QAAA0yB,IAAAgQ,IAIAjlC,KAAAsjC,QAAA,8BAAArO,EAAA,yBAAAgQ,EAAA,mBAAAP,EAAAl/B,MAAA,IAGAxF,KAAA+mB,MAAAqS,eAAAsL,EAAAl/B,MAAA,GAAA0/B,IAEAllC,KAAA+mB,MAAApQ,SAA0BpO,KAAA,QAAA5H,KAAA,qBAG1BgB,IAAA,yBACAN,MAAA,SAAAq3B,EAAAzD,GAyBA,IAFA,IAAAkQ,EAAAC,GAAA1M,GAEAt4B,EAAA,EAAqBA,EAAA+kC,EAAA5iC,OAAiBnC,IAAA,CACtC,IAAAoF,EAAA2/B,EAAA3/B,MAAApF,GACAuF,EAAAw/B,EAAAx/B,IAAAvF,GAGA,GAAA60B,EAAAzvB,EAAA,GAAAyvB,EAAAzvB,EAAA,EACA,OACAA,QACAG,OAKA,gBAGAq9B,EA1YA,GA6YAkN,IACAC,cAAA,GACAC,UAAA,SAAAzmB,GACA,IAAAwJ,EAAAnzB,KAAAmzB,MAA0Bkd,0BAAA,IAC1BC,EAAAnd,EAAAod,eAEA,OAAA5mB,EAAA2mB,KAWAE,GAAA,SAAAA,EAAA1pB,EAAAxB,GACA,IAAAmrB,EAAA,EACAtM,EAAA,EACAuM,EAAAo6F,GAAAp1G,aAAAwa,GAAA5qB,GAEAwB,EAAAtB,MAAA,WACAsB,EAAAnQ,SAAoBpO,KAAA,QAAA5H,KAAA,mCASpB,IAAAgwC,EAAA,WACAxM,GACArd,EAAAmO,YAAAkP,IAUAyM,EAAA,SAAAN,GACA,OAAAA,QAAArjC,IAAAqjC,IAGAnM,EAAArd,EAAAjF,aAAAlJ,KAAAmO,EAAAmO,eAAA,EAEAnO,EAAA4Q,IAAA,iBAAAiZ,GAEA7pB,EAAAT,IAAAiqB,GACAxpB,EAAAnQ,SAAoBpO,KAAA,QAAA5H,KAAA,qBACpBmmB,EAAA8S,SASAiX,EAAA,WAGA,GAAAhmB,KAAA4P,MAAAgW,EAAA,IAAAC,EAAAP,cACArpB,EAAAnQ,SAAsBpO,KAAA,QAAA5H,KAAA,kCADtB,CAKA,GAAA+vC,EAAAN,WAAA,oBAAAM,EAAAN,UAMA,OAFAK,EAAA5lB,KAAA4P,MAEAiW,EAAAN,UAAA7vC,KAAAumB,EAAA8pB,GALAk6F,GAAAt4G,IAAAmF,MAAA,2EAaAmZ,EAAA,SAAAA,IACAhqB,EAAAzI,IAAA,iBAAAsyB,GACA7pB,EAAAzI,IAAA,QAAAwyB,GACA/pB,EAAAzI,IAAA,UAAAyyB,IASAC,EAAA,SAAAC,GACAF,IACAN,EAAA1pB,EAAAkqB,IAGAlqB,EAAA3I,GAAA,QAAA0yB,GACA/pB,EAAA3I,GAAA,UAAA2yB,GAIAhqB,EAAAmqB,oBAAAF,GASAE,GAAA,SAAA3rB,GACAkrB,GAAAxwC,KAAAslB,IAGAuuH,GAAA,QASAC,IACArtG,kBACArO,YACAxc,UAAawuH,EAAA,aACbzoF,YAAeyoF,EAAA,eACf5vH,QAAW4vH,EAAA,WACXr9G,SAEA+0D,2BAAA13C,GACA23C,0BAAAt2C,GACAhD,4BACAK,6BAEA9hB,IAAAo4B,MAIA4iC,GAAA,SAGA,+KAAAx1D,QAAA,SAAA7d,GACA7N,OAAAC,eAAA+yI,GAAAnlI,GACA1N,IAAA,WAEA,OADA6pI,GAAAt4G,IAAAC,KAAA,aAAA9jB,EAAA,kDACAoiI,GAAApiI,IAEAjK,IAAA,SAAArD,GACAypI,GAAAt4G,IAAAC,KAAA,aAAA9jB,EAAA,kDAEA,kBAAAtN,KAAA,EACAypI,GAAAt4G,IAAAC,KAAA,gBAAA9jB,EAAA,uCAIAoiI,GAAApiI,GAAAtN,OAKA,IAAA0yI,GAAA,SAAAxrI,GACA,IAAA68E,EAAA,yDAEA,GAAAA,EAAA5+E,KAAA+B,GACA,YAGA,IAAAyrI,EAAA,2BAEA,OAAAA,EAAAxtI,KAAA+B,GACA,OAGA,MAUA05E,GAAA,SAAAC,EAAA5mD,GAIA,IAHA,IAAA8a,EAAA9a,EAAAxY,QACAq/D,GAAA,EAEA/hF,EAAA,EAAiBA,EAAA8hF,EAAA3/E,OAA0BnC,IAC3C,GAAA8hF,EAAA9hF,GAAAqE,KAAA2xC,EAAAl0B,IAAA,CACAigE,EAAA/hF,EACA,MAIA8hF,EAAAE,eAAAD,EACAD,EAAAvrE,SACAwrE,gBACA55E,KAAA,YAWA85E,GAAA,SAAAH,EAAAx7D,GACAA,EAAAsrB,kBAAAxlB,QAAA,SAAA8c,GACA44C,EAAAI,gBAAAh5C,KAEA24C,GAAAC,EAAAx7D,EAAA9D,YAKAkxH,GAAAvxD,cAAA,WACA,OAAAuoD,GAAAt4G,IAAAC,KAAA,4EAGA,IAAAwhH,GAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAF,EACA,OAAAA,EAIA,IAAAG,KAEA,QAAA5hD,KAAAyhD,EACAG,EAAA5hD,IACA6hD,iBAAA,sBAAmCF,EAAAtyH,WAAAgQ,OAAA,IACnCyiH,iBAAA,sBAAmCJ,EAAAryH,WAAAgQ,OAAA,KAGnCqiH,EAAAvsD,mBAAAusD,EAAAvsD,kBAAA6K,IAAA0hD,EAAAvsD,kBAAA6K,GAAAG,OACAyhD,EAAA5hD,GAAAG,KAAAuhD,EAAAvsD,kBAAA6K,GAAAG,MAKA,kBAAAshD,EAAAzhD,KACA4hD,EAAA5hD,GAAAv/D,IAAAghH,EAAAzhD,IAIA,OAAAq4C,GAAAp1G,aAAAw+G,EAAAG,IAGAG,GAAA,SAAA7iG,GACA,YAAAA,EAAAsxC,SAAA4uD,WAAA,CAGA,IAAA/qH,EAAAgkH,GAAA3mD,QAAAxyC,EAAA5qB,MAAAk8D,SAAAC,UAEA,GAAAp8D,EAAA2tH,IAAA,CACA,IAAAC,EAAAT,GAAAtiG,EAAAyxC,QAAAuxD,WAAAhjG,EAAA/uB,UAAAE,QAAA6uB,EAAAE,0BAAA5d,YAAAzT,MAAAyY,qBAAAnW,SAEA4xH,IACA5tH,EAAAm6G,gBAAA0T,WAAAD,MAQAZ,GAAAtxD,kBAAA,WACA,IAAA7vD,EAAcw2G,EAAA5iI,EAAQ+B,cAAA,SAGtB,IAAAwiI,GAAA3uD,QAAA,SAAAsG,cACA,SAIA,IAAAC,GAEA,gCAEA,gBAEA,kBAEA,wBAEA,yDAEA,OAAAA,EAAAj0C,KAAA,SAAAk0C,GACA,wBAAAn8E,KAAAmsB,EAAAiwD,YAAAD,MAtBA,GA2BAmxD,GAAAc,mBAAA,WACA,QAAA9J,GAAA3uD,QAAA,SAAAsG,eAIA,kBAAAj8E,KAAiC2iI,EAAA5iI,EAAQ+B,cAAA,SAAAs6E,YAAA,yBALzC,GASAkxD,GAAAe,qBAAA,SAAAtsI,GACA,cAAAA,EACAurI,GAAAtxD,kBAGA,SAAAj6E,GACAurI,GAAAc,oBAUAd,GAAArxD,YAAA,WACA,OAAAqoD,GAAAt4G,IAAAC,KAAA,4EAGA,IAAAqiH,GAAAhK,GAAAhoD,aAAA,aAaAC,GAAA,SAAAC,GAGA,SAAAD,EAAAhkE,EAAAoU,EAAA7N,GACA0lH,GAAAhrI,KAAA+iF,GAIA,IAAAjjE,EAAAurH,GAAArrI,MAAA+iF,EAAAnjE,WAAA9e,OAAAif,eAAAgjE,IAAAxiF,KAAAP,KAAAmzB,EAAA7N,EAAAoB,MAEA,GAAAyM,EAAA8vD,UAAA9vD,EAAA8vD,SAAAC,SAAA,CACA,IAAAC,EAAA2nD,GAAA33G,EAAA8vD,SAAAC,UAEAC,EAAAlhF,eAAA,QACAnB,OAAAC,eAAAoiF,EAAA,OACAliF,IAAA,WAGA,OAFA6pI,GAAAt4G,IAAAC,KAAA,2DACAU,EAAAxc,SAA0BpO,KAAA,QAAA5H,KAAA,sBAC1Bmf,KAUAqjE,EAAA4xD,IAAAj1H,EAEAqjE,EAAA6xD,KAAAl1H,EASA,GANAA,EAAAiH,MAAAoM,EACArT,EAAAsjE,QAAArkE,EACAe,EAAAqgB,SACArgB,EAAAujE,yBAAA,EACAvjE,EAAAwjE,cAEAxjE,EAAAmjE,SAAAM,gBAAApwD,EAAAk3G,2BAAAl3G,EAAAm3G,0BACAn3G,EAAAk3G,2BAAA,GACAl3G,EAAAm3G,2BAAA,QACK,GAAAxqH,EAAAmjE,SAAAM,iBAAApwD,EAAAqwD,2BAAArwD,EAAAswD,2BAGL,UAAAjhF,MAAA,4EA4BA,OAvBAsd,EAAA3B,GAAagrH,EAAA5iI,GAAQ,iGAAA8jB,GACrB,IAAAq5D,EAA8BylD,EAAA5iI,EAAQm9E,mBAAsBylD,EAAA5iI,EAAQo9E,yBAA4BwlD,EAAA5iI,EAAQq9E,sBAAyBulD,EAAA5iI,EAAQs9E,oBAEzIH,KAAAI,SAAAhkE,EAAAiH,MAAAkhB,OACAnoB,EAAA+xB,0BAAAC,uBAIAhyB,EAAA3B,GAAA2B,EAAAiH,MAAA,qBACA/mB,KAAAqjF,wBACArjF,KAAAqjF,yBAAA,EAIArjF,KAAAo5B,eAAAp5B,KAAA+mB,MAAAkO,iBAEAnV,EAAA3B,GAAA2B,EAAAiH,MAAA,mBACA/mB,KAAA6xC,2BACA7xC,KAAA6xC,0BAAAkyC,iBAIAjkE,EAAA3B,GAAA2B,EAAAiH,MAAA,OAAAjH,EAAA8Z,MACA9Z,EAyXA,OAjcAsrH,GAAAroD,EAAAC,GA2EAioD,GAAAloD,IACAphF,IAAA,cACAN,MAAA,WACA,IAAA20B,EAAAh2B,KAGAA,KAAAijF,SAAA78D,gBAAApmB,KAAAijF,SAAA78D,kBAAA,EAEA,kBAAApmB,KAAAijF,SAAA1vD,oBACAvzB,KAAAijF,SAAA1vD,kBAAA,KAKA,kBAAAvzB,KAAAijF,SAAA7vD,YACApzB,KAAAijF,SAAA7vD,UAAA4uD,IAKAhiF,KAAAijF,SAAAzvD,yBAAAxzB,KAAAijF,SAAAzvD,0BAAAxzB,KAAAijF,SAAA7vD,YAAA4uD,IAGA,+BAAAx1D,QAAA,SAAAw3D,GACA,qBAAAhuD,EAAAotD,QAAAY,KACAhuD,EAAAitD,SAAAe,GAAAhuD,EAAAotD,QAAAY,MAIAhkF,KAAAozB,UAAApzB,KAAAijF,SAAA7vD,aASAzxB,IAAA,MACAN,MAAA,SAAA4iF,EAAA17E,GACA,IAAAgwB,EAAAv4B,KAGAikF,IAGAjkF,KAAAsjF,cAEAtjF,KAAAijF,SAAA/vD,IAAAlzB,KAAAojF,QAAA/8D,IACArmB,KAAAijF,SAAA9vD,KAAAnzB,KAAA+mB,MACA/mB,KAAAijF,SAAA5vD,UAAAygH,GACA9zI,KAAAijF,SAAA4uD,WAAAkC,GAAAxrI,GAEAvI,KAAA6xC,0BAAA,IAAA7e,GAAAhzB,KAAAijF,UACAjjF,KAAAkkF,iBAAA,IAAAlhD,GAAA8nG,GAAAp1G,aAAA11B,KAAAijF,UACA/tD,SAAA,WACA,OAAAqD,EAAArD,eAIAl1B,KAAA6xC,0BAAA1zB,GAAA,mBACA,IAAA2I,EAAAgkH,GAAA3mD,QAAA5rD,EAAAxR,MAAAk8D,SAAAC,UAEAp8D,EAAA6Q,MAAAY,EAAAsZ,0BAAAla,SAKA33B,KAAA6xC,0BAAA3a,eAAAl3B,KAAAk3B,eAAAl3B,KAAAk3B,eAAAt1B,KAAA5B,MAAA8zI,GAAAhyD,2BAAAlgF,KAAA5B,MAEAA,KAAA6xC,0BAAA5a,sBAAA68G,GAAA/xD,0BAAAngF,KAAA5B,MAGAA,KAAA4iB,UAAA5iB,KAAA6xC,0BAAArc,sBACAx1B,KAAAm0B,YAAAn0B,KAAA6xC,0BAAA1d,YAKArzB,OAAAsY,iBAAApZ,MACAk3B,gBACAj2B,IAAA,WACA,OAAAjB,KAAA6xC,0BAAA3a,gBAEAxyB,IAAA,SAAAwyB,GACAl3B,KAAA6xC,0BAAA3a,iBAAAt1B,KAAA5B,QAGAg0C,YACA/yC,IAAA,WACA,OAAAjB,KAAA6xC,0BAAA3gB,mBAAA8iB,WAAAjY,MAEAr3B,IAAA,SAAAsvC,GACAh0C,KAAA6xC,0BAAA3gB,mBAAA8iB,WAAAjY,KAAAiY,EAGAh0C,KAAA6xC,0BAAA3gB,mBAAA8iB,WAAAvpC,MAAA,IAGA2oB,WACAnyB,IAAA,WACA,OAAAjB,KAAA6xC,0BAAA3gB,mBAAAkC,WAEA1uB,IAAA,SAAA0uB,GACApzB,KAAA6xC,0BAAA3gB,mBAAAkC,YAIApzB,KAAA6xC,0BAAA3gB,mBAAA8iB,YACAjY,KAAA,EACAtxB,MAAA,KAaA4/B,iBACAppC,IAAA,WACA,IAAAmjF,EAAA,GAAApkF,KAAAozB,WAAA,GACAixD,OAAA,EAGAA,EADArkF,KAAAg0C,WAAA,EACA,EAAAh0C,KAAAg0C,WAEA,EAGA,IAAAswC,EAAAx3E,KAAAuzB,MAAA,GAAA+jD,EAAAC,IAEA,OAAAC,GAEA5/E,IAAA,WACAomI,GAAAt4G,IAAAmF,MAAA,mDAKA72B,OAAAsY,iBAAApZ,KAAAmgC,OACA/M,WACAnyB,IAAA,WACA,OAAAs3B,EAAAnF,WAAA,GAEApyB,YAAA,GAEAs0C,eACAr0C,IAAA,WACA,OAAAs3B,EAAAsZ,0BAAA0yC,kBAAA,GAEAvjF,YAAA,GAEAu0C,sBACAt0C,IAAA,WACA,OAAAs3B,EAAAsZ,0BAAA2yC,yBAAA,GAEAxjF,YAAA,GAEAw0C,uBACAv0C,IAAA,WACA,OAAAs3B,EAAAsZ,0BAAA4yC,0BAAA,GAEAzjF,YAAA,GAEAy0C,sBACAx0C,IAAA,WACA,OAAAs3B,EAAAsZ,0BAAA6yC,yBAAA,GAEA1jF,YAAA,GAEA00C,uBACAz0C,IAAA,WACA,OAAAs3B,EAAAsZ,0BAAA8yC,0BAAA,GAEA3jF,YAAA,GAEAq0C,uBACAp0C,IAAA,WACA,OAAAs3B,EAAAsZ,0BAAA+yC,0BAAA,GAEA5jF,YAAA,GAEAg4B,oBACA/3B,IAAA,WACA,OAAAs3B,EAAAsZ,0BAAAgzC,uBAAA,GAEA7jF,YAAA,GAEA03B,UACAz3B,IAAA,WACA,OAAA8qI,GAAAxzG,EAAAxR,MAAA2R,aAEA13B,YAAA,GAEAi0B,aACAh0B,IAAA,WACA,OAAAs3B,EAAAxR,MAAAkO,eAEAj0B,YAAA,GAEAigI,eACAhgI,IAAA,WACA,OAAAs3B,EAAAxR,MAAAwpB,gBAEAvvC,YAAA,GAEAi0I,aACAh0I,IAAA,WACA,OAAAs3B,EAAAxR,MAAA80C,OAEA76D,YAAA,GAEA6gB,UACA5gB,IAAA,WACA,OAAAs3B,EAAAxR,MAAAlF,YAEA7gB,YAAA,GAEAixB,QACAhxB,IAAA,WACA,OAAAs3B,EAAA3V,UAAAqP,QAEAjxB,YAAA,GAEAk0I,kBACAj0I,IAAA,WACA,OAAAs3B,EAAAxR,MAAAigF,qBAEAhmG,YAAA,GAEAk0B,UACAj0B,IAAA,WACA,OAAA8qI,GAAAxzG,EAAAxR,MAAAmO,aAEAl0B,YAAA,GAEA4jD,WACA3jD,IAAA,WACA,OAAA4pB,KAAA4P,OAEAz5B,YAAA,GAEAq1H,sBACAp1H,IAAA,WACA,OAAAs3B,EAAAxR,MAAAgxF,2BAEA/2G,YAAA,KAIAhB,KAAA+mB,MAAA2Q,IAAA,UAAA13B,KAAA6xC,0BAAA/a,eAAAl1B,KAAA5B,KAAA6xC,4BAEA7xC,KAAA6xC,0BAAA1zB,GAAA,kCAEA4zB,GAAAxZ,GACAi8G,GAAAj8G,KAKAv4B,KAAAme,GAAAne,KAAA6xC,0BAAA,sBACA7xC,KAAA+mB,MAAApQ,QAAA,cAKA3W,KAAAme,GAAAne,KAAA6xC,0BAAA,uBACA7xC,KAAAqjF,yBAAA,IAGArjF,KAAA+mB,MAAAvB,MAAA,WACA,OAAA+S,EAAAusD,wBAKA9kF,KAAA+mB,MAAAkhB,MAIAjoC,KAAA+mB,MAAAV,IAAAykH,GAAA1uD,IAAAC,gBAAAr8E,KAAA6xC,0BAAA1d,kBAWAxyB,IAAA,sBACAN,MAAA,WACA,IAAAg4B,EAAAr5B,KAEA8mB,EAAAgkH,GAAA3mD,QAAAnkF,KAAA+mB,MAAAk8D,SAAAC,UAEAp8D,KAAAo7D,gBACAliF,KAAA+kF,eAAAj+D,EAAAo7D,gBAEAliF,KAAA6xC,0BAAA1zB,GAAA,kCACAkkE,GAAAhpD,EAAA0rD,eAAA1rD,KAGAr5B,KAAA4iB,UAAAzE,GAAA,yBACA8jE,GAAA5oD,EAAA0rD,eAAA1rD,EAAAzW,iBAUAjhB,IAAA,OACAN,MAAA,WACArB,KAAA6xC,0BAAAjY,UAQAj4B,IAAA,iBACAN,MAAA,SAAA4zB,GACAj1B,KAAA6xC,0BAAAzY,eAAAnE,MAQAtzB,IAAA,WACAN,MAAA,WACA,OAAArB,KAAA6xC,0BAAAhwB,cAQAlgB,IAAA,WACAN,MAAA,WACA,OAAArB,KAAA6xC,0BAAA3c,cAQAvzB,IAAA,UACAN,MAAA,WACArB,KAAAkkF,kBACAlkF,KAAAkkF,iBAAAzlE,UAEAze,KAAA6xC,2BACA7xC,KAAA6xC,0BAAApzB,UAEAze,KAAA+kF,gBACA/kF,KAAA+kF,eAAAtmE,UAEAysH,GAAAnoD,EAAA/gF,UAAA4d,WAAA9e,OAAAif,eAAAgjE,EAAA/gF,WAAA,UAAAhC,MAAAO,KAAAP,UAGA+iF,EAlcA,CAmcC+xD,IAUD9vD,IACArkF,KAAA,yBACA8iI,QAAAoQ,GACA5uD,gBAAA,SAAAC,GACA,IAAA5/D,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAEAouC,EAAAo6F,GAAAp1G,aAAAo1G,GAAAxlH,WAEA,OAAA0/D,GAAApC,YAAAsC,EAAA38E,KAAAmoC,IAEAy0C,aAAA,SAAApmE,EAAAoU,GACA,IAAA7N,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAEAouC,EAAAo6F,GAAAp1G,aAAAo1G,GAAAxlH,WAMA,OAJA6N,EAAAzM,IAAA,IAAAq8D,GAAAhkE,EAAAoU,EAAAud,GACAvd,EAAAzM,IAAAM,IAAAo4B,KAEAjsB,EAAAzM,IAAAL,IAAAtH,EAAAsH,IAAAtH,EAAAxW,MACA4qB,EAAAzM,KAEAk8D,YAAA,SAAAr6E,GACA,IAAA+c,EAAAhjB,UAAAC,OAAA,QAAA0K,IAAA3K,UAAA,GAAAA,UAAA,MAEA6yI,EAAArK,GAAAp1G,aAAAo1G,GAAAxlH,WACAi+D,EAAA4xD,EAAAzuH,IAAA68D,eAEA6xD,EAAArB,GAAAxrI,GACA8sI,EAAAD,KAAAtB,GAAAe,qBAAAO,IAAA7xD,GAEA,OAAA8xD,EAAA,aAIA,qBAAAvK,GAAA12G,aAAA,qBAAA02G,GAAA1uD,MACA0uD,GAAA12G,eACA02G,GAAA1uD,IAAA8yD,IAIA96G,GAAA8nD,8BACA4uD,GAAA3uD,QAAA,SAAAmJ,sBAAAN,GAAA,GAGA8lD,GAAA/nD,cACA+nD,GAAA9lD,oBACA8lD,GAAAr6G,IAAAqjH,GACAhJ,GAAAvlD,KACAulD,GAAAtlD,kBAAA,MAAAsuD,IAEAhJ,GAAAxlH,QAAAoB,IAAAokH,GAAAxlH,QAAAoB,QAEAokH,GAAAplD,eACAolD,GAAAplD,eAAA,sBAAAz0C,IAEA65F,GAAAnlD,OAAA,sBAAA10C,IAGejoB,EAAA,mDCtjwCf,IAAAo9D,GACA7yE,IAAA,EACA8yE,IAAA,GAGA,SAAAC,EAAAjlF,GACA,qBAAAA,EACA,SAEA,IAAA+Q,EAAAg0E,EAAA/kF,EAAAwS,eACA,QAAAzB,GAAA/Q,EAAAwS,cAGA,SAAA0yE,EAAAllF,GACA,wBAAAA,MAAA,GAAAA,GAAA,IAIA,SAAAyQ,IACA,IAAA00E,EAAA,IACAC,EAAA,EACAC,EAAA,EACAC,EAAA,IACAC,EAAA,EACAC,EAAA,IACAC,EAAA,GAEAhmF,OAAAsY,iBAAApZ,MACAiM,OACAjL,YAAA,EACAC,IAAA,WACA,OAAAulF,GAEA9hF,IAAA,SAAArD,GACA,IAAAklF,EAAAllF,GACA,UAAAmB,MAAA,oCAEAgkF,EAAAnlF,IAGA0Q,OACA/Q,YAAA,EACAC,IAAA,WACA,OAAAwlF,GAEA/hF,IAAA,SAAArD,GACA,qBAAAA,EACA,UAAA2T,UAAA,kCAEAyxE,EAAAplF,IAGA4Q,eACAjR,YAAA,EACAC,IAAA,WACA,OAAA0lF,GAEAjiF,IAAA,SAAArD,GACA,IAAAklF,EAAAllF,GACA,UAAAmB,MAAA,4CAEAmkF,EAAAtlF,IAGA2Q,eACAhR,YAAA,EACAC,IAAA,WACA,OAAAylF,GAEAhiF,IAAA,SAAArD,GACA,IAAAklF,EAAAllF,GACA,UAAAmB,MAAA,4CAEAkkF,EAAArlF,IAGA8Q,iBACAnR,YAAA,EACAC,IAAA,WACA,OAAA4lF,GAEAniF,IAAA,SAAArD,GACA,IAAAklF,EAAAllF,GACA,UAAAmB,MAAA,8CAEAqkF,EAAAxlF,IAGA6Q,iBACAlR,YAAA,EACAC,IAAA,WACA,OAAA2lF,GAEAliF,IAAA,SAAArD,GACA,IAAAklF,EAAAllF,GACA,UAAAmB,MAAA,8CAEAokF,EAAAvlF,IAGA+Q,QACApR,YAAA,EACAC,IAAA,WACA,OAAA6lF,GAEApiF,IAAA,SAAArD,GACA,IAAA4T,EAAAqxE,EAAAjlF,GAEA,QAAA4T,EACA,UAAAC,YAAA,+CAEA4xE,EAAA7xE,MAMArV,EAAAD,QAAAmS,qCCnIAhR,OAAAC,eAAApB,EAAA,cACA0B,OAAA,IAGA,IAAA8X,EAAA,WAAgC,SAAAC,EAAAC,EAAAC,GAA2C,QAAAlZ,EAAA,EAAgBA,EAAAkZ,EAAA/W,OAAkBnC,IAAA,CAAO,IAAAmZ,EAAAD,EAAAlZ,GAA2BmZ,EAAAvY,WAAAuY,EAAAvY,aAAA,EAAwDuY,EAAAC,cAAA,EAAgC,UAAAD,MAAAE,UAAA,GAAuD3Y,OAAAC,eAAAsY,EAAAE,EAAA5X,IAAA4X,IAA+D,gBAAAG,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA1X,UAAA2X,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAxhB,GAEA,SAAAK,EAAAC,EAAAN,GAAiD,KAAAM,aAAAN,GAA0C,UAAA1E,UAAA,qCAU3F,IAAAgB,EAAA,WACA,SAAAA,IACA+D,EAAA/Z,KAAAgW,GAEAhW,KAAAke,aA0GA,OA9FA/E,EAAAnD,IACArU,IAAA,KACAN,MAAA,SAAAkH,EAAA6V,GACApe,KAAAke,UAAA3V,KACAvI,KAAAke,UAAA3V,OAEAvI,KAAAke,UAAA3V,GAAAc,KAAA+U,MAaAzc,IAAA,MACAN,MAAA,SAAAkH,EAAA6V,GACA,IAAApe,KAAAke,UAAA3V,GACA,SAGA,IAAAuP,EAAA9X,KAAAke,UAAA3V,GAAAuK,QAAAsL,GAGA,OADApe,KAAAke,UAAA3V,GAAA+V,OAAAxG,EAAA,GACAA,GAAA,KAWAnW,IAAA,UACAN,MAAA,SAAAkH,GACA,IAAAgW,EAAAve,KAAAke,UAAA3V,GACAnI,OAAA,EACAmC,OAAA,EACAic,OAAA,EAEA,GAAAD,EAOA,OAAAjc,UAAAC,OAEA,IADAA,EAAAgc,EAAAhc,OACAnC,EAAA,EAAmBA,EAAAmC,IAAYnC,EAC/Bme,EAAAne,GAAAG,KAAAP,KAAAsC,UAAA,SAKA,IAFAkc,EAAAzD,MAAA/Y,UAAAqV,MAAA9W,KAAA+B,UAAA,GACAC,EAAAgc,EAAAhc,OACAnC,EAAA,EAAmBA,EAAAmC,IAAYnC,EAC/Bme,EAAAne,GAAA+X,MAAAnY,KAAAwe,MAUA7c,IAAA,UACAN,MAAA,WACArB,KAAAke,gBAYAvc,IAAA,OACAN,MAAA,SAAAsd,GACA3e,KAAAme,GAAA,gBAAAtO,GACA8O,EAAAtV,KAAAwG,SAKAmG,EA9GA,GAiHArW,EAAA,WAAAqW","file":"ur-live.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ur-live\"] = factory();\n\telse\n\t\troot[\"ur-live\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"576d\");\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200e\",\n  \"&rlm;\": \"\\u200f\",\n  \"&nbsp;\": \"\\u00a0\"\n};\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  // Unescape a string 's'.\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n  function unescape(s) {\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n      s = s.replace(m[0], unescape1);\n    }\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n  var color = \"rgba(255, 255, 255, 1)\";\n  var backgroundColor = \"rgba(0, 0, 0, 0.8)\";\n\n  if (isIE8) {\n    color = \"rgb(255, 255, 255)\";\n    backgroundColor = \"rgb(0, 0, 0)\";\n  }\n\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: color,\n    backgroundColor: backgroundColor,\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\"\n  };\n\n  if (!isIE8) {\n    styles.writingMode = cue.vertical === \"\" ? \"horizontal-tb\"\n                                             : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                                     : \"vertical-rl\";\n    styles.unicodeBidi = \"plaintext\";\n  }\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  if (!isIE8) {\n    styles.direction = determineBidi(this.cueDiv);\n    styles.writingMode = cue.vertical === \"\" ? \"horizontal-tb\"\n                                             : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                                     : \"vertical-rl\".\n    stylesunicodeBidi =  \"plaintext\";\n  }\n\n  this.applyStyles(styles);\n\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"middle\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n\n  if (isIE8 && !this.lineHeight) {\n    this.lineHeight = 13;\n  }\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"middle\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line;\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n","function clean (s) {\n  return s.replace(/\\n\\r?\\s*/g, '')\n}\n\n\nmodule.exports = function tsml (sa) {\n  var s = ''\n    , i = 0\n\n  for (; i < arguments.length; i++)\n    s += clean(sa[i]) + (arguments[i + 1] || '')\n\n  return s\n}","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": true,\n  \"lr\": true,\n  \"rl\": true\n};\nvar alignSetting = {\n  \"start\": true,\n  \"middle\": true,\n  \"end\": true,\n  \"left\": true,\n  \"right\": true\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction extend(obj) {\n  var i = 1;\n  for (; i < arguments.length; i++) {\n    var cobj = arguments[i];\n    for (var p in cobj) {\n      obj[p] = cobj[p];\n    }\n  }\n\n  return obj;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  var cue = this;\n  var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n  var baseObj = {};\n\n  if (isIE8) {\n    cue = document.createElement('custom');\n  } else {\n    baseObj.enumerable = true;\n  }\n\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  cue.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n\n  Object.defineProperty(cue,\n    \"id\", extend({}, baseObj, {\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"pauseOnExit\", extend({}, baseObj, {\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"startTime\", extend({}, baseObj, {\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"endTime\", extend({}, baseObj, {\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"text\", extend({}, baseObj, {\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"region\", extend({}, baseObj, {\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"vertical\", extend({}, baseObj, {\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"snapToLines\", extend({}, baseObj, {\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"line\", extend({}, baseObj, {\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"lineAlign\", extend({}, baseObj, {\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"position\", extend({}, baseObj, {\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"positionAlign\", extend({}, baseObj, {\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"size\", extend({}, baseObj, {\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"align\", extend({}, baseObj, {\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  cue.displayState = undefined;\n\n  if (isIE8) {\n    return cue;\n  }\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n","'use strict';\n\nvar fnToStr = Function.prototype.toString;\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isCallable(value) {\n\tif (!value) { return false; }\n\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\tif (typeof value === 'function' && !value.prototype) { return true; }\n\tif (hasToStringTag) { return tryFunctionObject(value); }\n\tif (isES6ClassFn(value)) { return false; }\n\tvar strClass = toStr.call(value);\n\treturn strClass === fnClass || strClass === genClass;\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n\n'use strict';\n\nvar Stream = require('../utils/stream');\n\nvar MAX_TS = 8589934592;\n\nvar RO_THRESH = 4294967296;\n\nvar handleRollover = function(value, reference) {\n  var direction = 1;\n\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  }\n\n  // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += (direction * MAX_TS);\n  }\n\n  return value;\n};\n\nvar TimestampRolloverStream = function(type) {\n  var lastDTS, referenceDTS;\n\n  TimestampRolloverStream.prototype.init.call(this);\n\n  this.type_ = type;\n\n  this.push = function(data) {\n    if (data.type !== this.type_) {\n      return;\n    }\n\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n\n    lastDTS = data.dts;\n\n    this.trigger('data', data);\n  };\n\n  this.flush = function() {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n\n  this.discontinuity = function() {\n    referenceDTS = void 0;\n    lastDTS = void 0;\n  };\n\n};\n\nTimestampRolloverStream.prototype = new Stream();\n\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar findBox, parseType, timescale, startTime;\n\n// Find the data for a box specified by its path\nfindBox = function(data, path) {\n  var results = [],\n      i, size, type, end, subresults;\n\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return null;\n  }\n\n  for (i = 0; i < data.byteLength;) {\n    size  = data[i]     << 24;\n    size |= data[i + 1] << 16;\n    size |= data[i + 2] << 8;\n    size |= data[i + 3];\n\n    type = parseType(data.subarray(i + 4, i + 8));\n\n    end = size > 1 ? i + size : data.byteLength;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, end));\n      } else {\n        // recursively search for the next box along the path\n        subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n        if (subresults.length) {\n          results = results.concat(subresults);\n        }\n      }\n    }\n    i = end;\n  }\n\n  // we've finished searching all of data\n  return results;\n};\n\n/**\n * Returns the string representation of an ASCII encoded four byte buffer.\n * @param buffer {Uint8Array} a four-byte buffer to translate\n * @return {string} the corresponding string\n */\nparseType = function(buffer) {\n  var result = '';\n  result += String.fromCharCode(buffer[0]);\n  result += String.fromCharCode(buffer[1]);\n  result += String.fromCharCode(buffer[2]);\n  result += String.fromCharCode(buffer[3]);\n  return result;\n};\n\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\ntimescale = function(init) {\n  var\n    result = {},\n    traks = findBox(init, ['moov', 'trak']);\n\n  // mdhd timescale\n  return traks.reduce(function(result, trak) {\n    var tkhd, version, index, id, mdhd;\n\n    tkhd = findBox(trak, ['tkhd'])[0];\n    if (!tkhd) {\n      return null;\n    }\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = tkhd[index]     << 24 |\n         tkhd[index + 1] << 16 |\n         tkhd[index + 2] <<  8 |\n         tkhd[index + 3];\n\n    mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n    if (!mdhd) {\n      return null;\n    }\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = mdhd[index]     << 24 |\n                 mdhd[index + 1] << 16 |\n                 mdhd[index + 2] <<  8 |\n                 mdhd[index + 3];\n    return result;\n  }, result);\n};\n\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\nstartTime = function(timescale, fragment) {\n  var trafs, baseTimes, result;\n\n  // we need info from two childrend of each track fragment box\n  trafs = findBox(fragment, ['moof', 'traf']);\n\n  // determine the start times for each track\n  baseTimes = [].concat.apply([], trafs.map(function(traf) {\n    return findBox(traf, ['tfhd']).map(function(tfhd) {\n      var id, scale, baseTime;\n\n      // get the track id from the tfhd\n      id = tfhd[4] << 24 |\n           tfhd[5] << 16 |\n           tfhd[6] << 8 |\n           tfhd[7];\n      // assume a 90kHz clock if no timescale was specified\n      scale = timescale[id] || 90e3;\n\n      // get the base media decode time from the tfdt\n      baseTime = findBox(traf, ['tfdt']).map(function(tfdt) {\n        var version, result;\n\n        version = tfdt[0];\n        result = tfdt[4] << 24 |\n                 tfdt[5] << 16 |\n                 tfdt[6] <<  8 |\n                 tfdt[7];\n        if (version ===  1) {\n          result *= Math.pow(2, 32);\n          result += tfdt[8]  << 24 |\n                    tfdt[9]  << 16 |\n                    tfdt[10] <<  8 |\n                    tfdt[11];\n        }\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity;\n\n      // convert base time to seconds\n      return baseTime / scale;\n    });\n  }));\n\n  // return the minimum\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n\nmodule.exports = {\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime\n};\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n","/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _aes = require('./aes');\n\nvar _aes2 = _interopRequireDefault(_aes);\n\nvar _asyncStream = require('./async-stream');\n\nvar _asyncStream2 = _interopRequireDefault(_asyncStream);\n\nvar _pkcs7 = require('pkcs7');\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n  var decipher = new _aes2['default'](Array.prototype.slice.call(key));\n\n  // byte and word-level access for the decrypted output\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer);\n\n  // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n  var init0 = undefined;\n  var init1 = undefined;\n  var init2 = undefined;\n  var init3 = undefined;\n  var encrypted0 = undefined;\n  var encrypted1 = undefined;\n  var encrypted2 = undefined;\n  var encrypted3 = undefined;\n\n  // iteration variable\n  var wordIx = undefined;\n\n  // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3];\n\n  // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n    // decrypt the block\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n    // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n    // setup the IV for the next round\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n\nexports.decrypt = decrypt;\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\nvar Decrypter = (function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    _classCallCheck(this, Decrypter);\n\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n\n    this.asyncStream_ = new _asyncStream2['default']();\n\n    // split up the encryption job and do the individual chunks asynchronously\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    }\n    // invoke the done() callback when everything is finished\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, (0, _pkcs7.unpad)(decrypted));\n    });\n  }\n\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n  _createClass(Decrypter, [{\n    key: 'decryptChunk_',\n\n    /**\n     * @private\n     */\n    value: function decryptChunk_(encrypted, key, initVector, decrypted) {\n      return function () {\n        var bytes = decrypt(encrypted, key, initVector);\n\n        decrypted.set(bytes, encrypted.byteOffset);\n      };\n    }\n  }], [{\n    key: 'STEP',\n    get: function get() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n\n  return Decrypter;\n})();\n\nexports.Decrypter = Decrypter;\nexports['default'] = {\n  Decrypter: Decrypter,\n  decrypt: decrypt\n};","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function(packet) {\n  var offset = 0;\n  // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n  if (((packet[3] & 0x30) >>> 4) > 0x01) {\n    offset += packet[4] + 1;\n  }\n  return offset;\n};\n\nvar parseType = function(packet, pmtPid) {\n  var pid = parsePid(packet);\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n  return null;\n};\n\nvar parsePat = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  }\n\n  // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength;\n  // the mapping table ends at the end of the current section\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4;\n\n  // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11];\n\n  // advance the offset to the first entry in the mapping table\n  var offset = 12 + programInfoLength;\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset;\n    // add an entry that maps the elementary_pid to the stream_type\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i];\n\n    // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n  return programMapTable;\n};\n\nvar parsePesType = function(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (offset >= packet.byteLength) {\n    // From the H 222.0 MPEG-TS spec\n    // \"For transport stream packets carrying PES packets, stuffing is needed when there\n    //  is insufficient PES packet data to completely fill the transport stream packet\n    //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n    //  the sum of the lengths of the data elements in it, so that the payload bytes\n    //  remaining after the adaptation field exactly accommodates the available PES packet\n    //  data.\"\n    //\n    // If the offset is >= the length of the packet, then the packet contains no data\n    // and instead is just adaption field stuffing bytes\n    return null;\n  }\n\n  var pes = null;\n  var ptsDtsFlags;\n\n  // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n  ptsDtsFlags = packet[offset + 7];\n\n  // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n  if (ptsDtsFlags & 0xC0) {\n    pes = {};\n    // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 |\n      (packet[offset + 10] & 0xFF) << 20 |\n      (packet[offset + 11] & 0xFE) << 12 |\n      (packet[offset + 12] & 0xFF) <<  5 |\n      (packet[offset + 13] & 0xFE) >>>  3;\n    pes.pts *= 4; // Left shift by 2\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n    pes.dts = pes.pts;\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 |\n        (packet[offset + 15] & 0xFF) << 20 |\n        (packet[offset + 16] & 0xFE) << 12 |\n        (packet[offset + 17] & 0xFF) << 5 |\n        (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n  return pes;\n};\n\nvar parseNalUnitType = function(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n    case 0x06:\n      return 'sei_rbsp';\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType;\n\n  // advance the sync point to a NAL start, if necessary\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n    case 0:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0) {\n        frameI += 2;\n        break;\n      } else if (frameBuffer[frameI - 2] !== 0) {\n        frameI++;\n        break;\n      }\n\n      if (frameSyncPoint + 3 !== frameI - 2) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n\n      // drop trailing zeroes\n      do {\n        frameI++;\n      } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    case 1:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0 ||\n          frameBuffer[frameI - 2] !== 0) {\n        frameI += 3;\n        break;\n      }\n\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    default:\n      // the current byte isn't a one or zero, so it cannot be part\n      // of a sync sequence\n      frameI += 3;\n      break;\n    }\n  }\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0;\n  // parse the final nal\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2014 Brightcove\n * All rights reserved.\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function() {\n  this.init = function() {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n    this.on = function(type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n    this.off = function(type, listener) {\n      var index;\n      if (!listeners[type]) {\n        return false;\n      }\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n    this.trigger = function(type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n    this.dispose = function() {\n      listeners = {};\n    };\n  };\n};\n\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\nStream.prototype.pipe = function(destination) {\n  this.on('data', function(data) {\n    destination.push(data);\n  });\n\n  this.on('done', function(flushSource) {\n    destination.flush(flushSource);\n  });\n\n  return destination;\n};\n\n// Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\nStream.prototype.push = function(data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function(flushSource) {\n  this.trigger('done', flushSource);\n};\n\nmodule.exports = Stream;\n","/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar Stream = (function () {\n  function Stream() {\n    _classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n  _createClass(Stream, [{\n    key: 'on',\n    value: function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n      this.listeners[type].push(listener);\n    }\n\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {String} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {Boolean} if we could turn it off or not\n     */\n  }, {\n    key: 'off',\n    value: function off(type, listener) {\n      var index = undefined;\n\n      if (!this.listeners[type]) {\n        return false;\n      }\n      index = this.listeners[type].indexOf(listener);\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {String} type the event name\n     */\n  }, {\n    key: 'trigger',\n    value: function trigger(type) {\n      var callbacks = undefined;\n      var i = undefined;\n      var length = undefined;\n      var args = undefined;\n\n      callbacks = this.listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = Array.prototype.slice.call(arguments, 1);\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    }\n\n    /**\n     * Destroys the stream and cleans up.\n     */\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.listeners = {};\n    }\n\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n  }, {\n    key: 'pipe',\n    value: function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    }\n  }]);\n\n  return Stream;\n})();\n\nexports['default'] = Stream;\nmodule.exports = exports['default'];","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _stream = require('./stream');\n\nvar _stream2 = _interopRequireDefault(_stream);\n\nvar _lineStream = require('./line-stream');\n\nvar _lineStream2 = _interopRequireDefault(_lineStream);\n\nvar _parseStream = require('./parse-stream');\n\nvar _parseStream2 = _interopRequireDefault(_parseStream);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file m3u8/parser.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\nvar Parser = function (_Stream) {\n  _inherits(Parser, _Stream);\n\n  function Parser() {\n    _classCallCheck(this, Parser);\n\n    var _this = _possibleConstructorReturn(this, (Parser.__proto__ || Object.getPrototypeOf(Parser)).call(this));\n\n    _this.lineStream = new _lineStream2['default']();\n    _this.parseStream = new _parseStream2['default']();\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n    var self = _this;\n    /* eslint-enable consistent-this */\n    var uris = [];\n    var currentUri = {};\n    // if specified, the active EXT-X-MAP definition\n    var currentMap = void 0;\n    // if specified, the active decryption key\n    var _key = void 0;\n    var noop = function noop() {};\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    };\n    // group segments into numbered timelines delineated by discontinuities\n    var currentTimeline = 0;\n\n    // the manifest is empty until the parse stream begins delivering data\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    };\n\n    // update the manifest with the m3u8 entry from the parse stream\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup = void 0;\n      var rendition = void 0;\n\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              }\n              // clear the active encryption key\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              }\n\n              // setup an encryption key for upcoming segments\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              }\n\n              // find the media group, creating defaults as necessary\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']];\n\n              // collect the rendition metadata\n              rendition = {\n                'default': /yes/i.test(entry.attributes.DEFAULT)\n              };\n              if (rendition['default']) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              }\n\n              // insert the new rendition\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              this.manifest.dateTimeString = entry.dateTimeString;\n              this.manifest.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.totalDuration = entry.duration;\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri);\n\n          // if no explicit duration was declared, use the target duration\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          }\n          // annotate with encryption information, if necessary\n          if (_key) {\n            currentUri.key = _key;\n          }\n          currentUri.timeline = currentTimeline;\n          // annotate with initialization segment information, if necessary\n          if (currentMap) {\n            currentUri.map = currentMap;\n          }\n\n          // prepare for the next URI\n          currentUri = {};\n        },\n        comment: function comment() {\n          // comments are not important for playback\n        }\n      })[entry.type].call(self);\n    });\n\n    return _this;\n  }\n\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {String} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  _createClass(Parser, [{\n    key: 'push',\n    value: function push(chunk) {\n      this.lineStream.push(chunk);\n    }\n\n    /**\n     * Flush any remaining input. This can be handy if the last line of an M3U8\n     * manifest did not contain a trailing newline but the file has been\n     * completely received.\n     */\n\n  }, {\n    key: 'end',\n    value: function end() {\n      // flush any buffered input\n      this.lineStream.push('\\n');\n    }\n  }]);\n\n  return Parser;\n}(_stream2['default']);\n\nexports['default'] = Parser;","\nexports = module.exports = trim;\n\nfunction trim(str){\n  return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nexports.left = function(str){\n  return str.replace(/^\\s*/, '');\n};\n\nexports.right = function(str){\n  return str.replace(/\\s*$/, '');\n};\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"player\"},[_c('video-player',{staticClass:\"vjs-custom-skin\",attrs:{\"options\":_vm.playerOptions},on:{\"ready\":_vm.playerReadied}})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <div class=\"player\">\n      <video-player class=\"vjs-custom-skin\"\n                    :options=\"playerOptions\"\n                    @ready=\"playerReadied\">\n      </video-player>\n    </div>\n  </div>\n</template>\n\n<script>\nimport videojs         from 'video.js'\nimport 'video.js/dist/video-js.css'\nimport { videoPlayer } from 'vue-video-player'\n\nwindow.videojs = videojs\nrequire('videojs-contrib-hls/dist/videojs-contrib-hls.js')\n\nexport default {\n  name: 'Live',\n  props: {\n    rtsp: String\n  },\n  components: {\n    videoPlayer\n  },\n\n  mounted () {\n  },\n\n  data () {\n    return {\n      playerOptions: {\n        // videojs and plugin options\n        height: '360',\n        sources: [{\n          withCredentials: false,\n          type: 'application/x-mpegURL',\n          src: 'https://logos-channel.scaleengine.net/logos-channel/live/biblescreen-ad-free/playlist.m3u8'\n        }],\n        controlBar: {\n          timeDivider: false,\n          durationDisplay: false\n        },\n        flash: {hls: {withCredentials: false}},\n        html5: {hls: {withCredentials: false}},\n        poster: 'http://ureflect.io/wp-content/uploads/2017/10/ureflect_logo_black.png'\n      }\n    }\n  },\n  methods: {\n    playerReadied (player) {\n      player.tech_.hls.xhr.beforeRequest = function (options) {\n        // console.log(options)\n        return options\n      }\n    }\n  }\n}\n</script>\n\n<style>\n  .video-js {\n    width: 100%;\n  }\n</style>","import mod from \"-!../../../../.config/yarn/global/node_modules/thread-loader/dist/cjs.js!../../../../.config/yarn/global/node_modules/babel-loader/lib/index.js??ref--12-1!../../../../.config/yarn/global/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../.config/yarn/global/node_modules/vue-loader/lib/index.js??vue-loader-options!./Live.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../.config/yarn/global/node_modules/thread-loader/dist/cjs.js!../../../../.config/yarn/global/node_modules/babel-loader/lib/index.js??ref--12-1!../../../../.config/yarn/global/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../.config/yarn/global/node_modules/vue-loader/lib/index.js??vue-loader-options!./Live.vue?vue&type=script&lang=js&\"","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","import { render, staticRenderFns } from \"./Live.vue?vue&type=template&id=2f67d422&\"\nimport script from \"./Live.vue?vue&type=script&lang=js&\"\nexport * from \"./Live.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Live.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../.config/yarn/global/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"Live.vue\"\nexport default component.exports","import './setPublicPath'\nimport mod from '~entry'\nexport default mod\nexport * from '~entry'\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _stream = require('./stream');\n\nvar _stream2 = _interopRequireDefault(_stream);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file m3u8/parse-stream.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n\n/**\n * Parse attributes from a line given the seperator\n *\n * @param {String} attributes the attibute line to parse\n */\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr = void 0;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    }\n\n    // split the key and value\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1);\n    // trim whitespace and remove optional quotes around the value\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n  return result;\n};\n\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\nvar ParseStream = function (_Stream) {\n  _inherits(ParseStream, _Stream);\n\n  function ParseStream() {\n    _classCallCheck(this, ParseStream);\n\n    return _possibleConstructorReturn(this, (ParseStream.__proto__ || Object.getPrototypeOf(ParseStream)).call(this));\n  }\n\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {String} line a single line of an M3U8 file to parse\n   */\n\n\n  _createClass(ParseStream, [{\n    key: 'push',\n    value: function push(line) {\n      var match = void 0;\n      var event = void 0;\n\n      // strip whitespace\n      line = line.replace(/^[\\u0000\\s]+|[\\u0000\\s]+$/g, '');\n      if (line.length === 0) {\n        // ignore empty lines\n        return;\n      }\n\n      // URIs\n      if (line[0] !== '#') {\n        this.trigger('data', {\n          type: 'uri',\n          uri: line\n        });\n        return;\n      }\n\n      // Comments\n      if (line.indexOf('#EXT') !== 0) {\n        this.trigger('data', {\n          type: 'comment',\n          text: line.slice(1)\n        });\n        return;\n      }\n\n      // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n      line = line.replace('\\r', '');\n\n      // Tags\n      match = /^#EXTM3U/.exec(line);\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n        return;\n      }\n      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n        if (match[2]) {\n          event.title = match[2];\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'totalduration'\n        };\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'byterange'\n        };\n        if (match[1]) {\n          event.length = parseInt(match[1], 10);\n        }\n        if (match[2]) {\n          event.offset = parseInt(match[2], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-MAP:?(.*)$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          var attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n          if (attributes.BYTERANGE) {\n            var _attributes$BYTERANGE = attributes.BYTERANGE.split('@'),\n                _attributes$BYTERANGE2 = _slicedToArray(_attributes$BYTERANGE, 2),\n                length = _attributes$BYTERANGE2[0],\n                offset = _attributes$BYTERANGE2[1];\n\n            event.byterange = {};\n            if (length) {\n              event.byterange.length = parseInt(length, 10);\n            }\n            if (offset) {\n              event.byterange.offset = parseInt(offset, 10);\n            }\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            var split = event.attributes.RESOLUTION.split('x');\n            var resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n            event.attributes.RESOLUTION = resolution;\n          }\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-MEDIA:?(.*)$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-ENDLIST/.exec(line);\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n        return;\n      }\n      match = /^#EXT-X-DISCONTINUITY/.exec(line);\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n        return;\n      }\n      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-KEY:?(.*)$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          // parse the IV string into a Uint32Array\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n        this.trigger('data', event);\n        return;\n      }\n\n      // unknown tag type\n      this.trigger('data', {\n        type: 'tag',\n        data: line.slice(4)\n      });\n    }\n  }]);\n\n  return ParseStream;\n}(_stream2['default']);\n\nexports['default'] = ParseStream;","/**\n * videojs-contrib-hls\n * @version 5.14.1\n * @copyright 2018 Brightcove, Inc\n * @license Apache-2.0\n */\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.videojsContribHls = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/**\n * @file ad-cue-tags.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _globalWindow = require('global/window');\n\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = undefined;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      }\n\n      // otherwise extend cue until a CUE-IN is found\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new _globalWindow2['default'].VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime;\n        // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = undefined;\n        var adTotal = undefined;\n\n        // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$split$map = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$split$map2 = _slicedToArray(_segment$cueOutCont$split$map, 2);\n\n        adOffset = _segment$cueOutCont$split$map2[0];\n        adTotal = _segment$cueOutCont$split$map2[1];\n\n        cue = new _globalWindow2['default'].VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n    mediaTime += segment.duration;\n  }\n};\n\nexports['default'] = {\n  updateAdCues: updateAdCues,\n  findAdCue: findAdCue\n};\nmodule.exports = exports['default'];\n},{\"global/window\":32}],2:[function(require,module,exports){\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n  return '.';\n};\n\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n\n  return transferable;\n};\n\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n\n/**\n * utils to help dump binary data to the console\n */\nvar utils = {\n  hexDump: function hexDump(data) {\n    var bytes = Array.prototype.slice.call(data);\n    var step = 16;\n    var result = '';\n    var hex = undefined;\n    var ascii = undefined;\n\n    for (var j = 0; j < bytes.length / step; j++) {\n      hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n      ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n      result += hex + ' ' + ascii + '\\n';\n    }\n    return result;\n  },\n  tagDump: function tagDump(tag) {\n    return utils.hexDump(tag.bytes);\n  },\n  textRanges: function textRanges(ranges) {\n    var result = '';\n    var i = undefined;\n\n    for (i = 0; i < ranges.length; i++) {\n      result += textRange(ranges, i) + ' ';\n    }\n    return result;\n  },\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId\n};\n\nexports['default'] = utils;\nmodule.exports = exports['default'];\n},{}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\nmodule.exports = exports[\"default\"];\n},{}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _globalWindow = require('global/window');\n\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\nvar _aesDecrypter = require('aes-decrypter');\n\nvar _binUtils = require('./bin-utils');\n\n/**\n * Our web worker interface so that things can talk to aes-decrypter\n * that will be running in a web worker. the scope is passed to this by\n * webworkify.\n *\n * @param {Object} self\n *        the scope for the web worker\n */\nvar DecrypterWorker = function DecrypterWorker(self) {\n  self.onmessage = function (event) {\n    var data = event.data;\n    var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n    var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n    var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n\n    /* eslint-disable no-new, handle-callback-err */\n    new _aesDecrypter.Decrypter(encrypted, key, iv, function (err, bytes) {\n      _globalWindow2['default'].postMessage((0, _binUtils.createTransferableMessage)({\n        source: data.source,\n        decrypted: bytes\n      }), [bytes.buffer]);\n    });\n    /* eslint-enable */\n  };\n};\n\nexports['default'] = function (self) {\n  return new DecrypterWorker(self);\n};\n\nmodule.exports = exports['default'];\n},{\"./bin-utils\":2,\"aes-decrypter\":25,\"global/window\":32}],5:[function(require,module,exports){\n(function (global){\n/**\n * @file master-playlist-controller.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _playlistLoader = require('./playlist-loader');\n\nvar _playlistLoader2 = _interopRequireDefault(_playlistLoader);\n\nvar _playlistJs = require('./playlist.js');\n\nvar _segmentLoader = require('./segment-loader');\n\nvar _segmentLoader2 = _interopRequireDefault(_segmentLoader);\n\nvar _vttSegmentLoader = require('./vtt-segment-loader');\n\nvar _vttSegmentLoader2 = _interopRequireDefault(_vttSegmentLoader);\n\nvar _ranges = require('./ranges');\n\nvar _ranges2 = _interopRequireDefault(_ranges);\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\nvar _adCueTags = require('./ad-cue-tags');\n\nvar _adCueTags2 = _interopRequireDefault(_adCueTags);\n\nvar _syncController = require('./sync-controller');\n\nvar _syncController2 = _interopRequireDefault(_syncController);\n\nvar _videojsContribMediaSourcesEs5CodecUtils = require('videojs-contrib-media-sources/es5/codec-utils');\n\nvar _webwackify = require('webwackify');\n\nvar _webwackify2 = _interopRequireDefault(_webwackify);\n\nvar _decrypterWorker = require('./decrypter-worker');\n\nvar _decrypterWorker2 = _interopRequireDefault(_decrypterWorker);\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _utilCodecsJs = require('./util/codecs.js');\n\nvar _mediaGroups = require('./media-groups');\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\n\nvar Hls = undefined;\n\n// Default codec parameters if none were provided for video and/or audio\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n\n// SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n\nvar resolveDecrypterWorker = function resolveDecrypterWorker() {\n  var result = undefined;\n\n  try {\n    result = require.resolve('./decrypter-worker');\n  } catch (e) {\n    // no result\n  }\n\n  return result;\n};\n\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\nvar mapLegacyAvcCodecs_ = function mapLegacyAvcCodecs_(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return (0, _videojsContribMediaSourcesEs5CodecUtils.translateLegacyCodecs)([match])[0];\n  });\n};\n\nexports.mapLegacyAvcCodecs_ = mapLegacyAvcCodecs_;\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n  return 'mp2t';\n};\n\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return (0, _utilCodecsJs.parseCodecs)(mediaAttributes.CODECS);\n  }\n  return defaultCodecs;\n};\n\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\nvar mimeTypesForPlaylist_ = function mimeTypesForPlaylist_(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {};\n  // Default condition for a traditional HLS (no demuxed audio/video)\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n\n    // Handle the case where we are in a multiple-audio track scenario\n    if (audioGroup) {\n      isMaat = true;\n      // Start with the everything demuxed then...\n      isMuxed = false;\n      // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n      for (var groupId in audioGroup) {\n        if (!audioGroup[groupId].uri) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  }\n\n  // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n  if (isMaat && !codecInfo.audioProfile) {\n    _videoJs2['default'].log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n    codecInfo.audioProfile = defaultCodecs.audioProfile;\n  }\n\n  // Generate the final codec strings from the codec object generated above\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  }\n\n  // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n    // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n    return [bothVideoAudio, justAudio];\n  }\n\n  // If there is ano video codec at all, always just return a single\n  // audio/<container> mime-type\n  if (!codecStrings.video) {\n    return [justAudio];\n  }\n\n  // When not using separate audio media groups, audio and video is\n  // *always* muxed\n  return [bothVideoAudio];\n};\n\nexports.mimeTypesForPlaylist_ = mimeTypesForPlaylist_;\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\nvar MasterPlaylistController = (function (_videojs$EventTarget) {\n  _inherits(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    var _this = this;\n\n    _classCallCheck(this, MasterPlaylistController);\n\n    _get(Object.getPrototypeOf(MasterPlaylistController.prototype), 'constructor', this).call(this);\n\n    var url = options.url;\n    var withCredentials = options.withCredentials;\n    var mode = options.mode;\n    var tech = options.tech;\n    var bandwidth = options.bandwidth;\n    var externHls = options.externHls;\n    var useCueTags = options.useCueTags;\n    var blacklistDuration = options.blacklistDuration;\n    var enableLowInitialPlaylist = options.enableLowInitialPlaylist;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n\n    this.withCredentials = withCredentials;\n    this.tech_ = tech;\n    this.hls_ = tech.hls;\n    this.mode_ = mode;\n    this.useCueTags_ = useCueTags;\n    this.blacklistDuration = blacklistDuration;\n    this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n    if (this.useCueTags_) {\n      this.cueTagsTrack_ = this.tech_.addTextTrack('metadata', 'ad-cues');\n      this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    this.requestOptions_ = {\n      withCredentials: this.withCredentials,\n      timeout: null\n    };\n\n    this.mediaTypes_ = (0, _mediaGroups.createMediaTypes)();\n\n    this.mediaSource = new _videoJs2['default'].MediaSource({ mode: mode });\n\n    // load the media source into the player\n    this.mediaSource.addEventListener('sourceopen', this.handleSourceOpen_.bind(this));\n\n    this.seekable_ = _videoJs2['default'].createTimeRanges();\n    this.hasPlayed_ = function () {\n      return false;\n    };\n\n    this.syncController_ = new _syncController2['default'](options);\n    this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n\n    this.decrypter_ = (0, _webwackify2['default'])(_decrypterWorker2['default'], resolveDecrypterWorker());\n\n    var segmentLoaderSettings = {\n      hls: this.hls_,\n      mediaSource: this.mediaSource,\n      currentTime: this.tech_.currentTime.bind(this.tech_),\n      seekable: function seekable() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: this.syncController_,\n      decrypter: this.decrypter_\n    };\n\n    // setup playlist loaders\n    this.masterPlaylistLoader_ = new _playlistLoader2['default'](url, this.hls_, this.withCredentials);\n    this.setupMasterPlaylistLoaderListeners_();\n\n    // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n    this.mainSegmentLoader_ = new _segmentLoader2['default'](_videoJs2['default'].mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options);\n\n    // alternate audio track\n    this.audioSegmentLoader_ = new _segmentLoader2['default'](_videoJs2['default'].mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n\n    this.subtitleSegmentLoader_ = new _vttSegmentLoader2['default'](_videoJs2['default'].mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    this.setupSegmentLoaderListeners_();\n\n    // Create SegmentLoader stat-getters\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n\n    this.masterPlaylistLoader_.load();\n  }\n\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n  _createClass(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000;\n\n        // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n        if ((0, _playlistJs.isLowestEnabledRendition)(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        }\n\n        // if this isn't a live video and preload permits, start\n        // downloading segments\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n          _this2.mainSegmentLoader_.load();\n        }\n\n        (0, _mediaGroups.setupMediaGroups)({\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          mode: _this2.mode_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          _videoJs2['default'].log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n        _this2.setupFirstPlay();\n\n        _this2.trigger('selectedinitialmedia');\n      });\n\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          var selectedMedia = undefined;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        }\n\n        // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n        _this2.updateDuration();\n\n        // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n        }\n\n        if (!updatedPlaylist.endList) {\n          (function () {\n            var addSeekableRange = function addSeekableRange() {\n              var seekable = _this2.seekable();\n\n              if (seekable.length !== 0) {\n                _this2.mediaSource.addSeekableRange_(seekable.start(0), seekable.end(0));\n              }\n            };\n\n            if (_this2.duration() !== Infinity) {\n              (function () {\n                var onDurationchange = function onDurationchange() {\n                  if (_this2.duration() === Infinity) {\n                    addSeekableRange();\n                  } else {\n                    _this2.tech_.one('durationchange', onDurationchange);\n                  }\n                };\n\n                _this2.tech_.one('durationchange', onDurationchange);\n              })();\n            } else {\n              addSeekableRange();\n            }\n          })();\n        }\n      });\n\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n        _this2.mainSegmentLoader_.pause();\n      });\n\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000;\n\n        // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n        if ((0, _playlistJs.isLowestEnabledRendition)(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        }\n\n        // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          });\n          // useful for monitoring QoS\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({ type: 'usage', name: 'hls-rendition-disabled' });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({ type: 'usage', name: 'hls-rendition-enabled' });\n      });\n    }\n\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-demuxed' });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-webvtt' });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-aes' });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-fmp4' });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-alternate-audio' });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-playlist-cue-tags' });\n      }\n    }\n\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n        var buffered = _this3.tech_.buffered();\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine();\n\n        // If the playlist is live, then we want to not take low water line into account.\n        // This is because in LIVE, the player plays 3 segments from the end of the\n        // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n        // in those segments, a viewer will never experience a rendition upswitch.\n        if (!currentPlaylist.endList ||\n        // For the same reason as LIVE, we ignore the low water line when the VOD\n        // duration is below the max potential low water line\n        _this3.duration() < _config2['default'].MAX_BUFFER_LOW_WATER_LINE ||\n        // we want to switch down to lower resolutions quickly to continue playback, but\n        nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH ||\n        // ensure we have some buffer before we switch up to prevent us running out of\n        // buffer while loading a higher rendition.\n        forwardBuffer >= bufferLowWaterLine) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({ type: 'usage', name: 'hls-timestamp-offset' });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n\n    /**\n     * Call load on our SegmentLoaders\n     */\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method may perform destructive actions, like\n     * removing already buffered content, to readjust the currently\n     * active playlist quickly.\n     *\n     * @private\n     */\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n\n        this.mainSegmentLoader_.resetLoader();\n        // don't need to reset audio as it is reset when media changes\n      }\n    }\n\n    /**\n     * Begin playback.\n     */\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.tech_.setCurrentTime(0);\n      }\n\n      if (this.hasPlayed_()) {\n        this.load();\n      }\n\n      var seekable = this.tech_.seekable();\n\n      // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable.start(0)) {\n          return this.tech_.setCurrentTime(seekable.end(seekable.length - 1));\n        }\n      }\n    }\n\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this4 = this;\n\n      var media = this.masterPlaylistLoader_.media();\n\n      // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n      if (!media || this.tech_.paused() || this.hasPlayed_()) {\n        return false;\n      }\n\n      // when the video is a live stream\n      if (!media.endList) {\n        var _ret3 = (function () {\n          var seekable = _this4.seekable();\n\n          if (!seekable.length) {\n            // without a seekable range, the player cannot seek to begin buffering at the live\n            // point\n            return {\n              v: false\n            };\n          }\n\n          if (_videoJs2['default'].browser.IE_VERSION && _this4.mode_ === 'html5' && _this4.tech_.readyState() === 0) {\n            // IE11 throws an InvalidStateError if you try to set currentTime while the\n            // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n            _this4.tech_.one('loadedmetadata', function () {\n              _this4.trigger('firstplay');\n              _this4.tech_.setCurrentTime(seekable.end(0));\n              _this4.hasPlayed_ = function () {\n                return true;\n              };\n            });\n\n            return {\n              v: false\n            };\n          }\n\n          // trigger firstplay to inform the source handler to ignore the next seek event\n          _this4.trigger('firstplay');\n          // seek to the live point\n          _this4.tech_.setCurrentTime(seekable.end(0));\n        })();\n\n        if (typeof _ret3 === 'object') return _ret3.v;\n      }\n\n      this.hasPlayed_ = function () {\n        return true;\n      };\n      // we can begin loading now that everything is ready\n      this.load();\n      return true;\n    }\n\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        _videoJs2['default'].log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play();\n\n        // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active, so we need\n        // to wait for both the main and audio segment loaders to call endOfStream\n        isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n      }\n\n      if (isEndOfStream) {\n        this.mediaSource.endOfStream();\n      }\n    }\n\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable = this.seekable();\n\n      if (!seekable.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      }\n\n      // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= _ranges2['default'].SAFE_TIME_DELTA;\n      }\n      var bufferedEnd = buffered.end(buffered.length - 1);\n\n      // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n      return bufferedEnd - currentTime <= _ranges2['default'].SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= _ranges2['default'].SAFE_TIME_DELTA;\n    }\n\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist(error, blacklistDuration) {\n      if (error === undefined) error = {};\n\n      var currentPlaylist = undefined;\n      var nextPlaylist = undefined;\n\n      // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration;\n\n      // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(_playlistJs.isEnabled).length === 1;\n\n      if (isFinalRendition) {\n        // Never blacklisting this playlist because it's final rendition\n        _videoJs2['default'].log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the final playlist.');\n\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      }\n      // Blacklist this playlist\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({ type: 'usage', name: 'hls-rendition-blacklisted' });\n\n      // Select a new playlist\n      nextPlaylist = this.selectPlaylist();\n      _videoJs2['default'].log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n\n      return this.masterPlaylistLoader_.media(nextPlaylist);\n    }\n\n    /**\n     * Pause all segment loaders\n     */\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = _ranges2['default'].findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      }\n\n      // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      }\n\n      // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      if (buffered && buffered.length && this.mode_ !== 'flash') {\n        return currentTime;\n      }\n\n      // cancel outstanding requests so we begin buffering at the new\n      // location\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      }\n\n      // start segment loader loading in case they are paused\n      this.load();\n    }\n\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n  }, {\n    key: 'duration',\n    value: function duration() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n  }, {\n    key: 'seekable',\n    value: function seekable() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var mainSeekable = undefined;\n      var audioSeekable = undefined;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      mainSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = _videoJs2['default'].createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      }\n\n      this.tech_.trigger('seekablechanged');\n    }\n\n    /**\n     * Update the player duration\n     */\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this5 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n      var setDuration = function setDuration() {\n        _this5.mediaSource.duration = newDuration;\n        _this5.tech_.trigger('durationchange');\n\n        _this5.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      }\n\n      // if the duration has changed, invalidate the cached value\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this6 = this;\n\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this6.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n    }\n\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = undefined;\n\n      // wait until a media playlist is available and the Media Source is\n      // attached\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist_(this.masterPlaylistLoader_.master, media);\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n      this.mainSegmentLoader_.mimeType(mimeTypes[0]);\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1]);\n      }\n\n      // exclude any incompatible variant streams from future playlist\n      // selection\n      this.excludeIncompatibleVariants_(media);\n    }\n\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var master = this.masterPlaylistLoader_.master;\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = undefined;\n\n      if (media.attributes.CODECS) {\n        codecs = (0, _utilCodecsJs.parseCodecs)(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n      master.playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          var codecString = variant.attributes.CODECS;\n\n          variantCodecs = (0, _utilCodecsJs.parseCodecs)(codecString);\n\n          if (window.MediaSource && window.MediaSource.isTypeSupported && !window.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs_(codecString) + '\"')) {\n            variant.excludeUntil = Infinity;\n          }\n        }\n\n        // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        }\n\n        // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable = this.seekable();\n\n      if (seekable.length) {\n        offset = seekable.start(0);\n      }\n\n      _adCueTags2['default'].updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = _config2['default'].GOAL_BUFFER_LENGTH;\n      var rate = _config2['default'].GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, _config2['default'].MAX_GOAL_BUFFER_LENGTH);\n\n      return Math.min(initial + currentTime * rate, max);\n    }\n\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = _config2['default'].BUFFER_LOW_WATER_LINE;\n      var rate = _config2['default'].BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, _config2['default'].MAX_BUFFER_LOW_WATER_LINE);\n\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n\n  return MasterPlaylistController;\n})(_videoJs2['default'].EventTarget);\n\nexports.MasterPlaylistController = MasterPlaylistController;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./ad-cue-tags\":1,\"./config\":3,\"./decrypter-worker\":4,\"./media-groups\":6,\"./playlist-loader\":9,\"./playlist.js\":11,\"./ranges\":12,\"./segment-loader\":16,\"./sync-controller\":18,\"./util/codecs.js\":19,\"./vtt-segment-loader\":20,\"videojs-contrib-media-sources/es5/codec-utils\":65,\"webwackify\":76}],6:[function(require,module,exports){\n(function (global){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\nvar _playlistLoader = require('./playlist-loader');\n\nvar _playlistLoader2 = _interopRequireDefault(_playlistLoader);\n\nvar noop = function noop() {};\n\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties['default'] ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n\nexports.stopLoaders = stopLoaders;\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n\nexports.startLoaders = startLoaders;\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoaders = settings.segmentLoaders;\n    var segmentLoader = _settings$segmentLoaders[type];\n    var mainSegmentLoader = _settings$segmentLoaders.main;\n    var mediaType = settings.mediaTypes[type];\n\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n      return;\n    }\n\n    // Non-destructive resync\n    segmentLoader.resyncLoader();\n\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nexports.onGroupChanged = onGroupChanged;\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoaders2 = settings.segmentLoaders;\n    var segmentLoader = _settings$segmentLoaders2[type];\n    var mainSegmentLoader = _settings$segmentLoaders2.main;\n    var mediaType = settings.mediaTypes[type];\n\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    }\n\n    // destructive reset\n    segmentLoader.resetEverything();\n\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nexports.onTrackChanged = onTrackChanged;\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type];\n      var mediaType = settings.mediaTypes[type];\n      var blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n\n      stopLoaders(segmentLoader, mediaType);\n\n      // switch back to default audio track\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group['default'];\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      _videoJs2['default'].log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type];\n      var mediaType = settings.mediaTypes[type];\n\n      _videoJs2['default'].log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n\n      stopLoaders(segmentLoader, mediaType);\n\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\n\nexports.onError = onError;\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech;\n    var requestOptions = settings.requestOptions;\n    var segmentLoader = settings.segmentLoaders[type];\n\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n\n      segmentLoader.playlist(media, requestOptions);\n\n      // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions);\n\n      // If the player isn't paused, ensure that the segment loader is running\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech;\n    var requestOptions = settings.requestOptions;\n    var segmentLoader = settings.segmentLoaders[type];\n    var mediaType = settings.mediaTypes[type];\n\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack());\n\n      // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions);\n\n      // If the player isn't paused, ensure that the segment loader is running\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\n\nexports.setupListeners = setupListeners;\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var mode = settings.mode;\n    var hls = settings.hls;\n    var segmentLoader = settings.segmentLoaders[type];\n    var withCredentials = settings.requestOptions.withCredentials;\n    var mediaGroups = settings.master.mediaGroups;\n    var _settings$mediaTypes$type = settings.mediaTypes[type];\n    var groups = _settings$mediaTypes$type.groups;\n    var tracks = _settings$mediaTypes$type.tracks;\n\n    // force a default if we have none or we are not\n    // in html5 mode (the only mode to support more than one\n    // audio track)\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0 || mode !== 'html5') {\n      mediaGroups[type] = { main: { 'default': { 'default': true } } };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = undefined;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new _playlistLoader2['default'](properties.resolvedUri, hls, withCredentials);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = _videoJs2['default'].mergeOptions({ id: variantLabel, playlistLoader: playlistLoader }, properties);\n\n        setupListeners[type](type, properties.playlistLoader, settings);\n\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new _videoJs2['default'].AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            'default': properties['default'],\n            label: variantLabel\n          });\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n\n    // setup single error event handler for the segment loader\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech;\n    var hls = settings.hls;\n    var segmentLoader = settings.segmentLoaders[type];\n    var withCredentials = settings.requestOptions.withCredentials;\n    var mediaGroups = settings.master.mediaGroups;\n    var _settings$mediaTypes$type2 = settings.mediaTypes[type];\n    var groups = _settings$mediaTypes$type2.groups;\n    var tracks = _settings$mediaTypes$type2.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        properties = _videoJs2['default'].mergeOptions({\n          id: variantLabel,\n          playlistLoader: new _playlistLoader2['default'](properties.resolvedUri, hls, withCredentials)\n        }, properties);\n\n        setupListeners[type](type, properties.playlistLoader, settings);\n\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            enabled: false,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n\n    // setup single error event handler for the segment loader\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech;\n    var mediaGroups = settings.master.mediaGroups;\n    var _settings$mediaTypes$type3 = settings.mediaTypes[type];\n    var groups = _settings$mediaTypes$type3.groups;\n    var tracks = _settings$mediaTypes$type3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        }\n\n        // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n        groups[groupId].push(_videoJs2['default'].mergeOptions({ id: variantLabel }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            enabled: false,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n\nexports.initialize = initialize;\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader;\n    var groups = settings.mediaTypes[type].groups;\n\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nexports.activeGroup = activeGroup;\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n\nexports.activeTrack = activeTrack;\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {String} mode\n *        Mode of the hls source handler. Can be 'auto', 'html5', or 'flash'\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n\n  var mediaTypes = settings.mediaTypes;\n  var masterPlaylistLoader = settings.masterPlaylistLoader;\n  var tech = settings.tech;\n  var hls = settings.hls;\n\n  // setup active group and track getters and change event handlers\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  });\n\n  // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group['default'];\n  })[0] || audioGroup[0]).id;\n\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  });\n\n  // custom audio track change event handler for usage event\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({ type: 'usage', name: 'hls-audio-change' });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  });\n\n  // clear existing audio tracks and add the ones we just created\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n\nexports.setupMediaGroups = setupMediaGroups;\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n\n  return mediaTypes;\n};\nexports.createMediaTypes = createMediaTypes;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./playlist-loader\":9}],7:[function(require,module,exports){\n(function (global){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\nvar _binUtils = require('./bin-utils');\n\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n\nexports.REQUEST_ERRORS = REQUEST_ERRORS;\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = undefined;\n  var byterangeEnd = undefined;\n\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n  return headers;\n};\n\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr) {\n    xhr.abort();\n  });\n};\n\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n\n  stats.bytesReceived = progressEvent.loaded;\n  // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n\n  return stats;\n};\n\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    // stop processing if received empty content\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response);\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleSegmentResponse = function handleSegmentResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    // stop processing if received empty content\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler);\n\n  // this is an encrypted segment\n  // incrementally decrypt the segment\n  decrypter.postMessage((0, _binUtils.createTransferableMessage)({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: segment.key.bytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, segment.key.bytes.buffer]);\n};\n\n/**\n * The purpose of this function is to get the most pertinent error from the\n * array of errors.\n * For instance if a timeout and two aborts occur, then the aborts were\n * likely triggered by the timeout so return that error object.\n */\nvar getMostImportantError = function getMostImportantError(errors) {\n  return errors.reduce(function (prev, err) {\n    return err.code > prev.code ? err : prev;\n  });\n};\n\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var errors = [];\n  var count = 0;\n\n  return function (error, segment) {\n    if (error) {\n      // If there are errors, we have to abort any outstanding requests\n      abortAll(activeXhrs);\n      errors.push(error);\n    }\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (errors.length > 0) {\n        var worstError = getMostImportantError(errors);\n\n        return doneFn(worstError, segment);\n      }\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      }\n      // Otherwise, everything is ready just continue\n      return doneFn(null, segment);\n    }\n  };\n};\n\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = _videoJs2['default'].mergeOptions(segment.stats, getProgressStats(event));\n\n    // record the time that we receive the first byte of data\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr, xhrOptions, decryptionWorker, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn);\n\n  // optionally, request the decryption key\n  if (segment.key) {\n    var keyRequestOptions = _videoJs2['default'].mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n\n    activeXhrs.push(keyXhr);\n  }\n\n  // optionally, request the associated media init segment\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = _videoJs2['default'].mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, finishProcessingFn);\n    var initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = _videoJs2['default'].mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, finishProcessingFn);\n  var segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n\n  return function () {\n    return abortAll(activeXhrs);\n  };\n};\nexports.mediaSegmentRequest = mediaSegmentRequest;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./bin-utils\":2}],8:[function(require,module,exports){\n(function (global){\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _globalWindow = require('global/window');\n\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\nvar _ranges = require('./ranges');\n\nvar _ranges2 = _interopRequireDefault(_ranges);\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\n// Set of events that reset the playback-watcher time check logic and clear the timeout\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = (function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    _classCallCheck(this, PlaybackWatcher);\n\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n\n    if (options.debug) {\n      this.logger_ = _videoJs2['default'].log.bind(_videoJs2['default'], 'playback-watcher ->');\n    }\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler);\n\n    // Define the dispose function to clean up our events\n    this.dispose = function () {\n      _this.logger_('dispose');\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n      _this.tech_.off('waiting', waitingHandler);\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n      _this.tech_.off('canplay', canPlayHandler);\n      if (_this.checkCurrentTimeTimeout_) {\n        _globalWindow2['default'].clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n      _this.cancelTimer_();\n    };\n  }\n\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n  _createClass(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        _globalWindow2['default'].clearTimeout(this.checkCurrentTimeTimeout_);\n      }\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n      this.checkCurrentTimeTimeout_ = _globalWindow2['default'].setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + _ranges2['default'].SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies (e.g. The Flash tech does not fire a `waiting` event when the end\n        // of the buffer is reached and has fallen off the live window). Calling\n        // `techWaiting_` here allows us to simulate responding to a native `waiting` event\n        // when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var seekTo = undefined;\n\n      if (seeking && this.afterSeekableWindow_(seekable, currentTime)) {\n        var seekableEnd = seekable.end(seekable.length - 1);\n\n        // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n        seekTo = seekableEnd;\n      }\n\n      if (seeking && this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0);\n\n        // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n        seekTo = seekableStart + _ranges2['default'].SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + _ranges2['default'].printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n\n        this.tech_.setCurrentTime(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      }\n\n      // All tech waiting checks failed. Use last resort correction\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = _ranges2['default'].findRange(buffered, currentTime);\n\n      // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(currentTime);\n\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.');\n\n        // unknown waiting corrections may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-unknown-waiting' });\n        return;\n      }\n    }\n\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(livePoint);\n\n        // live window resyncs may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-live-resync' });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = _ranges2['default'].findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(currentTime);\n\n        // video underflow may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-video-underflow' });\n        return true;\n      }\n\n      // check for gap\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      }\n\n      // All checks failed. Returning false to indicate failure to correct waiting\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime) {\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      if (currentTime > seekable.end(seekable.length - 1) + _ranges2['default'].SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length &&\n      // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - _ranges2['default'].SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = _ranges2['default'].findNextRange(buffered, currentTime);\n\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0));\n\n      // only seek if we still have not played\n      this.tech_.setCurrentTime(nextRange.start(0) + _ranges2['default'].TIME_FUDGE_FACTOR);\n\n      this.tech_.trigger({ type: 'usage', name: 'hls-gap-skip' });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = _ranges2['default'].findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i);\n\n        // gap is starts no more than 4 seconds back\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n\n    /**\n     * A debugging logger noop that is set to console.log only if debugging\n     * is enabled globally\n     *\n     * @private\n     */\n  }, {\n    key: 'logger_',\n    value: function logger_() {}\n  }]);\n\n  return PlaybackWatcher;\n})();\n\nexports['default'] = PlaybackWatcher;\nmodule.exports = exports['default'];\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./ranges\":12,\"global/window\":32}],9:[function(require,module,exports){\n(function (global){\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _resolveUrl = require('./resolve-url');\n\nvar _resolveUrl2 = _interopRequireDefault(_resolveUrl);\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _m3u8Parser = require('m3u8-parser');\n\nvar _m3u8Parser2 = _interopRequireDefault(_m3u8Parser);\n\nvar _globalWindow = require('global/window');\n\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = (0, _videoJs.mergeOptions)(original[i], result[i - offset]);\n  }\n  return result;\n};\n\nexports.updateSegments = updateSegments;\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = (0, _resolveUrl2['default'])(baseUri, segment.uri);\n  }\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = (0, _resolveUrl2['default'])(baseUri, segment.key.uri);\n  }\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = (0, _resolveUrl2['default'])(baseUri, segment.map.uri);\n  }\n};\n\nexports.resolveSegmentUris = resolveSegmentUris;\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\nvar updateMaster = function updateMaster(master, media) {\n  var result = (0, _videoJs.mergeOptions)(master, {});\n  var playlist = result.playlists.filter(function (p) {\n    return p.uri === media.uri;\n  })[0];\n\n  if (!playlist) {\n    return null;\n  }\n\n  // consider the playlist unchanged if the number of segments is equal and the media\n  // sequence number is unchanged\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = (0, _videoJs.mergeOptions)(playlist, media);\n\n  // if the update could overlap existing segment information, merge the two segment lists\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  }\n\n  // resolve any segment URIs to prevent us from having to do it later\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  });\n\n  // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n  result.playlists[media.uri] = mergedPlaylist;\n\n  return result;\n};\n\nexports.updateMaster = updateMaster;\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = (0, _resolveUrl2['default'])(master.uri, playlist.uri);\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n\n      _videoJs.log.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nexports.setupMediaPlaylists = setupMediaPlaylists;\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n\n        if (mediaProperties.uri) {\n          mediaProperties.resolvedUri = (0, _resolveUrl2['default'])(master.uri, mediaProperties.uri);\n        }\n      }\n    }\n  });\n};\n\nexports.resolveMediaGroupUris = resolveMediaGroupUris;\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = undefined;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n  return delay;\n};\n\nexports.refreshDelay = refreshDelay;\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\nvar PlaylistLoader = (function (_EventTarget) {\n  _inherits(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls, withCredentials) {\n    var _this = this;\n\n    _classCallCheck(this, PlaylistLoader);\n\n    _get(Object.getPrototypeOf(PlaylistLoader.prototype), 'constructor', this).call(this);\n\n    this.srcUrl = srcUrl;\n    this.hls_ = hls;\n    this.withCredentials = withCredentials;\n\n    if (!this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    // initialize the loader state\n    this.state = 'HAVE_NOTHING';\n\n    // live playlist staleness timeout\n    this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n\n      _this.request = _this.hls_.xhr({\n        uri: (0, _resolveUrl2['default'])(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media().uri, 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri);\n      });\n    });\n  }\n\n  _createClass(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr, url, startingState) {\n      // any in-flight request is now finished\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[url],\n        status: xhr.status,\n        message: 'HLS playlist request error at URL: ' + url,\n        responseText: xhr.responseText,\n        code: xhr.status >= 500 ? 4 : 2\n      };\n\n      this.trigger('error');\n    }\n\n    // update the playlist loader's state in response to a new or\n    // updated playlist.\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr, url) {\n      var _this2 = this;\n\n      // any in-flight request is now finished\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n\n      var parser = new _m3u8Parser2['default'].Parser();\n\n      parser.push(xhr.responseText);\n      parser.end();\n      parser.manifest.uri = url;\n      // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n      parser.manifest.attributes = parser.manifest.attributes || {};\n\n      // merge this playlist into the master\n      var update = updateMaster(this.master, parser.manifest);\n\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[parser.manifest.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      // refresh live playlists after a target duration passes\n      if (!this.media().endList) {\n        _globalWindow2['default'].clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = _globalWindow2['default'].setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n\n    /**\n     * Abort any outstanding work and clean up.\n     */\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      _globalWindow2['default'].clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @return {Playlist} the current loaded media\n     */\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this;\n\n      // getter\n      if (!playlist) {\n        return this.media_;\n      }\n\n      // setter\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state;\n\n      // find the playlist object if the target playlist has been\n      // specified by URI\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri;\n\n      // switch to fully loaded playlists immediately\n      if (this.master.playlists[playlist.uri].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist;\n\n        // trigger media change if the active media has been updated\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n        return;\n      }\n\n      // switching to the active playlist is a no-op\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA';\n\n      // there is already an outstanding playlist request\n      if (this.request) {\n        if ((0, _resolveUrl2['default'])(this.master.uri, playlist.uri) === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      }\n\n      // request the new playlist\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: (0, _resolveUrl2['default'])(this.master.uri, playlist.uri),\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist.uri, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri);\n\n        // fire loadedmetadata the first time a media playlist is loaded\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n\n    /**\n     * pause loading of the playlist\n     */\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      _globalWindow2['default'].clearTimeout(this.mediaUpdateTimeout);\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n      // Need to restore state now that no activity is happening\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n\n    /**\n     * start loading of the playlist\n     */\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      _globalWindow2['default'].clearTimeout(this.mediaUpdateTimeout);\n\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n\n        this.mediaUpdateTimeout = _globalWindow2['default'].setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n\n    /**\n     * start loading of the playlist\n     */\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true;\n\n      // request the specified URL\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        }\n\n        // clear the loader's request reference\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n          return _this5.trigger('error');\n        }\n\n        var parser = new _m3u8Parser2['default'].Parser();\n\n        parser.push(req.responseText);\n        parser.end();\n\n        _this5.state = 'HAVE_MASTER';\n\n        parser.manifest.uri = _this5.srcUrl;\n\n        // loaded a master playlist\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n          return;\n        }\n\n        // loaded a media playlist\n        // infer a master playlist if none was previously requested\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: _globalWindow2['default'].location.href,\n          playlists: [{\n            uri: _this5.srcUrl\n          }]\n        };\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n        _this5.master.playlists[0].resolvedUri = _this5.srcUrl;\n        // m3u8-parser does not attach an attributes property to media playlists so make\n        // sure that the property is attached to avoid undefined reference errors\n        _this5.master.playlists[0].attributes = _this5.master.playlists[0].attributes || {};\n        _this5.haveMetadata(req, _this5.srcUrl);\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n\n  return PlaylistLoader;\n})(_videoJs.EventTarget);\n\nexports['default'] = PlaylistLoader;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./resolve-url\":15,\"global/window\":32,\"m3u8-parser\":33}],10:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _playlist = require('./playlist');\n\nvar _playlist2 = _interopRequireDefault(_playlist);\n\nvar _utilCodecsJs = require('./util/codecs.js');\n\n// Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = undefined;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window.getComputedStyle(el);\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n    return cmp;\n  });\n};\n\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = undefined;\n  var rightBandwidth = undefined;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n  leftBandwidth = leftBandwidth || window.Number.MAX_VALUE;\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n  rightBandwidth = rightBandwidth || window.Number.MAX_VALUE;\n\n  return leftBandwidth - rightBandwidth;\n};\n\nexports.comparePlaylistBandwidth = comparePlaylistBandwidth;\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = undefined;\n  var rightWidth = undefined;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window.Number.MAX_VALUE;\n\n  // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n  return leftWidth - rightWidth;\n};\n\nexports.comparePlaylistResolution = comparePlaylistResolution;\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = undefined;\n    var height = undefined;\n    var bandwidth = undefined;\n\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n\n    bandwidth = bandwidth || window.Number.MAX_VALUE;\n\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  });\n\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !_playlist2['default'].isIncompatible(rep.playlist);\n  });\n\n  // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return _playlist2['default'].isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !_playlist2['default'].isDisabled(rep.playlist);\n    });\n  }\n\n  // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * _config2['default'].BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1];\n\n  // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n\n  // filter out playlists without resolution information\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  });\n\n  // sort variants by resolution\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  });\n\n  // if we have the exact resolution as the player use it\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1];\n  // ensure that we pick the highest bandwidth variant that have exact resolution\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n\n  var resolutionPlusOneList = undefined;\n  var resolutionPlusOneSmallest = undefined;\n  var resolutionPlusOneRep = undefined;\n\n  // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    });\n\n    // find all the variants have the same smallest resolution\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    });\n\n    // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  }\n\n  // fallback chain of variants\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n  return chosenRep ? chosenRep.playlist : null;\n};\n\nexports.simpleSelector = simpleSelector;\n// Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10));\n};\n\nexports.lastBandwidthSelector = lastBandwidthSelector;\n/**\n * Chooses the appropriate media playlist based on an\n * exponential-weighted moving average of the bandwidth after\n * filtering for player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @param {Number} decay - a number between 0 and 1. Higher values of\n * this parameter will cause previous bandwidth estimates to lose\n * significance more quickly.\n * @return {Function} a function which can be invoked to create a new\n * playlist selector function.\n * @see https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n */\nvar movingAverageBandwidthSelector = function movingAverageBandwidthSelector(decay) {\n  var average = -1;\n\n  if (decay < 0 || decay > 1) {\n    throw new Error('Moving average bandwidth decay must be between 0 and 1.');\n  }\n\n  return function () {\n    if (average < 0) {\n      average = this.systemBandwidth;\n    }\n\n    average = decay * this.systemBandwidth + (1 - decay) * average;\n    return simpleSelector(this.playlists.master, average, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10));\n  };\n};\n\nexports.movingAverageBandwidthSelector = movingAverageBandwidthSelector;\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master;\n  var currentTime = settings.currentTime;\n  var bandwidth = settings.bandwidth;\n  var duration = settings.duration;\n  var segmentDuration = settings.segmentDuration;\n  var timeUntilRebuffer = settings.timeUntilRebuffer;\n  var currentTimeline = settings.currentTimeline;\n  var syncController = settings.syncController;\n\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !_playlist2['default'].isIncompatible(playlist);\n  });\n\n  // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n  var enabledPlaylists = compatiblePlaylists.filter(_playlist2['default'].isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !_playlist2['default'].isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(_playlist2['default'].hasAttribute.bind(null, 'BANDWIDTH'));\n\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration, currentTimeline, currentTime);\n    // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = _playlist2['default'].estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  });\n\n  // Sort by bandwidth DESC\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n\n  return rebufferingEstimates[0] || null;\n};\n\nexports.minRebufferMaxBandwidthSelector = minRebufferMaxBandwidthSelector;\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(_playlist2['default'].isEnabled);\n\n  // Sort ascending by bitrate\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  });\n\n  // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return (0, _utilCodecsJs.parseCodecs)(playlist.attributes.CODECS).videoCodec;\n  });\n\n  return playlistsWithVideo[0] || null;\n};\nexports.lowestBitrateCompatibleVariantSelector = lowestBitrateCompatibleVariantSelector;\n},{\"./config\":3,\"./playlist\":11,\"./util/codecs.js\":19}],11:[function(require,module,exports){\n(function (global){\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _globalWindow = require('global/window');\n\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence;\n  // if a start time is available for segment immediately following\n  // the interval, use it\n  var segment = playlist.segments[i];\n\n  // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return { result: segment.start, precise: true };\n    }\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n  while (i--) {\n    segment = playlist.segments[i];\n    if (typeof segment.end !== 'undefined') {\n      return { result: result + segment.end, precise: true };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return { result: result + segment.start, precise: true };\n    }\n  }\n  return { result: result, precise: false };\n};\n\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = undefined;\n  var i = endSequence - playlist.mediaSequence;\n  // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  }\n  // indicate we didn't find a useful duration estimate\n  return { result: -1, precise: false };\n};\n\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = undefined;\n  var forward = undefined;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  }\n\n  // do a backward walk to estimate the duration\n  backward = backwardDuration(playlist, endSequence);\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  }\n\n  // walk forward to see if a precise duration estimate can be made\n  // that way\n  forward = forwardDuration(playlist, endSequence);\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  }\n\n  // return the less-precise, playlist-based duration estimate\n  return backward.result + expired;\n};\n\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  }\n\n  // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    }\n\n    // duration should be Infinity for live playlists\n    if (!playlist.endList) {\n      return _globalWindow2['default'].Infinity;\n    }\n  }\n\n  // calculate the total duration based on the segment durations\n  return intervalDuration(playlist, endSequence, expired);\n};\n\nexports.duration = duration;\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n    startIndex = 0;\n  }\n\n  for (var i = startIndex; i < endIndex; i++) {\n    durations += playlist.segments[i].duration;\n  }\n\n  return durations;\n};\n\nexports.sumDurations = sumDurations;\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n\nexports.safeLiveIndex = safeLiveIndex;\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n\nexports.playlistEnd = playlistEnd;\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return (0, _videoJs.createTimeRange)();\n  }\n  return (0, _videoJs.createTimeRange)(seekableStart, seekableEnd);\n};\n\nexports.seekable = seekable;\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = undefined;\n  var segment = undefined;\n  var numSegments = playlist.segments.length;\n\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    }\n    // We were unable to find a good segment within the playlist\n    // so select the first segment\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  }\n\n  // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n    startIndex = 0;\n  }\n\n  // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  }\n\n  // We are out of possible candidates so load the last one...\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n\nexports.getMediaInfoForTime = getMediaInfoForTime;\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n\nexports.isBlacklisted = isBlacklisted;\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n\nexports.isIncompatible = isIncompatible;\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n\n  return !playlist.disabled && !blacklisted;\n};\n\nexports.isEnabled = isEnabled;\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n\nexports.isDisabled = isDisabled;\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexports.isAes = isAes;\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexports.isFmp4 = isFmp4;\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n\nexports.hasAttribute = hasAttribute;\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length <= 3 || arguments[3] === undefined ? 0 : arguments[3];\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n\n  return (size - bytesReceived * 8) / bandwidth;\n};\n\nexports.estimateSegmentRequestTime = estimateSegmentRequestTime;\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n};\n\nexports.isLowestEnabledRendition = isLowestEnabledRendition;\n// exports\nexports['default'] = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"global/window\":32}],12:[function(require,module,exports){\n(function (global){\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\n// Fudge factor to account for TimeRanges rounding\nvar TIME_FUDGE_FACTOR = 1 / 30;\n// Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\n/**\n * Clamps a value to within a range\n * @param {Number} num - the value to clamp\n * @param {Number} start - the start of the range to clamp within, inclusive\n * @param {Number} end - the end of the range to clamp within, inclusive\n * @return {Number}\n */\nvar clamp = function clamp(num, _ref) {\n  var _ref2 = _slicedToArray(_ref, 2);\n\n  var start = _ref2[0];\n  var end = _ref2[1];\n\n  return Math.min(Math.max(start, num), end);\n};\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = undefined;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return _videoJs2['default'].createTimeRanges(results);\n};\n\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - TIME_FUDGE_FACTOR <= time && end + TIME_FUDGE_FACTOR >= time;\n  });\n};\n\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return _videoJs2['default'].createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n\n    ranges.push([start, end]);\n  }\n\n  return _videoJs2['default'].createTimeRanges(ranges);\n};\n\n/**\n * Search for a likely end time for the segment that was just appened\n * based on the state of the `buffered` property before and after the\n * append. If we fin only one such uncommon end-point return it.\n * @param {TimeRanges} original - the buffered time ranges before the update\n * @param {TimeRanges} update - the buffered time ranges after the update\n * @returns {Number|null} the end time added between `original` and `update`,\n * or null if one cannot be unambiguously determined.\n */\nvar findSoleUncommonTimeRangesEnd = function findSoleUncommonTimeRangesEnd(original, update) {\n  var i = undefined;\n  var start = undefined;\n  var end = undefined;\n  var result = [];\n  var edges = [];\n\n  // In order to qualify as a possible candidate, the end point must:\n  //  1) Not have already existed in the `original` ranges\n  //  2) Not result from the shrinking of a range that already existed\n  //     in the `original` ranges\n  //  3) Not be contained inside of a range that existed in `original`\n  var overlapsCurrentEnd = function overlapsCurrentEnd(span) {\n    return span[0] <= end && span[1] >= end;\n  };\n\n  if (original) {\n    // Save all the edges in the `original` TimeRanges object\n    for (i = 0; i < original.length; i++) {\n      start = original.start(i);\n      end = original.end(i);\n\n      edges.push([start, end]);\n    }\n  }\n\n  if (update) {\n    // Save any end-points in `update` that are not in the `original`\n    // TimeRanges object\n    for (i = 0; i < update.length; i++) {\n      start = update.start(i);\n      end = update.end(i);\n\n      if (edges.some(overlapsCurrentEnd)) {\n        continue;\n      }\n\n      // at this point it must be a unique non-shrinking end edge\n      result.push(end);\n    }\n  }\n\n  // we err on the side of caution and return null if didn't find\n  // exactly *one* differing end edge in the search above\n  if (result.length !== 1) {\n    return null;\n  }\n\n  return result[0];\n};\n\n/**\n * Calculate the intersection of two TimeRanges\n * @param {TimeRanges} bufferA\n * @param {TimeRanges} bufferB\n * @returns {TimeRanges} The interesection of `bufferA` with `bufferB`\n */\nvar bufferIntersection = function bufferIntersection(bufferA, bufferB) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = [];\n\n  if (!bufferA || !bufferA.length || !bufferB || !bufferB.length) {\n    return _videoJs2['default'].createTimeRange();\n  }\n\n  // Handle the case where we have both buffers and create an\n  // intersection of the two\n  var count = bufferA.length;\n\n  // A) Gather up all start and end times\n  while (count--) {\n    extents.push({ time: bufferA.start(count), type: 'start' });\n    extents.push({ time: bufferA.end(count), type: 'end' });\n  }\n  count = bufferB.length;\n  while (count--) {\n    extents.push({ time: bufferB.start(count), type: 'start' });\n    extents.push({ time: bufferB.end(count), type: 'end' });\n  }\n  // B) Sort them by time\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  });\n\n  // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++;\n\n      // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--;\n\n      // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    }\n\n    // F) Record overlapping ranges\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return _videoJs2['default'].createTimeRanges(ranges);\n};\n\n/**\n * Calculates the percentage of `segmentRange` that overlaps the\n * `buffered` time ranges.\n * @param {TimeRanges} segmentRange - the time range that the segment\n * covers adjusted according to currentTime\n * @param {TimeRanges} referenceRange - the original time range that the\n * segment covers\n * @param {Number} currentTime - time in seconds where the current playback\n * is at\n * @param {TimeRanges} buffered - the currently buffered time ranges\n * @returns {Number} percent of the segment currently buffered\n */\nvar calculateBufferedPercent = function calculateBufferedPercent(adjustedRange, referenceRange, currentTime, buffered) {\n  var referenceDuration = referenceRange.end(0) - referenceRange.start(0);\n  var adjustedDuration = adjustedRange.end(0) - adjustedRange.start(0);\n  var bufferMissingFromAdjusted = referenceDuration - adjustedDuration;\n  var adjustedIntersection = bufferIntersection(adjustedRange, buffered);\n  var referenceIntersection = bufferIntersection(referenceRange, buffered);\n  var adjustedOverlap = 0;\n  var referenceOverlap = 0;\n\n  var count = adjustedIntersection.length;\n\n  while (count--) {\n    adjustedOverlap += adjustedIntersection.end(count) - adjustedIntersection.start(count);\n\n    // If the current overlap segment starts at currentTime, then increase the\n    // overlap duration so that it actually starts at the beginning of referenceRange\n    // by including the difference between the two Range's durations\n    // This is a work around for the way Flash has no buffer before currentTime\n    if (adjustedIntersection.start(count) === currentTime) {\n      adjustedOverlap += bufferMissingFromAdjusted;\n    }\n  }\n\n  count = referenceIntersection.length;\n\n  while (count--) {\n    referenceOverlap += referenceIntersection.end(count) - referenceIntersection.start(count);\n  }\n\n  // Use whichever value is larger for the percentage-buffered since that value\n  // is likely more accurate because the only way\n  return Math.max(adjustedOverlap, referenceOverlap) / referenceDuration * 100;\n};\n\n/**\n * Return the amount of a range specified by the startOfSegment and segmentDuration\n * overlaps the current buffered content.\n *\n * @param {Number} startOfSegment - the time where the segment begins\n * @param {Number} segmentDuration - the duration of the segment in seconds\n * @param {Number} currentTime - time in seconds where the current playback\n * is at\n * @param {TimeRanges} buffered - the state of the buffer\n * @returns {Number} percentage of the segment's time range that is\n * already in `buffered`\n */\nvar getSegmentBufferedPercent = function getSegmentBufferedPercent(startOfSegment, segmentDuration, currentTime, buffered) {\n  var endOfSegment = startOfSegment + segmentDuration;\n\n  // The entire time range of the segment\n  var originalSegmentRange = _videoJs2['default'].createTimeRanges([[startOfSegment, endOfSegment]]);\n\n  // The adjusted segment time range that is setup such that it starts\n  // no earlier than currentTime\n  // Flash has no notion of a back-buffer so adjustedSegmentRange adjusts\n  // for that and the function will still return 100% if a only half of a\n  // segment is actually in the buffer as long as the currentTime is also\n  // half-way through the segment\n  var adjustedSegmentRange = _videoJs2['default'].createTimeRanges([[clamp(startOfSegment, [currentTime, endOfSegment]), endOfSegment]]);\n\n  // This condition happens when the currentTime is beyond the segment's\n  // end time\n  if (adjustedSegmentRange.start(0) === adjustedSegmentRange.end(0)) {\n    return 0;\n  }\n\n  var percent = calculateBufferedPercent(adjustedSegmentRange, originalSegmentRange, currentTime, buffered);\n\n  // If the segment is reported as having a zero duration, return 0%\n  // since it is likely that we will need to fetch the segment\n  if (isNaN(percent) || percent === Infinity || percent === -Infinity) {\n    return 0;\n  }\n\n  return percent;\n};\n\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length <= 2 || arguments[2] === undefined ? 1 : arguments[2];\n\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n\nexports['default'] = {\n  findRange: findRange,\n  findNextRange: findNextRange,\n  findGaps: findGaps,\n  findSoleUncommonTimeRangesEnd: findSoleUncommonTimeRangesEnd,\n  getSegmentBufferedPercent: getSegmentBufferedPercent,\n  TIME_FUDGE_FACTOR: TIME_FUDGE_FACTOR,\n  SAFE_TIME_DELTA: SAFE_TIME_DELTA,\n  printableRange: printableRange,\n  timeUntilRebuffer: timeUntilRebuffer\n};\nmodule.exports = exports['default'];\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],13:[function(require,module,exports){\n(function (global){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({ IWillNotUseThisInPlugins: true });\n    var sourceObj = tech.currentSource_;\n\n    return next(sourceObj);\n  }\n};\n\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = _videoJs2['default'].mergeOptions(defaultOptions, options);\n\n  player.ready(function () {\n    player.trigger({ type: 'usage', name: 'hls-error-reload-initialized' });\n  });\n\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n\n    player.one('loadedmetadata', loadedMetadataHandler);\n\n    player.src(sourceObj);\n    player.trigger({ type: 'usage', name: 'hls-error-reload' });\n    player.play();\n  };\n\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({ type: 'usage', name: 'hls-error-reload-canceled' });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      _videoJs2['default'].log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n    lastCalled = Date.now();\n\n    return localOptions.getSource.call(player, setSource);\n  };\n\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents);\n\n  // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n  player.reloadSourceOnError = reinitPlugin;\n};\n\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nexports['default'] = reloadSourceOnError;\nmodule.exports = exports['default'];\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],14:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _playlistJs = require('./playlist.js');\n\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = (0, _playlistJs.isIncompatible)(playlist);\n    var currentlyEnabled = (0, _playlistJs.isEnabled)(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n    return enable;\n  };\n};\n\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  _classCallCheck(this, Representation);\n\n  // Get a reference to a bound version of fastQualityChange_\n  var fastChangeFunction = hlsHandler.masterPlaylistController_.fastQualityChange_.bind(hlsHandler.masterPlaylistController_);\n\n  // some playlist attributes are optional\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH;\n\n  // The id is simply the ordinality of the media playlist\n  // within the master playlist\n  this.id = id;\n\n  // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, fastChangeFunction);\n}\n\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n;\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists;\n\n  // Add a single API-specific function to the HlsHandler instance\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !(0, _playlistJs.isIncompatible)(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n\nexports['default'] = renditionSelectionMixin;\nmodule.exports = exports['default'];\n},{\"./playlist.js\":11}],15:[function(require,module,exports){\n/**\n * @file resolve-url.js\n */\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _urlToolkit = require('url-toolkit');\n\nvar _urlToolkit2 = _interopRequireDefault(_urlToolkit);\n\nvar _globalWindow = require('global/window');\n\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  }\n\n  // if the base URL is relative then combine with the current location\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = _urlToolkit2['default'].buildAbsoluteURL(_globalWindow2['default'].location.href, baseURL);\n  }\n\n  return _urlToolkit2['default'].buildAbsoluteURL(baseURL, relativeURL);\n};\n\nexports['default'] = resolveUrl;\nmodule.exports = exports['default'];\n},{\"global/window\":32,\"url-toolkit\":63}],16:[function(require,module,exports){\n(function (global){\n/**\n * @file segment-loader.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x4, _x5, _x6) { var _again = true; _function: while (_again) { var object = _x4, property = _x5, receiver = _x6; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x4 = parent; _x5 = property; _x6 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _playlist = require('./playlist');\n\nvar _playlist2 = _interopRequireDefault(_playlist);\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\nvar _sourceUpdater = require('./source-updater');\n\nvar _sourceUpdater2 = _interopRequireDefault(_sourceUpdater);\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _globalWindow = require('global/window');\n\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\nvar _videojsContribMediaSourcesEs5RemoveCuesFromTrackJs = require('videojs-contrib-media-sources/es5/remove-cues-from-track.js');\n\nvar _videojsContribMediaSourcesEs5RemoveCuesFromTrackJs2 = _interopRequireDefault(_videojsContribMediaSourcesEs5RemoveCuesFromTrackJs);\n\nvar _binUtils = require('./bin-utils');\n\nvar _mediaSegmentRequest = require('./media-segment-request');\n\nvar _ranges = require('./ranges');\n\nvar _playlistSelectors = require('./playlist-selectors');\n\n// in ms\nvar CHECK_BUFFER_DELAY = 500;\n\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments;\n\n  // determine a few boolean values to help make the branch below easier\n  // to read\n  var appendedLastSegment = segmentIndex === segments.length;\n\n  // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n\nexports.illegalMediaSwitch = illegalMediaSwitch;\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable, currentTime, targetDuration) {\n  var removeToTime = undefined;\n\n  if (seekable.length && seekable.start(0) > 0 && seekable.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  }\n\n  // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nexports.safeBackBufferTrimTime = safeBackBufferTrimTime;\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar SegmentLoader = (function (_videojs$EventTarget) {\n  _inherits(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    var _this = this;\n\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    _classCallCheck(this, SegmentLoader);\n\n    _get(Object.getPrototypeOf(SegmentLoader.prototype), 'constructor', this).call(this);\n    // check pre-conditions\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    }\n    // public properties\n    this.state = 'INIT';\n    this.bandwidth = settings.bandwidth;\n    this.throughput = { rate: 0, count: 0 };\n    this.roundTrip = NaN;\n    this.resetStats_();\n    this.mediaIndex = null;\n\n    // private settings\n    this.hasPlayed_ = settings.hasPlayed;\n    this.currentTime_ = settings.currentTime;\n    this.seekable_ = settings.seekable;\n    this.seeking_ = settings.seeking;\n    this.duration_ = settings.duration;\n    this.mediaSource_ = settings.mediaSource;\n    this.hls_ = settings.hls;\n    this.loaderType_ = settings.loaderType;\n    this.startingMedia_ = void 0;\n    this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    this.goalBufferLength_ = settings.goalBufferLength;\n\n    // private instance variables\n    this.checkBufferTimeout_ = null;\n    this.error_ = void 0;\n    this.currentTimeline_ = -1;\n    this.pendingSegment_ = null;\n    this.mimeType_ = null;\n    this.sourceUpdater_ = null;\n    this.xhrOptions_ = null;\n\n    // Fragmented mp4 playback\n    this.activeInitSegmentId_ = null;\n    this.initSegments_ = {};\n\n    this.decrypter_ = settings.decrypter;\n\n    // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n    this.syncController_ = settings.syncController;\n    this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    this.syncController_.on('syncinfoupdate', function () {\n      return _this.trigger('syncinfoupdate');\n    });\n\n    this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    });\n\n    // ...for determining the fetch location\n    this.fetchAtBuffer_ = false;\n\n    if (options.debug) {\n      this.logger_ = _videoJs2['default'].log.bind(_videoJs2['default'], 'segment-loader', this.loaderType_, '->');\n    }\n  }\n\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n  _createClass(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n      this.resetStats_();\n    }\n\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n        return;\n      }\n\n      this.abort_();\n\n      // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n      this.state = 'READY';\n\n      // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      }\n\n      // clear out the segment being processed\n      this.pendingSegment_ = null;\n    }\n\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return _videoJs2['default'].createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n\n      if (!map) {\n        return null;\n      }\n\n      var id = (0, _binUtils.initSegmentId)(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes\n        };\n      }\n\n      return storedMap || map;\n    }\n\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && (\n      // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n\n    /**\n     * load a playlist and start to fill the buffer\n     */\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_();\n\n      // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n      if (!this.playlist_) {\n        return;\n      }\n\n      // not sure if this is the best place for this\n      this.syncController_.setDateTimeMapping(this.playlist_);\n\n      // if all the configuration is ready, initialize and begin loading\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new _sourceUpdater2['default'](this.mediaSource_, this.mimeType_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options;\n\n      // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n      if (!this.hasPlayed_()) {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n      this.trigger('syncinfoupdate');\n\n      // if we were unpaused but waiting for a playlist, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        }\n\n        // the rest of this function depends on `oldPlaylist` being defined\n        return;\n      }\n\n      // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n\n      this.logger_('mediaSequenceDiff', mediaSequenceDiff);\n\n      // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      }\n\n      // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff;\n\n        // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        _globalWindow2['default'].clearTimeout(this.checkBufferTimeout_);\n\n        this.checkBufferTimeout_ = null;\n      }\n    }\n\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     */\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     */\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything() {\n      this.ended_ = false;\n      this.resetLoader();\n      this.remove(0, this.duration_());\n      this.trigger('reseteverything');\n    }\n\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end);\n      }\n      (0, _videojsContribMediaSourcesEs5RemoveCuesFromTrackJs2['default'])(start, end, this.segmentMetadataTrack_);\n    }\n\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        _globalWindow2['default'].clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = _globalWindow2['default'].setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        _globalWindow2['default'].clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = _globalWindow2['default'].setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      }\n\n      // see if we need to begin loading immediately\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      var isEndOfStream = detectEndOfStream(this.playlist_, this.mediaSource_, segmentInfo.mediaIndex);\n\n      if (isEndOfStream) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      }\n\n      // We will need to change timestampOffset of the sourceBuffer if either of\n      // the following conditions are true:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      if (segmentInfo.timeline !== this.currentTimeline_ || segmentInfo.startOfSegment !== null && segmentInfo.startOfSegment < this.sourceUpdater_.timestampOffset()) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = undefined;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      }\n\n      // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      }\n\n      // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      }\n\n      this.logger_('checkBuffer_', 'mediaIndex:', mediaIndex, 'hasPlayed:', hasPlayed, 'currentTime:', currentTime, 'syncPoint:', syncPoint, 'fetchAtBuffer:', this.fetchAtBuffer_, 'bufferedTime:', bufferedTime);\n\n      // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        this.logger_('getSync', 'mediaIndex:', mediaIndex);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      }\n\n      // Under normal playback conditions fetching is a simple walk forward\n      if (mediaIndex !== null) {\n        this.logger_('walkForward', 'mediaIndex:', mediaIndex + 1);\n        var segment = playlist.segments[mediaIndex];\n\n        if (segment && segment.end) {\n          startOfSegment = segment.end;\n        } else {\n          startOfSegment = lastBufferedEnd;\n        }\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      }\n\n      // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = _playlist2['default'].getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var mediaSourceInfo = _playlist2['default'].getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      }\n      this.logger_('getMediaIndexForTime', 'mediaIndex:', mediaIndex, 'startOfSegment:', startOfSegment);\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() ||\n      // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout ||\n      // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      }\n\n      // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n\n      var requestTimeRemaining = _playlist2['default'].estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived);\n\n      // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n      var timeUntilRebuffer = (0, _ranges.timeUntilRebuffer)(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1;\n\n      // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n      if (requestTimeRemaining <= timeUntilRebuffer) {\n        return false;\n      }\n\n      var switchCandidate = (0, _playlistSelectors.minRebufferMaxBandwidthSelector)({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer;\n\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n\n      var minimumTimeSaving = 0.5;\n\n      // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n      if (timeUntilRebuffer <= _ranges.TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      }\n\n      // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * _config2['default'].BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n\n      segmentInfo.abortRequests = (0, _mediaSegmentRequest.mediaSegmentRequest)(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.createSimplifiedSegmentObj_(segmentInfo),\n      // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10);\n\n      // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n\n        simpleSegment.key = {\n          resolvedUri: segment.key.resolvedUri,\n          iv: iv\n        };\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      }\n\n      // The request was aborted and the SegmentLoader has already been reset\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      }\n\n      // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      // an error occurred from the active pendingSegment_ so reset everything\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n\n        // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n        if (error.code === _mediaSegmentRequest.REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause();\n\n        // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n        if (error.code === _mediaSegmentRequest.REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        }\n\n        // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      }\n\n      // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime;\n\n      // if this request included an initialization segment, save that data\n      // to the initSegment cache\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n\n      segmentInfo.bytes = simpleSegment.bytes;\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n      this.handleSegment_();\n    }\n\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo);\n\n      // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && (\n      // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset);\n        // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING';\n\n      // if the media initialization segment is changing, append it\n      // before the content segment\n      if (segment.map) {\n        (function () {\n          var initId = (0, _binUtils.initSegmentId)(segment.map);\n\n          if (!_this3.activeInitSegmentId_ || _this3.activeInitSegmentId_ !== initId) {\n            var initSegment = _this3.initSegment(segment.map);\n\n            _this3.sourceUpdater_.appendBuffer(initSegment.bytes, function () {\n              _this3.activeInitSegmentId_ = initId;\n            });\n          }\n        })();\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.sourceUpdater_.appendBuffer(segmentInfo.bytes, this.handleUpdateEnd_.bind(this));\n    }\n\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      this.logger_('handleUpdateEnd_', 'segmentInfo:', this.pendingSegment_);\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n\n      this.state = 'READY';\n\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline;\n\n      // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n      this.trigger('syncinfoupdate');\n\n      // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      }\n\n      // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n      this.trigger('progress');\n\n      // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n      var isEndOfStream = detectEndOfStream(segmentInfo.playlist, this.mediaSource_, segmentInfo.mediaIndex + 1);\n\n      if (isEndOfStream) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate;\n      // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1;\n      // Multiply by 8000 to convert from bytes/millisecond to bits/second\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000);\n\n      // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n\n    /**\n     * A debugging logger noop that is set to console.log only if debugging\n     * is enabled globally\n     *\n     * @private\n     */\n  }, {\n    key: 'logger_',\n    value: function logger_() {}\n\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end;\n\n      // Do not try adding the cue if the start and end times are invalid.\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      (0, _videojsContribMediaSourcesEs5RemoveCuesFromTrackJs2['default'])(start, end, this.segmentMetadataTrack_);\n\n      var Cue = _globalWindow2['default'].WebKitDataCue || _globalWindow2['default'].VTTCue;\n      var value = {\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.uri,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data);\n\n      // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n      cue.value = value;\n\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n\n  return SegmentLoader;\n})(_videoJs2['default'].EventTarget);\n\nexports['default'] = SegmentLoader;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./bin-utils\":2,\"./config\":3,\"./media-segment-request\":7,\"./playlist\":11,\"./playlist-selectors\":10,\"./ranges\":12,\"./source-updater\":17,\"global/window\":32,\"videojs-contrib-media-sources/es5/remove-cues-from-track.js\":72}],17:[function(require,module,exports){\n(function (global){\n/**\n * @file source-updater.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\nvar noop = function noop() {};\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n */\n\nvar SourceUpdater = (function () {\n  function SourceUpdater(mediaSource, mimeType) {\n    var _this = this;\n\n    _classCallCheck(this, SourceUpdater);\n\n    var createSourceBuffer = function createSourceBuffer() {\n      _this.sourceBuffer_ = mediaSource.addSourceBuffer(mimeType);\n\n      // run completion handlers and process callbacks as updateend\n      // events fire\n      _this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this.pendingCallback_;\n\n        _this.pendingCallback_ = null;\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this.runCallback_();\n      };\n\n      _this.sourceBuffer_.addEventListener('updateend', _this.onUpdateendCallback_);\n\n      _this.runCallback_();\n    };\n\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', createSourceBuffer);\n    } else {\n      createSourceBuffer();\n    }\n  }\n\n  /**\n   * Aborts the current segment and resets the segment parser.\n   *\n   * @param {Function} done function to call when done\n   * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n   */\n\n  _createClass(SourceUpdater, [{\n    key: 'abort',\n    value: function abort(done) {\n      var _this2 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this2.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(bytes, done) {\n      var _this3 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        _this3.sourceBuffer_.appendBuffer(bytes);\n      }, done);\n    }\n\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return _videoJs2['default'].createTimeRanges();\n      }\n      return this.sourceBuffer_.buffered;\n    }\n\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this4 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this4.sourceBuffer_.remove(start, end);\n        }, noop);\n      }\n    }\n\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n  }, {\n    key: 'updating',\n    value: function updating() {\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || this.pendingCallback_;\n    }\n\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this5 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this5.sourceBuffer_.timestampOffset = offset;\n        });\n        this.timestampOffset_ = offset;\n      }\n      return this.timestampOffset_;\n    }\n\n    /**\n     * Queue a callback to run\n     */\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n\n    /**\n     * Run a queued callback\n     */\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = undefined;\n\n      if (!this.updating() && this.callbacks_.length) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n      if (this.sourceBuffer_ && this.mediaSource.readyState === 'open') {\n        this.sourceBuffer_.abort();\n      }\n    }\n  }]);\n\n  return SourceUpdater;\n})();\n\nexports['default'] = SourceUpdater;\nmodule.exports = exports['default'];\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],18:[function(require,module,exports){\n(function (global){\n/**\n * @file sync-controller.js\n */\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x2, _x3, _x4) { var _again = true; _function: while (_again) { var object = _x2, property = _x3, receiver = _x4; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x2 = parent; _x3 = property; _x4 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _muxJsLibMp4Probe = require('mux.js/lib/mp4/probe');\n\nvar _muxJsLibMp4Probe2 = _interopRequireDefault(_muxJsLibMp4Probe);\n\nvar _muxJsLibToolsTsInspectorJs = require('mux.js/lib/tools/ts-inspector.js');\n\nvar _playlist = require('./playlist');\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\nvar syncPointStrategies = [\n// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n    if (duration !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n\n      return syncPoint;\n    }\n    return null;\n  }\n},\n// Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n    if (syncController.datetimeToDisplayTime && playlist.dateTimeObject) {\n      var playlistTime = playlist.dateTimeObject.getTime() / 1000;\n      var playlistStart = playlistTime + syncController.datetimeToDisplayTime;\n      var syncPoint = {\n        time: playlistStart,\n        segmentIndex: 0\n      };\n\n      return syncPoint;\n    }\n    return null;\n  }\n},\n// Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start);\n\n        // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n    var syncPoint = null;\n\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time);\n\n          // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n\n      return syncPoint;\n    }\n    return null;\n  }\n}];\n\nexports.syncPointStrategies = syncPointStrategies;\n\nvar SyncController = (function (_videojs$EventTarget) {\n  _inherits(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n    _classCallCheck(this, SyncController);\n\n    _get(Object.getPrototypeOf(SyncController.prototype), 'constructor', this).call(this);\n    // Segment Loader state variables...\n    // ...for synching across variants\n    this.inspectCache_ = undefined;\n\n    // ...for synching across variants\n    this.timelines = [];\n    this.discontinuities = [];\n    this.datetimeToDisplayTime = null;\n\n    if (options.debug) {\n      this.logger_ = _videoJs2['default'].log.bind(_videoJs2['default'], 'sync-controller ->');\n    }\n  }\n\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n  _createClass(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      }\n\n      // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n      return this.selectSyncPoint_(syncPoints, { key: 'time', value: currentTime });\n    }\n\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration, playlist.discontinuitySequence, 0);\n\n      // Without sync-points, there is not enough information to determine the expired time\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      });\n\n      // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + (0, _playlist.sumDurations)(playlist, syncPoint.segmentIndex, 0));\n    }\n\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration, currentTimeline, currentTime) {\n      var syncPoints = [];\n\n      // Try to find a sync-point in by utilizing various strategies...\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n          this.logger_('syncPoint found via <' + strategy.name + '>:', syncPoint);\n        }\n      }\n\n      return syncPoints;\n    }\n\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint with strategy <' + bestStrategy + '> chosen: ', bestSyncPoint);\n      return bestSyncPoint;\n    }\n\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n\n      // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist sync:', newPlaylist.syncInfo);\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.dateTimeObject) {\n        var playlistTimestamp = playlist.dateTimeObject.getTime() / 1000;\n\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = undefined;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo);\n\n          // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n\n    /**\n     * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var timescales = _muxJsLibMp4Probe2['default'].timescale(segment.map.bytes);\n      var startTime = _muxJsLibMp4Probe2['default'].startTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= startTime;\n      }\n\n      return {\n        start: startTime,\n        end: startTime + segment.duration\n      };\n    }\n\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = (0, _muxJsLibToolsTsInspectorJs.inspect)(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = undefined;\n      var segmentEndTime = undefined;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n      }\n\n      return {\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n      return this.timelines[timeline].mapping;\n    }\n\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        this.logger_('tsO:', segmentInfo.timestampOffset);\n\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment;\n\n      // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = undefined;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - (0, _playlist.sumDurations)(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + (0, _playlist.sumDurations)(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n\n    /**\n     * A debugging logger noop that is set to console.log only if debugging\n     * is enabled globally\n     *\n     * @private\n     */\n  }, {\n    key: 'logger_',\n    value: function logger_() {}\n  }]);\n\n  return SyncController;\n})(_videoJs2['default'].EventTarget);\n\nexports['default'] = SyncController;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./playlist\":11,\"mux.js/lib/mp4/probe\":57,\"mux.js/lib/tools/ts-inspector.js\":59}],19:[function(require,module,exports){\n\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n\n  var result = {\n    codecCount: 0\n  };\n  var parsed = undefined;\n\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2;\n\n  // parse the video codec\n  parsed = /(^|\\s|,)+(avc1)([^ ,]*)/i.exec(codecs);\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  }\n\n  // parse the last field of the audio codec\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n\n  return result;\n};\nexports.parseCodecs = parseCodecs;\n},{}],20:[function(require,module,exports){\n(function (global){\n/**\n * @file vtt-segment-loader.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x3, _x4, _x5) { var _again = true; _function: while (_again) { var object = _x3, property = _x4, receiver = _x5; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x3 = parent; _x4 = property; _x5 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _segmentLoader = require('./segment-loader');\n\nvar _segmentLoader2 = _interopRequireDefault(_segmentLoader);\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\nvar _globalWindow = require('global/window');\n\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\nvar _videojsContribMediaSourcesEs5RemoveCuesFromTrackJs = require('videojs-contrib-media-sources/es5/remove-cues-from-track.js');\n\nvar _videojsContribMediaSourcesEs5RemoveCuesFromTrackJs2 = _interopRequireDefault(_videojsContribMediaSourcesEs5RemoveCuesFromTrackJs);\n\nvar _binUtils = require('./bin-utils');\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (char) {\n  return char.charCodeAt(0);\n}));\n\nvar uintToString = function uintToString(uintArray) {\n  return String.fromCharCode.apply(null, uintArray);\n};\n\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = (function (_SegmentLoader) {\n  _inherits(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    _classCallCheck(this, VTTSegmentLoader);\n\n    _get(Object.getPrototypeOf(VTTSegmentLoader.prototype), 'constructor', this).call(this, settings, options);\n\n    // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n    this.mediaSource_ = null;\n\n    this.subtitlesTrack_ = null;\n  }\n\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  _createClass(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return _videoJs2['default'].createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n\n      return _videoJs2['default'].createTimeRanges([[start, end]]);\n    }\n\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n\n      if (!map) {\n        return null;\n      }\n\n      var id = (0, _binUtils.initSegmentId)(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track;\n\n      // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      (0, _videojsContribMediaSourcesEs5RemoveCuesFromTrackJs2['default'])(start, end, this.subtitlesTrack_);\n    }\n\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      }\n\n      // see if we need to begin loading immediately\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this.state = 'READY';\n          if (!_this.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n      return segmentInfo;\n    }\n\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this2 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n\n      // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n      if (typeof _globalWindow2['default'].WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n        var _ret = (function () {\n\n          var loadHandler = function loadHandler() {\n            _this2.handleSegment_();\n          };\n\n          _this2.state = 'WAITING_ON_VTTJS';\n          _this2.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n          _this2.subtitlesTrack_.tech_.one('vttjserror', function () {\n            _this2.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n            _this2.error({\n              message: 'Error loading vtt.js'\n            });\n            _this2.state = 'READY';\n            _this2.pause();\n            _this2.trigger('error');\n          });\n\n          return {\n            v: undefined\n          };\n        })();\n\n        if (typeof _ret === 'object') return _ret.v;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this2.subtitlesTrack_.addCue(cue);\n      });\n\n      this.handleUpdateEnd_();\n    }\n\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = undefined;\n      var decodeBytesToString = false;\n\n      if (typeof _globalWindow2['default'].TextDecoder === 'function') {\n        decoder = new _globalWindow2['default'].TextDecoder('utf8');\n      } else {\n        decoder = _globalWindow2['default'].WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new _globalWindow2['default'].WebVTT.Parser(_globalWindow2['default'], _globalWindow2['default'].vttjs, decoder);\n\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = { MPEGTS: 0, LOCAL: 0 };\n\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n      parser.onparsingerror = function (error) {\n        _videoJs2['default'].log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uintToString(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uintToString(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n\n  return VTTSegmentLoader;\n})(_segmentLoader2['default']);\n\nexports['default'] = VTTSegmentLoader;\nmodule.exports = exports['default'];\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./bin-utils\":2,\"./segment-loader\":16,\"global/window\":32,\"videojs-contrib-media-sources/es5/remove-cues-from-track.js\":72}],21:[function(require,module,exports){\n(function (global){\n/**\n * @file xhr.js\n */\n\n/**\n * A wrapper for videojs.xhr that tracks bandwidth.\n *\n * @param {Object} options options for the XHR\n * @param {Function} callback the callback to call when done\n * @return {Request} the xhr request that is going to be made\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\nvar xhrFactory = function xhrFactory() {\n  var xhr = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = (0, _videoJs.mergeOptions)({\n      timeout: 45e3\n    }, options);\n\n    // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n    var beforeRequest = XhrFunction.beforeRequest || _videoJs2['default'].Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = (0, _videoJs.xhr)(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      }\n\n      // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr;\n};\n\nexports['default'] = xhrFactory;\nmodule.exports = exports['default'];\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],22:[function(require,module,exports){\n/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = undefined;\n  var x = undefined;\n  var xInv = undefined;\n  var d = [];\n  var th = [];\n  var x2 = undefined;\n  var x4 = undefined;\n  var x8 = undefined;\n  var s = undefined;\n  var tEnc = undefined;\n  var tDec = undefined;\n\n  // Compute double and third tables\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x;\n\n    // Compute MixColumns\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  }\n\n  // Compactify. Considerable speedup on Firefox.\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n  return tables;\n};\nvar aesTables = null;\n\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = (function () {\n  function AES(key) {\n    _classCallCheck(this, AES);\n\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n    if (!aesTables) {\n      aesTables = precompute();\n    }\n    // then make a copy of that object for use\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = undefined;\n    var j = undefined;\n    var tmp = undefined;\n    var encKey = undefined;\n    var decKey = undefined;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey];\n\n    // schedule encryption keys\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1];\n\n      // apply sbox\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n        // shift rows and add rcon\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    }\n\n    // schedule decryption keys\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n  _createClass(AES, [{\n    key: 'decrypt',\n    value: function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n      var key = this._key[1];\n      // state variables a,b,c,d are loaded with pre-whitened data\n      var a = encrypted0 ^ key[0];\n      var b = encrypted3 ^ key[1];\n      var c = encrypted2 ^ key[2];\n      var d = encrypted1 ^ key[3];\n      var a2 = undefined;\n      var b2 = undefined;\n      var c2 = undefined;\n\n      // key.length === 2 ?\n      var nInnerRounds = key.length / 4 - 2;\n      var i = undefined;\n      var kIndex = 4;\n      var table = this._tables[1];\n\n      // load up the tables\n      var table0 = table[0];\n      var table1 = table[1];\n      var table2 = table[2];\n      var table3 = table[3];\n      var sbox = table[4];\n\n      // Inner rounds. Cribbed from OpenSSL.\n      for (i = 0; i < nInnerRounds; i++) {\n        a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n        b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n        c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n        d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n        kIndex += 4;\n        a = a2;b = b2;c = c2;\n      }\n\n      // Last round.\n      for (i = 0; i < 4; i++) {\n        out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n        a2 = a;a = b;b = c;c = d;d = a2;\n      }\n    }\n  }]);\n\n  return AES;\n})();\n\nexports['default'] = AES;\nmodule.exports = exports['default'];\n},{}],23:[function(require,module,exports){\n/**\n * @file async-stream.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _stream = require('./stream');\n\nvar _stream2 = _interopRequireDefault(_stream);\n\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\nvar AsyncStream = (function (_Stream) {\n  _inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    _classCallCheck(this, AsyncStream);\n\n    _get(Object.getPrototypeOf(AsyncStream.prototype), 'constructor', this).call(this, _stream2['default']);\n    this.jobs = [];\n    this.delay = 1;\n    this.timeout_ = null;\n  }\n\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n  _createClass(AsyncStream, [{\n    key: 'processJob_',\n    value: function processJob_() {\n      this.jobs.shift()();\n      if (this.jobs.length) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      } else {\n        this.timeout_ = null;\n      }\n    }\n\n    /**\n     * push a job into the stream\n     *\n     * @param {Function} job the job to push into the stream\n     */\n  }, {\n    key: 'push',\n    value: function push(job) {\n      this.jobs.push(job);\n      if (!this.timeout_) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      }\n    }\n  }]);\n\n  return AsyncStream;\n})(_stream2['default']);\n\nexports['default'] = AsyncStream;\nmodule.exports = exports['default'];\n},{\"./stream\":26}],24:[function(require,module,exports){\n/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _aes = require('./aes');\n\nvar _aes2 = _interopRequireDefault(_aes);\n\nvar _asyncStream = require('./async-stream');\n\nvar _asyncStream2 = _interopRequireDefault(_asyncStream);\n\nvar _pkcs7 = require('pkcs7');\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n  var decipher = new _aes2['default'](Array.prototype.slice.call(key));\n\n  // byte and word-level access for the decrypted output\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer);\n\n  // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n  var init0 = undefined;\n  var init1 = undefined;\n  var init2 = undefined;\n  var init3 = undefined;\n  var encrypted0 = undefined;\n  var encrypted1 = undefined;\n  var encrypted2 = undefined;\n  var encrypted3 = undefined;\n\n  // iteration variable\n  var wordIx = undefined;\n\n  // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3];\n\n  // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n    // decrypt the block\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n    // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n    // setup the IV for the next round\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n\nexports.decrypt = decrypt;\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\nvar Decrypter = (function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    _classCallCheck(this, Decrypter);\n\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n\n    this.asyncStream_ = new _asyncStream2['default']();\n\n    // split up the encryption job and do the individual chunks asynchronously\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    }\n    // invoke the done() callback when everything is finished\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, (0, _pkcs7.unpad)(decrypted));\n    });\n  }\n\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n  _createClass(Decrypter, [{\n    key: 'decryptChunk_',\n\n    /**\n     * @private\n     */\n    value: function decryptChunk_(encrypted, key, initVector, decrypted) {\n      return function () {\n        var bytes = decrypt(encrypted, key, initVector);\n\n        decrypted.set(bytes, encrypted.byteOffset);\n      };\n    }\n  }], [{\n    key: 'STEP',\n    get: function get() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n\n  return Decrypter;\n})();\n\nexports.Decrypter = Decrypter;\nexports['default'] = {\n  Decrypter: Decrypter,\n  decrypt: decrypt\n};\n},{\"./aes\":22,\"./async-stream\":23,\"pkcs7\":28}],25:[function(require,module,exports){\n/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _decrypter = require('./decrypter');\n\nvar _asyncStream = require('./async-stream');\n\nvar _asyncStream2 = _interopRequireDefault(_asyncStream);\n\nexports['default'] = {\n  decrypt: _decrypter.decrypt,\n  Decrypter: _decrypter.Decrypter,\n  AsyncStream: _asyncStream2['default']\n};\nmodule.exports = exports['default'];\n},{\"./async-stream\":23,\"./decrypter\":24}],26:[function(require,module,exports){\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar Stream = (function () {\n  function Stream() {\n    _classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n  _createClass(Stream, [{\n    key: 'on',\n    value: function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n      this.listeners[type].push(listener);\n    }\n\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {String} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {Boolean} if we could turn it off or not\n     */\n  }, {\n    key: 'off',\n    value: function off(type, listener) {\n      var index = undefined;\n\n      if (!this.listeners[type]) {\n        return false;\n      }\n      index = this.listeners[type].indexOf(listener);\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {String} type the event name\n     */\n  }, {\n    key: 'trigger',\n    value: function trigger(type) {\n      var callbacks = undefined;\n      var i = undefined;\n      var length = undefined;\n      var args = undefined;\n\n      callbacks = this.listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = Array.prototype.slice.call(arguments, 1);\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    }\n\n    /**\n     * Destroys the stream and cleans up.\n     */\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.listeners = {};\n    }\n\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n  }, {\n    key: 'pipe',\n    value: function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    }\n  }]);\n\n  return Stream;\n})();\n\nexports['default'] = Stream;\nmodule.exports = exports['default'];\n},{}],27:[function(require,module,exports){\n/*\n * pkcs7.pad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\n'use strict';\n\nvar PADDING;\n\n/**\n * Returns a new Uint8Array that is padded with PKCS#7 padding.\n * @param plaintext {Uint8Array} the input bytes before encryption\n * @return {Uint8Array} the padded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nmodule.exports = function pad(plaintext) {\n  var padding = PADDING[(plaintext.byteLength % 16) || 0],\n      result = new Uint8Array(plaintext.byteLength + padding.length);\n  result.set(plaintext);\n  result.set(padding, plaintext.byteLength);\n  return result;\n};\n\n// pre-define the padding values\nPADDING = [\n  [16, 16, 16, 16,\n   16, 16, 16, 16,\n   16, 16, 16, 16,\n   16, 16, 16, 16],\n\n  [15, 15, 15, 15,\n   15, 15, 15, 15,\n   15, 15, 15, 15,\n   15, 15, 15],\n\n  [14, 14, 14, 14,\n   14, 14, 14, 14,\n   14, 14, 14, 14,\n   14, 14],\n\n  [13, 13, 13, 13,\n   13, 13, 13, 13,\n   13, 13, 13, 13,\n   13],\n\n  [12, 12, 12, 12,\n   12, 12, 12, 12,\n   12, 12, 12, 12],\n\n  [11, 11, 11, 11,\n   11, 11, 11, 11,\n   11, 11, 11],\n\n  [10, 10, 10, 10,\n   10, 10, 10, 10,\n   10, 10],\n\n  [9, 9, 9, 9,\n   9, 9, 9, 9,\n   9],\n\n  [8, 8, 8, 8,\n   8, 8, 8, 8],\n\n  [7, 7, 7, 7,\n   7, 7, 7],\n\n  [6, 6, 6, 6,\n   6, 6],\n\n  [5, 5, 5, 5,\n   5],\n\n  [4, 4, 4, 4],\n\n  [3, 3, 3],\n\n  [2, 2],\n\n  [1]\n];\n\n},{}],28:[function(require,module,exports){\n/*\n * pkcs7\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\n'use strict';\n\nexports.pad = require('./pad.js');\nexports.unpad = require('./unpad.js');\n\n},{\"./pad.js\":27,\"./unpad.js\":29}],29:[function(require,module,exports){\n/*\n * pkcs7.unpad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\n'use strict';\n\n/**\n * Returns the subarray of a Uint8Array without PKCS#7 padding.\n * @param padded {Uint8Array} unencrypted bytes that have been padded\n * @return {Uint8Array} the unpadded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nmodule.exports = function unpad(padded) {\n  return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n};\n\n},{}],30:[function(require,module,exports){\n\n},{}],31:[function(require,module,exports){\n(function (global){\nvar topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"min-document\":30}],32:[function(require,module,exports){\n(function (global){\nvar win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],33:[function(require,module,exports){\n'use strict';\n\nvar _lineStream = require('./line-stream');\n\nvar _lineStream2 = _interopRequireDefault(_lineStream);\n\nvar _parseStream = require('./parse-stream');\n\nvar _parseStream2 = _interopRequireDefault(_parseStream);\n\nvar _parser = require('./parser');\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nmodule.exports = {\n  LineStream: _lineStream2['default'],\n  ParseStream: _parseStream2['default'],\n  Parser: _parser2['default']\n}; /**\n    * @file m3u8/index.js\n    *\n    * Utilities for parsing M3U8 files. If the entire manifest is available,\n    * `Parser` will create an object representation with enough detail for managing\n    * playback. `ParseStream` and `LineStream` are lower-level parsing primitives\n    * that do not assume the entirety of the manifest is ready and expose a\n    * ReadableStream-like interface.\n    */\n},{\"./line-stream\":34,\"./parse-stream\":35,\"./parser\":36}],34:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _stream = require('./stream');\n\nvar _stream2 = _interopRequireDefault(_stream);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file m3u8/line-stream.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\nvar LineStream = function (_Stream) {\n  _inherits(LineStream, _Stream);\n\n  function LineStream() {\n    _classCallCheck(this, LineStream);\n\n    var _this = _possibleConstructorReturn(this, (LineStream.__proto__ || Object.getPrototypeOf(LineStream)).call(this));\n\n    _this.buffer = '';\n    return _this;\n  }\n\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {String} data the text to process\n   */\n\n\n  _createClass(LineStream, [{\n    key: 'push',\n    value: function push(data) {\n      var nextNewline = void 0;\n\n      this.buffer += data;\n      nextNewline = this.buffer.indexOf('\\n');\n\n      for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n        this.trigger('data', this.buffer.substring(0, nextNewline));\n        this.buffer = this.buffer.substring(nextNewline + 1);\n      }\n    }\n  }]);\n\n  return LineStream;\n}(_stream2['default']);\n\nexports['default'] = LineStream;\n},{\"./stream\":37}],35:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _stream = require('./stream');\n\nvar _stream2 = _interopRequireDefault(_stream);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file m3u8/parse-stream.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n\n/**\n * Parse attributes from a line given the seperator\n *\n * @param {String} attributes the attibute line to parse\n */\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr = void 0;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    }\n\n    // split the key and value\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1);\n    // trim whitespace and remove optional quotes around the value\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n  return result;\n};\n\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\nvar ParseStream = function (_Stream) {\n  _inherits(ParseStream, _Stream);\n\n  function ParseStream() {\n    _classCallCheck(this, ParseStream);\n\n    return _possibleConstructorReturn(this, (ParseStream.__proto__ || Object.getPrototypeOf(ParseStream)).call(this));\n  }\n\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {String} line a single line of an M3U8 file to parse\n   */\n\n\n  _createClass(ParseStream, [{\n    key: 'push',\n    value: function push(line) {\n      var match = void 0;\n      var event = void 0;\n\n      // strip whitespace\n      line = line.replace(/^[\\u0000\\s]+|[\\u0000\\s]+$/g, '');\n      if (line.length === 0) {\n        // ignore empty lines\n        return;\n      }\n\n      // URIs\n      if (line[0] !== '#') {\n        this.trigger('data', {\n          type: 'uri',\n          uri: line\n        });\n        return;\n      }\n\n      // Comments\n      if (line.indexOf('#EXT') !== 0) {\n        this.trigger('data', {\n          type: 'comment',\n          text: line.slice(1)\n        });\n        return;\n      }\n\n      // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n      line = line.replace('\\r', '');\n\n      // Tags\n      match = /^#EXTM3U/.exec(line);\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n        return;\n      }\n      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n        if (match[2]) {\n          event.title = match[2];\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'totalduration'\n        };\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'byterange'\n        };\n        if (match[1]) {\n          event.length = parseInt(match[1], 10);\n        }\n        if (match[2]) {\n          event.offset = parseInt(match[2], 10);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-MAP:?(.*)$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          var attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n          if (attributes.BYTERANGE) {\n            var _attributes$BYTERANGE = attributes.BYTERANGE.split('@'),\n                _attributes$BYTERANGE2 = _slicedToArray(_attributes$BYTERANGE, 2),\n                length = _attributes$BYTERANGE2[0],\n                offset = _attributes$BYTERANGE2[1];\n\n            event.byterange = {};\n            if (length) {\n              event.byterange.length = parseInt(length, 10);\n            }\n            if (offset) {\n              event.byterange.offset = parseInt(offset, 10);\n            }\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            var split = event.attributes.RESOLUTION.split('x');\n            var resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n            event.attributes.RESOLUTION = resolution;\n          }\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-MEDIA:?(.*)$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-ENDLIST/.exec(line);\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n        return;\n      }\n      match = /^#EXT-X-DISCONTINUITY/.exec(line);\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n        return;\n      }\n      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-KEY:?(.*)$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          // parse the IV string into a Uint32Array\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n        this.trigger('data', event);\n        return;\n      }\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(line);\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n        this.trigger('data', event);\n        return;\n      }\n\n      // unknown tag type\n      this.trigger('data', {\n        type: 'tag',\n        data: line.slice(4)\n      });\n    }\n  }]);\n\n  return ParseStream;\n}(_stream2['default']);\n\nexports['default'] = ParseStream;\n},{\"./stream\":37}],36:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _stream = require('./stream');\n\nvar _stream2 = _interopRequireDefault(_stream);\n\nvar _lineStream = require('./line-stream');\n\nvar _lineStream2 = _interopRequireDefault(_lineStream);\n\nvar _parseStream = require('./parse-stream');\n\nvar _parseStream2 = _interopRequireDefault(_parseStream);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file m3u8/parser.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\nvar Parser = function (_Stream) {\n  _inherits(Parser, _Stream);\n\n  function Parser() {\n    _classCallCheck(this, Parser);\n\n    var _this = _possibleConstructorReturn(this, (Parser.__proto__ || Object.getPrototypeOf(Parser)).call(this));\n\n    _this.lineStream = new _lineStream2['default']();\n    _this.parseStream = new _parseStream2['default']();\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n    var self = _this;\n    /* eslint-enable consistent-this */\n    var uris = [];\n    var currentUri = {};\n    // if specified, the active EXT-X-MAP definition\n    var currentMap = void 0;\n    // if specified, the active decryption key\n    var _key = void 0;\n    var noop = function noop() {};\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    };\n    // group segments into numbered timelines delineated by discontinuities\n    var currentTimeline = 0;\n\n    // the manifest is empty until the parse stream begins delivering data\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    };\n\n    // update the manifest with the m3u8 entry from the parse stream\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup = void 0;\n      var rendition = void 0;\n\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              }\n              // clear the active encryption key\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              }\n\n              // setup an encryption key for upcoming segments\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              }\n\n              // find the media group, creating defaults as necessary\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']];\n\n              // collect the rendition metadata\n              rendition = {\n                'default': /yes/i.test(entry.attributes.DEFAULT)\n              };\n              if (rendition['default']) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              }\n\n              // insert the new rendition\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              this.manifest.dateTimeString = entry.dateTimeString;\n              this.manifest.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.totalDuration = entry.duration;\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri);\n\n          // if no explicit duration was declared, use the target duration\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          }\n          // annotate with encryption information, if necessary\n          if (_key) {\n            currentUri.key = _key;\n          }\n          currentUri.timeline = currentTimeline;\n          // annotate with initialization segment information, if necessary\n          if (currentMap) {\n            currentUri.map = currentMap;\n          }\n\n          // prepare for the next URI\n          currentUri = {};\n        },\n        comment: function comment() {\n          // comments are not important for playback\n        }\n      })[entry.type].call(self);\n    });\n\n    return _this;\n  }\n\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {String} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  _createClass(Parser, [{\n    key: 'push',\n    value: function push(chunk) {\n      this.lineStream.push(chunk);\n    }\n\n    /**\n     * Flush any remaining input. This can be handy if the last line of an M3U8\n     * manifest did not contain a trailing newline but the file has been\n     * completely received.\n     */\n\n  }, {\n    key: 'end',\n    value: function end() {\n      // flush any buffered input\n      this.lineStream.push('\\n');\n    }\n  }]);\n\n  return Parser;\n}(_stream2['default']);\n\nexports['default'] = Parser;\n},{\"./line-stream\":34,\"./parse-stream\":35,\"./stream\":37}],37:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    _classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  _createClass(Stream, [{\n    key: 'on',\n    value: function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n      this.listeners[type].push(listener);\n    }\n\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {String} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {Boolean} if we could turn it off or not\n     */\n\n  }, {\n    key: 'off',\n    value: function off(type, listener) {\n      if (!this.listeners[type]) {\n        return false;\n      }\n\n      var index = this.listeners[type].indexOf(listener);\n\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {String} type the event name\n     */\n\n  }, {\n    key: 'trigger',\n    value: function trigger(type) {\n      var callbacks = this.listeners[type];\n      var i = void 0;\n      var length = void 0;\n      var args = void 0;\n\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = Array.prototype.slice.call(arguments, 1);\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    }\n\n    /**\n     * Destroys the stream and cleans up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.listeners = {};\n    }\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n  }, {\n    key: 'pipe',\n    value: function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    }\n  }]);\n\n  return Stream;\n}();\n\nexports['default'] = Stream;\n},{}],38:[function(require,module,exports){\n/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * A stream-based aac to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js');\n\n// Constants\nvar AacStream;\n\n/**\n * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n */\n\nAacStream = function() {\n  var\n    everything = new Uint8Array(),\n    timeStamp = 0;\n\n  AacStream.prototype.init.call(this);\n\n  this.setTimestamp = function(timestamp) {\n    timeStamp = timestamp;\n  };\n\n  this.parseId3TagSize = function(header, byteIndex) {\n    var\n      returnSize = (header[byteIndex + 6] << 21) |\n                   (header[byteIndex + 7] << 14) |\n                   (header[byteIndex + 8] << 7) |\n                   (header[byteIndex + 9]),\n      flags = header[byteIndex + 5],\n      footerPresent = (flags & 16) >> 4;\n\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n    return returnSize + 10;\n  };\n\n  this.parseAdtsSize = function(header, byteIndex) {\n    var\n      lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n      middle = header[byteIndex + 4] << 3,\n      highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n    return (highTwo | middle) | lowThree;\n  };\n\n  this.push = function(bytes) {\n    var\n      frameSize = 0,\n      byteIndex = 0,\n      bytesLeft,\n      chunk,\n      packet,\n      tempLength;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (everything.length) {\n      tempLength = everything.length;\n      everything = new Uint8Array(bytes.byteLength + tempLength);\n      everything.set(everything.subarray(0, tempLength));\n      everything.set(bytes, tempLength);\n    } else {\n      everything = bytes;\n    }\n\n    while (everything.length - byteIndex >= 3) {\n      if ((everything[byteIndex] === 'I'.charCodeAt(0)) &&\n          (everything[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n          (everything[byteIndex + 2] === '3'.charCodeAt(0))) {\n\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (everything.length - byteIndex < 10) {\n          break;\n        }\n\n        // check framesize\n        frameSize = this.parseId3TagSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > everything.length) {\n          break;\n        }\n        chunk = {\n          type: 'timed-metadata',\n          data: everything.subarray(byteIndex, byteIndex + frameSize)\n        };\n        this.trigger('data', chunk);\n        byteIndex += frameSize;\n        continue;\n      } else if ((everything[byteIndex] & 0xff === 0xff) &&\n                 ((everything[byteIndex + 1] & 0xf0) === 0xf0)) {\n\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (everything.length - byteIndex < 7) {\n          break;\n        }\n\n        frameSize = this.parseAdtsSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > everything.length) {\n          break;\n        }\n\n        packet = {\n          type: 'audio',\n          data: everything.subarray(byteIndex, byteIndex + frameSize),\n          pts: timeStamp,\n          dts: timeStamp\n        };\n        this.trigger('data', packet);\n        byteIndex += frameSize;\n        continue;\n      }\n      byteIndex++;\n    }\n    bytesLeft = everything.length - byteIndex;\n\n    if (bytesLeft > 0) {\n      everything = everything.subarray(byteIndex);\n    } else {\n      everything = new Uint8Array();\n    }\n  };\n};\n\nAacStream.prototype = new Stream();\n\nmodule.exports = AacStream;\n\n},{\"../utils/stream.js\":62}],39:[function(require,module,exports){\n/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [\n  96000,\n  88200,\n  64000,\n  48000,\n  44100,\n  32000,\n  24000,\n  22050,\n  16000,\n  12000,\n  11025,\n  8000,\n  7350\n];\n\nvar parseSyncSafeInteger = function(data) {\n  return (data[0] << 21) |\n          (data[1] << 14) |\n          (data[2] << 7) |\n          (data[3]);\n};\n\n// return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\nvar percentEncode = function(bytes, start, end) {\n  var i, result = '';\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n  return result;\n};\n\n// return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nvar parseIso88591 = function(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function(header, byteIndex) {\n  var\n    returnSize = (header[byteIndex + 6] << 21) |\n                 (header[byteIndex + 7] << 14) |\n                 (header[byteIndex + 8] << 7) |\n                 (header[byteIndex + 9]),\n    flags = header[byteIndex + 5],\n    footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function(header, byteIndex) {\n  var\n    lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n    middle = header[byteIndex + 4] << 3,\n    highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n  return (highTwo | middle) | lowThree;\n};\n\nvar parseType = function(header, byteIndex) {\n  if ((header[byteIndex] === 'I'.charCodeAt(0)) &&\n      (header[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n      (header[byteIndex + 2] === '3'.charCodeAt(0))) {\n    return 'timed-metadata';\n  } else if ((header[byteIndex] & 0xff === 0xff) &&\n             ((header[byteIndex + 1] & 0xf0) === 0xf0)) {\n    return 'audio';\n  }\n  return null;\n};\n\nvar parseSampleRate = function(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function(packet) {\n  var frameStart, frameSize, frame, frameHeader;\n\n  // find the start of the first frame and the end of the tag\n  frameStart = 10;\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  }\n\n  // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n    if (frameSize < 1) {\n      return null;\n    }\n    frameHeader = String.fromCharCode(packet[frameStart],\n                                      packet[frameStart + 1],\n                                      packet[frameStart + 2],\n                                      packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = ((d[3] & 0x01)  << 30) |\n                       (d[4]  << 22) |\n                       (d[5] << 14) |\n                       (d[6] << 6) |\n                       (d[7] >>> 2);\n            size *= 4;\n            size += d[7] & 0x03;\n\n            return size;\n          }\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n  return null;\n};\n\nmodule.exports = {\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};\n\n},{}],40:[function(require,module,exports){\n'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar AdtsStream;\n\nvar\n  ADTS_SAMPLING_FREQUENCIES = [\n    96000,\n    88200,\n    64000,\n    48000,\n    44100,\n    32000,\n    24000,\n    22050,\n    16000,\n    12000,\n    11025,\n    8000,\n    7350\n  ];\n\n/*\n * Accepts a ElementaryStream and emits data events with parsed\n * AAC Audio Frames of the individual packets. Input audio in ADTS\n * format is unpacked and re-emitted as AAC frames.\n *\n * @see http://wiki.multimedia.cx/index.php?title=ADTS\n * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n */\nAdtsStream = function() {\n  var buffer;\n\n  AdtsStream.prototype.init.call(this);\n\n  this.push = function(packet) {\n    var\n      i = 0,\n      frameNum = 0,\n      frameLength,\n      protectionSkipBytes,\n      frameEnd,\n      oldBuffer,\n      sampleCount,\n      adtsFrameDuration;\n\n    if (packet.type !== 'audio') {\n      // ignore non-audio data\n      return;\n    }\n\n    // Prepend any data in the buffer to the input data so that we can parse\n    // aac frames the cross a PES packet boundary\n    if (buffer) {\n      oldBuffer = buffer;\n      buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n      buffer.set(oldBuffer);\n      buffer.set(packet.data, oldBuffer.byteLength);\n    } else {\n      buffer = packet.data;\n    }\n\n    // unpack any ADTS frames which have been fully received\n    // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n    while (i + 5 < buffer.length) {\n\n      // Loook for the start of an ADTS header..\n      if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n\n      // The protection skip bit tells us if we have 2 bytes of CRC data at the\n      // end of the ADTS header\n      protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2;\n\n      // Frame length is a 13 bit integer starting 16 bits from the\n      // end of the sync sequence\n      frameLength = ((buffer[i + 3] & 0x03) << 11) |\n        (buffer[i + 4] << 3) |\n        ((buffer[i + 5] & 0xe0) >> 5);\n\n      sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n      adtsFrameDuration = (sampleCount * 90000) /\n        ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n\n      frameEnd = i + frameLength;\n\n      // If we don't have enough data to actually finish this ADTS frame, return\n      // and wait for more data\n      if (buffer.byteLength < frameEnd) {\n        return;\n      }\n\n      // Otherwise, deliver the complete AAC frame\n      this.trigger('data', {\n        pts: packet.pts + (frameNum * adtsFrameDuration),\n        dts: packet.dts + (frameNum * adtsFrameDuration),\n        sampleCount: sampleCount,\n        audioobjecttype: ((buffer[i + 2] >>> 6) & 0x03) + 1,\n        channelcount: ((buffer[i + 2] & 1) << 2) |\n          ((buffer[i + 3] & 0xc0) >>> 6),\n        samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n        samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n        // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n        samplesize: 16,\n        data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n      });\n\n      // If the buffer is empty, clear it and return\n      if (buffer.byteLength === frameEnd) {\n        buffer = undefined;\n        return;\n      }\n\n      frameNum++;\n\n      // Remove the finished frame from the buffer and start the process again\n      buffer = buffer.subarray(frameEnd);\n    }\n  };\n  this.flush = function() {\n    this.trigger('done');\n  };\n};\n\nAdtsStream.prototype = new Stream();\n\nmodule.exports = AdtsStream;\n\n},{\"../utils/stream.js\":62}],41:[function(require,module,exports){\n'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar ExpGolomb = require('../utils/exp-golomb.js');\n\nvar H264Stream, NalByteStream;\nvar PROFILES_WITH_OPTIONAL_SPS_DATA;\n\n/**\n * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n */\nNalByteStream = function() {\n  var\n    syncPoint = 0,\n    i,\n    buffer;\n  NalByteStream.prototype.init.call(this);\n\n  this.push = function(data) {\n    var swapBuffer;\n\n    if (!buffer) {\n      buffer = data.data;\n    } else {\n      swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n      swapBuffer.set(buffer);\n      swapBuffer.set(data.data, buffer.byteLength);\n      buffer = swapBuffer;\n    }\n\n    // Rec. ITU-T H.264, Annex B\n    // scan for NAL unit boundaries\n\n    // a match looks like this:\n    // 0 0 1 .. NAL .. 0 0 1\n    // ^ sync point        ^ i\n    // or this:\n    // 0 0 1 .. NAL .. 0 0 0\n    // ^ sync point        ^ i\n\n    // advance the sync point to a NAL start, if necessary\n    for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n      if (buffer[syncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        i = syncPoint + 5;\n        break;\n      }\n    }\n\n    while (i < buffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (buffer[i]) {\n      case 0:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0) {\n          i += 2;\n          break;\n        } else if (buffer[i - 2] !== 0) {\n          i++;\n          break;\n        }\n\n        // deliver the NAL unit if it isn't empty\n        if (syncPoint + 3 !== i - 2) {\n          this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        }\n\n        // drop trailing zeroes\n        do {\n          i++;\n        } while (buffer[i] !== 1 && i < buffer.length);\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      case 1:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0 ||\n            buffer[i - 2] !== 0) {\n          i += 3;\n          break;\n        }\n\n        // deliver the NAL unit\n        this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      default:\n        // the current byte isn't a one or zero, so it cannot be part\n        // of a sync sequence\n        i += 3;\n        break;\n      }\n    }\n    // filter out the NAL units that were delivered\n    buffer = buffer.subarray(syncPoint);\n    i -= syncPoint;\n    syncPoint = 0;\n  };\n\n  this.flush = function() {\n    // deliver the last buffered NAL unit\n    if (buffer && buffer.byteLength > 3) {\n      this.trigger('data', buffer.subarray(syncPoint + 3));\n    }\n    // reset the stream state\n    buffer = null;\n    syncPoint = 0;\n    this.trigger('done');\n  };\n};\nNalByteStream.prototype = new Stream();\n\n// values of profile_idc that indicate additional fields are included in the SPS\n// see Recommendation ITU-T H.264 (4/2013),\n// 7.3.2.1.1 Sequence parameter set data syntax\nPROFILES_WITH_OPTIONAL_SPS_DATA = {\n  100: true,\n  110: true,\n  122: true,\n  244: true,\n  44: true,\n  83: true,\n  86: true,\n  118: true,\n  128: true,\n  138: true,\n  139: true,\n  134: true\n};\n\n/**\n * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n * events.\n */\nH264Stream = function() {\n  var\n    nalByteStream = new NalByteStream(),\n    self,\n    trackId,\n    currentPts,\n    currentDts,\n\n    discardEmulationPreventionBytes,\n    readSequenceParameterSet,\n    skipScalingList;\n\n  H264Stream.prototype.init.call(this);\n  self = this;\n\n  this.push = function(packet) {\n    if (packet.type !== 'video') {\n      return;\n    }\n    trackId = packet.trackId;\n    currentPts = packet.pts;\n    currentDts = packet.dts;\n\n    nalByteStream.push(packet);\n  };\n\n  nalByteStream.on('data', function(data) {\n    var\n      event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data\n      };\n\n    switch (data[0] & 0x1f) {\n    case 0x05:\n      event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n      break;\n    case 0x06:\n      event.nalUnitType = 'sei_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      break;\n    case 0x07:\n      event.nalUnitType = 'seq_parameter_set_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      event.config = readSequenceParameterSet(event.escapedRBSP);\n      break;\n    case 0x08:\n      event.nalUnitType = 'pic_parameter_set_rbsp';\n      break;\n    case 0x09:\n      event.nalUnitType = 'access_unit_delimiter_rbsp';\n      break;\n\n    default:\n      break;\n    }\n    self.trigger('data', event);\n  });\n  nalByteStream.on('done', function() {\n    self.trigger('done');\n  });\n\n  this.flush = function() {\n    nalByteStream.flush();\n  };\n\n  /**\n   * Advance the ExpGolomb decoder past a scaling list. The scaling\n   * list is optionally transmitted as part of a sequence parameter\n   * set and is not relevant to transmuxing.\n   * @param count {number} the number of entries in this scaling list\n   * @param expGolombDecoder {object} an ExpGolomb pointed to the\n   * start of a scaling list\n   * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n   */\n  skipScalingList = function(count, expGolombDecoder) {\n    var\n      lastScale = 8,\n      nextScale = 8,\n      j,\n      deltaScale;\n\n    for (j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = expGolombDecoder.readExpGolomb();\n        nextScale = (lastScale + deltaScale + 256) % 256;\n      }\n\n      lastScale = (nextScale === 0) ? lastScale : nextScale;\n    }\n  };\n\n  /**\n   * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n   * Sequence Payload\"\n   * @param data {Uint8Array} the bytes of a RBSP from a NAL\n   * unit\n   * @return {Uint8Array} the RBSP without any Emulation\n   * Prevention Bytes\n   */\n  discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n  };\n\n  /**\n   * Read a sequence parameter set and return some interesting video\n   * properties. A sequence parameter set is the H264 metadata that\n   * describes the properties of upcoming video frames.\n   * @param data {Uint8Array} the bytes of a sequence parameter set\n   * @return {object} an object with configuration parsed from the\n   * sequence parameter set, including the dimensions of the\n   * associated video frames.\n   */\n  readSequenceParameterSet = function(data) {\n    var\n      frameCropLeftOffset = 0,\n      frameCropRightOffset = 0,\n      frameCropTopOffset = 0,\n      frameCropBottomOffset = 0,\n      sarScale = 1,\n      expGolombDecoder, profileIdc, levelIdc, profileCompatibility,\n      chromaFormatIdc, picOrderCntType,\n      numRefFramesInPicOrderCntCycle, picWidthInMbsMinus1,\n      picHeightInMapUnitsMinus1,\n      frameMbsOnlyFlag,\n      scalingListCount,\n      sarRatio,\n      aspectRatioIdc,\n      i;\n\n    expGolombDecoder = new ExpGolomb(data);\n    profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n    profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n    levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n    expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n\n    // some profiles have more optional data we don't need\n    if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n      chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n      if (chromaFormatIdc === 3) {\n        expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n      expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n      if (expGolombDecoder.readBoolean()) { // seq_scaling_matrix_present_flag\n        scalingListCount = (chromaFormatIdc !== 3) ? 8 : 12;\n        for (i = 0; i < scalingListCount; i++) {\n          if (expGolombDecoder.readBoolean()) { // seq_scaling_list_present_flag[ i ]\n            if (i < 6) {\n              skipScalingList(16, expGolombDecoder);\n            } else {\n              skipScalingList(64, expGolombDecoder);\n            }\n          }\n        }\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n    picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n    if (picOrderCntType === 0) {\n      expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n    } else if (picOrderCntType === 1) {\n      expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n      expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n      expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n      numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n      for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n    expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n    picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n    picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n\n    frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n    if (frameMbsOnlyFlag === 0) {\n      expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n    }\n\n    expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n    if (expGolombDecoder.readBoolean()) { // frame_cropping_flag\n      frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n    }\n    if (expGolombDecoder.readBoolean()) {\n      // vui_parameters_present_flag\n      if (expGolombDecoder.readBoolean()) {\n        // aspect_ratio_info_present_flag\n        aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n        switch (aspectRatioIdc) {\n          case 1: sarRatio = [1, 1]; break;\n          case 2: sarRatio = [12, 11]; break;\n          case 3: sarRatio = [10, 11]; break;\n          case 4: sarRatio = [16, 11]; break;\n          case 5: sarRatio = [40, 33]; break;\n          case 6: sarRatio = [24, 11]; break;\n          case 7: sarRatio = [20, 11]; break;\n          case 8: sarRatio = [32, 11]; break;\n          case 9: sarRatio = [80, 33]; break;\n          case 10: sarRatio = [18, 11]; break;\n          case 11: sarRatio = [15, 11]; break;\n          case 12: sarRatio = [64, 33]; break;\n          case 13: sarRatio = [160, 99]; break;\n          case 14: sarRatio = [4, 3]; break;\n          case 15: sarRatio = [3, 2]; break;\n          case 16: sarRatio = [2, 1]; break;\n          case 255: {\n            sarRatio = [expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte(),\n                        expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte() ];\n            break;\n          }\n        }\n        if (sarRatio) {\n          sarScale = sarRatio[0] / sarRatio[1];\n        }\n      }\n    }\n    return {\n      profileIdc: profileIdc,\n      levelIdc: levelIdc,\n      profileCompatibility: profileCompatibility,\n      width: Math.ceil((((picWidthInMbsMinus1 + 1) * 16) - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n      height: ((2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16) - (frameCropTopOffset * 2) - (frameCropBottomOffset * 2)\n    };\n  };\n\n};\nH264Stream.prototype = new Stream();\n\nmodule.exports = {\n  H264Stream: H264Stream,\n  NalByteStream: NalByteStream\n};\n\n},{\"../utils/exp-golomb.js\":61,\"../utils/stream.js\":62}],42:[function(require,module,exports){\nvar highPrefix = [33, 16, 5, 32, 164, 27];\nvar lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\nvar zeroFill = function(count) {\n  var a = [];\n  while (count--) {\n    a.push(0);\n  }\n  return a;\n};\n\nvar makeTable = function(metaTable) {\n  return Object.keys(metaTable).reduce(function(obj, key) {\n    obj[key] = new Uint8Array(metaTable[key].reduce(function(arr, part) {\n      return arr.concat(part);\n    }, []));\n    return obj;\n  }, {});\n};\n\n// Frames-of-silence to use for filling in missing AAC frames\nvar coneOfSilence = {\n  96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n  88200: [highPrefix, [231], zeroFill(170), [56]],\n  64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n  48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n  44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n  32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n  24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n  16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n  12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n  11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n  8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n};\n\nmodule.exports = makeTable(coneOfSilence);\n\n},{}],43:[function(require,module,exports){\n'use strict';\n\nvar Stream = require('../utils/stream.js');\n\n/**\n * The final stage of the transmuxer that emits the flv tags\n * for audio, video, and metadata. Also tranlates in time and\n * outputs caption data and id3 cues.\n */\nvar CoalesceStream = function(options) {\n  // Number of Tracks per output segment\n  // If greater than 1, we combine multiple\n  // tracks into a single segment\n  this.numberOfTracks = 0;\n  this.metadataStream = options.metadataStream;\n\n  this.videoTags = [];\n  this.audioTags = [];\n  this.videoTrack = null;\n  this.audioTrack = null;\n  this.pendingCaptions = [];\n  this.pendingMetadata = [];\n  this.pendingTracks = 0;\n  this.processedTracks = 0;\n\n  CoalesceStream.prototype.init.call(this);\n\n  // Take output from multiple\n  this.push = function(output) {\n    // buffer incoming captions until the associated video segment\n    // finishes\n    if (output.text) {\n      return this.pendingCaptions.push(output);\n    }\n    // buffer incoming id3 tags until the final flush\n    if (output.frames) {\n      return this.pendingMetadata.push(output);\n    }\n\n    if (output.track.type === 'video') {\n      this.videoTrack = output.track;\n      this.videoTags = output.tags;\n      this.pendingTracks++;\n    }\n    if (output.track.type === 'audio') {\n      this.audioTrack = output.track;\n      this.audioTags = output.tags;\n      this.pendingTracks++;\n    }\n  };\n};\n\nCoalesceStream.prototype = new Stream();\nCoalesceStream.prototype.flush = function(flushSource) {\n  var\n    id3,\n    caption,\n    i,\n    timelineStartPts,\n    event = {\n      tags: {},\n      captions: [],\n      captionStreams: {},\n      metadata: []\n    };\n\n  if (this.pendingTracks < this.numberOfTracks) {\n    if (flushSource !== 'VideoSegmentStream' &&\n        flushSource !== 'AudioSegmentStream') {\n      // Return because we haven't received a flush from a data-generating\n      // portion of the segment (meaning that we have only recieved meta-data\n      // or captions.)\n      return;\n    } else if (this.pendingTracks === 0) {\n      // In the case where we receive a flush without any data having been\n      // received we consider it an emitted track for the purposes of coalescing\n      // `done` events.\n      // We do this for the case where there is an audio and video track in the\n      // segment but no audio data. (seen in several playlists with alternate\n      // audio tracks and no audio present in the main TS segments.)\n      this.processedTracks++;\n\n      if (this.processedTracks < this.numberOfTracks) {\n        return;\n      }\n    }\n  }\n\n  this.processedTracks += this.pendingTracks;\n  this.pendingTracks = 0;\n\n  if (this.processedTracks < this.numberOfTracks) {\n    return;\n  }\n\n  if (this.videoTrack) {\n    timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n  } else if (this.audioTrack) {\n    timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n  }\n\n  event.tags.videoTags = this.videoTags;\n  event.tags.audioTags = this.audioTags;\n\n  // Translate caption PTS times into second offsets into the\n  // video timeline for the segment, and add track info\n  for (i = 0; i < this.pendingCaptions.length; i++) {\n    caption = this.pendingCaptions[i];\n    caption.startTime = caption.startPts - timelineStartPts;\n    caption.startTime /= 90e3;\n    caption.endTime = caption.endPts - timelineStartPts;\n    caption.endTime /= 90e3;\n    event.captionStreams[caption.stream] = true;\n    event.captions.push(caption);\n  }\n\n  // Translate ID3 frame PTS times into second offsets into the\n  // video timeline for the segment\n  for (i = 0; i < this.pendingMetadata.length; i++) {\n    id3 = this.pendingMetadata[i];\n    id3.cueTime = id3.pts - timelineStartPts;\n    id3.cueTime /= 90e3;\n    event.metadata.push(id3);\n  }\n  // We add this to every single emitted segment even though we only need\n  // it for the first\n  event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n  // Reset stream state\n  this.videoTrack = null;\n  this.audioTrack = null;\n  this.videoTags = [];\n  this.audioTags = [];\n  this.pendingCaptions.length = 0;\n  this.pendingMetadata.length = 0;\n  this.pendingTracks = 0;\n  this.processedTracks = 0;\n\n  // Emit the final segment\n  this.trigger('data', event);\n\n  this.trigger('done');\n};\n\nmodule.exports = CoalesceStream;\n\n},{\"../utils/stream.js\":62}],44:[function(require,module,exports){\n'use strict';\n\nvar FlvTag = require('./flv-tag.js');\n\n// For information on the FLV format, see\n// http://download.macromedia.com/f4v/video_file_format_spec_v10_1.pdf.\n// Technically, this function returns the header and a metadata FLV tag\n// if duration is greater than zero\n// duration in seconds\n// @return {object} the bytes of the FLV header as a Uint8Array\nvar getFlvHeader = function(duration, audio, video) { // :ByteArray {\n  var\n    headBytes = new Uint8Array(3 + 1 + 1 + 4),\n    head = new DataView(headBytes.buffer),\n    metadata,\n    result,\n    metadataLength;\n\n  // default arguments\n  duration = duration || 0;\n  audio = audio === undefined ? true : audio;\n  video = video === undefined ? true : video;\n\n  // signature\n  head.setUint8(0, 0x46); // 'F'\n  head.setUint8(1, 0x4c); // 'L'\n  head.setUint8(2, 0x56); // 'V'\n\n  // version\n  head.setUint8(3, 0x01);\n\n  // flags\n  head.setUint8(4, (audio ? 0x04 : 0x00) | (video ? 0x01 : 0x00));\n\n  // data offset, should be 9 for FLV v1\n  head.setUint32(5, headBytes.byteLength);\n\n  // init the first FLV tag\n  if (duration <= 0) {\n    // no duration available so just write the first field of the first\n    // FLV tag\n    result = new Uint8Array(headBytes.byteLength + 4);\n    result.set(headBytes);\n    result.set([0, 0, 0, 0], headBytes.byteLength);\n    return result;\n  }\n\n  // write out the duration metadata tag\n  metadata = new FlvTag(FlvTag.METADATA_TAG);\n  metadata.pts = metadata.dts = 0;\n  metadata.writeMetaDataDouble('duration', duration);\n  metadataLength = metadata.finalize().length;\n  result = new Uint8Array(headBytes.byteLength + metadataLength);\n  result.set(headBytes);\n  result.set(head.byteLength, metadataLength);\n\n  return result;\n};\n\nmodule.exports = getFlvHeader;\n\n},{\"./flv-tag.js\":45}],45:[function(require,module,exports){\n/**\n * An object that stores the bytes of an FLV tag and methods for\n * querying and manipulating that data.\n * @see http://download.macromedia.com/f4v/video_file_format_spec_v10_1.pdf\n */\n'use strict';\n\nvar FlvTag;\n\n// (type:uint, extraData:Boolean = false) extends ByteArray\nFlvTag = function(type, extraData) {\n  var\n    // Counter if this is a metadata tag, nal start marker if this is a video\n    // tag. unused if this is an audio tag\n    adHoc = 0, // :uint\n\n    // The default size is 16kb but this is not enough to hold iframe\n    // data and the resizing algorithm costs a bit so we create a larger\n    // starting buffer for video tags\n    bufferStartSize = 16384,\n\n    // checks whether the FLV tag has enough capacity to accept the proposed\n    // write and re-allocates the internal buffers if necessary\n    prepareWrite = function(flv, count) {\n      var\n        bytes,\n        minLength = flv.position + count;\n      if (minLength < flv.bytes.byteLength) {\n        // there's enough capacity so do nothing\n        return;\n      }\n\n      // allocate a new buffer and copy over the data that will not be modified\n      bytes = new Uint8Array(minLength * 2);\n      bytes.set(flv.bytes.subarray(0, flv.position), 0);\n      flv.bytes = bytes;\n      flv.view = new DataView(flv.bytes.buffer);\n    },\n\n    // commonly used metadata properties\n    widthBytes = FlvTag.widthBytes || new Uint8Array('width'.length),\n    heightBytes = FlvTag.heightBytes || new Uint8Array('height'.length),\n    videocodecidBytes = FlvTag.videocodecidBytes || new Uint8Array('videocodecid'.length),\n    i;\n\n  if (!FlvTag.widthBytes) {\n    // calculating the bytes of common metadata names ahead of time makes the\n    // corresponding writes faster because we don't have to loop over the\n    // characters\n    // re-test with test/perf.html if you're planning on changing this\n    for (i = 0; i < 'width'.length; i++) {\n      widthBytes[i] = 'width'.charCodeAt(i);\n    }\n    for (i = 0; i < 'height'.length; i++) {\n      heightBytes[i] = 'height'.charCodeAt(i);\n    }\n    for (i = 0; i < 'videocodecid'.length; i++) {\n      videocodecidBytes[i] = 'videocodecid'.charCodeAt(i);\n    }\n\n    FlvTag.widthBytes = widthBytes;\n    FlvTag.heightBytes = heightBytes;\n    FlvTag.videocodecidBytes = videocodecidBytes;\n  }\n\n  this.keyFrame = false; // :Boolean\n\n  switch (type) {\n  case FlvTag.VIDEO_TAG:\n    this.length = 16;\n    // Start the buffer at 256k\n    bufferStartSize *= 6;\n    break;\n  case FlvTag.AUDIO_TAG:\n    this.length = 13;\n    this.keyFrame = true;\n    break;\n  case FlvTag.METADATA_TAG:\n    this.length = 29;\n    this.keyFrame = true;\n    break;\n  default:\n    throw new Error('Unknown FLV tag type');\n  }\n\n  this.bytes = new Uint8Array(bufferStartSize);\n  this.view = new DataView(this.bytes.buffer);\n  this.bytes[0] = type;\n  this.position = this.length;\n  this.keyFrame = extraData; // Defaults to false\n\n  // presentation timestamp\n  this.pts = 0;\n  // decoder timestamp\n  this.dts = 0;\n\n  // ByteArray#writeBytes(bytes:ByteArray, offset:uint = 0, length:uint = 0)\n  this.writeBytes = function(bytes, offset, length) {\n    var\n      start = offset || 0,\n      end;\n    length = length || bytes.byteLength;\n    end = start + length;\n\n    prepareWrite(this, length);\n    this.bytes.set(bytes.subarray(start, end), this.position);\n\n    this.position += length;\n    this.length = Math.max(this.length, this.position);\n  };\n\n  // ByteArray#writeByte(value:int):void\n  this.writeByte = function(byte) {\n    prepareWrite(this, 1);\n    this.bytes[this.position] = byte;\n    this.position++;\n    this.length = Math.max(this.length, this.position);\n  };\n\n  // ByteArray#writeShort(value:int):void\n  this.writeShort = function(short) {\n    prepareWrite(this, 2);\n    this.view.setUint16(this.position, short);\n    this.position += 2;\n    this.length = Math.max(this.length, this.position);\n  };\n\n  // Negative index into array\n  // (pos:uint):int\n  this.negIndex = function(pos) {\n    return this.bytes[this.length - pos];\n  };\n\n  // The functions below ONLY work when this[0] == VIDEO_TAG.\n  // We are not going to check for that because we dont want the overhead\n  // (nal:ByteArray = null):int\n  this.nalUnitSize = function() {\n    if (adHoc === 0) {\n      return 0;\n    }\n\n    return this.length - (adHoc + 4);\n  };\n\n  this.startNalUnit = function() {\n    // remember position and add 4 bytes\n    if (adHoc > 0) {\n      throw new Error('Attempted to create new NAL wihout closing the old one');\n    }\n\n    // reserve 4 bytes for nal unit size\n    adHoc = this.length;\n    this.length += 4;\n    this.position = this.length;\n  };\n\n  // (nal:ByteArray = null):void\n  this.endNalUnit = function(nalContainer) {\n    var\n      nalStart, // :uint\n      nalLength; // :uint\n\n    // Rewind to the marker and write the size\n    if (this.length === adHoc + 4) {\n      // we started a nal unit, but didnt write one, so roll back the 4 byte size value\n      this.length -= 4;\n    } else if (adHoc > 0) {\n      nalStart = adHoc + 4;\n      nalLength = this.length - nalStart;\n\n      this.position = adHoc;\n      this.view.setUint32(this.position, nalLength);\n      this.position = this.length;\n\n      if (nalContainer) {\n        // Add the tag to the NAL unit\n        nalContainer.push(this.bytes.subarray(nalStart, nalStart + nalLength));\n      }\n    }\n\n    adHoc = 0;\n  };\n\n  /**\n   * Write out a 64-bit floating point valued metadata property. This method is\n   * called frequently during a typical parse and needs to be fast.\n   */\n  // (key:String, val:Number):void\n  this.writeMetaDataDouble = function(key, val) {\n    var i;\n    prepareWrite(this, 2 + key.length + 9);\n\n    // write size of property name\n    this.view.setUint16(this.position, key.length);\n    this.position += 2;\n\n    // this next part looks terrible but it improves parser throughput by\n    // 10kB/s in my testing\n\n    // write property name\n    if (key === 'width') {\n      this.bytes.set(widthBytes, this.position);\n      this.position += 5;\n    } else if (key === 'height') {\n      this.bytes.set(heightBytes, this.position);\n      this.position += 6;\n    } else if (key === 'videocodecid') {\n      this.bytes.set(videocodecidBytes, this.position);\n      this.position += 12;\n    } else {\n      for (i = 0; i < key.length; i++) {\n        this.bytes[this.position] = key.charCodeAt(i);\n        this.position++;\n      }\n    }\n\n    // skip null byte\n    this.position++;\n\n    // write property value\n    this.view.setFloat64(this.position, val);\n    this.position += 8;\n\n    // update flv tag length\n    this.length = Math.max(this.length, this.position);\n    ++adHoc;\n  };\n\n  // (key:String, val:Boolean):void\n  this.writeMetaDataBoolean = function(key, val) {\n    var i;\n    prepareWrite(this, 2);\n    this.view.setUint16(this.position, key.length);\n    this.position += 2;\n    for (i = 0; i < key.length; i++) {\n      // if key.charCodeAt(i) >= 255, handle error\n      prepareWrite(this, 1);\n      this.bytes[this.position] = key.charCodeAt(i);\n      this.position++;\n    }\n    prepareWrite(this, 2);\n    this.view.setUint8(this.position, 0x01);\n    this.position++;\n    this.view.setUint8(this.position, val ? 0x01 : 0x00);\n    this.position++;\n    this.length = Math.max(this.length, this.position);\n    ++adHoc;\n  };\n\n  // ():ByteArray\n  this.finalize = function() {\n    var\n      dtsDelta, // :int\n      len; // :int\n\n    switch (this.bytes[0]) {\n      // Video Data\n    case FlvTag.VIDEO_TAG:\n       // We only support AVC, 1 = key frame (for AVC, a seekable\n       // frame), 2 = inter frame (for AVC, a non-seekable frame)\n      this.bytes[11] = ((this.keyFrame || extraData) ? 0x10 : 0x20) | 0x07;\n      this.bytes[12] = extraData ?  0x00 : 0x01;\n\n      dtsDelta = this.pts - this.dts;\n      this.bytes[13] = (dtsDelta & 0x00FF0000) >>> 16;\n      this.bytes[14] = (dtsDelta & 0x0000FF00) >>>  8;\n      this.bytes[15] = (dtsDelta & 0x000000FF) >>>  0;\n      break;\n\n    case FlvTag.AUDIO_TAG:\n      this.bytes[11] = 0xAF; // 44 kHz, 16-bit stereo\n      this.bytes[12] = extraData ? 0x00 : 0x01;\n      break;\n\n    case FlvTag.METADATA_TAG:\n      this.position = 11;\n      this.view.setUint8(this.position, 0x02); // String type\n      this.position++;\n      this.view.setUint16(this.position, 0x0A); // 10 Bytes\n      this.position += 2;\n      // set \"onMetaData\"\n      this.bytes.set([0x6f, 0x6e, 0x4d, 0x65,\n                      0x74, 0x61, 0x44, 0x61,\n                      0x74, 0x61], this.position);\n      this.position += 10;\n      this.bytes[this.position] = 0x08; // Array type\n      this.position++;\n      this.view.setUint32(this.position, adHoc);\n      this.position = this.length;\n      this.bytes.set([0, 0, 9], this.position);\n      this.position += 3; // End Data Tag\n      this.length = this.position;\n      break;\n    }\n\n    len = this.length - 11;\n\n    // write the DataSize field\n    this.bytes[ 1] = (len & 0x00FF0000) >>> 16;\n    this.bytes[ 2] = (len & 0x0000FF00) >>>  8;\n    this.bytes[ 3] = (len & 0x000000FF) >>>  0;\n    // write the Timestamp\n    this.bytes[ 4] = (this.dts & 0x00FF0000) >>> 16;\n    this.bytes[ 5] = (this.dts & 0x0000FF00) >>>  8;\n    this.bytes[ 6] = (this.dts & 0x000000FF) >>>  0;\n    this.bytes[ 7] = (this.dts & 0xFF000000) >>> 24;\n    // write the StreamID\n    this.bytes[ 8] = 0;\n    this.bytes[ 9] = 0;\n    this.bytes[10] = 0;\n\n    // Sometimes we're at the end of the view and have one slot to write a\n    // uint32, so, prepareWrite of count 4, since, view is uint8\n    prepareWrite(this, 4);\n    this.view.setUint32(this.length, this.length);\n    this.length += 4;\n    this.position += 4;\n\n    // trim down the byte buffer to what is actually being used\n    this.bytes = this.bytes.subarray(0, this.length);\n    this.frameTime = FlvTag.frameTime(this.bytes);\n    // if bytes.bytelength isn't equal to this.length, handle error\n    return this;\n  };\n};\n\nFlvTag.AUDIO_TAG = 0x08; // == 8, :uint\nFlvTag.VIDEO_TAG = 0x09; // == 9, :uint\nFlvTag.METADATA_TAG = 0x12; // == 18, :uint\n\n// (tag:ByteArray):Boolean {\nFlvTag.isAudioFrame = function(tag) {\n  return FlvTag.AUDIO_TAG === tag[0];\n};\n\n// (tag:ByteArray):Boolean {\nFlvTag.isVideoFrame = function(tag) {\n  return FlvTag.VIDEO_TAG === tag[0];\n};\n\n// (tag:ByteArray):Boolean {\nFlvTag.isMetaData = function(tag) {\n  return FlvTag.METADATA_TAG === tag[0];\n};\n\n// (tag:ByteArray):Boolean {\nFlvTag.isKeyFrame = function(tag) {\n  if (FlvTag.isVideoFrame(tag)) {\n    return tag[11] === 0x17;\n  }\n\n  if (FlvTag.isAudioFrame(tag)) {\n    return true;\n  }\n\n  if (FlvTag.isMetaData(tag)) {\n    return true;\n  }\n\n  return false;\n};\n\n// (tag:ByteArray):uint {\nFlvTag.frameTime = function(tag) {\n  var pts = tag[ 4] << 16; // :uint\n  pts |= tag[ 5] <<  8;\n  pts |= tag[ 6] <<  0;\n  pts |= tag[ 7] << 24;\n  return pts;\n};\n\nmodule.exports = FlvTag;\n\n},{}],46:[function(require,module,exports){\nmodule.exports = {\n  tag: require('./flv-tag'),\n  Transmuxer: require('./transmuxer'),\n  getFlvHeader: require('./flv-header')\n};\n\n},{\"./flv-header\":44,\"./flv-tag\":45,\"./transmuxer\":48}],47:[function(require,module,exports){\n'use strict';\n\nvar TagList = function() {\n  var self = this;\n\n  this.list = [];\n\n  this.push = function(tag) {\n    this.list.push({\n      bytes: tag.bytes,\n      dts: tag.dts,\n      pts: tag.pts,\n      keyFrame: tag.keyFrame,\n      metaDataTag: tag.metaDataTag\n    });\n  };\n\n  Object.defineProperty(this, 'length', {\n    get: function() {\n      return self.list.length;\n    }\n  });\n};\n\nmodule.exports = TagList;\n\n},{}],48:[function(require,module,exports){\n'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar FlvTag = require('./flv-tag.js');\nvar m2ts = require('../m2ts/m2ts.js');\nvar AdtsStream = require('../codecs/adts.js');\nvar H264Stream = require('../codecs/h264').H264Stream;\nvar CoalesceStream = require('./coalesce-stream.js');\nvar TagList = require('./tag-list.js');\n\nvar\n  Transmuxer,\n  VideoSegmentStream,\n  AudioSegmentStream,\n  collectTimelineInfo,\n  metaDataTag,\n  extraDataTag;\n\n/**\n * Store information about the start and end of the tracka and the\n * duration for each frame/sample we process in order to calculate\n * the baseMediaDecodeTime\n */\ncollectTimelineInfo = function(track, data) {\n  if (typeof data.pts === 'number') {\n    if (track.timelineStartInfo.pts === undefined) {\n      track.timelineStartInfo.pts = data.pts;\n    } else {\n      track.timelineStartInfo.pts =\n        Math.min(track.timelineStartInfo.pts, data.pts);\n    }\n  }\n\n  if (typeof data.dts === 'number') {\n    if (track.timelineStartInfo.dts === undefined) {\n      track.timelineStartInfo.dts = data.dts;\n    } else {\n      track.timelineStartInfo.dts =\n        Math.min(track.timelineStartInfo.dts, data.dts);\n    }\n  }\n};\n\nmetaDataTag = function(track, pts) {\n  var\n    tag = new FlvTag(FlvTag.METADATA_TAG); // :FlvTag\n\n  tag.dts = pts;\n  tag.pts = pts;\n\n  tag.writeMetaDataDouble('videocodecid', 7);\n  tag.writeMetaDataDouble('width', track.width);\n  tag.writeMetaDataDouble('height', track.height);\n\n  return tag;\n};\n\nextraDataTag = function(track, pts) {\n  var\n    i,\n    tag = new FlvTag(FlvTag.VIDEO_TAG, true);\n\n  tag.dts = pts;\n  tag.pts = pts;\n\n  tag.writeByte(0x01);// version\n  tag.writeByte(track.profileIdc);// profile\n  tag.writeByte(track.profileCompatibility);// compatibility\n  tag.writeByte(track.levelIdc);// level\n  tag.writeByte(0xFC | 0x03); // reserved (6 bits), NULA length size - 1 (2 bits)\n  tag.writeByte(0xE0 | 0x01); // reserved (3 bits), num of SPS (5 bits)\n  tag.writeShort(track.sps[0].length); // data of SPS\n  tag.writeBytes(track.sps[0]); // SPS\n\n  tag.writeByte(track.pps.length); // num of PPS (will there ever be more that 1 PPS?)\n  for (i = 0; i < track.pps.length; ++i) {\n    tag.writeShort(track.pps[i].length); // 2 bytes for length of PPS\n    tag.writeBytes(track.pps[i]); // data of PPS\n  }\n\n  return tag;\n};\n\n/**\n * Constructs a single-track, media segment from AAC data\n * events. The output of this stream can be fed to flash.\n */\nAudioSegmentStream = function(track) {\n  var\n    adtsFrames = [],\n    videoKeyFrames = [],\n    oldExtraData;\n\n  AudioSegmentStream.prototype.init.call(this);\n\n  this.push = function(data) {\n    collectTimelineInfo(track, data);\n\n    if (track) {\n      track.audioobjecttype = data.audioobjecttype;\n      track.channelcount = data.channelcount;\n      track.samplerate = data.samplerate;\n      track.samplingfrequencyindex = data.samplingfrequencyindex;\n      track.samplesize = data.samplesize;\n      track.extraData = (track.audioobjecttype << 11) |\n                        (track.samplingfrequencyindex << 7) |\n                        (track.channelcount << 3);\n    }\n\n    data.pts = Math.round(data.pts / 90);\n    data.dts = Math.round(data.dts / 90);\n\n    // buffer audio data until end() is called\n    adtsFrames.push(data);\n  };\n\n  this.flush = function() {\n    var currentFrame, adtsFrame, lastMetaPts, tags = new TagList();\n    // return early if no audio data has been observed\n    if (adtsFrames.length === 0) {\n      this.trigger('done', 'AudioSegmentStream');\n      return;\n    }\n\n    lastMetaPts = -Infinity;\n\n    while (adtsFrames.length) {\n      currentFrame = adtsFrames.shift();\n\n      // write out a metadata frame at every video key frame\n      if (videoKeyFrames.length && currentFrame.pts >= videoKeyFrames[0]) {\n        lastMetaPts = videoKeyFrames.shift();\n        this.writeMetaDataTags(tags, lastMetaPts);\n      }\n\n      // also write out metadata tags every 1 second so that the decoder\n      // is re-initialized quickly after seeking into a different\n      // audio configuration.\n      if (track.extraData !== oldExtraData || currentFrame.pts - lastMetaPts >= 1000) {\n        this.writeMetaDataTags(tags, currentFrame.pts);\n        oldExtraData = track.extraData;\n        lastMetaPts = currentFrame.pts;\n      }\n\n      adtsFrame = new FlvTag(FlvTag.AUDIO_TAG);\n      adtsFrame.pts = currentFrame.pts;\n      adtsFrame.dts = currentFrame.dts;\n\n      adtsFrame.writeBytes(currentFrame.data);\n\n      tags.push(adtsFrame.finalize());\n    }\n\n    videoKeyFrames.length = 0;\n    oldExtraData = null;\n    this.trigger('data', {track: track, tags: tags.list});\n\n    this.trigger('done', 'AudioSegmentStream');\n  };\n\n  this.writeMetaDataTags = function(tags, pts) {\n    var adtsFrame;\n\n    adtsFrame = new FlvTag(FlvTag.METADATA_TAG);\n    // For audio, DTS is always the same as PTS. We want to set the DTS\n    // however so we can compare with video DTS to determine approximate\n    // packet order\n    adtsFrame.pts = pts;\n    adtsFrame.dts = pts;\n\n    // AAC is always 10\n    adtsFrame.writeMetaDataDouble('audiocodecid', 10);\n    adtsFrame.writeMetaDataBoolean('stereo', track.channelcount === 2);\n    adtsFrame.writeMetaDataDouble('audiosamplerate', track.samplerate);\n    // Is AAC always 16 bit?\n    adtsFrame.writeMetaDataDouble('audiosamplesize', 16);\n\n    tags.push(adtsFrame.finalize());\n\n    adtsFrame = new FlvTag(FlvTag.AUDIO_TAG, true);\n    // For audio, DTS is always the same as PTS. We want to set the DTS\n    // however so we can compare with video DTS to determine approximate\n    // packet order\n    adtsFrame.pts = pts;\n    adtsFrame.dts = pts;\n\n    adtsFrame.view.setUint16(adtsFrame.position, track.extraData);\n    adtsFrame.position += 2;\n    adtsFrame.length = Math.max(adtsFrame.length, adtsFrame.position);\n\n    tags.push(adtsFrame.finalize());\n  };\n\n  this.onVideoKeyFrame = function(pts) {\n    videoKeyFrames.push(pts);\n  };\n};\nAudioSegmentStream.prototype = new Stream();\n\n/**\n * Store FlvTags for the h264 stream\n * @param track {object} track metadata configuration\n */\nVideoSegmentStream = function(track) {\n  var\n    nalUnits = [],\n    config,\n    h264Frame;\n  VideoSegmentStream.prototype.init.call(this);\n\n  this.finishFrame = function(tags, frame) {\n    if (!frame) {\n      return;\n    }\n    // Check if keyframe and the length of tags.\n    // This makes sure we write metadata on the first frame of a segment.\n    if (config && track && track.newMetadata &&\n        (frame.keyFrame || tags.length === 0)) {\n      // Push extra data on every IDR frame in case we did a stream change + seek\n      var metaTag = metaDataTag(config, frame.dts).finalize();\n      var extraTag = extraDataTag(track, frame.dts).finalize();\n\n      metaTag.metaDataTag = extraTag.metaDataTag = true;\n\n      tags.push(metaTag);\n      tags.push(extraTag);\n      track.newMetadata = false;\n\n      this.trigger('keyframe', frame.dts);\n    }\n\n    frame.endNalUnit();\n    tags.push(frame.finalize());\n    h264Frame = null;\n  };\n\n  this.push = function(data) {\n    collectTimelineInfo(track, data);\n\n    data.pts = Math.round(data.pts / 90);\n    data.dts = Math.round(data.dts / 90);\n\n    // buffer video until flush() is called\n    nalUnits.push(data);\n  };\n\n  this.flush = function() {\n    var\n      currentNal,\n      tags = new TagList();\n\n    // Throw away nalUnits at the start of the byte stream until we find\n    // the first AUD\n    while (nalUnits.length) {\n      if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n        break;\n      }\n      nalUnits.shift();\n    }\n\n    // return early if no video data has been observed\n    if (nalUnits.length === 0) {\n      this.trigger('done', 'VideoSegmentStream');\n      return;\n    }\n\n    while (nalUnits.length) {\n      currentNal = nalUnits.shift();\n\n      // record the track config\n      if (currentNal.nalUnitType === 'seq_parameter_set_rbsp') {\n        track.newMetadata = true;\n        config = currentNal.config;\n        track.width = config.width;\n        track.height = config.height;\n        track.sps = [currentNal.data];\n        track.profileIdc = config.profileIdc;\n        track.levelIdc = config.levelIdc;\n        track.profileCompatibility = config.profileCompatibility;\n        h264Frame.endNalUnit();\n      } else if (currentNal.nalUnitType === 'pic_parameter_set_rbsp') {\n        track.newMetadata = true;\n        track.pps = [currentNal.data];\n        h264Frame.endNalUnit();\n      } else if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n        if (h264Frame) {\n          this.finishFrame(tags, h264Frame);\n        }\n        h264Frame = new FlvTag(FlvTag.VIDEO_TAG);\n        h264Frame.pts = currentNal.pts;\n        h264Frame.dts = currentNal.dts;\n      } else {\n        if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n          // the current sample is a key frame\n          h264Frame.keyFrame = true;\n        }\n        h264Frame.endNalUnit();\n      }\n      h264Frame.startNalUnit();\n      h264Frame.writeBytes(currentNal.data);\n    }\n    if (h264Frame) {\n      this.finishFrame(tags, h264Frame);\n    }\n\n    this.trigger('data', {track: track, tags: tags.list});\n\n    // Continue with the flush process now\n    this.trigger('done', 'VideoSegmentStream');\n  };\n};\n\nVideoSegmentStream.prototype = new Stream();\n\n/**\n * An object that incrementally transmuxes MPEG2 Trasport Stream\n * chunks into an FLV.\n */\nTransmuxer = function(options) {\n  var\n    self = this,\n\n    packetStream, parseStream, elementaryStream,\n    videoTimestampRolloverStream, audioTimestampRolloverStream,\n    timedMetadataTimestampRolloverStream,\n    adtsStream, h264Stream,\n    videoSegmentStream, audioSegmentStream, captionStream,\n    coalesceStream;\n\n  Transmuxer.prototype.init.call(this);\n\n  options = options || {};\n\n  // expose the metadata stream\n  this.metadataStream = new m2ts.MetadataStream();\n\n  options.metadataStream = this.metadataStream;\n\n  // set up the parsing pipeline\n  packetStream = new m2ts.TransportPacketStream();\n  parseStream = new m2ts.TransportParseStream();\n  elementaryStream = new m2ts.ElementaryStream();\n  videoTimestampRolloverStream = new m2ts.TimestampRolloverStream('video');\n  audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n  timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n\n  adtsStream = new AdtsStream();\n  h264Stream = new H264Stream();\n  coalesceStream = new CoalesceStream(options);\n\n  // disassemble MPEG2-TS packets into elementary streams\n  packetStream\n    .pipe(parseStream)\n    .pipe(elementaryStream);\n\n  // !!THIS ORDER IS IMPORTANT!!\n  // demux the streams\n  elementaryStream\n    .pipe(videoTimestampRolloverStream)\n    .pipe(h264Stream);\n  elementaryStream\n    .pipe(audioTimestampRolloverStream)\n    .pipe(adtsStream);\n\n  elementaryStream\n    .pipe(timedMetadataTimestampRolloverStream)\n    .pipe(this.metadataStream)\n    .pipe(coalesceStream);\n  // if CEA-708 parsing is available, hook up a caption stream\n  captionStream = new m2ts.CaptionStream();\n  h264Stream.pipe(captionStream)\n    .pipe(coalesceStream);\n\n  // hook up the segment streams once track metadata is delivered\n  elementaryStream.on('data', function(data) {\n    var i, videoTrack, audioTrack;\n\n    if (data.type === 'metadata') {\n      i = data.tracks.length;\n\n      // scan the tracks listed in the metadata\n      while (i--) {\n        if (data.tracks[i].type === 'video') {\n          videoTrack = data.tracks[i];\n        } else if (data.tracks[i].type === 'audio') {\n          audioTrack = data.tracks[i];\n        }\n      }\n\n      // hook up the video segment stream to the first track with h264 data\n      if (videoTrack && !videoSegmentStream) {\n        coalesceStream.numberOfTracks++;\n        videoSegmentStream = new VideoSegmentStream(videoTrack);\n\n        // Set up the final part of the video pipeline\n        h264Stream\n          .pipe(videoSegmentStream)\n          .pipe(coalesceStream);\n      }\n\n      if (audioTrack && !audioSegmentStream) {\n        // hook up the audio segment stream to the first track with aac data\n        coalesceStream.numberOfTracks++;\n        audioSegmentStream = new AudioSegmentStream(audioTrack);\n\n        // Set up the final part of the audio pipeline\n        adtsStream\n          .pipe(audioSegmentStream)\n          .pipe(coalesceStream);\n\n        if (videoSegmentStream) {\n          videoSegmentStream.on('keyframe', audioSegmentStream.onVideoKeyFrame);\n        }\n      }\n    }\n  });\n\n  // feed incoming data to the front of the parsing pipeline\n  this.push = function(data) {\n    packetStream.push(data);\n  };\n\n  // flush any buffered data\n  this.flush = function() {\n    // Start at the top of the pipeline and flush all pending work\n    packetStream.flush();\n  };\n\n  // Caption data has to be reset when seeking outside buffered range\n  this.resetCaptions = function() {\n    captionStream.reset();\n  };\n\n  // Re-emit any data coming from the coalesce stream to the outside world\n  coalesceStream.on('data', function(event) {\n    self.trigger('data', event);\n  });\n\n  // Let the consumer know we have finished flushing the entire pipeline\n  coalesceStream.on('done', function() {\n    self.trigger('done');\n  });\n};\nTransmuxer.prototype = new Stream();\n\n// forward compatibility\nmodule.exports = Transmuxer;\n\n},{\"../codecs/adts.js\":40,\"../codecs/h264\":41,\"../m2ts/m2ts.js\":50,\"../utils/stream.js\":62,\"./coalesce-stream.js\":43,\"./flv-tag.js\":45,\"./tag-list.js\":47}],49:[function(require,module,exports){\n/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// -----------------\n// Link To Transport\n// -----------------\n\n// Supplemental enhancement information (SEI) NAL units have a\n// payload type field to indicate how they are to be\n// interpreted. CEAS-708 caption content is always transmitted with\n// payload type 0x04.\nvar USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128,\n    Stream = require('../utils/stream');\n\n/**\n  * Parse a supplemental enhancement information (SEI) NAL unit.\n  * Stops parsing once a message of type ITU T T35 has been found.\n  *\n  * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n  * @return {object} the parsed SEI payload\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n  */\nvar parseSei = function(bytes) {\n  var\n    i = 0,\n    result = {\n      payloadType: -1,\n      payloadSize: 0\n    },\n    payloadType = 0,\n    payloadSize = 0;\n\n  // go through the sei_rbsp parsing each each individual sei_message\n  while (i < bytes.byteLength) {\n    // stop once we have hit the end of the sei_rbsp\n    if (bytes[i] === RBSP_TRAILING_BITS) {\n      break;\n    }\n\n    // Parse payload type\n    while (bytes[i] === 0xFF) {\n      payloadType += 255;\n      i++;\n    }\n    payloadType += bytes[i++];\n\n    // Parse payload size\n    while (bytes[i] === 0xFF) {\n      payloadSize += 255;\n      i++;\n    }\n    payloadSize += bytes[i++];\n\n    // this sei_message is a 608/708 caption so save it and break\n    // there can only ever be one caption message in a frame's sei\n    if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n      result.payloadType = payloadType;\n      result.payloadSize = payloadSize;\n      result.payload = bytes.subarray(i, i + payloadSize);\n      break;\n    }\n\n    // skip the payload and parse the next message\n    i += payloadSize;\n    payloadType = 0;\n    payloadSize = 0;\n  }\n\n  return result;\n};\n\n// see ANSI/SCTE 128-1 (2013), section 8.1\nvar parseUserData = function(sei) {\n  // itu_t_t35_contry_code must be 181 (United States) for\n  // captions\n  if (sei.payload[0] !== 181) {\n    return null;\n  }\n\n  // itu_t_t35_provider_code should be 49 (ATSC) for captions\n  if (((sei.payload[1] << 8) | sei.payload[2]) !== 49) {\n    return null;\n  }\n\n  // the user_identifier should be \"GA94\" to indicate ATSC1 data\n  if (String.fromCharCode(sei.payload[3],\n                          sei.payload[4],\n                          sei.payload[5],\n                          sei.payload[6]) !== 'GA94') {\n    return null;\n  }\n\n  // finally, user_data_type_code should be 0x03 for caption data\n  if (sei.payload[7] !== 0x03) {\n    return null;\n  }\n\n  // return the user_data_type_structure and strip the trailing\n  // marker bits\n  return sei.payload.subarray(8, sei.payload.length - 1);\n};\n\n// see CEA-708-D, section 4.4\nvar parseCaptionPackets = function(pts, userData) {\n  var results = [], i, count, offset, data;\n\n  // if this is just filler, return immediately\n  if (!(userData[0] & 0x40)) {\n    return results;\n  }\n\n  // parse out the cc_data_1 and cc_data_2 fields\n  count = userData[0] & 0x1f;\n  for (i = 0; i < count; i++) {\n    offset = i * 3;\n    data = {\n      type: userData[offset + 2] & 0x03,\n      pts: pts\n    };\n\n    // capture cc data when cc_valid is 1\n    if (userData[offset + 2] & 0x04) {\n      data.ccData = (userData[offset + 3] << 8) | userData[offset + 4];\n      results.push(data);\n    }\n  }\n  return results;\n};\n\nvar CaptionStream = function() {\n\n  CaptionStream.prototype.init.call(this);\n\n  this.captionPackets_ = [];\n\n  this.ccStreams_ = [\n    new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n  ];\n\n  this.reset();\n\n  // forward data and done events from CCs to this CaptionStream\n  this.ccStreams_.forEach(function(cc) {\n    cc.on('data', this.trigger.bind(this, 'data'));\n    cc.on('done', this.trigger.bind(this, 'done'));\n  }, this);\n\n};\n\nCaptionStream.prototype = new Stream();\nCaptionStream.prototype.push = function(event) {\n  var sei, userData;\n\n  // only examine SEI NALs\n  if (event.nalUnitType !== 'sei_rbsp') {\n    return;\n  }\n\n  // parse the sei\n  sei = parseSei(event.escapedRBSP);\n\n  // ignore everything but user_data_registered_itu_t_t35\n  if (sei.payloadType !== USER_DATA_REGISTERED_ITU_T_T35) {\n    return;\n  }\n\n  // parse out the user data payload\n  userData = parseUserData(sei);\n\n  // ignore unrecognized userData\n  if (!userData) {\n    return;\n  }\n\n  // Sometimes, the same segment # will be downloaded twice. To stop the\n  // caption data from being processed twice, we track the latest dts we've\n  // received and ignore everything with a dts before that. However, since\n  // data for a specific dts can be split across 2 packets on either side of\n  // a segment boundary, we need to make sure we *don't* ignore the second\n  // dts packet we receive that has dts === this.latestDts_. And thus, the\n  // ignoreNextEqualDts_ flag was born.\n  if (event.dts < this.latestDts_) {\n    // We've started getting older data, so set the flag.\n    this.ignoreNextEqualDts_ = true;\n    return;\n  } else if ((event.dts === this.latestDts_) && (this.ignoreNextEqualDts_)) {\n    // We've received the last duplicate packet, time to start processing again\n    this.ignoreNextEqualDts_ = false;\n    return;\n  }\n\n  // parse out CC data packets and save them for later\n  this.captionPackets_ = this.captionPackets_.concat(parseCaptionPackets(event.pts, userData));\n  this.latestDts_ = event.dts;\n};\n\nCaptionStream.prototype.flush = function() {\n  // make sure we actually parsed captions before proceeding\n  if (!this.captionPackets_.length) {\n    this.ccStreams_.forEach(function(cc) {\n      cc.flush();\n    }, this);\n    return;\n  }\n\n  // In Chrome, the Array#sort function is not stable so add a\n  // presortIndex that we can use to ensure we get a stable-sort\n  this.captionPackets_.forEach(function(elem, idx) {\n    elem.presortIndex = idx;\n  });\n\n  // sort caption byte-pairs based on their PTS values\n  this.captionPackets_.sort(function(a, b) {\n    if (a.pts === b.pts) {\n      return a.presortIndex - b.presortIndex;\n    }\n    return a.pts - b.pts;\n  });\n\n  this.captionPackets_.forEach(function(packet) {\n    if (packet.type < 2) {\n      // Dispatch packet to the right Cea608Stream\n      this.dispatchCea608Packet(packet);\n    }\n    // this is where an 'else' would go for a dispatching packets\n    // to a theoretical Cea708Stream that handles SERVICEn data\n  }, this);\n\n  this.captionPackets_.length = 0;\n  this.ccStreams_.forEach(function(cc) {\n    cc.flush();\n  }, this);\n  return;\n};\n\nCaptionStream.prototype.reset = function() {\n  this.latestDts_ = null;\n  this.ignoreNextEqualDts_ = false;\n  this.activeCea608Channel_ = [null, null];\n  this.ccStreams_.forEach(function(ccStream) {\n    ccStream.reset();\n  });\n};\n\nCaptionStream.prototype.dispatchCea608Packet = function(packet) {\n  // NOTE: packet.type is the CEA608 field\n  if (this.setsChannel1Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 0;\n  } else if (this.setsChannel2Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 1;\n  }\n  if (this.activeCea608Channel_[packet.type] === null) {\n    // If we haven't received anything to set the active channel, discard the\n    // data; we don't want jumbled captions\n    return;\n  }\n  this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n};\n\nCaptionStream.prototype.setsChannel1Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1000);\n};\nCaptionStream.prototype.setsChannel2Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1800);\n};\n\n// ----------------------\n// Session to Application\n// ----------------------\n\nvar CHARACTER_TRANSLATION = {\n  0x2a: 0xe1,     // á\n  0x5c: 0xe9,     // é\n  0x5e: 0xed,     // í\n  0x5f: 0xf3,     // ó\n  0x60: 0xfa,     // ú\n  0x7b: 0xe7,     // ç\n  0x7c: 0xf7,     // ÷\n  0x7d: 0xd1,     // Ñ\n  0x7e: 0xf1,     // ñ\n  0x7f: 0x2588,   // █\n  0x0130: 0xae,   // ®\n  0x0131: 0xb0,   // °\n  0x0132: 0xbd,   // ½\n  0x0133: 0xbf,   // ¿\n  0x0134: 0x2122, // ™\n  0x0135: 0xa2,   // ¢\n  0x0136: 0xa3,   // £\n  0x0137: 0x266a, // ♪\n  0x0138: 0xe0,   // à\n  0x0139: 0xa0,   //\n  0x013a: 0xe8,   // è\n  0x013b: 0xe2,   // â\n  0x013c: 0xea,   // ê\n  0x013d: 0xee,   // î\n  0x013e: 0xf4,   // ô\n  0x013f: 0xfb,   // û\n  0x0220: 0xc1,   // Á\n  0x0221: 0xc9,   // É\n  0x0222: 0xd3,   // Ó\n  0x0223: 0xda,   // Ú\n  0x0224: 0xdc,   // Ü\n  0x0225: 0xfc,   // ü\n  0x0226: 0x2018, // ‘\n  0x0227: 0xa1,   // ¡\n  0x0228: 0x2a,   // *\n  0x0229: 0x27,   // '\n  0x022a: 0x2014, // —\n  0x022b: 0xa9,   // ©\n  0x022c: 0x2120, // ℠\n  0x022d: 0x2022, // •\n  0x022e: 0x201c, // “\n  0x022f: 0x201d, // ”\n  0x0230: 0xc0,   // À\n  0x0231: 0xc2,   // Â\n  0x0232: 0xc7,   // Ç\n  0x0233: 0xc8,   // È\n  0x0234: 0xca,   // Ê\n  0x0235: 0xcb,   // Ë\n  0x0236: 0xeb,   // ë\n  0x0237: 0xce,   // Î\n  0x0238: 0xcf,   // Ï\n  0x0239: 0xef,   // ï\n  0x023a: 0xd4,   // Ô\n  0x023b: 0xd9,   // Ù\n  0x023c: 0xf9,   // ù\n  0x023d: 0xdb,   // Û\n  0x023e: 0xab,   // «\n  0x023f: 0xbb,   // »\n  0x0320: 0xc3,   // Ã\n  0x0321: 0xe3,   // ã\n  0x0322: 0xcd,   // Í\n  0x0323: 0xcc,   // Ì\n  0x0324: 0xec,   // ì\n  0x0325: 0xd2,   // Ò\n  0x0326: 0xf2,   // ò\n  0x0327: 0xd5,   // Õ\n  0x0328: 0xf5,   // õ\n  0x0329: 0x7b,   // {\n  0x032a: 0x7d,   // }\n  0x032b: 0x5c,   // \\\n  0x032c: 0x5e,   // ^\n  0x032d: 0x5f,   // _\n  0x032e: 0x7c,   // |\n  0x032f: 0x7e,   // ~\n  0x0330: 0xc4,   // Ä\n  0x0331: 0xe4,   // ä\n  0x0332: 0xd6,   // Ö\n  0x0333: 0xf6,   // ö\n  0x0334: 0xdf,   // ß\n  0x0335: 0xa5,   // ¥\n  0x0336: 0xa4,   // ¤\n  0x0337: 0x2502, // │\n  0x0338: 0xc5,   // Å\n  0x0339: 0xe5,   // å\n  0x033a: 0xd8,   // Ø\n  0x033b: 0xf8,   // ø\n  0x033c: 0x250c, // ┌\n  0x033d: 0x2510, // ┐\n  0x033e: 0x2514, // └\n  0x033f: 0x2518  // ┘\n};\n\nvar getCharFromCode = function(code) {\n  if (code === null) {\n    return '';\n  }\n  code = CHARACTER_TRANSLATION[code] || code;\n  return String.fromCharCode(code);\n};\n\n// the index of the last row in a CEA-608 display buffer\nvar BOTTOM_ROW = 14;\n\n// This array is used for mapping PACs -> row #, since there's no way of\n// getting it through bit logic.\nvar ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620,\n            0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420];\n\n// CEA-608 captions are rendered onto a 34x15 matrix of character\n// cells. The \"bottom\" row is the last element in the outer array.\nvar createDisplayBuffer = function() {\n  var result = [], i = BOTTOM_ROW + 1;\n  while (i--) {\n    result.push('');\n  }\n  return result;\n};\n\nvar Cea608Stream = function(field, dataChannel) {\n  Cea608Stream.prototype.init.call(this);\n\n  this.field_ = field || 0;\n  this.dataChannel_ = dataChannel || 0;\n\n  this.name_ = 'CC' + (((this.field_ << 1) | this.dataChannel_) + 1);\n\n  this.setConstants();\n  this.reset();\n\n  this.push = function(packet) {\n    var data, swap, char0, char1, text;\n    // remove the parity bits\n    data = packet.ccData & 0x7f7f;\n\n    // ignore duplicate control codes; the spec demands they're sent twice\n    if (data === this.lastControlCode_) {\n      this.lastControlCode_ = null;\n      return;\n    }\n\n    // Store control codes\n    if ((data & 0xf000) === 0x1000) {\n      this.lastControlCode_ = data;\n    } else if (data !== this.PADDING_) {\n      this.lastControlCode_ = null;\n    }\n\n    char0 = data >>> 8;\n    char1 = data & 0xff;\n\n    if (data === this.PADDING_) {\n      return;\n\n    } else if (data === this.RESUME_CAPTION_LOADING_) {\n      this.mode_ = 'popOn';\n\n    } else if (data === this.END_OF_CAPTION_) {\n      this.clearFormatting(packet.pts);\n      // if a caption was being displayed, it's gone now\n      this.flushDisplayed(packet.pts);\n\n      // flip memory\n      swap = this.displayed_;\n      this.displayed_ = this.nonDisplayed_;\n      this.nonDisplayed_ = swap;\n\n      // start measuring the time to display the caption\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.ROLL_UP_2_ROWS_) {\n      this.topRow_ = BOTTOM_ROW - 1;\n      this.mode_ = 'rollUp';\n    } else if (data === this.ROLL_UP_3_ROWS_) {\n      this.topRow_ = BOTTOM_ROW - 2;\n      this.mode_ = 'rollUp';\n    } else if (data === this.ROLL_UP_4_ROWS_) {\n      this.topRow_ = BOTTOM_ROW - 3;\n      this.mode_ = 'rollUp';\n    } else if (data === this.CARRIAGE_RETURN_) {\n      this.clearFormatting(packet.pts);\n      this.flushDisplayed(packet.pts);\n      this.shiftRowsUp_();\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.BACKSPACE_) {\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[BOTTOM_ROW] = this.nonDisplayed_[BOTTOM_ROW].slice(0, -1);\n      } else {\n        this.displayed_[BOTTOM_ROW] = this.displayed_[BOTTOM_ROW].slice(0, -1);\n      }\n    } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n      this.flushDisplayed(packet.pts);\n      this.displayed_ = createDisplayBuffer();\n    } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n      this.nonDisplayed_ = createDisplayBuffer();\n\n    } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n      this.mode_ = 'paintOn';\n\n    // Append special characters to caption text\n    } else if (this.isSpecialCharacter(char0, char1)) {\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Append extended characters to caption text\n    } else if (this.isExtCharacter(char0, char1)) {\n      // Extended characters always follow their \"non-extended\" equivalents.\n      // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n      // decoders are supposed to drop the \"è\", while compliant decoders\n      // backspace the \"e\" and insert \"è\".\n\n      // Delete the previous character\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[BOTTOM_ROW] = this.displayed_[BOTTOM_ROW].slice(0, -1);\n      }\n\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Process mid-row codes\n    } else if (this.isMidRowCode(char0, char1)) {\n      // Attributes are not additive, so clear all formatting\n      this.clearFormatting(packet.pts);\n\n      // According to the standard, mid-row codes\n      // should be replaced with spaces, so add one now\n      this[this.mode_](packet.pts, ' ');\n      this.column_++;\n\n      if ((char1 & 0xe) === 0xe) {\n        this.addFormatting(packet.pts, ['i']);\n      }\n\n      if ((char1 & 0x1) === 0x1) {\n        this.addFormatting(packet.pts, ['u']);\n      }\n\n    // Detect offset control codes and adjust cursor\n    } else if (this.isOffsetControlCode(char0, char1)) {\n      // Cursor position is set by indent PAC (see below) in 4-column\n      // increments, with an additional offset code of 1-3 to reach any\n      // of the 32 columns specified by CEA-608. So all we need to do\n      // here is increment the column cursor by the given offset.\n      this.column_ += (char1 & 0x03);\n\n    // Detect PACs (Preamble Address Codes)\n    } else if (this.isPAC(char0, char1)) {\n\n      // There's no logic for PAC -> row mapping, so we have to just\n      // find the row code in an array and use its index :(\n      var row = ROWS.indexOf(data & 0x1f20);\n\n      if (row !== this.row_) {\n        // formatting is only persistent for current row\n        this.clearFormatting(packet.pts);\n        this.row_ = row;\n      }\n      // All PACs can apply underline, so detect and apply\n      // (All odd-numbered second bytes set underline)\n      if ((char1 & 0x1) && (this.formatting_.indexOf('u') === -1)) {\n          this.addFormatting(packet.pts, ['u']);\n      }\n\n      if ((data & 0x10) === 0x10) {\n        // We've got an indent level code. Each successive even number\n        // increments the column cursor by 4, so we can get the desired\n        // column position by bit-shifting to the right (to get n/2)\n        // and multiplying by 4.\n        this.column_ = ((data & 0xe) >> 1) * 4;\n      }\n\n      if (this.isColorPAC(char1)) {\n        // it's a color code, though we only support white, which\n        // can be either normal or italicized. white italics can be\n        // either 0x4e or 0x6e depending on the row, so we just\n        // bitwise-and with 0xe to see if italics should be turned on\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n      }\n\n    // We have a normal character in char0, and possibly one in char1\n    } else if (this.isNormalChar(char0)) {\n      if (char1 === 0x00) {\n        char1 = null;\n      }\n      text = getCharFromCode(char0);\n      text += getCharFromCode(char1);\n      this[this.mode_](packet.pts, text);\n      this.column_ += text.length;\n\n    } // finish data processing\n\n  };\n};\nCea608Stream.prototype = new Stream();\n// Trigger a cue point that captures the current state of the\n// display buffer\nCea608Stream.prototype.flushDisplayed = function(pts) {\n  var content = this.displayed_\n    // remove spaces from the start and end of the string\n    .map(function(row) {\n      return row.trim();\n    })\n    // combine all text rows to display in one cue\n    .join('\\n')\n    // and remove blank rows from the start and end, but not the middle\n    .replace(/^\\n+|\\n+$/g, '');\n\n  if (content.length) {\n    this.trigger('data', {\n      startPts: this.startPts_,\n      endPts: pts,\n      text: content,\n      stream: this.name_\n    });\n  }\n};\n\n/**\n * Zero out the data, used for startup and on seek\n */\nCea608Stream.prototype.reset = function() {\n  this.mode_ = 'popOn';\n  // When in roll-up mode, the index of the last row that will\n  // actually display captions. If a caption is shifted to a row\n  // with a lower index than this, it is cleared from the display\n  // buffer\n  this.topRow_ = 0;\n  this.startPts_ = 0;\n  this.displayed_ = createDisplayBuffer();\n  this.nonDisplayed_ = createDisplayBuffer();\n  this.lastControlCode_ = null;\n\n  // Track row and column for proper line-breaking and spacing\n  this.column_ = 0;\n  this.row_ = BOTTOM_ROW;\n\n  // This variable holds currently-applied formatting\n  this.formatting_ = [];\n};\n\n/**\n * Sets up control code and related constants for this instance\n */\nCea608Stream.prototype.setConstants = function() {\n  // The following attributes have these uses:\n  // ext_ :    char0 for mid-row codes, and the base for extended\n  //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n  //           extended codes)\n  // control_: char0 for control codes, except byte-shifted to the\n  //           left so that we can do this.control_ | CONTROL_CODE\n  // offset_:  char0 for tab offset codes\n  //\n  // It's also worth noting that control codes, and _only_ control codes,\n  // differ between field 1 and field2. Field 2 control codes are always\n  // their field 1 value plus 1. That's why there's the \"| field\" on the\n  // control value.\n  if (this.dataChannel_ === 0) {\n    this.BASE_     = 0x10;\n    this.EXT_      = 0x11;\n    this.CONTROL_  = (0x14 | this.field_) << 8;\n    this.OFFSET_   = 0x17;\n  } else if (this.dataChannel_ === 1) {\n    this.BASE_     = 0x18;\n    this.EXT_      = 0x19;\n    this.CONTROL_  = (0x1c | this.field_) << 8;\n    this.OFFSET_   = 0x1f;\n  }\n\n  // Constants for the LSByte command codes recognized by Cea608Stream. This\n  // list is not exhaustive. For a more comprehensive listing and semantics see\n  // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n  // Padding\n  this.PADDING_                    = 0x0000;\n  // Pop-on Mode\n  this.RESUME_CAPTION_LOADING_     = this.CONTROL_ | 0x20;\n  this.END_OF_CAPTION_             = this.CONTROL_ | 0x2f;\n  // Roll-up Mode\n  this.ROLL_UP_2_ROWS_             = this.CONTROL_ | 0x25;\n  this.ROLL_UP_3_ROWS_             = this.CONTROL_ | 0x26;\n  this.ROLL_UP_4_ROWS_             = this.CONTROL_ | 0x27;\n  this.CARRIAGE_RETURN_            = this.CONTROL_ | 0x2d;\n  // paint-on mode (not supported)\n  this.RESUME_DIRECT_CAPTIONING_   = this.CONTROL_ | 0x29;\n  // Erasure\n  this.BACKSPACE_                  = this.CONTROL_ | 0x21;\n  this.ERASE_DISPLAYED_MEMORY_     = this.CONTROL_ | 0x2c;\n  this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n};\n\n/**\n * Detects if the 2-byte packet data is a special character\n *\n * Special characters have a second byte in the range 0x30 to 0x3f,\n * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an special character\n */\nCea608Stream.prototype.isSpecialCharacter = function(char0, char1) {\n  return (char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f);\n};\n\n/**\n * Detects if the 2-byte packet data is an extended character\n *\n * Extended characters have a second byte in the range 0x20 to 0x3f,\n * with the first byte being 0x12 or 0x13 (for data channel 1) or\n * 0x1a or 0x1b (for data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an extended character\n */\nCea608Stream.prototype.isExtCharacter = function(char0, char1) {\n  return ((char0 === (this.EXT_ + 1) || char0 === (this.EXT_ + 2)) &&\n    (char1 >= 0x20 && char1 <= 0x3f));\n};\n\n/**\n * Detects if the 2-byte packet is a mid-row code\n *\n * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n * channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a mid-row code\n */\nCea608Stream.prototype.isMidRowCode = function(char0, char1) {\n  return (char0 === this.EXT_ && (char1 >= 0x20 && char1 <= 0x2f));\n};\n\n/**\n * Detects if the 2-byte packet is an offset control code\n *\n * Offset control codes have a second byte in the range 0x21 to 0x23,\n * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an offset control code\n */\nCea608Stream.prototype.isOffsetControlCode = function(char0, char1) {\n  return (char0 === this.OFFSET_ && (char1 >= 0x21 && char1 <= 0x23));\n};\n\n/**\n * Detects if the 2-byte packet is a Preamble Address Code\n *\n * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n * range 0x40 to 0x7f.\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a PAC\n */\nCea608Stream.prototype.isPAC = function(char0, char1) {\n  return (char0 >= this.BASE_ && char0 < (this.BASE_ + 8) &&\n    (char1 >= 0x40 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a packet's second byte is in the range of a PAC color code\n *\n * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n * 0x60 to 0x6f.\n *\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the byte is a color PAC\n */\nCea608Stream.prototype.isColorPAC = function(char1) {\n  return ((char1 >= 0x40 && char1 <= 0x4f) || (char1 >= 0x60 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a single byte is in the range of a normal character\n *\n * Normal text bytes are in the range 0x20 to 0x7f.\n *\n * @param  {Integer} char  The byte\n * @return {Boolean}       Whether the byte is a normal character\n */\nCea608Stream.prototype.isNormalChar = function(char) {\n  return (char >= 0x20 && char <= 0x7f);\n};\n\n// Adds the opening HTML tag for the passed character to the caption text,\n// and keeps track of it for later closing\nCea608Stream.prototype.addFormatting = function(pts, format) {\n  this.formatting_ = this.formatting_.concat(format);\n  var text = format.reduce(function(text, format) {\n    return text + '<' + format + '>';\n  }, '');\n  this[this.mode_](pts, text);\n};\n\n// Adds HTML closing tags for current formatting to caption text and\n// clears remembered formatting\nCea608Stream.prototype.clearFormatting = function(pts) {\n  if (!this.formatting_.length) {\n    return;\n  }\n  var text = this.formatting_.reverse().reduce(function(text, format) {\n    return text + '</' + format + '>';\n  }, '');\n  this.formatting_ = [];\n  this[this.mode_](pts, text);\n};\n\n// Mode Implementations\nCea608Stream.prototype.popOn = function(pts, text) {\n  var baseRow = this.nonDisplayed_[this.row_];\n\n  // buffer characters\n  baseRow += text;\n  this.nonDisplayed_[this.row_] = baseRow;\n};\n\nCea608Stream.prototype.rollUp = function(pts, text) {\n  var baseRow = this.displayed_[BOTTOM_ROW];\n\n  baseRow += text;\n  this.displayed_[BOTTOM_ROW] = baseRow;\n\n};\n\nCea608Stream.prototype.shiftRowsUp_ = function() {\n  var i;\n  // clear out inactive rows\n  for (i = 0; i < this.topRow_; i++) {\n    this.displayed_[i] = '';\n  }\n  // shift displayed rows up\n  for (i = this.topRow_; i < BOTTOM_ROW; i++) {\n    this.displayed_[i] = this.displayed_[i + 1];\n  }\n  // clear out the bottom row\n  this.displayed_[BOTTOM_ROW] = '';\n};\n\n// paintOn mode is not implemented\nCea608Stream.prototype.paintOn = function() {};\n\n// exports\nmodule.exports = {\n  CaptionStream: CaptionStream,\n  Cea608Stream: Cea608Stream\n};\n\n},{\"../utils/stream\":62}],50:[function(require,module,exports){\n/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js'),\n  CaptionStream = require('./caption-stream'),\n  StreamTypes = require('./stream-types'),\n  TimestampRolloverStream = require('./timestamp-rollover-stream').TimestampRolloverStream;\n\nvar m2tsStreamTypes = require('./stream-types.js');\n\n// object types\nvar TransportPacketStream, TransportParseStream, ElementaryStream;\n\n// constants\nvar\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\n/**\n * Splits an incoming stream of binary data into MPEG-2 Transport\n * Stream packets.\n */\nTransportPacketStream = function() {\n  var\n    buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n    bytesInBuffer = 0;\n\n  TransportPacketStream.prototype.init.call(this);\n\n   // Deliver new bytes to the stream.\n\n  this.push = function(bytes) {\n    var\n      startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      everything;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (bytesInBuffer) {\n      everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n      everything.set(buffer.subarray(0, bytesInBuffer));\n      everything.set(bytes, bytesInBuffer);\n      bytesInBuffer = 0;\n    } else {\n      everything = bytes;\n    }\n\n    // While we have enough data for a packet\n    while (endIndex < everything.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n        // We found a packet so emit it and jump one whole packet forward in\n        // the stream\n        this.trigger('data', everything.subarray(startIndex, endIndex));\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      }\n      // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n      startIndex++;\n      endIndex++;\n    }\n\n    // If there was some data left over at the end of the segment that couldn't\n    // possibly be a whole packet, keep it because it might be the start of a packet\n    // that continues in the next segment\n    if (startIndex < everything.byteLength) {\n      buffer.set(everything.subarray(startIndex), 0);\n      bytesInBuffer = everything.byteLength - startIndex;\n    }\n  };\n\n  this.flush = function() {\n    // If the buffer contains a whole packet when we are being flushed, emit it\n    // and empty the buffer. Otherwise hold onto the data because it may be\n    // important for decoding the next segment\n    if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n      this.trigger('data', buffer);\n      bytesInBuffer = 0;\n    }\n    this.trigger('done');\n  };\n};\nTransportPacketStream.prototype = new Stream();\n\n/**\n * Accepts an MP2T TransportPacketStream and emits data events with parsed\n * forms of the individual transport stream packets.\n */\nTransportParseStream = function() {\n  var parsePsi, parsePat, parsePmt, self;\n  TransportParseStream.prototype.init.call(this);\n  self = this;\n\n  this.packetsWaitingForPmt = [];\n  this.programMapTable = undefined;\n\n  parsePsi = function(payload, psi) {\n    var offset = 0;\n\n    // PSI packets may be split into multiple sections and those\n    // sections may be split into multiple packets. If a PSI\n    // section starts in this packet, the payload_unit_start_indicator\n    // will be true and the first byte of the payload will indicate\n    // the offset from the current position to the start of the\n    // section.\n    if (psi.payloadUnitStartIndicator) {\n      offset += payload[offset] + 1;\n    }\n\n    if (psi.type === 'pat') {\n      parsePat(payload.subarray(offset), psi);\n    } else {\n      parsePmt(payload.subarray(offset), psi);\n    }\n  };\n\n  parsePat = function(payload, pat) {\n    pat.section_number = payload[7]; // eslint-disable-line camelcase\n    pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n\n    // skip the PSI header and parse the first PMT entry\n    self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n    pat.pmtPid = self.pmtPid;\n  };\n\n  /**\n   * Parse out the relevant fields of a Program Map Table (PMT).\n   * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n   * packet. The first byte in this array should be the table_id\n   * field.\n   * @param pmt {object} the object that should be decorated with\n   * fields parsed from the PMT.\n   */\n  parsePmt = function(payload, pmt) {\n    var sectionLength, tableEnd, programInfoLength, offset;\n\n    // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n    if (!(payload[5] & 0x01)) {\n      return;\n    }\n\n    // overwrite any existing program map table\n    self.programMapTable = {\n      video: null,\n      audio: null,\n      'timed-metadata': {}\n    };\n\n    // the mapping table ends at the end of the current section\n    sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n    tableEnd = 3 + sectionLength - 4;\n\n    // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n    programInfoLength = (payload[10] & 0x0f) << 8 | payload[11];\n\n    // advance the offset to the first entry in the mapping table\n    offset = 12 + programInfoLength;\n    while (offset < tableEnd) {\n      var streamType = payload[offset];\n      var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2];\n\n      // only map a single elementary_pid for audio and video stream types\n      // TODO: should this be done for metadata too? for now maintain behavior of\n      //       multiple metadata streams\n      if (streamType === StreamTypes.H264_STREAM_TYPE &&\n          self.programMapTable.video === null) {\n        self.programMapTable.video = pid;\n      } else if (streamType === StreamTypes.ADTS_STREAM_TYPE &&\n                 self.programMapTable.audio === null) {\n        self.programMapTable.audio = pid;\n      } else if (streamType === StreamTypes.METADATA_STREAM_TYPE) {\n        // map pid to stream type for metadata streams\n        self.programMapTable['timed-metadata'][pid] = streamType;\n      }\n\n      // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n      offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n    }\n\n    // record the map on the packet as well\n    pmt.programMapTable = self.programMapTable;\n  };\n\n  /**\n   * Deliver a new MP2T packet to the stream.\n   */\n  this.push = function(packet) {\n    var\n      result = {},\n      offset = 4;\n\n    result.payloadUnitStartIndicator = !!(packet[1] & 0x40);\n\n    // pid is a 13-bit field starting at the last bit of packet[1]\n    result.pid = packet[1] & 0x1f;\n    result.pid <<= 8;\n    result.pid |= packet[2];\n\n    // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n    if (((packet[3] & 0x30) >>> 4) > 0x01) {\n      offset += packet[offset] + 1;\n    }\n\n    // parse the rest of the packet based on the type\n    if (result.pid === 0) {\n      result.type = 'pat';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n    } else if (result.pid === this.pmtPid) {\n      result.type = 'pmt';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n\n      // if there are any packets waiting for a PMT to be found, process them now\n      while (this.packetsWaitingForPmt.length) {\n        this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n      }\n    } else if (this.programMapTable === undefined) {\n      // When we have not seen a PMT yet, defer further processing of\n      // PES packets until one has been parsed\n      this.packetsWaitingForPmt.push([packet, offset, result]);\n    } else {\n      this.processPes_(packet, offset, result);\n    }\n  };\n\n  this.processPes_ = function(packet, offset, result) {\n    // set the appropriate stream type\n    if (result.pid === this.programMapTable.video) {\n      result.streamType = StreamTypes.H264_STREAM_TYPE;\n    } else if (result.pid === this.programMapTable.audio) {\n      result.streamType = StreamTypes.ADTS_STREAM_TYPE;\n    } else {\n      // if not video or audio, it is timed-metadata or unknown\n      // if unknown, streamType will be undefined\n      result.streamType = this.programMapTable['timed-metadata'][result.pid];\n    }\n\n    result.type = 'pes';\n    result.data = packet.subarray(offset);\n\n    this.trigger('data', result);\n  };\n\n};\nTransportParseStream.prototype = new Stream();\nTransportParseStream.STREAM_TYPES  = {\n  h264: 0x1b,\n  adts: 0x0f\n};\n\n/**\n * Reconsistutes program elementary stream (PES) packets from parsed\n * transport stream packets. That is, if you pipe an\n * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n * events will be events which capture the bytes for individual PES\n * packets plus relevant metadata that has been extracted from the\n * container.\n */\nElementaryStream = function() {\n  var\n    self = this,\n    // PES packet fragments\n    video = {\n      data: [],\n      size: 0\n    },\n    audio = {\n      data: [],\n      size: 0\n    },\n    timedMetadata = {\n      data: [],\n      size: 0\n    },\n    parsePes = function(payload, pes) {\n      var ptsDtsFlags;\n\n      // get the packet length, this will be 0 for video\n      pes.packetLength = 6 + ((payload[4] << 8) | payload[5]);\n\n      // find out if this packets starts a new keyframe\n      pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0;\n      // PES packets may be annotated with a PTS value, or a PTS value\n      // and a DTS value. Determine what combination of values is\n      // available to work with.\n      ptsDtsFlags = payload[7];\n\n      // PTS and DTS are normally stored as a 33-bit number.  Javascript\n      // performs all bitwise operations on 32-bit integers but javascript\n      // supports a much greater range (52-bits) of integer using standard\n      // mathematical operations.\n      // We construct a 31-bit value using bitwise operators over the 31\n      // most significant bits and then multiply by 4 (equal to a left-shift\n      // of 2) before we add the final 2 least significant bits of the\n      // timestamp (equal to an OR.)\n      if (ptsDtsFlags & 0xC0) {\n        // the PTS and DTS are not written out directly. For information\n        // on how they are encoded, see\n        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n        pes.pts = (payload[9] & 0x0E) << 27 |\n          (payload[10] & 0xFF) << 20 |\n          (payload[11] & 0xFE) << 12 |\n          (payload[12] & 0xFF) <<  5 |\n          (payload[13] & 0xFE) >>>  3;\n        pes.pts *= 4; // Left shift by 2\n        pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n        pes.dts = pes.pts;\n        if (ptsDtsFlags & 0x40) {\n          pes.dts = (payload[14] & 0x0E) << 27 |\n            (payload[15] & 0xFF) << 20 |\n            (payload[16] & 0xFE) << 12 |\n            (payload[17] & 0xFF) << 5 |\n            (payload[18] & 0xFE) >>> 3;\n          pes.dts *= 4; // Left shift by 2\n          pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n        }\n      }\n      // the data section starts immediately after the PES header.\n      // pes_header_data_length specifies the number of header bytes\n      // that follow the last byte of the field.\n      pes.data = payload.subarray(9 + payload[8]);\n    },\n    flushStream = function(stream, type, forceFlush) {\n      var\n        packetData = new Uint8Array(stream.size),\n        event = {\n          type: type\n        },\n        i = 0,\n        offset = 0,\n        packetFlushable = false,\n        fragment;\n\n      // do nothing if there is not enough buffered data for a complete\n      // PES header\n      if (!stream.data.length || stream.size < 9) {\n        return;\n      }\n      event.trackId = stream.data[0].pid;\n\n      // reassemble the packet\n      for (i = 0; i < stream.data.length; i++) {\n        fragment = stream.data[i];\n\n        packetData.set(fragment.data, offset);\n        offset += fragment.data.byteLength;\n      }\n\n      // parse assembled packet's PES header\n      parsePes(packetData, event);\n\n      // non-video PES packets MUST have a non-zero PES_packet_length\n      // check that there is enough stream data to fill the packet\n      packetFlushable = type === 'video' || event.packetLength <= stream.size;\n\n      // flush pending packets if the conditions are right\n      if (forceFlush || packetFlushable) {\n        stream.size = 0;\n        stream.data.length = 0;\n      }\n\n      // only emit packets that are complete. this is to avoid assembling\n      // incomplete PES packets due to poor segmentation\n      if (packetFlushable) {\n        self.trigger('data', event);\n      }\n    };\n\n  ElementaryStream.prototype.init.call(this);\n\n  this.push = function(data) {\n    ({\n      pat: function() {\n        // we have to wait for the PMT to arrive as well before we\n        // have any meaningful metadata\n      },\n      pes: function() {\n        var stream, streamType;\n\n        switch (data.streamType) {\n        case StreamTypes.H264_STREAM_TYPE:\n        case m2tsStreamTypes.H264_STREAM_TYPE:\n          stream = video;\n          streamType = 'video';\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          stream = audio;\n          streamType = 'audio';\n          break;\n        case StreamTypes.METADATA_STREAM_TYPE:\n          stream = timedMetadata;\n          streamType = 'timed-metadata';\n          break;\n        default:\n          // ignore unknown stream types\n          return;\n        }\n\n        // if a new packet is starting, we can flush the completed\n        // packet\n        if (data.payloadUnitStartIndicator) {\n          flushStream(stream, streamType, true);\n        }\n\n        // buffer this fragment until we are sure we've received the\n        // complete payload\n        stream.data.push(data);\n        stream.size += data.data.byteLength;\n      },\n      pmt: function() {\n        var\n          event = {\n            type: 'metadata',\n            tracks: []\n          },\n          programMapTable = data.programMapTable;\n\n        // translate audio and video streams to tracks\n        if (programMapTable.video !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n        if (programMapTable.audio !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n\n        self.trigger('data', event);\n      }\n    })[data.type]();\n  };\n\n  /**\n   * Flush any remaining input. Video PES packets may be of variable\n   * length. Normally, the start of a new video packet can trigger the\n   * finalization of the previous packet. That is not possible if no\n   * more video is forthcoming, however. In that case, some other\n   * mechanism (like the end of the file) has to be employed. When it is\n   * clear that no additional data is forthcoming, calling this method\n   * will flush the buffered packets.\n   */\n  this.flush = function() {\n    // !!THIS ORDER IS IMPORTANT!!\n    // video first then audio\n    flushStream(video, 'video');\n    flushStream(audio, 'audio');\n    flushStream(timedMetadata, 'timed-metadata');\n    this.trigger('done');\n  };\n};\nElementaryStream.prototype = new Stream();\n\nvar m2ts = {\n  PAT_PID: 0x0000,\n  MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n  TransportPacketStream: TransportPacketStream,\n  TransportParseStream: TransportParseStream,\n  ElementaryStream: ElementaryStream,\n  TimestampRolloverStream: TimestampRolloverStream,\n  CaptionStream: CaptionStream.CaptionStream,\n  Cea608Stream: CaptionStream.Cea608Stream,\n  MetadataStream: require('./metadata-stream')\n};\n\nfor (var type in StreamTypes) {\n  if (StreamTypes.hasOwnProperty(type)) {\n    m2ts[type] = StreamTypes[type];\n  }\n}\n\nmodule.exports = m2ts;\n\n},{\"../utils/stream.js\":62,\"./caption-stream\":49,\"./metadata-stream\":51,\"./stream-types\":53,\"./stream-types.js\":53,\"./timestamp-rollover-stream\":54}],51:[function(require,module,exports){\n/**\n * Accepts program elementary stream (PES) data events and parses out\n * ID3 metadata from them, if present.\n * @see http://id3.org/id3v2.3.0\n */\n'use strict';\nvar\n  Stream = require('../utils/stream'),\n  StreamTypes = require('./stream-types'),\n  // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n  percentEncode = function(bytes, start, end) {\n    var i, result = '';\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n    return result;\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as UTf-8.\n  parseUtf8 = function(bytes, start, end) {\n    return decodeURIComponent(percentEncode(bytes, start, end));\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n  parseIso88591 = function(bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  },\n  parseSyncSafeInteger = function(data) {\n    return (data[0] << 21) |\n            (data[1] << 14) |\n            (data[2] << 7) |\n            (data[3]);\n  },\n  tagParsers = {\n    TXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the text fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          // do not include the null terminator in the tag value\n          tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n          break;\n        }\n      }\n      tag.data = tag.value;\n    },\n    WXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n          break;\n        }\n      }\n    },\n    PRIV: function(tag) {\n      var i;\n\n      for (i = 0; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.owner = parseIso88591(tag.data, 0, i);\n          break;\n        }\n      }\n      tag.privateData = tag.data.subarray(i + 1);\n      tag.data = tag.privateData;\n    }\n  },\n  MetadataStream;\n\nMetadataStream = function(options) {\n  var\n    settings = {\n      debug: !!(options && options.debug),\n\n      // the bytes of the program-level descriptor field in MP2T\n      // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n      // program element descriptors\"\n      descriptor: options && options.descriptor\n    },\n    // the total size in bytes of the ID3 tag being parsed\n    tagSize = 0,\n    // tag data that is not complete enough to be parsed\n    buffer = [],\n    // the total number of bytes currently in the buffer\n    bufferSize = 0,\n    i;\n\n  MetadataStream.prototype.init.call(this);\n\n  // calculate the text track in-band metadata track dispatch type\n  // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n  this.dispatchType = StreamTypes.METADATA_STREAM_TYPE.toString(16);\n  if (settings.descriptor) {\n    for (i = 0; i < settings.descriptor.length; i++) {\n      this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n    }\n  }\n\n  this.push = function(chunk) {\n    var tag, frameStart, frameSize, frame, i, frameHeader;\n    if (chunk.type !== 'timed-metadata') {\n      return;\n    }\n\n    // if data_alignment_indicator is set in the PES header,\n    // we must have the start of a new ID3 tag. Assume anything\n    // remaining in the buffer was malformed and throw it out\n    if (chunk.dataAlignmentIndicator) {\n      bufferSize = 0;\n      buffer.length = 0;\n    }\n\n    // ignore events that don't look like ID3 data\n    if (buffer.length === 0 &&\n        (chunk.data.length < 10 ||\n          chunk.data[0] !== 'I'.charCodeAt(0) ||\n          chunk.data[1] !== 'D'.charCodeAt(0) ||\n          chunk.data[2] !== '3'.charCodeAt(0))) {\n      if (settings.debug) {\n        // eslint-disable-next-line no-console\n        console.log('Skipping unrecognized metadata packet');\n      }\n      return;\n    }\n\n    // add this chunk to the data we've collected so far\n\n    buffer.push(chunk);\n    bufferSize += chunk.data.byteLength;\n\n    // grab the size of the entire frame from the ID3 header\n    if (buffer.length === 1) {\n      // the frame size is transmitted as a 28-bit integer in the\n      // last four bytes of the ID3 header.\n      // The most significant bit of each byte is dropped and the\n      // results concatenated to recover the actual value.\n      tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10));\n\n      // ID3 reports the tag size excluding the header but it's more\n      // convenient for our comparisons to include it\n      tagSize += 10;\n    }\n\n    // if the entire frame has not arrived, wait for more data\n    if (bufferSize < tagSize) {\n      return;\n    }\n\n    // collect the entire frame so it can be parsed\n    tag = {\n      data: new Uint8Array(tagSize),\n      frames: [],\n      pts: buffer[0].pts,\n      dts: buffer[0].dts\n    };\n    for (i = 0; i < tagSize;) {\n      tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n      i += buffer[0].data.byteLength;\n      bufferSize -= buffer[0].data.byteLength;\n      buffer.shift();\n    }\n\n    // find the start of the first frame and the end of the tag\n    frameStart = 10;\n    if (tag.data[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n      frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14));\n\n      // clip any padding off the end\n      tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n    }\n\n    // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n         // eslint-disable-next-line no-console\n        return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n      }\n      frameHeader = String.fromCharCode(tag.data[frameStart],\n                                        tag.data[frameStart + 1],\n                                        tag.data[frameStart + 2],\n                                        tag.data[frameStart + 3]);\n\n\n      frame = {\n        id: frameHeader,\n        data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n      };\n      frame.key = frame.id;\n      if (tagParsers[frame.id]) {\n        tagParsers[frame.id](frame);\n\n        // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var\n            d = frame.data,\n            size = ((d[3] & 0x01)  << 30) |\n                   (d[4]  << 22) |\n                   (d[5] << 14) |\n                   (d[6] << 6) |\n                   (d[7] >>> 2);\n\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size;\n          // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n          this.trigger('timestamp', frame);\n        }\n      }\n      tag.frames.push(frame);\n\n      frameStart += 10; // advance past the frame header\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < tagSize);\n    this.trigger('data', tag);\n  };\n};\nMetadataStream.prototype = new Stream();\n\nmodule.exports = MetadataStream;\n\n},{\"../utils/stream\":62,\"./stream-types\":53}],52:[function(require,module,exports){\n/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function(packet) {\n  var offset = 0;\n  // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n  if (((packet[3] & 0x30) >>> 4) > 0x01) {\n    offset += packet[4] + 1;\n  }\n  return offset;\n};\n\nvar parseType = function(packet, pmtPid) {\n  var pid = parsePid(packet);\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n  return null;\n};\n\nvar parsePat = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  }\n\n  // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength;\n  // the mapping table ends at the end of the current section\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4;\n\n  // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11];\n\n  // advance the offset to the first entry in the mapping table\n  var offset = 12 + programInfoLength;\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset;\n    // add an entry that maps the elementary_pid to the stream_type\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i];\n\n    // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n  return programMapTable;\n};\n\nvar parsePesType = function(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (offset >= packet.byteLength) {\n    // From the H 222.0 MPEG-TS spec\n    // \"For transport stream packets carrying PES packets, stuffing is needed when there\n    //  is insufficient PES packet data to completely fill the transport stream packet\n    //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n    //  the sum of the lengths of the data elements in it, so that the payload bytes\n    //  remaining after the adaptation field exactly accommodates the available PES packet\n    //  data.\"\n    //\n    // If the offset is >= the length of the packet, then the packet contains no data\n    // and instead is just adaption field stuffing bytes\n    return null;\n  }\n\n  var pes = null;\n  var ptsDtsFlags;\n\n  // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n  ptsDtsFlags = packet[offset + 7];\n\n  // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n  if (ptsDtsFlags & 0xC0) {\n    pes = {};\n    // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 |\n      (packet[offset + 10] & 0xFF) << 20 |\n      (packet[offset + 11] & 0xFE) << 12 |\n      (packet[offset + 12] & 0xFF) <<  5 |\n      (packet[offset + 13] & 0xFE) >>>  3;\n    pes.pts *= 4; // Left shift by 2\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n    pes.dts = pes.pts;\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 |\n        (packet[offset + 15] & 0xFF) << 20 |\n        (packet[offset + 16] & 0xFE) << 12 |\n        (packet[offset + 17] & 0xFF) << 5 |\n        (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n  return pes;\n};\n\nvar parseNalUnitType = function(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n    case 0x06:\n      return 'sei_rbsp';\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType;\n\n  // advance the sync point to a NAL start, if necessary\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n    case 0:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0) {\n        frameI += 2;\n        break;\n      } else if (frameBuffer[frameI - 2] !== 0) {\n        frameI++;\n        break;\n      }\n\n      if (frameSyncPoint + 3 !== frameI - 2) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n\n      // drop trailing zeroes\n      do {\n        frameI++;\n      } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    case 1:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0 ||\n          frameBuffer[frameI - 2] !== 0) {\n        frameI += 3;\n        break;\n      }\n\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    default:\n      // the current byte isn't a one or zero, so it cannot be part\n      // of a sync sequence\n      frameI += 3;\n      break;\n    }\n  }\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0;\n  // parse the final nal\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};\n\n},{\"./stream-types.js\":53}],53:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  H264_STREAM_TYPE: 0x1B,\n  ADTS_STREAM_TYPE: 0x0F,\n  METADATA_STREAM_TYPE: 0x15\n};\n\n},{}],54:[function(require,module,exports){\n/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n\n'use strict';\n\nvar Stream = require('../utils/stream');\n\nvar MAX_TS = 8589934592;\n\nvar RO_THRESH = 4294967296;\n\nvar handleRollover = function(value, reference) {\n  var direction = 1;\n\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  }\n\n  // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += (direction * MAX_TS);\n  }\n\n  return value;\n};\n\nvar TimestampRolloverStream = function(type) {\n  var lastDTS, referenceDTS;\n\n  TimestampRolloverStream.prototype.init.call(this);\n\n  this.type_ = type;\n\n  this.push = function(data) {\n    if (data.type !== this.type_) {\n      return;\n    }\n\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n\n    lastDTS = data.dts;\n\n    this.trigger('data', data);\n  };\n\n  this.flush = function() {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n\n  this.discontinuity = function() {\n    referenceDTS = void 0;\n    lastDTS = void 0;\n  };\n\n};\n\nTimestampRolloverStream.prototype = new Stream();\n\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};\n\n},{\"../utils/stream\":62}],55:[function(require,module,exports){\nmodule.exports = {\n  generator: require('./mp4-generator'),\n  Transmuxer: require('./transmuxer').Transmuxer,\n  AudioSegmentStream: require('./transmuxer').AudioSegmentStream,\n  VideoSegmentStream: require('./transmuxer').VideoSegmentStream\n};\n\n},{\"./mp4-generator\":56,\"./transmuxer\":58}],56:[function(require,module,exports){\n/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Functions that generate fragmented MP4s suitable for use with Media\n * Source Extensions.\n */\n'use strict';\n\nvar UINT32_MAX = Math.pow(2, 32) - 1;\n\nvar box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd,\n    trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex,\n    trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR,\n    AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS;\n\n// pre-calculate constants\n(function() {\n  var i;\n  types = {\n    avc1: [], // codingname\n    avcC: [],\n    btrt: [],\n    dinf: [],\n    dref: [],\n    esds: [],\n    ftyp: [],\n    hdlr: [],\n    mdat: [],\n    mdhd: [],\n    mdia: [],\n    mfhd: [],\n    minf: [],\n    moof: [],\n    moov: [],\n    mp4a: [], // codingname\n    mvex: [],\n    mvhd: [],\n    sdtp: [],\n    smhd: [],\n    stbl: [],\n    stco: [],\n    stsc: [],\n    stsd: [],\n    stsz: [],\n    stts: [],\n    styp: [],\n    tfdt: [],\n    tfhd: [],\n    traf: [],\n    trak: [],\n    trun: [],\n    trex: [],\n    tkhd: [],\n    vmhd: []\n  };\n\n  // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n  // don't throw an error\n  if (typeof Uint8Array === 'undefined') {\n    return;\n  }\n\n  for (i in types) {\n    if (types.hasOwnProperty(i)) {\n      types[i] = [\n        i.charCodeAt(0),\n        i.charCodeAt(1),\n        i.charCodeAt(2),\n        i.charCodeAt(3)\n      ];\n    }\n  }\n\n  MAJOR_BRAND = new Uint8Array([\n    'i'.charCodeAt(0),\n    's'.charCodeAt(0),\n    'o'.charCodeAt(0),\n    'm'.charCodeAt(0)\n  ]);\n  AVC1_BRAND = new Uint8Array([\n    'a'.charCodeAt(0),\n    'v'.charCodeAt(0),\n    'c'.charCodeAt(0),\n    '1'.charCodeAt(0)\n  ]);\n  MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n  VIDEO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x56, 0x69, 0x64, 0x65,\n    0x6f, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n  ]);\n  AUDIO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x53, 0x6f, 0x75, 0x6e,\n    0x64, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n  ]);\n  HDLR_TYPES = {\n    video: VIDEO_HDLR,\n    audio: AUDIO_HDLR\n  };\n  DREF = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // entry_count\n    0x00, 0x00, 0x00, 0x0c, // entry_size\n    0x75, 0x72, 0x6c, 0x20, // 'url' type\n    0x00, // version 0\n    0x00, 0x00, 0x01 // entry_flags\n  ]);\n  SMHD = new Uint8Array([\n    0x00,             // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00,       // balance, 0 means centered\n    0x00, 0x00        // reserved\n  ]);\n  STCO = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n  ]);\n  STSC = STCO;\n  STSZ = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n  ]);\n  STTS = STCO;\n  VMHD = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x01, // flags\n    0x00, 0x00, // graphicsmode\n    0x00, 0x00,\n    0x00, 0x00,\n    0x00, 0x00 // opcolor\n  ]);\n}());\n\nbox = function(type) {\n  var\n    payload = [],\n    size = 0,\n    i,\n    result,\n    view;\n\n  for (i = 1; i < arguments.length; i++) {\n    payload.push(arguments[i]);\n  }\n\n  i = payload.length;\n\n  // calculate the total size we need to allocate\n  while (i--) {\n    size += payload[i].byteLength;\n  }\n  result = new Uint8Array(size + 8);\n  view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n  view.setUint32(0, result.byteLength);\n  result.set(type, 4);\n\n  // copy the payload into the result\n  for (i = 0, size = 8; i < payload.length; i++) {\n    result.set(payload[i], size);\n    size += payload[i].byteLength;\n  }\n  return result;\n};\n\ndinf = function() {\n  return box(types.dinf, box(types.dref, DREF));\n};\n\nesds = function(track) {\n  return box(types.esds, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n\n    // ES_Descriptor\n    0x03, // tag, ES_DescrTag\n    0x19, // length\n    0x00, 0x00, // ES_ID\n    0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n\n    // DecoderConfigDescriptor\n    0x04, // tag, DecoderConfigDescrTag\n    0x11, // length\n    0x40, // object type\n    0x15,  // streamType\n    0x00, 0x06, 0x00, // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0, // maxBitrate\n    0x00, 0x00, 0xda, 0xc0, // avgBitrate\n\n    // DecoderSpecificInfo\n    0x05, // tag, DecoderSpecificInfoTag\n    0x02, // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    (track.audioobjecttype << 3) | (track.samplingfrequencyindex >>> 1),\n    (track.samplingfrequencyindex << 7) | (track.channelcount << 3),\n    0x06, 0x01, 0x02 // GASpecificConfig\n  ]));\n};\n\nftyp = function() {\n  return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n};\n\nhdlr = function(type) {\n  return box(types.hdlr, HDLR_TYPES[type]);\n};\nmdat = function(data) {\n  return box(types.mdat, data);\n};\nmdhd = function(track) {\n  var result = new Uint8Array([\n    0x00,                   // version 0\n    0x00, 0x00, 0x00,       // flags\n    0x00, 0x00, 0x00, 0x02, // creation_time\n    0x00, 0x00, 0x00, 0x03, // modification_time\n    0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n\n    (track.duration >>> 24) & 0xFF,\n    (track.duration >>> 16) & 0xFF,\n    (track.duration >>>  8) & 0xFF,\n    track.duration & 0xFF,  // duration\n    0x55, 0xc4,             // 'und' language (undetermined)\n    0x00, 0x00\n  ]);\n\n  // Use the sample rate from the track metadata, when it is\n  // defined. The sample rate can be parsed out of an ADTS header, for\n  // instance.\n  if (track.samplerate) {\n    result[12] = (track.samplerate >>> 24) & 0xFF;\n    result[13] = (track.samplerate >>> 16) & 0xFF;\n    result[14] = (track.samplerate >>>  8) & 0xFF;\n    result[15] = (track.samplerate)        & 0xFF;\n  }\n\n  return box(types.mdhd, result);\n};\nmdia = function(track) {\n  return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n};\nmfhd = function(sequenceNumber) {\n  return box(types.mfhd, new Uint8Array([\n    0x00,\n    0x00, 0x00, 0x00, // flags\n    (sequenceNumber & 0xFF000000) >> 24,\n    (sequenceNumber & 0xFF0000) >> 16,\n    (sequenceNumber & 0xFF00) >> 8,\n    sequenceNumber & 0xFF // sequence_number\n  ]));\n};\nminf = function(track) {\n  return box(types.minf,\n             track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD),\n             dinf(),\n             stbl(track));\n};\nmoof = function(sequenceNumber, tracks) {\n  var\n    trackFragments = [],\n    i = tracks.length;\n  // build traf boxes for each track fragment\n  while (i--) {\n    trackFragments[i] = traf(tracks[i]);\n  }\n  return box.apply(null, [\n    types.moof,\n    mfhd(sequenceNumber)\n  ].concat(trackFragments));\n};\n/**\n * Returns a movie box.\n * @param tracks {array} the tracks associated with this movie\n * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n */\nmoov = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trak(tracks[i]);\n  }\n\n  return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n};\nmvex = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trex(tracks[i]);\n  }\n  return box.apply(null, [types.mvex].concat(boxes));\n};\nmvhd = function(duration) {\n  var\n    bytes = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24,\n      (duration & 0xFF0000) >> 16,\n      (duration & 0xFF00) >> 8,\n      duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n  return box(types.mvhd, bytes);\n};\n\nsdtp = function(track) {\n  var\n    samples = track.samples || [],\n    bytes = new Uint8Array(4 + samples.length),\n    flags,\n    i;\n\n  // leave the full box header (4 bytes) all zero\n\n  // write the sample table\n  for (i = 0; i < samples.length; i++) {\n    flags = samples[i].flags;\n\n    bytes[i + 4] = (flags.dependsOn << 4) |\n      (flags.isDependedOn << 2) |\n      (flags.hasRedundancy);\n  }\n\n  return box(types.sdtp,\n             bytes);\n};\n\nstbl = function(track) {\n  return box(types.stbl,\n             stsd(track),\n             box(types.stts, STTS),\n             box(types.stsc, STSC),\n             box(types.stsz, STSZ),\n             box(types.stco, STCO));\n};\n\n(function() {\n  var videoSample, audioSample;\n\n  stsd = function(track) {\n\n    return box(types.stsd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01\n    ]), track.type === 'video' ? videoSample(track) : audioSample(track));\n  };\n\n  videoSample = function(track) {\n    var\n      sps = track.sps || [],\n      pps = track.pps || [],\n      sequenceParameterSets = [],\n      pictureParameterSets = [],\n      i;\n\n    // assemble the SPSs\n    for (i = 0; i < sps.length; i++) {\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF)); // sequenceParameterSetLength\n      sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n    }\n\n    // assemble the PPSs\n    for (i = 0; i < pps.length; i++) {\n      pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n      pictureParameterSets.push((pps[i].byteLength & 0xFF));\n      pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n    }\n\n    return box(types.avc1, new Uint8Array([\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (track.width & 0xff00) >> 8,\n      track.width & 0xff, // width\n      (track.height & 0xff00) >> 8,\n      track.height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x13,\n      0x76, 0x69, 0x64, 0x65,\n      0x6f, 0x6a, 0x73, 0x2d,\n      0x63, 0x6f, 0x6e, 0x74,\n      0x72, 0x69, 0x62, 0x2d,\n      0x68, 0x6c, 0x73, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11 // pre_defined = -1\n    ]), box(types.avcC, new Uint8Array([\n      0x01, // configurationVersion\n      track.profileIdc, // AVCProfileIndication\n      track.profileCompatibility, // profile_compatibility\n      track.levelIdc, // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n    ].concat([\n      sps.length // numOfSequenceParameterSets\n    ]).concat(sequenceParameterSets).concat([\n      pps.length // numOfPictureParameterSets\n    ]).concat(pictureParameterSets))), // \"PPS\"\n            box(types.btrt, new Uint8Array([\n              0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n              0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n              0x00, 0x2d, 0xc6, 0xc0\n            ])) // avgBitrate\n              );\n  };\n\n  audioSample = function(track) {\n    return box(types.mp4a, new Uint8Array([\n\n      // SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.channelcount & 0xff00) >> 8,\n      (track.channelcount & 0xff), // channelcount\n\n      (track.samplesize & 0xff00) >> 8,\n      (track.samplesize & 0xff), // samplesize\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n\n      (track.samplerate & 0xff00) >> 8,\n      (track.samplerate & 0xff),\n      0x00, 0x00 // samplerate, 16.16\n\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n    ]), esds(track));\n  };\n}());\n\ntkhd = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x07, // flags\n    0x00, 0x00, 0x00, 0x00, // creation_time\n    0x00, 0x00, 0x00, 0x00, // modification_time\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x00, // reserved\n    (track.duration & 0xFF000000) >> 24,\n    (track.duration & 0xFF0000) >> 16,\n    (track.duration & 0xFF00) >> 8,\n    track.duration & 0xFF, // duration\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, // layer\n    0x00, 0x00, // alternate_group\n    0x01, 0x00, // non-audio track volume\n    0x00, 0x00, // reserved\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n    (track.width & 0xFF00) >> 8,\n    track.width & 0xFF,\n    0x00, 0x00, // width\n    (track.height & 0xFF00) >> 8,\n    track.height & 0xFF,\n    0x00, 0x00 // height\n  ]);\n\n  return box(types.tkhd, result);\n};\n\n/**\n * Generate a track fragment (traf) box. A traf box collects metadata\n * about tracks in a movie fragment (moof) box.\n */\ntraf = function(track) {\n  var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun,\n      sampleDependencyTable, dataOffset,\n      upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n\n  trackFragmentHeader = box(types.tfhd, new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x3a, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x00, 0x00, 0x00  // default_sample_flags\n  ]));\n\n  upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n  lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n\n  trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([\n    0x01, // version 1\n    0x00, 0x00, 0x00, // flags\n    // baseMediaDecodeTime\n    (upperWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    upperWordBaseMediaDecodeTime & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    lowerWordBaseMediaDecodeTime & 0xFF\n  ]));\n\n  // the data offset specifies the number of bytes from the start of\n  // the containing moof to the first payload byte of the associated\n  // mdat\n  dataOffset = (32 + // tfhd\n                20 + // tfdt\n                8 +  // traf header\n                16 + // mfhd\n                8 +  // moof header\n                8);  // mdat header\n\n  // audio tracks require less metadata\n  if (track.type === 'audio') {\n    trackFragmentRun = trun(track, dataOffset);\n    return box(types.traf,\n               trackFragmentHeader,\n               trackFragmentDecodeTime,\n               trackFragmentRun);\n  }\n\n  // video tracks should contain an independent and disposable samples\n  // box (sdtp)\n  // generate one and adjust offsets to match\n  sampleDependencyTable = sdtp(track);\n  trackFragmentRun = trun(track,\n                          sampleDependencyTable.length + dataOffset);\n  return box(types.traf,\n             trackFragmentHeader,\n             trackFragmentDecodeTime,\n             trackFragmentRun,\n             sampleDependencyTable);\n};\n\n/**\n * Generate a track box.\n * @param track {object} a track definition\n * @return {Uint8Array} the track box\n */\ntrak = function(track) {\n  track.duration = track.duration || 0xffffffff;\n  return box(types.trak,\n             tkhd(track),\n             mdia(track));\n};\n\ntrex = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n  ]);\n  // the last two bytes of default_sample_flags is the sample\n  // degradation priority, a hint about the importance of this sample\n  // relative to others. Lower the degradation priority for all sample\n  // types other than video.\n  if (track.type !== 'video') {\n    result[result.length - 1] = 0x00;\n  }\n\n  return box(types.trex, result);\n};\n\n(function() {\n  var audioTrun, videoTrun, trunHeader;\n\n  // This method assumes all samples are uniform. That is, if a\n  // duration is present for the first sample, it will be present for\n  // all subsequent samples.\n  // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n  trunHeader = function(samples, offset) {\n    var durationPresent = 0, sizePresent = 0,\n        flagsPresent = 0, compositionTimeOffset = 0;\n\n    // trun flag constants\n    if (samples.length) {\n      if (samples[0].duration !== undefined) {\n        durationPresent = 0x1;\n      }\n      if (samples[0].size !== undefined) {\n        sizePresent = 0x2;\n      }\n      if (samples[0].flags !== undefined) {\n        flagsPresent = 0x4;\n      }\n      if (samples[0].compositionTimeOffset !== undefined) {\n        compositionTimeOffset = 0x8;\n      }\n    }\n\n    return [\n      0x00, // version 0\n      0x00,\n      durationPresent | sizePresent | flagsPresent | compositionTimeOffset,\n      0x01, // flags\n      (samples.length & 0xFF000000) >>> 24,\n      (samples.length & 0xFF0000) >>> 16,\n      (samples.length & 0xFF00) >>> 8,\n      samples.length & 0xFF, // sample_count\n      (offset & 0xFF000000) >>> 24,\n      (offset & 0xFF0000) >>> 16,\n      (offset & 0xFF00) >>> 8,\n      offset & 0xFF // data_offset\n    ];\n  };\n\n  videoTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (16 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF, // sample_size\n        (sample.flags.isLeading << 2) | sample.flags.dependsOn,\n        (sample.flags.isDependedOn << 6) |\n          (sample.flags.hasRedundancy << 4) |\n          (sample.flags.paddingValue << 1) |\n          sample.flags.isNonSyncSample,\n        sample.flags.degradationPriority & 0xF0 << 8,\n        sample.flags.degradationPriority & 0x0F, // sample_flags\n        (sample.compositionTimeOffset & 0xFF000000) >>> 24,\n        (sample.compositionTimeOffset & 0xFF0000) >>> 16,\n        (sample.compositionTimeOffset & 0xFF00) >>> 8,\n        sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n      ]);\n    }\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  audioTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (8 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF]); // sample_size\n    }\n\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  trun = function(track, offset) {\n    if (track.type === 'audio') {\n      return audioTrun(track, offset);\n    }\n\n    return videoTrun(track, offset);\n  };\n}());\n\nmodule.exports = {\n  ftyp: ftyp,\n  mdat: mdat,\n  moof: moof,\n  moov: moov,\n  initSegment: function(tracks) {\n    var\n      fileType = ftyp(),\n      movie = moov(tracks),\n      result;\n\n    result = new Uint8Array(fileType.byteLength + movie.byteLength);\n    result.set(fileType);\n    result.set(movie, fileType.byteLength);\n    return result;\n  }\n};\n\n},{}],57:[function(require,module,exports){\n/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar findBox, parseType, timescale, startTime;\n\n// Find the data for a box specified by its path\nfindBox = function(data, path) {\n  var results = [],\n      i, size, type, end, subresults;\n\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return null;\n  }\n\n  for (i = 0; i < data.byteLength;) {\n    size  = data[i]     << 24;\n    size |= data[i + 1] << 16;\n    size |= data[i + 2] << 8;\n    size |= data[i + 3];\n\n    type = parseType(data.subarray(i + 4, i + 8));\n\n    end = size > 1 ? i + size : data.byteLength;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, end));\n      } else {\n        // recursively search for the next box along the path\n        subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n        if (subresults.length) {\n          results = results.concat(subresults);\n        }\n      }\n    }\n    i = end;\n  }\n\n  // we've finished searching all of data\n  return results;\n};\n\n/**\n * Returns the string representation of an ASCII encoded four byte buffer.\n * @param buffer {Uint8Array} a four-byte buffer to translate\n * @return {string} the corresponding string\n */\nparseType = function(buffer) {\n  var result = '';\n  result += String.fromCharCode(buffer[0]);\n  result += String.fromCharCode(buffer[1]);\n  result += String.fromCharCode(buffer[2]);\n  result += String.fromCharCode(buffer[3]);\n  return result;\n};\n\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\ntimescale = function(init) {\n  var\n    result = {},\n    traks = findBox(init, ['moov', 'trak']);\n\n  // mdhd timescale\n  return traks.reduce(function(result, trak) {\n    var tkhd, version, index, id, mdhd;\n\n    tkhd = findBox(trak, ['tkhd'])[0];\n    if (!tkhd) {\n      return null;\n    }\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = tkhd[index]     << 24 |\n         tkhd[index + 1] << 16 |\n         tkhd[index + 2] <<  8 |\n         tkhd[index + 3];\n\n    mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n    if (!mdhd) {\n      return null;\n    }\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = mdhd[index]     << 24 |\n                 mdhd[index + 1] << 16 |\n                 mdhd[index + 2] <<  8 |\n                 mdhd[index + 3];\n    return result;\n  }, result);\n};\n\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\nstartTime = function(timescale, fragment) {\n  var trafs, baseTimes, result;\n\n  // we need info from two childrend of each track fragment box\n  trafs = findBox(fragment, ['moof', 'traf']);\n\n  // determine the start times for each track\n  baseTimes = [].concat.apply([], trafs.map(function(traf) {\n    return findBox(traf, ['tfhd']).map(function(tfhd) {\n      var id, scale, baseTime;\n\n      // get the track id from the tfhd\n      id = tfhd[4] << 24 |\n           tfhd[5] << 16 |\n           tfhd[6] << 8 |\n           tfhd[7];\n      // assume a 90kHz clock if no timescale was specified\n      scale = timescale[id] || 90e3;\n\n      // get the base media decode time from the tfdt\n      baseTime = findBox(traf, ['tfdt']).map(function(tfdt) {\n        var version, result;\n\n        version = tfdt[0];\n        result = tfdt[4] << 24 |\n                 tfdt[5] << 16 |\n                 tfdt[6] <<  8 |\n                 tfdt[7];\n        if (version ===  1) {\n          result *= Math.pow(2, 32);\n          result += tfdt[8]  << 24 |\n                    tfdt[9]  << 16 |\n                    tfdt[10] <<  8 |\n                    tfdt[11];\n        }\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity;\n\n      // convert base time to seconds\n      return baseTime / scale;\n    });\n  }));\n\n  // return the minimum\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n\nmodule.exports = {\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime\n};\n\n},{}],58:[function(require,module,exports){\n/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar mp4 = require('./mp4-generator.js');\nvar m2ts = require('../m2ts/m2ts.js');\nvar AdtsStream = require('../codecs/adts.js');\nvar H264Stream = require('../codecs/h264').H264Stream;\nvar AacStream = require('../aac');\nvar coneOfSilence = require('../data/silence');\nvar clock = require('../utils/clock');\n\n// constants\nvar AUDIO_PROPERTIES = [\n  'audioobjecttype',\n  'channelcount',\n  'samplerate',\n  'samplingfrequencyindex',\n  'samplesize'\n];\n\nvar VIDEO_PROPERTIES = [\n  'width',\n  'height',\n  'profileIdc',\n  'levelIdc',\n  'profileCompatibility'\n];\n\nvar ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n// object types\nvar VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n\n// Helper functions\nvar\n  createDefaultSample,\n  isLikelyAacData,\n  collectDtsInfo,\n  clearDtsInfo,\n  calculateTrackBaseMediaDecodeTime,\n  arrayEquals,\n  sumFrameByteLengths;\n\n/**\n * Default sample object\n * see ISO/IEC 14496-12:2012, section 8.6.4.3\n */\ncreateDefaultSample = function() {\n  return {\n    size: 0,\n    flags: {\n      isLeading: 0,\n      dependsOn: 1,\n      isDependedOn: 0,\n      hasRedundancy: 0,\n      degradationPriority: 0\n    }\n  };\n};\n\nisLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * Compare two arrays (even typed) for same-ness\n */\narrayEquals = function(a, b) {\n  var\n    i;\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  // compare the value of each element in the array\n  for (i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Sum the `byteLength` properties of the data in each AAC frame\n */\nsumFrameByteLengths = function(array) {\n  var\n    i,\n    currentObj,\n    sum = 0;\n\n  // sum the byteLength's all each nal unit in the frame\n  for (i = 0; i < array.length; i++) {\n    currentObj = array[i];\n    sum += currentObj.data.byteLength;\n  }\n\n  return sum;\n};\n\n/**\n * Constructs a single-track, ISO BMFF media segment from AAC data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n */\nAudioSegmentStream = function(track) {\n  var\n    adtsFrames = [],\n    sequenceNumber = 0,\n    earliestAllowedDts = 0,\n    audioAppendStartTs = 0,\n    videoBaseMediaDecodeTime = Infinity;\n\n  AudioSegmentStream.prototype.init.call(this);\n\n  this.push = function(data) {\n    collectDtsInfo(track, data);\n\n    if (track) {\n      AUDIO_PROPERTIES.forEach(function(prop) {\n        track[prop] = data[prop];\n      });\n    }\n\n    // buffer audio data until end() is called\n    adtsFrames.push(data);\n  };\n\n  this.setEarliestDts = function(earliestDts) {\n    earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n  };\n\n  this.setVideoBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    videoBaseMediaDecodeTime = baseMediaDecodeTime;\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    audioAppendStartTs = timestamp;\n  };\n\n  this.flush = function() {\n    var\n      frames,\n      moof,\n      mdat,\n      boxes;\n\n    // return early if no audio data has been observed\n    if (adtsFrames.length === 0) {\n      this.trigger('done', 'AudioSegmentStream');\n      return;\n    }\n\n    frames = this.trimAdtsFramesByEarliestDts_(adtsFrames);\n    track.baseMediaDecodeTime = calculateTrackBaseMediaDecodeTime(track);\n\n    this.prefixWithSilence_(track, frames);\n\n    // we have to build the index from byte locations to\n    // samples (that is, adts frames) in the audio data\n    track.samples = this.generateSampleTable_(frames);\n\n    // concatenate the audio data to constuct the mdat\n    mdat = mp4.mdat(this.concatenateFrameData_(frames));\n\n    adtsFrames = [];\n\n    moof = mp4.moof(sequenceNumber, [track]);\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    clearDtsInfo(track);\n\n    this.trigger('data', {track: track, boxes: boxes});\n    this.trigger('done', 'AudioSegmentStream');\n  };\n\n  // Possibly pad (prefix) the audio track with silence if appending this track\n  // would lead to the introduction of a gap in the audio buffer\n  this.prefixWithSilence_ = function(track, frames) {\n    var\n      baseMediaDecodeTimeTs,\n      frameDuration = 0,\n      audioGapDuration = 0,\n      audioFillFrameCount = 0,\n      audioFillDuration = 0,\n      silentFrame,\n      i;\n\n    if (!frames.length) {\n      return;\n    }\n\n    baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate);\n    // determine frame clock duration based on sample rate, round up to avoid overfills\n    frameDuration = Math.ceil(ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n    if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n      // insert the shortest possible amount (audio gap or audio to video gap)\n      audioGapDuration =\n        baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime);\n      // number of full frames in the audio gap\n      audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n      audioFillDuration = audioFillFrameCount * frameDuration;\n    }\n\n    // don't attempt to fill gaps smaller than a single frame or larger\n    // than a half second\n    if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS / 2) {\n      return;\n    }\n\n    silentFrame = coneOfSilence[track.samplerate];\n\n    if (!silentFrame) {\n      // we don't have a silent frame pregenerated for the sample rate, so use a frame\n      // from the content instead\n      silentFrame = frames[0].data;\n    }\n\n    for (i = 0; i < audioFillFrameCount; i++) {\n      frames.splice(i, 0, {\n        data: silentFrame\n      });\n    }\n\n    track.baseMediaDecodeTime -=\n      Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n  };\n\n  // If the audio segment extends before the earliest allowed dts\n  // value, remove AAC frames until starts at or after the earliest\n  // allowed DTS so that we don't end up with a negative baseMedia-\n  // DecodeTime for the audio track\n  this.trimAdtsFramesByEarliestDts_ = function(adtsFrames) {\n    if (track.minSegmentDts >= earliestAllowedDts) {\n      return adtsFrames;\n    }\n\n    // We will need to recalculate the earliest segment Dts\n    track.minSegmentDts = Infinity;\n\n    return adtsFrames.filter(function(currentFrame) {\n      // If this is an allowed frame, keep it and record it's Dts\n      if (currentFrame.dts >= earliestAllowedDts) {\n        track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n        track.minSegmentPts = track.minSegmentDts;\n        return true;\n      }\n      // Otherwise, discard it\n      return false;\n    });\n  };\n\n  // generate the track's raw mdat data from an array of frames\n  this.generateSampleTable_ = function(frames) {\n    var\n      i,\n      currentFrame,\n      samples = [];\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      samples.push({\n        size: currentFrame.data.byteLength,\n        duration: 1024 // For AAC audio, all samples contain 1024 samples\n      });\n    }\n    return samples;\n  };\n\n  // generate the track's sample table from an array of frames\n  this.concatenateFrameData_ = function(frames) {\n    var\n      i,\n      currentFrame,\n      dataOffset = 0,\n      data = new Uint8Array(sumFrameByteLengths(frames));\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n\n      data.set(currentFrame.data, dataOffset);\n      dataOffset += currentFrame.data.byteLength;\n    }\n    return data;\n  };\n};\n\nAudioSegmentStream.prototype = new Stream();\n\n/**\n * Constructs a single-track, ISO BMFF media segment from H264 data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n *        gopsToAlignWith list when attempting to align gop pts\n */\nVideoSegmentStream = function(track, options) {\n  var\n    sequenceNumber = 0,\n    nalUnits = [],\n    gopsToAlignWith = [],\n    config,\n    pps;\n\n  options = options || {};\n\n  VideoSegmentStream.prototype.init.call(this);\n\n  delete track.minPTS;\n\n  this.gopCache_ = [];\n\n  this.push = function(nalUnit) {\n    collectDtsInfo(track, nalUnit);\n\n    // record the track config\n    if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n      config = nalUnit.config;\n      track.sps = [nalUnit.data];\n\n      VIDEO_PROPERTIES.forEach(function(prop) {\n        track[prop] = config[prop];\n      }, this);\n    }\n\n    if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' &&\n        !pps) {\n      pps = nalUnit.data;\n      track.pps = [nalUnit.data];\n    }\n\n    // buffer video until flush() is called\n    nalUnits.push(nalUnit);\n  };\n\n  this.flush = function() {\n    var\n      frames,\n      gopForFusion,\n      gops,\n      moof,\n      mdat,\n      boxes;\n\n    // Throw away nalUnits at the start of the byte stream until\n    // we find the first AUD\n    while (nalUnits.length) {\n      if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n        break;\n      }\n      nalUnits.shift();\n    }\n\n    // Return early if no video data has been observed\n    if (nalUnits.length === 0) {\n      this.resetStream_();\n      this.trigger('done', 'VideoSegmentStream');\n      return;\n    }\n\n    // Organize the raw nal-units into arrays that represent\n    // higher-level constructs such as frames and gops\n    // (group-of-pictures)\n    frames = this.groupNalsIntoFrames_(nalUnits);\n    gops = this.groupFramesIntoGops_(frames);\n\n    // If the first frame of this fragment is not a keyframe we have\n    // a problem since MSE (on Chrome) requires a leading keyframe.\n    //\n    // We have two approaches to repairing this situation:\n    // 1) GOP-FUSION:\n    //    This is where we keep track of the GOPS (group-of-pictures)\n    //    from previous fragments and attempt to find one that we can\n    //    prepend to the current fragment in order to create a valid\n    //    fragment.\n    // 2) KEYFRAME-PULLING:\n    //    Here we search for the first keyframe in the fragment and\n    //    throw away all the frames between the start of the fragment\n    //    and that keyframe. We then extend the duration and pull the\n    //    PTS of the keyframe forward so that it covers the time range\n    //    of the frames that were disposed of.\n    //\n    // #1 is far prefereable over #2 which can cause \"stuttering\" but\n    // requires more things to be just right.\n    if (!gops[0][0].keyFrame) {\n      // Search for a gop for fusion from our gopCache\n      gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n      if (gopForFusion) {\n        gops.unshift(gopForFusion);\n        // Adjust Gops' metadata to account for the inclusion of the\n        // new gop at the beginning\n        gops.byteLength += gopForFusion.byteLength;\n        gops.nalCount += gopForFusion.nalCount;\n        gops.pts = gopForFusion.pts;\n        gops.dts = gopForFusion.dts;\n        gops.duration += gopForFusion.duration;\n      } else {\n        // If we didn't find a candidate gop fall back to keyrame-pulling\n        gops = this.extendFirstKeyFrame_(gops);\n      }\n    }\n\n    // Trim gops to align with gopsToAlignWith\n    if (gopsToAlignWith.length) {\n      var alignedGops;\n\n      if (options.alignGopsAtEnd) {\n        alignedGops = this.alignGopsAtEnd_(gops);\n      } else {\n        alignedGops = this.alignGopsAtStart_(gops);\n      }\n\n      if (!alignedGops) {\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        });\n\n        // Keep a maximum of 6 GOPs in the cache\n        this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n        // Clear nalUnits\n        nalUnits = [];\n\n        // return early no gops can be aligned with desired gopsToAlignWith\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      }\n\n      // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n      // when recalculated before sending off to CoalesceStream\n      clearDtsInfo(track);\n\n      gops = alignedGops;\n    }\n\n    collectDtsInfo(track, gops);\n\n    // First, we have to build the index from byte locations to\n    // samples (that is, frames) in the video data\n    track.samples = this.generateSampleTable_(gops);\n\n    // Concatenate the video data and construct the mdat\n    mdat = mp4.mdat(this.concatenateNalData_(gops));\n\n    track.baseMediaDecodeTime = calculateTrackBaseMediaDecodeTime(track);\n\n    this.trigger('processedGopsInfo', gops.map(function(gop) {\n      return {\n        pts: gop.pts,\n        dts: gop.dts,\n        byteLength: gop.byteLength\n      };\n    }));\n\n    // save all the nals in the last GOP into the gop cache\n    this.gopCache_.unshift({\n      gop: gops.pop(),\n      pps: track.pps,\n      sps: track.sps\n    });\n\n    // Keep a maximum of 6 GOPs in the cache\n    this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n    // Clear nalUnits\n    nalUnits = [];\n\n    this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n    this.trigger('timelineStartInfo', track.timelineStartInfo);\n\n    moof = mp4.moof(sequenceNumber, [track]);\n\n    // it would be great to allocate this array up front instead of\n    // throwing away hundreds of media segment fragments\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // Bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    this.trigger('data', {track: track, boxes: boxes});\n\n    this.resetStream_();\n\n    // Continue with the flush process now\n    this.trigger('done', 'VideoSegmentStream');\n  };\n\n  this.resetStream_ = function() {\n    clearDtsInfo(track);\n\n    // reset config and pps because they may differ across segments\n    // for instance, when we are rendition switching\n    config = undefined;\n    pps = undefined;\n  };\n\n  // Search for a candidate Gop for gop-fusion from the gop cache and\n  // return it or return null if no good candidate was found\n  this.getGopForFusion_ = function(nalUnit) {\n    var\n      halfSecond = 45000, // Half-a-second in a 90khz clock\n      allowableOverlap = 10000, // About 3 frames @ 30fps\n      nearestDistance = Infinity,\n      dtsDistance,\n      nearestGopObj,\n      currentGop,\n      currentGopObj,\n      i;\n\n    // Search for the GOP nearest to the beginning of this nal unit\n    for (i = 0; i < this.gopCache_.length; i++) {\n      currentGopObj = this.gopCache_[i];\n      currentGop = currentGopObj.gop;\n\n      // Reject Gops with different SPS or PPS\n      if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) ||\n          !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n        continue;\n      }\n\n      // Reject Gops that would require a negative baseMediaDecodeTime\n      if (currentGop.dts < track.timelineStartInfo.dts) {\n        continue;\n      }\n\n      // The distance between the end of the gop and the start of the nalUnit\n      dtsDistance = (nalUnit.dts - currentGop.dts) - currentGop.duration;\n\n      // Only consider GOPS that start before the nal unit and end within\n      // a half-second of the nal unit\n      if (dtsDistance >= -allowableOverlap &&\n          dtsDistance <= halfSecond) {\n\n        // Always use the closest GOP we found if there is more than\n        // one candidate\n        if (!nearestGopObj ||\n            nearestDistance > dtsDistance) {\n          nearestGopObj = currentGopObj;\n          nearestDistance = dtsDistance;\n        }\n      }\n    }\n\n    if (nearestGopObj) {\n      return nearestGopObj.gop;\n    }\n    return null;\n  };\n\n  this.extendFirstKeyFrame_ = function(gops) {\n    var currentGop;\n\n    if (!gops[0][0].keyFrame && gops.length > 1) {\n      // Remove the first GOP\n      currentGop = gops.shift();\n\n      gops.byteLength -=  currentGop.byteLength;\n      gops.nalCount -= currentGop.nalCount;\n\n      // Extend the first frame of what is now the\n      // first gop to cover the time period of the\n      // frames we just removed\n      gops[0][0].dts = currentGop.dts;\n      gops[0][0].pts = currentGop.pts;\n      gops[0][0].duration += currentGop.duration;\n    }\n\n    return gops;\n  };\n\n  // Convert an array of nal units into an array of frames with each frame being\n  // composed of the nal units that make up that frame\n  // Also keep track of cummulative data about the frame from the nal units such\n  // as the frame duration, starting pts, etc.\n  this.groupNalsIntoFrames_ = function(nalUnits) {\n    var\n      i,\n      currentNal,\n      currentFrame = [],\n      frames = [];\n\n    currentFrame.byteLength = 0;\n\n    for (i = 0; i < nalUnits.length; i++) {\n      currentNal = nalUnits[i];\n\n      // Split on 'aud'-type nal units\n      if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n        // Since the very first nal unit is expected to be an AUD\n        // only push to the frames array when currentFrame is not empty\n        if (currentFrame.length) {\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          frames.push(currentFrame);\n        }\n        currentFrame = [currentNal];\n        currentFrame.byteLength = currentNal.data.byteLength;\n        currentFrame.pts = currentNal.pts;\n        currentFrame.dts = currentNal.dts;\n      } else {\n        // Specifically flag key frames for ease of use later\n        if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n          currentFrame.keyFrame = true;\n        }\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        currentFrame.byteLength += currentNal.data.byteLength;\n        currentFrame.push(currentNal);\n      }\n    }\n\n    // For the last frame, use the duration of the previous frame if we\n    // have nothing better to go on\n    if (frames.length &&\n        (!currentFrame.duration ||\n         currentFrame.duration <= 0)) {\n      currentFrame.duration = frames[frames.length - 1].duration;\n    }\n\n    // Push the final frame\n    frames.push(currentFrame);\n    return frames;\n  };\n\n  // Convert an array of frames into an array of Gop with each Gop being composed\n  // of the frames that make up that Gop\n  // Also keep track of cummulative data about the Gop from the frames such as the\n  // Gop duration, starting pts, etc.\n  this.groupFramesIntoGops_ = function(frames) {\n    var\n      i,\n      currentFrame,\n      currentGop = [],\n      gops = [];\n\n    // We must pre-set some of the values on the Gop since we\n    // keep running totals of these values\n    currentGop.byteLength = 0;\n    currentGop.nalCount = 0;\n    currentGop.duration = 0;\n    currentGop.pts = frames[0].pts;\n    currentGop.dts = frames[0].dts;\n\n    // store some metadata about all the Gops\n    gops.byteLength = 0;\n    gops.nalCount = 0;\n    gops.duration = 0;\n    gops.pts = frames[0].pts;\n    gops.dts = frames[0].dts;\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n\n      if (currentFrame.keyFrame) {\n        // Since the very first frame is expected to be an keyframe\n        // only push to the gops array when currentGop is not empty\n        if (currentGop.length) {\n          gops.push(currentGop);\n          gops.byteLength += currentGop.byteLength;\n          gops.nalCount += currentGop.nalCount;\n          gops.duration += currentGop.duration;\n        }\n\n        currentGop = [currentFrame];\n        currentGop.nalCount = currentFrame.length;\n        currentGop.byteLength = currentFrame.byteLength;\n        currentGop.pts = currentFrame.pts;\n        currentGop.dts = currentFrame.dts;\n        currentGop.duration = currentFrame.duration;\n      } else {\n        currentGop.duration += currentFrame.duration;\n        currentGop.nalCount += currentFrame.length;\n        currentGop.byteLength += currentFrame.byteLength;\n        currentGop.push(currentFrame);\n      }\n    }\n\n    if (gops.length && currentGop.duration <= 0) {\n      currentGop.duration = gops[gops.length - 1].duration;\n    }\n    gops.byteLength += currentGop.byteLength;\n    gops.nalCount += currentGop.nalCount;\n    gops.duration += currentGop.duration;\n\n    // push the final Gop\n    gops.push(currentGop);\n    return gops;\n  };\n\n  // generate the track's sample table from an array of gops\n  this.generateSampleTable_ = function(gops, baseDataOffset) {\n    var\n      h, i,\n      sample,\n      currentGop,\n      currentFrame,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h];\n\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i];\n\n        sample = createDefaultSample();\n\n        sample.dataOffset = dataOffset;\n        sample.compositionTimeOffset = currentFrame.pts - currentFrame.dts;\n        sample.duration = currentFrame.duration;\n        sample.size = 4 * currentFrame.length; // Space for nal unit size\n        sample.size += currentFrame.byteLength;\n\n        if (currentFrame.keyFrame) {\n          sample.flags.dependsOn = 2;\n        }\n\n        dataOffset += sample.size;\n\n        samples.push(sample);\n      }\n    }\n    return samples;\n  };\n\n  // generate the track's raw mdat data from an array of gops\n  this.concatenateNalData_ = function(gops) {\n    var\n      h, i, j,\n      currentGop,\n      currentFrame,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = gops.byteLength,\n      numberOfNals = gops.nalCount,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer);\n\n    // For each Gop..\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h];\n\n      // For each Frame..\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i];\n\n        // For each NAL..\n        for (j = 0; j < currentFrame.length; j++) {\n          currentNal = currentFrame[j];\n\n          view.setUint32(dataOffset, currentNal.data.byteLength);\n          dataOffset += 4;\n          data.set(currentNal.data, dataOffset);\n          dataOffset += currentNal.data.byteLength;\n        }\n      }\n    }\n    return data;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the START of the list\n  this.alignGopsAtStart_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n\n    byteLength = gops.byteLength;\n    nalCount = gops.nalCount;\n    duration = gops.duration;\n    alignIndex = gopIndex = 0;\n\n    while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        break;\n      }\n\n      if (gop.pts > align.pts) {\n        // this current gop starts after the current gop we want to align on, so increment\n        // align index\n        alignIndex++;\n        continue;\n      }\n\n      // current gop starts before the current gop we want to align on. so increment gop\n      // index\n      gopIndex++;\n      byteLength -= gop.byteLength;\n      nalCount -= gop.nalCount;\n      duration -= gop.duration;\n    }\n\n    if (gopIndex === 0) {\n      // no gops to trim\n      return gops;\n    }\n\n    if (gopIndex === gops.length) {\n      // all gops trimmed, skip appending all gops\n      return null;\n    }\n\n    alignedGops = gops.slice(gopIndex);\n    alignedGops.byteLength = byteLength;\n    alignedGops.duration = duration;\n    alignedGops.nalCount = nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the END of the list\n  this.alignGopsAtEnd_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n\n    alignIndex = gopsToAlignWith.length - 1;\n    gopIndex = gops.length - 1;\n    alignEndIndex = null;\n    matchFound = false;\n\n    while (alignIndex >= 0 && gopIndex >= 0) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        matchFound = true;\n        break;\n      }\n\n      if (align.pts > gop.pts) {\n        alignIndex--;\n        continue;\n      }\n\n      if (alignIndex === gopsToAlignWith.length - 1) {\n        // gop.pts is greater than the last alignment candidate. If no match is found\n        // by the end of this loop, we still want to append gops that come after this\n        // point\n        alignEndIndex = gopIndex;\n      }\n\n      gopIndex--;\n    }\n\n    if (!matchFound && alignEndIndex === null) {\n      return null;\n    }\n\n    var trimIndex;\n\n    if (matchFound) {\n      trimIndex = gopIndex;\n    } else {\n      trimIndex = alignEndIndex;\n    }\n\n    if (trimIndex === 0) {\n      return gops;\n    }\n\n    var alignedGops = gops.slice(trimIndex);\n    var metadata = alignedGops.reduce(function(total, gop) {\n      total.byteLength += gop.byteLength;\n      total.duration += gop.duration;\n      total.nalCount += gop.nalCount;\n      return total;\n    }, { byteLength: 0, duration: 0, nalCount: 0 });\n\n    alignedGops.byteLength = metadata.byteLength;\n    alignedGops.duration = metadata.duration;\n    alignedGops.nalCount = metadata.nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  this.alignGopsWith = function(newGopsToAlignWith) {\n    gopsToAlignWith = newGopsToAlignWith;\n  };\n};\n\nVideoSegmentStream.prototype = new Stream();\n\n/**\n * Store information about the start and end of the track and the\n * duration for each frame/sample we process in order to calculate\n * the baseMediaDecodeTime\n */\ncollectDtsInfo = function(track, data) {\n  if (typeof data.pts === 'number') {\n    if (track.timelineStartInfo.pts === undefined) {\n      track.timelineStartInfo.pts = data.pts;\n    }\n\n    if (track.minSegmentPts === undefined) {\n      track.minSegmentPts = data.pts;\n    } else {\n      track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n    }\n\n    if (track.maxSegmentPts === undefined) {\n      track.maxSegmentPts = data.pts;\n    } else {\n      track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n    }\n  }\n\n  if (typeof data.dts === 'number') {\n    if (track.timelineStartInfo.dts === undefined) {\n      track.timelineStartInfo.dts = data.dts;\n    }\n\n    if (track.minSegmentDts === undefined) {\n      track.minSegmentDts = data.dts;\n    } else {\n      track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n    }\n\n    if (track.maxSegmentDts === undefined) {\n      track.maxSegmentDts = data.dts;\n    } else {\n      track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n    }\n  }\n};\n\n/**\n * Clear values used to calculate the baseMediaDecodeTime between\n * tracks\n */\nclearDtsInfo = function(track) {\n  delete track.minSegmentDts;\n  delete track.maxSegmentDts;\n  delete track.minSegmentPts;\n  delete track.maxSegmentPts;\n};\n\n/**\n * Calculate the track's baseMediaDecodeTime based on the earliest\n * DTS the transmuxer has ever seen and the minimum DTS for the\n * current track\n */\ncalculateTrackBaseMediaDecodeTime = function(track) {\n  var\n    baseMediaDecodeTime,\n    scale,\n    // Calculate the distance, in time, that this segment starts from the start\n    // of the timeline (earliest time seen since the transmuxer initialized)\n    timeSinceStartOfTimeline = track.minSegmentDts - track.timelineStartInfo.dts;\n\n  // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n  // we want the start of the first segment to be placed\n  baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime;\n\n  // Add to that the distance this segment is from the very first\n  baseMediaDecodeTime += timeSinceStartOfTimeline;\n\n  // baseMediaDecodeTime must not become negative\n  baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n  if (track.type === 'audio') {\n    // Audio has a different clock equal to the sampling_rate so we need to\n    // scale the PTS values into the clock rate of the track\n    scale = track.samplerate / ONE_SECOND_IN_TS;\n    baseMediaDecodeTime *= scale;\n    baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n  }\n\n  return baseMediaDecodeTime;\n};\n\n/**\n * A Stream that can combine multiple streams (ie. audio & video)\n * into a single output segment for MSE. Also supports audio-only\n * and video-only streams.\n */\nCoalesceStream = function(options, metadataStream) {\n  // Number of Tracks per output segment\n  // If greater than 1, we combine multiple\n  // tracks into a single segment\n  this.numberOfTracks = 0;\n  this.metadataStream = metadataStream;\n\n  if (typeof options.remux !== 'undefined') {\n    this.remuxTracks = !!options.remux;\n  } else {\n    this.remuxTracks = true;\n  }\n\n  this.pendingTracks = [];\n  this.videoTrack = null;\n  this.pendingBoxes = [];\n  this.pendingCaptions = [];\n  this.pendingMetadata = [];\n  this.pendingBytes = 0;\n  this.emittedTracks = 0;\n\n  CoalesceStream.prototype.init.call(this);\n\n  // Take output from multiple\n  this.push = function(output) {\n    // buffer incoming captions until the associated video segment\n    // finishes\n    if (output.text) {\n      return this.pendingCaptions.push(output);\n    }\n    // buffer incoming id3 tags until the final flush\n    if (output.frames) {\n      return this.pendingMetadata.push(output);\n    }\n\n    // Add this track to the list of pending tracks and store\n    // important information required for the construction of\n    // the final segment\n    this.pendingTracks.push(output.track);\n    this.pendingBoxes.push(output.boxes);\n    this.pendingBytes += output.boxes.byteLength;\n\n    if (output.track.type === 'video') {\n      this.videoTrack = output.track;\n    }\n    if (output.track.type === 'audio') {\n      this.audioTrack = output.track;\n    }\n  };\n};\n\nCoalesceStream.prototype = new Stream();\nCoalesceStream.prototype.flush = function(flushSource) {\n  var\n    offset = 0,\n    event = {\n      captions: [],\n      captionStreams: {},\n      metadata: [],\n      info: {}\n    },\n    caption,\n    id3,\n    initSegment,\n    timelineStartPts = 0,\n    i;\n\n  if (this.pendingTracks.length < this.numberOfTracks) {\n    if (flushSource !== 'VideoSegmentStream' &&\n        flushSource !== 'AudioSegmentStream') {\n      // Return because we haven't received a flush from a data-generating\n      // portion of the segment (meaning that we have only recieved meta-data\n      // or captions.)\n      return;\n    } else if (this.remuxTracks) {\n      // Return until we have enough tracks from the pipeline to remux (if we\n      // are remuxing audio and video into a single MP4)\n      return;\n    } else if (this.pendingTracks.length === 0) {\n      // In the case where we receive a flush without any data having been\n      // received we consider it an emitted track for the purposes of coalescing\n      // `done` events.\n      // We do this for the case where there is an audio and video track in the\n      // segment but no audio data. (seen in several playlists with alternate\n      // audio tracks and no audio present in the main TS segments.)\n      this.emittedTracks++;\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n      return;\n    }\n  }\n\n  if (this.videoTrack) {\n    timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n    VIDEO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.videoTrack[prop];\n    }, this);\n  } else if (this.audioTrack) {\n    timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n    AUDIO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.audioTrack[prop];\n    }, this);\n  }\n\n  if (this.pendingTracks.length === 1) {\n    event.type = this.pendingTracks[0].type;\n  } else {\n    event.type = 'combined';\n  }\n\n  this.emittedTracks += this.pendingTracks.length;\n\n  initSegment = mp4.initSegment(this.pendingTracks);\n\n  // Create a new typed array to hold the init segment\n  event.initSegment = new Uint8Array(initSegment.byteLength);\n\n  // Create an init segment containing a moov\n  // and track definitions\n  event.initSegment.set(initSegment);\n\n  // Create a new typed array to hold the moof+mdats\n  event.data = new Uint8Array(this.pendingBytes);\n\n  // Append each moof+mdat (one per track) together\n  for (i = 0; i < this.pendingBoxes.length; i++) {\n    event.data.set(this.pendingBoxes[i], offset);\n    offset += this.pendingBoxes[i].byteLength;\n  }\n\n  // Translate caption PTS times into second offsets into the\n  // video timeline for the segment, and add track info\n  for (i = 0; i < this.pendingCaptions.length; i++) {\n    caption = this.pendingCaptions[i];\n    caption.startTime = (caption.startPts - timelineStartPts);\n    caption.startTime /= 90e3;\n    caption.endTime = (caption.endPts - timelineStartPts);\n    caption.endTime /= 90e3;\n    event.captionStreams[caption.stream] = true;\n    event.captions.push(caption);\n  }\n\n  // Translate ID3 frame PTS times into second offsets into the\n  // video timeline for the segment\n  for (i = 0; i < this.pendingMetadata.length; i++) {\n    id3 = this.pendingMetadata[i];\n    id3.cueTime = (id3.pts - timelineStartPts);\n    id3.cueTime /= 90e3;\n    event.metadata.push(id3);\n  }\n  // We add this to every single emitted segment even though we only need\n  // it for the first\n  event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n  // Reset stream state\n  this.pendingTracks.length = 0;\n  this.videoTrack = null;\n  this.pendingBoxes.length = 0;\n  this.pendingCaptions.length = 0;\n  this.pendingBytes = 0;\n  this.pendingMetadata.length = 0;\n\n  // Emit the built segment\n  this.trigger('data', event);\n\n  // Only emit `done` if all tracks have been flushed and emitted\n  if (this.emittedTracks >= this.numberOfTracks) {\n    this.trigger('done');\n    this.emittedTracks = 0;\n  }\n};\n/**\n * A Stream that expects MP2T binary data as input and produces\n * corresponding media segments, suitable for use with Media Source\n * Extension (MSE) implementations that support the ISO BMFF byte\n * stream format, like Chrome.\n */\nTransmuxer = function(options) {\n  var\n    self = this,\n    hasFlushed = true,\n    videoTrack,\n    audioTrack;\n\n  Transmuxer.prototype.init.call(this);\n\n  options = options || {};\n  this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n  this.transmuxPipeline_ = {};\n\n  this.setupAacPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'aac';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.aacStream = new AacStream();\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.aacStream;\n\n    pipeline.aacStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n    pipeline.aacStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.metadataStream.on('timestamp', function(frame) {\n      pipeline.aacStream.setTimestamp(frame.timeStamp);\n    });\n\n    pipeline.aacStream.on('data', function(data) {\n      if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        };\n        // hook up the audio segment stream to the first track with aac data\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack);\n        // Set up the final part of the audio pipeline\n        pipeline.adtsStream\n          .pipe(pipeline.audioSegmentStream)\n          .pipe(pipeline.coalesceStream);\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  this.setupTsPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'ts';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.packetStream = new m2ts.TransportPacketStream();\n    pipeline.parseStream = new m2ts.TransportParseStream();\n    pipeline.elementaryStream = new m2ts.ElementaryStream();\n    pipeline.videoTimestampRolloverStream = new m2ts.TimestampRolloverStream('video');\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.h264Stream = new H264Stream();\n    pipeline.captionStream = new m2ts.CaptionStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.packetStream;\n\n    // disassemble MPEG2-TS packets into elementary streams\n    pipeline.packetStream\n      .pipe(pipeline.parseStream)\n      .pipe(pipeline.elementaryStream);\n\n    // !!THIS ORDER IS IMPORTANT!!\n    // demux the streams\n    pipeline.elementaryStream\n      .pipe(pipeline.videoTimestampRolloverStream)\n      .pipe(pipeline.h264Stream);\n    pipeline.elementaryStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n\n    pipeline.elementaryStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    // Hook up CEA-608/708 caption stream\n    pipeline.h264Stream.pipe(pipeline.captionStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.elementaryStream.on('data', function(data) {\n      var i;\n\n      if (data.type === 'metadata') {\n        i = data.tracks.length;\n\n        // scan the tracks listed in the metadata\n        while (i--) {\n          if (!videoTrack && data.tracks[i].type === 'video') {\n            videoTrack = data.tracks[i];\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          } else if (!audioTrack && data.tracks[i].type === 'audio') {\n            audioTrack = data.tracks[i];\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          }\n        }\n\n        // hook up the video segment stream to the first track with h264 data\n        if (videoTrack && !pipeline.videoSegmentStream) {\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n\n          pipeline.videoSegmentStream.on('timelineStartInfo', function(timelineStartInfo) {\n          // When video emits timelineStartInfo data after a flush, we forward that\n          // info to the AudioSegmentStream, if it exists, because video timeline\n          // data takes precedence.\n            if (audioTrack) {\n              audioTrack.timelineStartInfo = timelineStartInfo;\n              // On the first segment we trim AAC frames that exist before the\n              // very earliest DTS we have seen in video because Chrome will\n              // interpret any video track with a baseMediaDecodeTime that is\n              // non-zero as a gap.\n              pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n            }\n          });\n\n          pipeline.videoSegmentStream.on('processedGopsInfo',\n            self.trigger.bind(self, 'gopInfo'));\n\n          pipeline.videoSegmentStream.on('baseMediaDecodeTime', function(baseMediaDecodeTime) {\n            if (audioTrack) {\n              pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n            }\n          });\n\n          // Set up the final part of the video pipeline\n          pipeline.h264Stream\n            .pipe(pipeline.videoSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n\n        if (audioTrack && !pipeline.audioSegmentStream) {\n          // hook up the audio segment stream to the first track with aac data\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack);\n\n          // Set up the final part of the audio pipeline\n          pipeline.adtsStream\n            .pipe(pipeline.audioSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  // hook up the segment streams once track metadata is delivered\n  this.setBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    var pipeline = this.transmuxPipeline_;\n\n    this.baseMediaDecodeTime = baseMediaDecodeTime;\n    if (audioTrack) {\n      audioTrack.timelineStartInfo.dts = undefined;\n      audioTrack.timelineStartInfo.pts = undefined;\n      clearDtsInfo(audioTrack);\n      audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      if (pipeline.audioTimestampRolloverStream) {\n        pipeline.audioTimestampRolloverStream.discontinuity();\n      }\n    }\n    if (videoTrack) {\n      if (pipeline.videoSegmentStream) {\n        pipeline.videoSegmentStream.gopCache_ = [];\n        pipeline.videoTimestampRolloverStream.discontinuity();\n      }\n      videoTrack.timelineStartInfo.dts = undefined;\n      videoTrack.timelineStartInfo.pts = undefined;\n      clearDtsInfo(videoTrack);\n      pipeline.captionStream.reset();\n      videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n    }\n\n    if (pipeline.timedMetadataTimestampRolloverStream) {\n      pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n    }\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    if (audioTrack) {\n      this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n    }\n  };\n\n  this.alignGopsWith = function(gopsToAlignWith) {\n    if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n      this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n    }\n  };\n\n  // feed incoming data to the front of the parsing pipeline\n  this.push = function(data) {\n    if (hasFlushed) {\n      var isAac = isLikelyAacData(data);\n\n      if (isAac && this.transmuxPipeline_.type !== 'aac') {\n        this.setupAacPipeline();\n      } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n        this.setupTsPipeline();\n      }\n      hasFlushed = false;\n    }\n    this.transmuxPipeline_.headOfPipeline.push(data);\n  };\n\n  // flush any buffered data\n  this.flush = function() {\n      hasFlushed = true;\n    // Start at the top of the pipeline and flush all pending work\n    this.transmuxPipeline_.headOfPipeline.flush();\n  };\n\n  // Caption data has to be reset when seeking outside buffered range\n  this.resetCaptions = function() {\n    if (this.transmuxPipeline_.captionStream) {\n      this.transmuxPipeline_.captionStream.reset();\n    }\n  };\n\n};\nTransmuxer.prototype = new Stream();\n\nmodule.exports = {\n  Transmuxer: Transmuxer,\n  VideoSegmentStream: VideoSegmentStream,\n  AudioSegmentStream: AudioSegmentStream,\n  AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n  VIDEO_PROPERTIES: VIDEO_PROPERTIES\n};\n\n},{\"../aac\":38,\"../codecs/adts.js\":40,\"../codecs/h264\":41,\"../data/silence\":42,\"../m2ts/m2ts.js\":50,\"../utils/clock\":60,\"../utils/stream.js\":62,\"./mp4-generator.js\":56}],59:[function(require,module,exports){\n/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Parse mpeg2 transport stream packets to extract basic timing information\n */\n'use strict';\n\nvar StreamTypes = require('../m2ts/stream-types.js');\nvar handleRollover = require('../m2ts/timestamp-rollover-stream.js').handleRollover;\nvar probe = {};\nprobe.ts = require('../m2ts/probe.js');\nprobe.aac = require('../aac/probe.js');\n\n\nvar\n  PES_TIMESCALE = 90000,\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\nvar isLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * walks through segment data looking for pat and pmt packets to parse out\n * program map table information\n */\nvar parsePsi_ = function(bytes, pmt) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type;\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pat':\n          if (!pmt.pid) {\n            pmt.pid = probe.ts.parsePat(packet);\n          }\n          break;\n        case 'pmt':\n          if (!pmt.table) {\n            pmt.table = probe.ts.parsePmt(packet);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // Found the pat and pmt, we can stop walking the segment\n      if (pmt.pid && pmt.table) {\n        return;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last audio pes packets\n */\nvar parseAudioPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed;\n\n  var endLoop = false;\n\n  // Start walking from start of segment to get first audio packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last audio packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last video pes packets as well as timing information for the first\n * key frame.\n */\nvar parseVideoPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed, frame, i, pes;\n\n  var endLoop = false;\n\n  var currentFrame = {\n    data: [],\n    size: 0\n  };\n\n  // Start walking from start of segment to get first video packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video') {\n            if (pusi && !endLoop) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            if (!result.firstKeyFrame) {\n              if (pusi) {\n                if (currentFrame.size !== 0) {\n                  frame = new Uint8Array(currentFrame.size);\n                  i = 0;\n                  while (currentFrame.data.length) {\n                    pes = currentFrame.data.shift();\n                    frame.set(pes, i);\n                    i += pes.byteLength;\n                  }\n                  if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                    result.firstKeyFrame = probe.ts.parsePesTime(frame);\n                    result.firstKeyFrame.type = 'video';\n                  }\n                  currentFrame.size = 0;\n                }\n              }\n              currentFrame.data.push(packet);\n              currentFrame.size += packet.byteLength;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop && result.firstKeyFrame) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last video packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * Adjusts the timestamp information for the segment to account for\n * rollover and convert to seconds based on pes packet timescale (90khz clock)\n */\nvar adjustTimestamp_ = function(segmentInfo, baseTimestamp) {\n  if (segmentInfo.audio && segmentInfo.audio.length) {\n    var audioBaseTimestamp = baseTimestamp;\n    if (typeof audioBaseTimestamp === 'undefined') {\n      audioBaseTimestamp = segmentInfo.audio[0].dts;\n    }\n    segmentInfo.audio.forEach(function(info) {\n      info.dts = handleRollover(info.dts, audioBaseTimestamp);\n      info.pts = handleRollover(info.pts, audioBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n  }\n\n  if (segmentInfo.video && segmentInfo.video.length) {\n    var videoBaseTimestamp = baseTimestamp;\n    if (typeof videoBaseTimestamp === 'undefined') {\n      videoBaseTimestamp = segmentInfo.video[0].dts;\n    }\n    segmentInfo.video.forEach(function(info) {\n      info.dts = handleRollover(info.dts, videoBaseTimestamp);\n      info.pts = handleRollover(info.pts, videoBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n    if (segmentInfo.firstKeyFrame) {\n      var frame = segmentInfo.firstKeyFrame;\n      frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n      frame.pts = handleRollover(frame.pts, videoBaseTimestamp);\n      // time in seconds\n      frame.dtsTime = frame.dts / PES_TIMESCALE;\n      frame.ptsTime = frame.dts / PES_TIMESCALE;\n    }\n  }\n};\n\n/**\n * inspects the aac data stream for start and end time information\n */\nvar inspectAac_ = function(bytes) {\n  var\n    endLoop = false,\n    audioCount = 0,\n    sampleRate = null,\n    timestamp = null,\n    frameSize = 0,\n    byteIndex = 0,\n    packet;\n\n  while (bytes.length - byteIndex >= 3) {\n    var type = probe.aac.parseType(bytes, byteIndex);\n    switch (type) {\n      case 'timed-metadata':\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (bytes.length - byteIndex < 10) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseId3TagSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (timestamp === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          timestamp = probe.aac.parseAacTimestamp(packet);\n        }\n        byteIndex += frameSize;\n        break;\n      case 'audio':\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (bytes.length - byteIndex < 7) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseAdtsSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (sampleRate === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          sampleRate = probe.aac.parseSampleRate(packet);\n        }\n        audioCount++;\n        byteIndex += frameSize;\n        break;\n      default:\n        byteIndex++;\n        break;\n    }\n    if (endLoop) {\n      return null;\n    }\n  }\n  if (sampleRate === null || timestamp === null) {\n    return null;\n  }\n\n  var audioTimescale = PES_TIMESCALE / sampleRate;\n\n  var result = {\n    audio: [\n      {\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      },\n      {\n        type: 'audio',\n        dts: timestamp + (audioCount * 1024 * audioTimescale),\n        pts: timestamp + (audioCount * 1024 * audioTimescale)\n      }\n    ]\n  };\n\n  return result;\n};\n\n/**\n * inspects the transport stream segment data for start and end time information\n * of the audio and video tracks (when present) as well as the first key frame's\n * start time.\n */\nvar inspectTs_ = function(bytes) {\n  var pmt = {\n    pid: null,\n    table: null\n  };\n\n  var result = {};\n\n  parsePsi_(bytes, pmt);\n\n  for (var pid in pmt.table) {\n    if (pmt.table.hasOwnProperty(pid)) {\n      var type = pmt.table[pid];\n      switch (type) {\n        case StreamTypes.H264_STREAM_TYPE:\n          result.video = [];\n          parseVideoPes_(bytes, pmt, result);\n          if (result.video.length === 0) {\n            delete result.video;\n          }\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          result.audio = [];\n          parseAudioPes_(bytes, pmt, result);\n          if (result.audio.length === 0) {\n            delete result.audio;\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Inspects segment byte data and returns an object with start and end timing information\n *\n * @param {Uint8Array} bytes The segment byte data\n * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n *  timestamps for rollover. This value must be in 90khz clock.\n * @return {Object} Object containing start and end frame timing info of segment.\n */\nvar inspect = function(bytes, baseTimestamp) {\n  var isAacData = isLikelyAacData(bytes);\n\n  var result;\n\n  if (isAacData) {\n    result = inspectAac_(bytes);\n  } else {\n    result = inspectTs_(bytes);\n  }\n\n  if (!result || (!result.audio && !result.video)) {\n    return null;\n  }\n\n  adjustTimestamp_(result, baseTimestamp);\n\n  return result;\n};\n\nmodule.exports = {\n  inspect: inspect\n};\n\n},{\"../aac/probe.js\":39,\"../m2ts/probe.js\":52,\"../m2ts/stream-types.js\":53,\"../m2ts/timestamp-rollover-stream.js\":54}],60:[function(require,module,exports){\nvar\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\nmodule.exports = {\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs\n};\n\n},{}],61:[function(require,module,exports){\n'use strict';\n\nvar ExpGolomb;\n\n/**\n * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n * scheme used by h264.\n */\nExpGolomb = function(workingData) {\n  var\n    // the number of bytes left to examine in workingData\n    workingBytesAvailable = workingData.byteLength,\n\n    // the current word being examined\n    workingWord = 0, // :uint\n\n    // the number of bits left to examine in the current word\n    workingBitsAvailable = 0; // :uint;\n\n  // ():uint\n  this.length = function() {\n    return (8 * workingBytesAvailable);\n  };\n\n  // ():uint\n  this.bitsAvailable = function() {\n    return (8 * workingBytesAvailable) + workingBitsAvailable;\n  };\n\n  // ():void\n  this.loadWord = function() {\n    var\n      position = workingData.byteLength - workingBytesAvailable,\n      workingBytes = new Uint8Array(4),\n      availableBytes = Math.min(4, workingBytesAvailable);\n\n    if (availableBytes === 0) {\n      throw new Error('no bytes available');\n    }\n\n    workingBytes.set(workingData.subarray(position,\n                                          position + availableBytes));\n    workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n    // track the amount of workingData that has been processed\n    workingBitsAvailable = availableBytes * 8;\n    workingBytesAvailable -= availableBytes;\n  };\n\n  // (count:int):void\n  this.skipBits = function(count) {\n    var skipBytes; // :int\n    if (workingBitsAvailable > count) {\n      workingWord          <<= count;\n      workingBitsAvailable -= count;\n    } else {\n      count -= workingBitsAvailable;\n      skipBytes = Math.floor(count / 8);\n\n      count -= (skipBytes * 8);\n      workingBytesAvailable -= skipBytes;\n\n      this.loadWord();\n\n      workingWord <<= count;\n      workingBitsAvailable -= count;\n    }\n  };\n\n  // (size:int):uint\n  this.readBits = function(size) {\n    var\n      bits = Math.min(workingBitsAvailable, size), // :uint\n      valu = workingWord >>> (32 - bits); // :uint\n    // if size > 31, handle error\n    workingBitsAvailable -= bits;\n    if (workingBitsAvailable > 0) {\n      workingWord <<= bits;\n    } else if (workingBytesAvailable > 0) {\n      this.loadWord();\n    }\n\n    bits = size - bits;\n    if (bits > 0) {\n      return valu << bits | this.readBits(bits);\n    }\n    return valu;\n  };\n\n  // ():uint\n  this.skipLeadingZeros = function() {\n    var leadingZeroCount; // :uint\n    for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n      if ((workingWord & (0x80000000 >>> leadingZeroCount)) !== 0) {\n        // the first bit of working word is 1\n        workingWord <<= leadingZeroCount;\n        workingBitsAvailable -= leadingZeroCount;\n        return leadingZeroCount;\n      }\n    }\n\n    // we exhausted workingWord and still have not found a 1\n    this.loadWord();\n    return leadingZeroCount + this.skipLeadingZeros();\n  };\n\n  // ():void\n  this.skipUnsignedExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():void\n  this.skipExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():uint\n  this.readUnsignedExpGolomb = function() {\n    var clz = this.skipLeadingZeros(); // :uint\n    return this.readBits(clz + 1) - 1;\n  };\n\n  // ():int\n  this.readExpGolomb = function() {\n    var valu = this.readUnsignedExpGolomb(); // :int\n    if (0x01 & valu) {\n      // the number is odd if the low order bit is set\n      return (1 + valu) >>> 1; // add 1 to make it even, and divide by 2\n    }\n    return -1 * (valu >>> 1); // divide by two then make it negative\n  };\n\n  // Some convenience functions\n  // :Boolean\n  this.readBoolean = function() {\n    return this.readBits(1) === 1;\n  };\n\n  // ():int\n  this.readUnsignedByte = function() {\n    return this.readBits(8);\n  };\n\n  this.loadWord();\n};\n\nmodule.exports = ExpGolomb;\n\n},{}],62:[function(require,module,exports){\n/**\n * mux.js\n *\n * Copyright (c) 2014 Brightcove\n * All rights reserved.\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function() {\n  this.init = function() {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n    this.on = function(type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n    this.off = function(type, listener) {\n      var index;\n      if (!listeners[type]) {\n        return false;\n      }\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n    this.trigger = function(type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n    this.dispose = function() {\n      listeners = {};\n    };\n  };\n};\n\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\nStream.prototype.pipe = function(destination) {\n  this.on('data', function(data) {\n    destination.push(data);\n  });\n\n  this.on('done', function(flushSource) {\n    destination.flush(flushSource);\n  });\n\n  return destination;\n};\n\n// Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\nStream.prototype.push = function(data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function(flushSource) {\n  this.trigger('done', flushSource);\n};\n\nmodule.exports = Stream;\n\n},{}],63:[function(require,module,exports){\n// see https://tools.ietf.org/html/rfc1808\r\n\r\n/* jshint ignore:start */\r\n(function(root) { \r\n/* jshint ignore:end */\r\n\r\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/\\;?#]*)?(.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\r\n  var FIRST_SEGMENT_REGEX = /^([^\\/;?#]*)(.*)$/;\r\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\r\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\r\n\r\n  var URLToolkit = { // jshint ignore:line\r\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\r\n    // E.g\r\n    // With opts.alwaysNormalize = false (default, spec compliant)\r\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\r\n    // With opts.alwaysNormalize = true (not spec compliant)\r\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\r\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\r\n      opts = opts || {};\r\n      // remove any remaining space and CRLF\r\n      baseURL = baseURL.trim();\r\n      relativeURL = relativeURL.trim();\r\n      if (!relativeURL) {\r\n        // 2a) If the embedded URL is entirely empty, it inherits the\r\n        // entire base URL (i.e., is set equal to the base URL)\r\n        // and we are done.\r\n        if (!opts.alwaysNormalize) {\r\n          return baseURL;\r\n        }\r\n        var basePartsForNormalise = this.parseURL(baseURL);\r\n        if (!basePartsForNormalise) {\r\n          throw new Error('Error trying to parse base URL.');\r\n        }\r\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\r\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\r\n      }\r\n      var relativeParts = this.parseURL(relativeURL);\r\n      if (!relativeParts) {\r\n        throw new Error('Error trying to parse relative URL.');\r\n      }\r\n      if (relativeParts.scheme) {\r\n        // 2b) If the embedded URL starts with a scheme name, it is\r\n        // interpreted as an absolute URL and we are done.\r\n        if (!opts.alwaysNormalize) {\r\n          return relativeURL;\r\n        }\r\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\r\n        return URLToolkit.buildURLFromParts(relativeParts);\r\n      }\r\n      var baseParts = this.parseURL(baseURL);\r\n      if (!baseParts) {\r\n        throw new Error('Error trying to parse base URL.');\r\n      }\r\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\r\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\r\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\r\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\r\n        baseParts.netLoc = pathParts[1];\r\n        baseParts.path = pathParts[2];\r\n      }\r\n      if (baseParts.netLoc && !baseParts.path) {\r\n        baseParts.path = '/';\r\n      }\r\n      var builtParts = {\r\n        // 2c) Otherwise, the embedded URL inherits the scheme of\r\n        // the base URL.\r\n        scheme: baseParts.scheme,\r\n        netLoc: relativeParts.netLoc,\r\n        path: null,\r\n        params: relativeParts.params,\r\n        query: relativeParts.query,\r\n        fragment: relativeParts.fragment\r\n      };\r\n      if (!relativeParts.netLoc) {\r\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\r\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\r\n        // (if any) of the base URL.\r\n        builtParts.netLoc = baseParts.netLoc;\r\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\r\n        // path is not relative and we skip to Step 7.\r\n        if (relativeParts.path[0] !== '/') {\r\n          if (!relativeParts.path) {\r\n            // 5) If the embedded URL path is empty (and not preceded by a\r\n            // slash), then the embedded URL inherits the base URL path\r\n            builtParts.path = baseParts.path;\r\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\r\n            // step 7; otherwise, it inherits the <params> of the base\r\n            // URL (if any) and\r\n            if (!relativeParts.params) {\r\n              builtParts.params = baseParts.params;\r\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\r\n              // step 7; otherwise, it inherits the <query> of the base\r\n              // URL (if any) and we skip to step 7.\r\n              if (!relativeParts.query) {\r\n                builtParts.query = baseParts.query;\r\n              }\r\n            }\r\n          } else {\r\n            // 6) The last segment of the base URL's path (anything\r\n            // following the rightmost slash \"/\", or the entire path if no\r\n            // slash is present) is removed and the embedded URL's path is\r\n            // appended in its place.\r\n            var baseURLPath = baseParts.path;\r\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\r\n            builtParts.path = URLToolkit.normalizePath(newPath);\r\n          }\r\n        }\r\n      }\r\n      if (builtParts.path === null) {\r\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\r\n      }\r\n      return URLToolkit.buildURLFromParts(builtParts);\r\n    },\r\n    parseURL: function(url) {\r\n      var parts = URL_REGEX.exec(url);\r\n      if (!parts) {\r\n        return null;\r\n      }\r\n      return {\r\n        scheme: parts[1] || '',\r\n        netLoc: parts[2] || '',\r\n        path: parts[3] || '',\r\n        params: parts[4] || '',\r\n        query: parts[5] || '',\r\n        fragment: parts[6] || ''\r\n      };\r\n    },\r\n    normalizePath: function(path) {\r\n      // The following operations are\r\n      // then applied, in order, to the new path:\r\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\r\n      // segment, are removed.\r\n      // 6b) If the path ends with \".\" as a complete path segment,\r\n      // that \".\" is removed.\r\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\r\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\r\n      // complete path segment not equal to \"..\", are removed.\r\n      // Removal of these path segments is performed iteratively,\r\n      // removing the leftmost matching pattern on each iteration,\r\n      // until no matching pattern remains.\r\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\r\n      // complete path segment not equal to \"..\", that\r\n      // \"<segment>/..\" is removed.\r\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\r\n      return path.split('').reverse().join('');\r\n    },\r\n    buildURLFromParts: function(parts) {\r\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\r\n    }\r\n  };\r\n\r\n/* jshint ignore:start */\r\n  if(typeof exports === 'object' && typeof module === 'object')\r\n    module.exports = URLToolkit;\r\n  else if(typeof define === 'function' && define.amd)\r\n    define([], function() { return URLToolkit; });\r\n  else if(typeof exports === 'object')\r\n    exports[\"URLToolkit\"] = URLToolkit;\r\n  else\r\n    root[\"URLToolkit\"] = URLToolkit;\r\n})(this);\r\n/* jshint ignore:end */\r\n\n},{}],64:[function(require,module,exports){\n(function (global){\n/**\n * @file add-text-track-data.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _globalWindow = require('global/window');\n\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get() {\n        _videoJs2['default'].log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get() {\n        _videoJs2['default'].log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get() {\n        _videoJs2['default'].log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = undefined;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the flash or virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = _globalWindow2['default'].WebKitDataCue || _globalWindow2['default'].VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    (function () {\n      var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n\n      metadataArray.forEach(function (metadata) {\n        var time = metadata.cueTime + this.timestampOffset;\n\n        metadata.frames.forEach(function (frame) {\n          var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n\n          cue.frame = frame;\n          cue.value = frame;\n          deprecateOldCue(cue);\n\n          this.metadataTrack_.addCue(cue);\n        }, this);\n      }, sourceHandler);\n\n      // Updating the metadeta cues so that\n      // the endTime of each cue is the startTime of the next cue\n      // the endTime of last cue is the duration of the video\n      if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n        (function () {\n          var cues = sourceHandler.metadataTrack_.cues;\n          var cuesArray = [];\n\n          // Create a copy of the TextTrackCueList...\n          // ...disregarding cues with a falsey value\n          for (var i = 0; i < cues.length; i++) {\n            if (cues[i]) {\n              cuesArray.push(cues[i]);\n            }\n          }\n\n          // Group cues by their startTime value\n          var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n            var timeSlot = obj[cue.startTime] || [];\n\n            timeSlot.push(cue);\n            obj[cue.startTime] = timeSlot;\n\n            return obj;\n          }, {});\n\n          // Sort startTimes by ascending order\n          var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n            return Number(a) - Number(b);\n          });\n\n          // Map each cue group's endTime to the next group's startTime\n          sortedStartTimes.forEach(function (startTime, idx) {\n            var cueGroup = cuesGroupedByStartTime[startTime];\n            var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration;\n\n            // Map each cue's endTime the next group's startTime\n            cueGroup.forEach(function (cue) {\n              cue.endTime = nextTime;\n            });\n          });\n        })();\n      }\n    })();\n  }\n};\n\nexports['default'] = {\n  addTextTrackData: addTextTrackData,\n  durationOfVideo: durationOfVideo\n};\nmodule.exports = exports['default'];\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"global/window\":32}],65:[function(require,module,exports){\n/**\n * @file codec-utils.js\n */\n\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar isAudioCodec = function isAudioCodec(codec) {\n  return (/mp4a\\.\\d+.\\d+/i.test(codec)\n  );\n};\n\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\nvar isVideoCodec = function isVideoCodec(codec) {\n  return (/avc1\\.[\\da-f]+/i.test(codec)\n  );\n};\n\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\nvar parseContentType = function parseContentType(type) {\n  var object = { type: '', parameters: {} };\n  var parameters = type.trim().split(';');\n\n  // first parameter should always be content-type\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var _name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n\n      object.parameters[_name] = value;\n    }\n  });\n\n  return object;\n};\n\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n\nexports['default'] = {\n  isAudioCodec: isAudioCodec,\n  parseContentType: parseContentType,\n  isVideoCodec: isVideoCodec,\n  translateLegacyCodecs: translateLegacyCodecs\n};\nmodule.exports = exports['default'];\n},{}],66:[function(require,module,exports){\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML or Flash media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_;\n\n  // create an in-band caption track if one is present in the segment\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({ type: 'usage', name: 'hls-608' });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n\nexports['default'] = createTextTracksIfNecessary;\nmodule.exports = exports['default'];\n},{}],67:[function(require,module,exports){\n/**\n * @file flash-constants.js\n */\n/**\n * The maximum size in bytes for append operations to the video.js\n * SWF. Calling through to Flash blocks and can be expensive so\n * we chunk data and pass through 4KB at a time, yielding to the\n * browser between chunks. This gives a theoretical maximum rate of\n * 1MB/s into Flash. Any higher and we begin to drop frames and UI\n * responsiveness suffers.\n *\n * @private\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar flashConstants = {\n  // times in milliseconds\n  TIME_BETWEEN_CHUNKS: 1,\n  BYTES_PER_CHUNK: 1024 * 32\n};\n\nexports[\"default\"] = flashConstants;\nmodule.exports = exports[\"default\"];\n},{}],68:[function(require,module,exports){\n(function (global){\n/**\n * @file flash-media-source.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _globalDocument = require('global/document');\n\nvar _globalDocument2 = _interopRequireDefault(_globalDocument);\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\nvar _flashSourceBuffer = require('./flash-source-buffer');\n\nvar _flashSourceBuffer2 = _interopRequireDefault(_flashSourceBuffer);\n\nvar _flashConstants = require('./flash-constants');\n\nvar _flashConstants2 = _interopRequireDefault(_flashConstants);\n\nvar _codecUtils = require('./codec-utils');\n\n/**\n * A flash implmentation of HTML MediaSources and a polyfill\n * for browsers that don't support native or HTML MediaSources..\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class FlashMediaSource\n * @extends videojs.EventTarget\n */\n\nvar FlashMediaSource = (function (_videojs$EventTarget) {\n  _inherits(FlashMediaSource, _videojs$EventTarget);\n\n  function FlashMediaSource() {\n    var _this = this;\n\n    _classCallCheck(this, FlashMediaSource);\n\n    _get(Object.getPrototypeOf(FlashMediaSource.prototype), 'constructor', this).call(this);\n    this.sourceBuffers = [];\n    this.readyState = 'closed';\n\n    this.on(['sourceopen', 'webkitsourceopen'], function (event) {\n      // find the swf where we will push media data\n      _this.swfObj = _globalDocument2['default'].getElementById(event.swfId);\n      _this.player_ = (0, _videoJs2['default'])(_this.swfObj.parentNode);\n      _this.tech_ = _this.swfObj.tech;\n      _this.readyState = 'open';\n\n      _this.tech_.on('seeking', function () {\n        var i = _this.sourceBuffers.length;\n\n        while (i--) {\n          _this.sourceBuffers[i].abort();\n        }\n      });\n\n      // trigger load events\n      if (_this.swfObj) {\n        _this.swfObj.vjs_load();\n      }\n    });\n  }\n\n  /**\n    * Set or return the presentation duration.\n    *\n    * @param {Double} value the duration of the media in seconds\n    * @param {Double} the current presentation duration\n    * @link http://www.w3.org/TR/media-source/#widl-MediaSource-duration\n    */\n\n  /**\n   * We have this function so that the html and flash interfaces\n   * are the same.\n   *\n   * @private\n   */\n\n  _createClass(FlashMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_() {}\n    // intentional no-op\n\n    /**\n     * Create a new flash source buffer and add it to our flash media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the source\n     * @return {Object} the flash source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var parsedType = (0, _codecUtils.parseContentType)(type);\n      var sourceBuffer = undefined;\n\n      // if this is an FLV type, we'll push data to flash\n      if (parsedType.type === 'video/mp2t' || parsedType.type === 'audio/mp2t') {\n        // Flash source buffers\n        sourceBuffer = new _flashSourceBuffer2['default'](this);\n      } else {\n        throw new Error('NotSupportedError (Video.js)');\n      }\n\n      this.sourceBuffers.push(sourceBuffer);\n      return sourceBuffer;\n    }\n\n    /**\n     * Signals the end of the stream.\n     *\n     * @link https://w3c.github.io/media-source/#widl-MediaSource-endOfStream-void-EndOfStreamError-error\n     * @param {String=} error Signals that a playback error\n     * has occurred. If specified, it must be either \"network\" or\n     * \"decode\".\n     */\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream(error) {\n      if (error === 'network') {\n        // MEDIA_ERR_NETWORK\n        this.tech_.error(2);\n      } else if (error === 'decode') {\n        // MEDIA_ERR_DECODE\n        this.tech_.error(3);\n      }\n      if (this.readyState !== 'ended') {\n        this.readyState = 'ended';\n        this.swfObj.vjs_endOfStream();\n      }\n    }\n  }]);\n\n  return FlashMediaSource;\n})(_videoJs2['default'].EventTarget);\n\nexports['default'] = FlashMediaSource;\ntry {\n  Object.defineProperty(FlashMediaSource.prototype, 'duration', {\n    /**\n     * Return the presentation duration.\n     *\n     * @return {Double} the duration of the media in seconds\n     * @link http://www.w3.org/TR/media-source/#widl-MediaSource-duration\n     */\n    get: function get() {\n      if (!this.swfObj) {\n        return NaN;\n      }\n      // get the current duration from the SWF\n      return this.swfObj.vjs_getProperty('duration');\n    },\n    /**\n     * Set the presentation duration.\n     *\n     * @param {Double} value the duration of the media in seconds\n     * @return {Double} the duration of the media in seconds\n     * @link http://www.w3.org/TR/media-source/#widl-MediaSource-duration\n     */\n    set: function set(value) {\n      var i = undefined;\n      var oldDuration = this.swfObj.vjs_getProperty('duration');\n\n      this.swfObj.vjs_setProperty('duration', value);\n\n      if (value < oldDuration) {\n        // In MSE, this triggers the range removal algorithm which causes\n        // an update to occur\n        for (i = 0; i < this.sourceBuffers.length; i++) {\n          this.sourceBuffers[i].remove(value, oldDuration);\n        }\n      }\n\n      return value;\n    }\n  });\n} catch (e) {\n  // IE8 throws if defineProperty is called on a non-DOM node. We\n  // don't support IE8 but we shouldn't throw an error if loaded\n  // there.\n  FlashMediaSource.prototype.duration = NaN;\n}\n\nfor (var property in _flashConstants2['default']) {\n  FlashMediaSource[property] = _flashConstants2['default'][property];\n}\nmodule.exports = exports['default'];\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./codec-utils\":65,\"./flash-constants\":67,\"./flash-source-buffer\":69,\"global/document\":31}],69:[function(require,module,exports){\n(function (global){\n/**\n * @file flash-source-buffer.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _globalWindow = require('global/window');\n\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\nvar _muxJsLibFlv = require('mux.js/lib/flv');\n\nvar _muxJsLibFlv2 = _interopRequireDefault(_muxJsLibFlv);\n\nvar _removeCuesFromTrack = require('./remove-cues-from-track');\n\nvar _removeCuesFromTrack2 = _interopRequireDefault(_removeCuesFromTrack);\n\nvar _createTextTracksIfNecessary = require('./create-text-tracks-if-necessary');\n\nvar _createTextTracksIfNecessary2 = _interopRequireDefault(_createTextTracksIfNecessary);\n\nvar _addTextTrackData = require('./add-text-track-data');\n\nvar _flashTransmuxerWorker = require('./flash-transmuxer-worker');\n\nvar _flashTransmuxerWorker2 = _interopRequireDefault(_flashTransmuxerWorker);\n\nvar _webwackify = require('webwackify');\n\nvar _webwackify2 = _interopRequireDefault(_webwackify);\n\nvar _flashConstants = require('./flash-constants');\n\nvar _flashConstants2 = _interopRequireDefault(_flashConstants);\n\nvar resolveFlashTransmuxWorker = function resolveFlashTransmuxWorker() {\n  var result = undefined;\n\n  try {\n    result = require.resolve('./flash-transmuxer-worker');\n  } catch (e) {\n    // no result\n  }\n\n  return result;\n};\n\n/**\n * A wrapper around the setTimeout function that uses\n * the flash constant time between ticks value.\n *\n * @param {Function} func the function callback to run\n * @private\n */\nvar scheduleTick = function scheduleTick(func) {\n  // Chrome doesn't invoke requestAnimationFrame callbacks\n  // in background tabs, so use setTimeout.\n  _globalWindow2['default'].setTimeout(func, _flashConstants2['default'].TIME_BETWEEN_CHUNKS);\n};\n\n/**\n * Generates a random string of max length 6\n *\n * @return {String} the randomly generated string\n * @function generateRandomString\n * @private\n */\nvar generateRandomString = function generateRandomString() {\n  return Math.random().toString(36).slice(2, 8);\n};\n\n/**\n * Round a number to a specified number of places much like\n * toFixed but return a number instead of a string representation.\n *\n * @param {Number} num A number\n * @param {Number} places The number of decimal places which to\n * round\n * @private\n */\nvar toDecimalPlaces = function toDecimalPlaces(num, places) {\n  if (typeof places !== 'number' || places < 0) {\n    places = 0;\n  }\n\n  var scale = Math.pow(10, places);\n\n  return Math.round(num * scale) / scale;\n};\n\n/**\n * A SourceBuffer implementation for Flash rather than HTML.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @param {Object} mediaSource the flash media source\n * @class FlashSourceBuffer\n * @extends videojs.EventTarget\n */\n\nvar FlashSourceBuffer = (function (_videojs$EventTarget) {\n  _inherits(FlashSourceBuffer, _videojs$EventTarget);\n\n  function FlashSourceBuffer(mediaSource) {\n    var _this = this;\n\n    _classCallCheck(this, FlashSourceBuffer);\n\n    _get(Object.getPrototypeOf(FlashSourceBuffer.prototype), 'constructor', this).call(this);\n    var encodedHeader = undefined;\n\n    // Start off using the globally defined value but refine\n    // as we append data into flash\n    this.chunkSize_ = _flashConstants2['default'].BYTES_PER_CHUNK;\n\n    // byte arrays queued to be appended\n    this.buffer_ = [];\n\n    // the total number of queued bytes\n    this.bufferSize_ = 0;\n\n    // to be able to determine the correct position to seek to, we\n    // need to retain information about the mapping between the\n    // media timeline and PTS values\n    this.basePtsOffset_ = NaN;\n\n    this.mediaSource_ = mediaSource;\n\n    this.audioBufferEnd_ = NaN;\n    this.videoBufferEnd_ = NaN;\n\n    // indicates whether the asynchronous continuation of an operation\n    // is still being processed\n    // see https://w3c.github.io/media-source/#widl-SourceBuffer-updating\n    this.updating = false;\n    this.timestampOffset_ = 0;\n\n    encodedHeader = _globalWindow2['default'].btoa(String.fromCharCode.apply(null, Array.prototype.slice.call(_muxJsLibFlv2['default'].getFlvHeader())));\n\n    // create function names with added randomness for the global callbacks flash will use\n    // to get data from javascript into the swf. Random strings are added as a safety\n    // measure for pages with multiple players since these functions will be global\n    // instead of per instance. When making a call to the swf, the browser generates a\n    // try catch code snippet, but just takes the function name and writes out an unquoted\n    // call to that function. If the player id has any special characters, this will result\n    // in an error, so safePlayerId replaces all special characters to '_'\n    var safePlayerId = this.mediaSource_.player_.id().replace(/[^a-zA-Z0-9]/g, '_');\n\n    this.flashEncodedHeaderName_ = 'vjs_flashEncodedHeader_' + safePlayerId + generateRandomString();\n    this.flashEncodedDataName_ = 'vjs_flashEncodedData_' + safePlayerId + generateRandomString();\n\n    _globalWindow2['default'][this.flashEncodedHeaderName_] = function () {\n      delete _globalWindow2['default'][_this.flashEncodedHeaderName_];\n      return encodedHeader;\n    };\n\n    this.mediaSource_.swfObj.vjs_appendChunkReady(this.flashEncodedHeaderName_);\n\n    this.transmuxer_ = (0, _webwackify2['default'])(_flashTransmuxerWorker2['default'], resolveFlashTransmuxWorker());\n    this.transmuxer_.postMessage({ action: 'init', options: {} });\n    this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        _this.receiveBuffer_(event.data.segment);\n      }\n    };\n\n    this.one('updateend', function () {\n      _this.mediaSource_.tech_.trigger('loadedmetadata');\n    });\n\n    Object.defineProperty(this, 'timestampOffset', {\n      get: function get() {\n        return this.timestampOffset_;\n      },\n      set: function set(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          // We have to tell flash to expect a discontinuity\n          this.mediaSource_.swfObj.vjs_discontinuity();\n          // the media <-> PTS mapping must be re-established after\n          // the discontinuity\n          this.basePtsOffset_ = NaN;\n          this.audioBufferEnd_ = NaN;\n          this.videoBufferEnd_ = NaN;\n\n          this.transmuxer_.postMessage({ action: 'reset' });\n        }\n      }\n    });\n\n    Object.defineProperty(this, 'buffered', {\n      get: function get() {\n        if (!this.mediaSource_ || !this.mediaSource_.swfObj || !('vjs_getProperty' in this.mediaSource_.swfObj)) {\n          return _videoJs2['default'].createTimeRange();\n        }\n\n        var buffered = this.mediaSource_.swfObj.vjs_getProperty('buffered');\n\n        if (buffered && buffered.length) {\n          buffered[0][0] = toDecimalPlaces(buffered[0][0], 3);\n          buffered[0][1] = toDecimalPlaces(buffered[0][1], 3);\n        }\n        return _videoJs2['default'].createTimeRanges(buffered);\n      }\n    });\n\n    // On a seek we remove all text track data since flash has no concept\n    // of a buffered-range and everything else is reset on seek\n    this.mediaSource_.player_.on('seeked', function () {\n      (0, _removeCuesFromTrack2['default'])(0, Infinity, _this.metadataTrack_);\n      if (_this.inbandTextTracks_) {\n        for (var track in _this.inbandTextTracks_) {\n          (0, _removeCuesFromTrack2['default'])(0, Infinity, _this.inbandTextTracks_[track]);\n        }\n      }\n    });\n\n    var onHlsReset = this.onHlsReset_.bind(this);\n\n    // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n    // resets its state and flushes the buffer\n    this.mediaSource_.player_.tech_.on('hls-reset', onHlsReset);\n\n    this.mediaSource_.player_.tech_.hls.on('dispose', function () {\n      _this.transmuxer_.terminate();\n      _this.mediaSource_.player_.tech_.off('hls-reset', onHlsReset);\n    });\n  }\n\n  /**\n   * Append bytes to the sourcebuffers buffer, in this case we\n   * have to append it to swf object.\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n   * @param {Array} bytes\n   */\n\n  _createClass(FlashSourceBuffer, [{\n    key: 'appendBuffer',\n    value: function appendBuffer(bytes) {\n      var error = undefined;\n\n      if (this.updating) {\n        error = new Error('SourceBuffer.append() cannot be called ' + 'while an update is in progress');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n      this.updating = true;\n      this.mediaSource_.readyState = 'open';\n      this.trigger({ type: 'update' });\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        data: bytes.buffer,\n        byteOffset: bytes.byteOffset,\n        byteLength: bytes.byteLength\n      }, [bytes.buffer]);\n      this.transmuxer_.postMessage({ action: 'flush' });\n    }\n\n    /**\n     * Reset the parser and remove any data queued to be sent to the SWF.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n  }, {\n    key: 'abort',\n    value: function abort() {\n      this.buffer_ = [];\n      this.bufferSize_ = 0;\n      this.mediaSource_.swfObj.vjs_abort();\n\n      // report any outstanding updates have ended\n      if (this.updating) {\n        this.updating = false;\n        this.trigger({ type: 'updateend' });\n      }\n    }\n\n    /**\n     * Flash cannot remove ranges already buffered in the NetStream\n     * but seeking clears the buffer entirely. For most purposes,\n     * having this operation act as a no-op is acceptable.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start start of the section to remove\n     * @param {Double} end end of the section to remove\n     */\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      (0, _removeCuesFromTrack2['default'])(start, end, this.metadataTrack_);\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          (0, _removeCuesFromTrack2['default'])(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n      this.trigger({ type: 'update' });\n      this.trigger({ type: 'updateend' });\n    }\n\n    /**\n     * Receive a buffer from the flv.\n     *\n     * @param {Object} segment\n     * @private\n     */\n  }, {\n    key: 'receiveBuffer_',\n    value: function receiveBuffer_(segment) {\n      var _this2 = this;\n\n      // create an in-band caption track if one is present in the segment\n      (0, _createTextTracksIfNecessary2['default'])(this, this.mediaSource_, segment);\n      (0, _addTextTrackData.addTextTrackData)(this, segment.captions, segment.metadata);\n\n      // Do this asynchronously since convertTagsToData_ can be time consuming\n      scheduleTick(function () {\n        var flvBytes = _this2.convertTagsToData_(segment);\n\n        if (_this2.buffer_.length === 0) {\n          scheduleTick(_this2.processBuffer_.bind(_this2));\n        }\n\n        if (flvBytes) {\n          _this2.buffer_.push(flvBytes);\n          _this2.bufferSize_ += flvBytes.byteLength;\n        }\n      });\n    }\n\n    /**\n     * Append a portion of the current buffer to the SWF.\n     *\n     * @private\n     */\n  }, {\n    key: 'processBuffer_',\n    value: function processBuffer_() {\n      var _this3 = this;\n\n      var chunkSize = _flashConstants2['default'].BYTES_PER_CHUNK;\n\n      if (!this.buffer_.length) {\n        if (this.updating !== false) {\n          this.updating = false;\n          this.trigger({ type: 'updateend' });\n        }\n        // do nothing if the buffer is empty\n        return;\n      }\n\n      // concatenate appends up to the max append size\n      var chunk = this.buffer_[0].subarray(0, chunkSize);\n\n      // requeue any bytes that won't make it this round\n      if (chunk.byteLength < chunkSize || this.buffer_[0].byteLength === chunkSize) {\n        this.buffer_.shift();\n      } else {\n        this.buffer_[0] = this.buffer_[0].subarray(chunkSize);\n      }\n\n      this.bufferSize_ -= chunk.byteLength;\n\n      // base64 encode the bytes\n      var binary = [];\n      var length = chunk.byteLength;\n\n      for (var i = 0; i < length; i++) {\n        binary.push(String.fromCharCode(chunk[i]));\n      }\n      var b64str = _globalWindow2['default'].btoa(binary.join(''));\n\n      _globalWindow2['default'][this.flashEncodedDataName_] = function () {\n        // schedule another processBuffer to process any left over data or to\n        // trigger updateend\n        scheduleTick(_this3.processBuffer_.bind(_this3));\n        delete _globalWindow2['default'][_this3.flashEncodedDataName_];\n        return b64str;\n      };\n\n      // Notify the swf that segment data is ready to be appended\n      this.mediaSource_.swfObj.vjs_appendChunkReady(this.flashEncodedDataName_);\n    }\n\n    /**\n     * Turns an array of flv tags into a Uint8Array representing the\n     * flv data. Also removes any tags that are before the current\n     * time so that playback begins at or slightly after the right\n     * place on a seek\n     *\n     * @private\n     * @param {Object} segmentData object of segment data\n     */\n  }, {\n    key: 'convertTagsToData_',\n    value: function convertTagsToData_(segmentData) {\n      var segmentByteLength = 0;\n      var tech = this.mediaSource_.tech_;\n      var videoTargetPts = 0;\n      var segment = undefined;\n      var videoTags = segmentData.tags.videoTags;\n      var audioTags = segmentData.tags.audioTags;\n\n      // Establish the media timeline to PTS translation if we don't\n      // have one already\n      if (isNaN(this.basePtsOffset_) && (videoTags.length || audioTags.length)) {\n        // We know there is at least one video or audio tag, but since we may not have both,\n        // we use pts: Infinity for the missing tag. The will force the following Math.min\n        // call will to use the proper pts value since it will always be less than Infinity\n        var firstVideoTag = videoTags[0] || { pts: Infinity };\n        var firstAudioTag = audioTags[0] || { pts: Infinity };\n\n        this.basePtsOffset_ = Math.min(firstAudioTag.pts, firstVideoTag.pts);\n      }\n\n      if (tech.seeking()) {\n        // Do not use previously saved buffer end values while seeking since buffer\n        // is cleared on all seeks\n        this.videoBufferEnd_ = NaN;\n        this.audioBufferEnd_ = NaN;\n      }\n\n      if (isNaN(this.videoBufferEnd_)) {\n        if (tech.buffered().length) {\n          videoTargetPts = tech.buffered().end(0) - this.timestampOffset;\n        }\n\n        // Trim to currentTime if seeking\n        if (tech.seeking()) {\n          videoTargetPts = Math.max(videoTargetPts, tech.currentTime() - this.timestampOffset);\n        }\n\n        // PTS values are represented in milliseconds\n        videoTargetPts *= 1e3;\n        videoTargetPts += this.basePtsOffset_;\n      } else {\n        // Add a fudge factor of 0.1 to the last video pts appended since a rendition change\n        // could append an overlapping segment, in which case there is a high likelyhood\n        // a tag could have a matching pts to videoBufferEnd_, which would cause\n        // that tag to get appended by the tag.pts >= targetPts check below even though it\n        // is a duplicate of what was previously appended\n        videoTargetPts = this.videoBufferEnd_ + 0.1;\n      }\n\n      // filter complete GOPs with a presentation time less than the seek target/end of buffer\n      var currentIndex = videoTags.length;\n\n      // if the last tag is beyond videoTargetPts, then do not search the list for a GOP\n      // since our videoTargetPts lies in a future segment\n      if (currentIndex && videoTags[currentIndex - 1].pts >= videoTargetPts) {\n        // Start by walking backwards from the end of the list until we reach a tag that\n        // is equal to or less than videoTargetPts\n        while (--currentIndex) {\n          var currentTag = videoTags[currentIndex];\n\n          if (currentTag.pts > videoTargetPts) {\n            continue;\n          }\n\n          // if we see a keyFrame or metadata tag once we've gone below videoTargetPts,\n          // exit the loop as this is the start of the GOP that we want to append\n          if (currentTag.keyFrame || currentTag.metaDataTag) {\n            break;\n          }\n        }\n\n        // We need to check if there are any metadata tags that come before currentIndex\n        // as those will be metadata tags associated with the GOP we are appending\n        // There could be 0 to 2 metadata tags that come before the currentIndex depending\n        // on what videoTargetPts is and whether the transmuxer prepended metadata tags to this\n        // key frame\n        while (currentIndex) {\n          var nextTag = videoTags[currentIndex - 1];\n\n          if (!nextTag.metaDataTag) {\n            break;\n          }\n\n          currentIndex--;\n        }\n      }\n\n      var filteredVideoTags = videoTags.slice(currentIndex);\n\n      var audioTargetPts = undefined;\n\n      if (isNaN(this.audioBufferEnd_)) {\n        audioTargetPts = videoTargetPts;\n      } else {\n        // Add a fudge factor of 0.1 to the last video pts appended since a rendition change\n        // could append an overlapping segment, in which case there is a high likelyhood\n        // a tag could have a matching pts to videoBufferEnd_, which would cause\n        // that tag to get appended by the tag.pts >= targetPts check below even though it\n        // is a duplicate of what was previously appended\n        audioTargetPts = this.audioBufferEnd_ + 0.1;\n      }\n\n      if (filteredVideoTags.length) {\n        // If targetPts intersects a GOP and we appended the tags for the GOP that came\n        // before targetPts, we want to make sure to trim audio tags at the pts\n        // of the first video tag to avoid brief moments of silence\n        audioTargetPts = Math.min(audioTargetPts, filteredVideoTags[0].pts);\n      }\n\n      // skip tags with a presentation time less than the seek target/end of buffer\n      currentIndex = 0;\n\n      while (currentIndex < audioTags.length) {\n        if (audioTags[currentIndex].pts >= audioTargetPts) {\n          break;\n        }\n\n        currentIndex++;\n      }\n\n      var filteredAudioTags = audioTags.slice(currentIndex);\n\n      // update the audio and video buffer ends\n      if (filteredAudioTags.length) {\n        this.audioBufferEnd_ = filteredAudioTags[filteredAudioTags.length - 1].pts;\n      }\n      if (filteredVideoTags.length) {\n        this.videoBufferEnd_ = filteredVideoTags[filteredVideoTags.length - 1].pts;\n      }\n\n      var tags = this.getOrderedTags_(filteredVideoTags, filteredAudioTags);\n\n      if (tags.length === 0) {\n        return;\n      }\n\n      // If we are appending data that comes before our target pts, we want to tell\n      // the swf to adjust its notion of current time to account for the extra tags\n      // we are appending to complete the GOP that intersects with targetPts\n      if (tags[0].pts < videoTargetPts && tech.seeking()) {\n        var fudgeFactor = 1 / 30;\n        var currentTime = tech.currentTime();\n        var diff = (videoTargetPts - tags[0].pts) / 1e3;\n        var adjustedTime = currentTime - diff;\n\n        if (adjustedTime < fudgeFactor) {\n          adjustedTime = 0;\n        }\n\n        try {\n          this.mediaSource_.swfObj.vjs_adjustCurrentTime(adjustedTime);\n        } catch (e) {\n          // no-op for backwards compatability of swf. If adjustCurrentTime fails,\n          // the swf may incorrectly report currentTime and buffered ranges\n          // but should not affect playback over than the time displayed on the\n          // progress bar is inaccurate\n        }\n      }\n\n      // concatenate the bytes into a single segment\n      for (var i = 0; i < tags.length; i++) {\n        segmentByteLength += tags[i].bytes.byteLength;\n      }\n      segment = new Uint8Array(segmentByteLength);\n      for (var i = 0, j = 0; i < tags.length; i++) {\n        segment.set(tags[i].bytes, j);\n        j += tags[i].bytes.byteLength;\n      }\n\n      return segment;\n    }\n\n    /**\n     * Assemble the FLV tags in decoder order.\n     *\n     * @private\n     * @param {Array} videoTags list of video tags\n     * @param {Array} audioTags list of audio tags\n     */\n  }, {\n    key: 'getOrderedTags_',\n    value: function getOrderedTags_(videoTags, audioTags) {\n      var tag = undefined;\n      var tags = [];\n\n      while (videoTags.length || audioTags.length) {\n        if (!videoTags.length) {\n          // only audio tags remain\n          tag = audioTags.shift();\n        } else if (!audioTags.length) {\n          // only video tags remain\n          tag = videoTags.shift();\n        } else if (audioTags[0].dts < videoTags[0].dts) {\n          // audio should be decoded next\n          tag = audioTags.shift();\n        } else {\n          // video should be decoded next\n          tag = videoTags.shift();\n        }\n\n        tags.push(tag);\n      }\n\n      return tags;\n    }\n  }, {\n    key: 'onHlsReset_',\n    value: function onHlsReset_() {\n      this.transmuxer_.postMessage({ action: 'resetCaptions' });\n    }\n  }]);\n\n  return FlashSourceBuffer;\n})(_videoJs2['default'].EventTarget);\n\nexports['default'] = FlashSourceBuffer;\nmodule.exports = exports['default'];\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./add-text-track-data\":64,\"./create-text-tracks-if-necessary\":66,\"./flash-constants\":67,\"./flash-transmuxer-worker\":70,\"./remove-cues-from-track\":72,\"global/window\":32,\"mux.js/lib/flv\":46,\"webwackify\":76}],70:[function(require,module,exports){\n/**\n * @file flash-transmuxer-worker.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _globalWindow = require('global/window');\n\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\nvar _muxJsLibFlv = require('mux.js/lib/flv');\n\nvar _muxJsLibFlv2 = _interopRequireDefault(_muxJsLibFlv);\n\n/**\n * Re-emits transmuxer events by converting them into messages to the\n * world outside the worker.\n *\n * @param {Object} transmuxer the transmuxer to wire events on\n * @private\n */\nvar wireTransmuxerEvents = function wireTransmuxerEvents(transmuxer) {\n  transmuxer.on('data', function (segment) {\n    _globalWindow2['default'].postMessage({\n      action: 'data',\n      segment: segment\n    });\n  });\n\n  transmuxer.on('done', function (data) {\n    _globalWindow2['default'].postMessage({ action: 'done' });\n  });\n};\n\n/**\n * All incoming messages route through this hash. If no function exists\n * to handle an incoming message, then we ignore the message.\n *\n * @class MessageHandlers\n * @param {Object} options the options to initialize with\n */\n\nvar MessageHandlers = (function () {\n  function MessageHandlers(options) {\n    _classCallCheck(this, MessageHandlers);\n\n    this.options = options || {};\n    this.init();\n  }\n\n  /**\n   * Our web wroker interface so that things can talk to mux.js\n   * that will be running in a web worker. The scope is passed to this by\n   * webworkify.\n   *\n   * @param {Object} self the scope for the web worker\n   */\n\n  /**\n   * initialize our web worker and wire all the events.\n   */\n\n  _createClass(MessageHandlers, [{\n    key: 'init',\n    value: function init() {\n      if (this.transmuxer) {\n        this.transmuxer.dispose();\n      }\n      this.transmuxer = new _muxJsLibFlv2['default'].Transmuxer(this.options);\n      wireTransmuxerEvents(this.transmuxer);\n    }\n\n    /**\n     * Adds data (a ts segment) to the start of the transmuxer pipeline for\n     * processing.\n     *\n     * @param {ArrayBuffer} data data to push into the muxer\n     */\n  }, {\n    key: 'push',\n    value: function push(data) {\n      // Cast array buffer to correct type for transmuxer\n      var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n\n      this.transmuxer.push(segment);\n    }\n\n    /**\n     * Recreate the transmuxer so that the next segment added via `push`\n     * start with a fresh transmuxer.\n     */\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.init();\n    }\n\n    /**\n     * Forces the pipeline to finish processing the last segment and emit its\n     * results.\n     */\n  }, {\n    key: 'flush',\n    value: function flush() {\n      this.transmuxer.flush();\n    }\n  }, {\n    key: 'resetCaptions',\n    value: function resetCaptions() {\n      this.transmuxer.resetCaptions();\n    }\n  }]);\n\n  return MessageHandlers;\n})();\n\nvar FlashTransmuxerWorker = function FlashTransmuxerWorker(self) {\n  self.onmessage = function (event) {\n    if (event.data.action === 'init' && event.data.options) {\n      this.messageHandlers = new MessageHandlers(event.data.options);\n      return;\n    }\n\n    if (!this.messageHandlers) {\n      this.messageHandlers = new MessageHandlers();\n    }\n\n    if (event.data && event.data.action && event.data.action !== 'init') {\n      if (this.messageHandlers[event.data.action]) {\n        this.messageHandlers[event.data.action](event.data);\n      }\n    }\n  };\n};\n\nexports['default'] = function (self) {\n  return new FlashTransmuxerWorker(self);\n};\n\nmodule.exports = exports['default'];\n},{\"global/window\":32,\"mux.js/lib/flv\":46}],71:[function(require,module,exports){\n(function (global){\n/**\n * @file html-media-source.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _globalWindow = require('global/window');\n\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\nvar _globalDocument = require('global/document');\n\nvar _globalDocument2 = _interopRequireDefault(_globalDocument);\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\nvar _virtualSourceBuffer = require('./virtual-source-buffer');\n\nvar _virtualSourceBuffer2 = _interopRequireDefault(_virtualSourceBuffer);\n\nvar _addTextTrackData = require('./add-text-track-data');\n\nvar _codecUtils = require('./codec-utils');\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\nvar HtmlMediaSource = (function (_videojs$EventTarget) {\n  _inherits(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    var _this = this;\n\n    _classCallCheck(this, HtmlMediaSource);\n\n    _get(Object.getPrototypeOf(HtmlMediaSource.prototype), 'constructor', this).call(this);\n    var property = undefined;\n\n    this.nativeMediaSource_ = new _globalWindow2['default'].MediaSource();\n    // delegate to the native MediaSource's methods by default\n    for (property in this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof this.nativeMediaSource_[property] === 'function') {\n        this[property] = this.nativeMediaSource_[property].bind(this.nativeMediaSource_);\n      }\n    }\n\n    // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n    this.duration_ = NaN;\n    Object.defineProperty(this, 'duration', {\n      get: function get() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set(duration) {\n        this.duration_ = duration;\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(this, 'seekable', {\n      get: function get() {\n        if (this.duration_ === Infinity) {\n          return _videoJs2['default'].createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n\n    Object.defineProperty(this, 'readyState', {\n      get: function get() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n\n    Object.defineProperty(this, 'activeSourceBuffers', {\n      get: function get() {\n        return this.activeSourceBuffers_;\n      }\n    });\n\n    // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n    this.sourceBuffers = [];\n\n    this.activeSourceBuffers_ = [];\n\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n    this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0;\n\n      // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n        _this.activeSourceBuffers_.push(sourceBuffer);\n        return;\n      }\n\n      // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n      var disableCombined = false;\n      var disableAudioOnly = true;\n\n      // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n        /* eslinst-enable */\n\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          sourceBuffer.audioDisabled_ = disableAudioOnly;\n          if (disableAudioOnly) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({ action: 'resetCaptions' });\n        }\n      });\n    };\n\n    this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    };\n\n    // Re-emit MediaSource events on the polyfill\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, this);\n\n    // capture the associated player when the MediaSource is\n    // successfully attached\n    this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = _globalDocument2['default'].querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = (0, _videoJs2['default'])(video.parentNode);\n\n      // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_);\n      // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    this.on('sourceended', function (event) {\n      var duration = (0, _addTextTrackData.durationOfVideo)(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    });\n\n    // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n    this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n\n      this.sourceBuffers.length = 0;\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      }\n\n      // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n  }\n\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n  _createClass(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = undefined;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = undefined;\n      var parsedType = (0, _codecUtils.parseContentType)(type);\n\n      // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = (0, _codecUtils.translateLegacyCodecs)(codecs);\n          codecs = codecs.filter(function (codec) {\n            return (0, _codecUtils.isAudioCodec)(codec) || (0, _codecUtils.isVideoCodec)(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new _virtualSourceBuffer2['default'](this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_();\n\n          // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }]);\n\n  return HtmlMediaSource;\n})(_videoJs2['default'].EventTarget);\n\nexports['default'] = HtmlMediaSource;\nmodule.exports = exports['default'];\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./add-text-track-data\":64,\"./codec-utils\":65,\"./virtual-source-buffer\":75,\"global/document\":31,\"global/window\":32}],72:[function(require,module,exports){\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = undefined;\n  var cue = undefined;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i];\n\n    // Remove any overlapping cue\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n\nexports[\"default\"] = removeCuesFromTrack;\nmodule.exports = exports[\"default\"];\n},{}],73:[function(require,module,exports){\n/**\n * @file transmuxer-worker.js\n */\n\n/**\n * videojs-contrib-media-sources\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Handles communication between the browser-world and the mux.js\n * transmuxer running inside of a WebWorker by exposing a simple\n * message-based interface to a Transmuxer object.\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _globalWindow = require('global/window');\n\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\nvar _muxJsLibMp4 = require('mux.js/lib/mp4');\n\nvar _muxJsLibMp42 = _interopRequireDefault(_muxJsLibMp4);\n\n/**\n * Re-emits transmuxer events by converting them into messages to the\n * world outside the worker.\n *\n * @param {Object} transmuxer the transmuxer to wire events on\n * @private\n */\nvar wireTransmuxerEvents = function wireTransmuxerEvents(transmuxer) {\n  transmuxer.on('data', function (segment) {\n    // transfer ownership of the underlying ArrayBuffer\n    // instead of doing a copy to save memory\n    // ArrayBuffers are transferable but generic TypedArrays are not\n    // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n    var initArray = segment.initSegment;\n\n    segment.initSegment = {\n      data: initArray.buffer,\n      byteOffset: initArray.byteOffset,\n      byteLength: initArray.byteLength\n    };\n\n    var typedArray = segment.data;\n\n    segment.data = typedArray.buffer;\n    _globalWindow2['default'].postMessage({\n      action: 'data',\n      segment: segment,\n      byteOffset: typedArray.byteOffset,\n      byteLength: typedArray.byteLength\n    }, [segment.data]);\n  });\n\n  if (transmuxer.captionStream) {\n    transmuxer.captionStream.on('data', function (caption) {\n      _globalWindow2['default'].postMessage({\n        action: 'caption',\n        data: caption\n      });\n    });\n  }\n\n  transmuxer.on('done', function (data) {\n    _globalWindow2['default'].postMessage({ action: 'done' });\n  });\n\n  transmuxer.on('gopInfo', function (gopInfo) {\n    _globalWindow2['default'].postMessage({\n      action: 'gopInfo',\n      gopInfo: gopInfo\n    });\n  });\n};\n\n/**\n * All incoming messages route through this hash. If no function exists\n * to handle an incoming message, then we ignore the message.\n *\n * @class MessageHandlers\n * @param {Object} options the options to initialize with\n */\n\nvar MessageHandlers = (function () {\n  function MessageHandlers(options) {\n    _classCallCheck(this, MessageHandlers);\n\n    this.options = options || {};\n    this.init();\n  }\n\n  /**\n   * Our web wroker interface so that things can talk to mux.js\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   *\n   * @param {Object} self the scope for the web worker\n   */\n\n  /**\n   * initialize our web worker and wire all the events.\n   */\n\n  _createClass(MessageHandlers, [{\n    key: 'init',\n    value: function init() {\n      if (this.transmuxer) {\n        this.transmuxer.dispose();\n      }\n      this.transmuxer = new _muxJsLibMp42['default'].Transmuxer(this.options);\n      wireTransmuxerEvents(this.transmuxer);\n    }\n\n    /**\n     * Adds data (a ts segment) to the start of the transmuxer pipeline for\n     * processing.\n     *\n     * @param {ArrayBuffer} data data to push into the muxer\n     */\n  }, {\n    key: 'push',\n    value: function push(data) {\n      // Cast array buffer to correct type for transmuxer\n      var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n\n      this.transmuxer.push(segment);\n    }\n\n    /**\n     * Recreate the transmuxer so that the next segment added via `push`\n     * start with a fresh transmuxer.\n     */\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.init();\n    }\n\n    /**\n     * Set the value that will be used as the `baseMediaDecodeTime` time for the\n     * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n     * set relative to the first based on the PTS values.\n     *\n     * @param {Object} data used to set the timestamp offset in the muxer\n     */\n  }, {\n    key: 'setTimestampOffset',\n    value: function setTimestampOffset(data) {\n      var timestampOffset = data.timestampOffset || 0;\n\n      this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n    }\n  }, {\n    key: 'setAudioAppendStart',\n    value: function setAudioAppendStart(data) {\n      this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n    }\n\n    /**\n     * Forces the pipeline to finish processing the last segment and emit it's\n     * results.\n     *\n     * @param {Object} data event data, not really used\n     */\n  }, {\n    key: 'flush',\n    value: function flush(data) {\n      this.transmuxer.flush();\n    }\n  }, {\n    key: 'resetCaptions',\n    value: function resetCaptions() {\n      this.transmuxer.resetCaptions();\n    }\n  }, {\n    key: 'alignGopsWith',\n    value: function alignGopsWith(data) {\n      this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n    }\n  }]);\n\n  return MessageHandlers;\n})();\n\nvar TransmuxerWorker = function TransmuxerWorker(self) {\n  self.onmessage = function (event) {\n    if (event.data.action === 'init' && event.data.options) {\n      this.messageHandlers = new MessageHandlers(event.data.options);\n      return;\n    }\n\n    if (!this.messageHandlers) {\n      this.messageHandlers = new MessageHandlers();\n    }\n\n    if (event.data && event.data.action && event.data.action !== 'init') {\n      if (this.messageHandlers[event.data.action]) {\n        this.messageHandlers[event.data.action](event.data);\n      }\n    }\n  };\n};\n\nexports['default'] = function (self) {\n  return new TransmuxerWorker(self);\n};\n\nmodule.exports = exports['default'];\n},{\"global/window\":32,\"mux.js/lib/mp4\":55}],74:[function(require,module,exports){\n(function (global){\n/**\n * @file videojs-contrib-media-sources.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _globalWindow = require('global/window');\n\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\nvar _flashMediaSource = require('./flash-media-source');\n\nvar _flashMediaSource2 = _interopRequireDefault(_flashMediaSource);\n\nvar _htmlMediaSource = require('./html-media-source');\n\nvar _htmlMediaSource2 = _interopRequireDefault(_htmlMediaSource);\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\nvar urlCount = 0;\n\n// ------------\n// Media Source\n// ------------\n\nvar defaults = {\n  // how to determine the MediaSource implementation to use. There\n  // are three available modes:\n  // - auto: use native MediaSources where available and Flash\n  //   everywhere else\n  // - html5: always use native MediaSources\n  // - flash: always use the Flash MediaSource polyfill\n  mode: 'auto'\n};\n\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\n_videoJs2['default'].mediaSources = {};\n\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = _videoJs2['default'].mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({ type: 'sourceopen', swfId: swfId });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!_globalWindow2['default'].MediaSource && !!_globalWindow2['default'].MediaSource.isTypeSupported && _globalWindow2['default'].MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality such as flash and\n * video/mp2t videos. returns an instance of HtmlMediaSource or\n * FlashMediaSource depending on what is supported and what options\n * are passed in.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n * @param {Object} options options to use during setup.\n */\nvar MediaSource = function MediaSource(options) {\n  var settings = _videoJs2['default'].mergeOptions(defaults, options);\n\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  // determine whether HTML MediaSources should be used\n  if (settings.mode === 'html5' || settings.mode === 'auto' && supportsNativeMediaSources()) {\n    return new _htmlMediaSource2['default']();\n  } else if (_videoJs2['default'].getTech('Flash')) {\n    return new _flashMediaSource2['default']();\n  }\n\n  throw new Error('Cannot use Flash or Html5 to create a MediaSource for this video');\n};\n\nexports.MediaSource = MediaSource;\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\nvar URL = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = undefined;\n\n    // use the native MediaSource to generate an object URL\n    if (object instanceof _htmlMediaSource2['default']) {\n      url = _globalWindow2['default'].URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    }\n    // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n    if (!(object instanceof _flashMediaSource2['default'])) {\n      url = _globalWindow2['default'].URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    }\n\n    // build a URL that can be used to map back to the emulated\n    // MediaSource\n    url = objectUrlPrefix + urlCount;\n\n    urlCount++;\n\n    // setup the mapping back to object\n    _videoJs2['default'].mediaSources[url] = object;\n\n    return url;\n  }\n};\n\nexports.URL = URL;\n_videoJs2['default'].MediaSource = MediaSource;\n_videoJs2['default'].URL = URL;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./flash-media-source\":68,\"./html-media-source\":71,\"global/window\":32}],75:[function(require,module,exports){\n(function (global){\n/**\n * @file virtual-source-buffer.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\nvar _createTextTracksIfNecessary = require('./create-text-tracks-if-necessary');\n\nvar _createTextTracksIfNecessary2 = _interopRequireDefault(_createTextTracksIfNecessary);\n\nvar _removeCuesFromTrack = require('./remove-cues-from-track');\n\nvar _removeCuesFromTrack2 = _interopRequireDefault(_removeCuesFromTrack);\n\nvar _addTextTrackData = require('./add-text-track-data');\n\nvar _webwackify = require('webwackify');\n\nvar _webwackify2 = _interopRequireDefault(_webwackify);\n\nvar _transmuxerWorker = require('./transmuxer-worker');\n\nvar _transmuxerWorker2 = _interopRequireDefault(_transmuxerWorker);\n\nvar _codecUtils = require('./codec-utils');\n\nvar resolveTransmuxWorker = function resolveTransmuxWorker() {\n  var result = undefined;\n\n  try {\n    result = require.resolve('./transmuxer-worker');\n  } catch (e) {\n    // no result\n  }\n\n  return result;\n};\n\n// We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function (key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get() {\n          return sourceBuffer[key];\n        },\n        set: function set(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Player} player\n *        The player instance\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, player, mapping) {\n  if (!player || !buffer.length) {\n    return [];\n  }\n\n  // pts value for current time + 3 seconds to give a bit more wiggle room\n  var currentTimePts = Math.ceil((player.currentTime() - mapping + 3) * 90000);\n\n  var i = undefined;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n\nexports.gopsSafeToAlignWith = gopsSafeToAlignWith;\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n\nexports.updateGopBuffer = updateGopBuffer;\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  }\n\n  // clamp remove range start to 0 index\n  j = Math.max(j, 0);\n\n  updatedBuffer.splice(j, i - j + 1);\n\n  return updatedBuffer;\n};\n\nexports.removeGopBuffer = removeGopBuffer;\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\nvar VirtualSourceBuffer = (function (_videojs$EventTarget) {\n  _inherits(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    var _this = this;\n\n    _classCallCheck(this, VirtualSourceBuffer);\n\n    _get(Object.getPrototypeOf(VirtualSourceBuffer.prototype), 'constructor', this).call(this, _videoJs2['default'].EventTarget);\n    this.timestampOffset_ = 0;\n    this.pendingBuffers_ = [];\n    this.bufferUpdating_ = false;\n\n    this.mediaSource_ = mediaSource;\n    this.codecs_ = codecs;\n    this.audioCodec_ = null;\n    this.videoCodec_ = null;\n    this.audioDisabled_ = false;\n    this.appendAudioInitSegment_ = true;\n    this.gopBuffer_ = [];\n    this.timeMapping_ = 0;\n    this.safeAppend_ = _videoJs2['default'].browser.IE_VERSION >= 11;\n\n    var options = {\n      remux: false,\n      alignGopsAtEnd: this.safeAppend_\n    };\n\n    this.codecs_.forEach(function (codec) {\n      if ((0, _codecUtils.isAudioCodec)(codec)) {\n        _this.audioCodec_ = codec;\n      } else if ((0, _codecUtils.isVideoCodec)(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    });\n\n    // append muxed segments to their respective native buffers as\n    // soon as they are available\n    this.transmuxer_ = (0, _webwackify2['default'])(_transmuxerWorker2['default'], resolveTransmuxWorker());\n    this.transmuxer_.postMessage({ action: 'init', options: options });\n\n    this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n    };\n\n    // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n    Object.defineProperty(this, 'timestampOffset', {\n      get: function get() {\n        return this.timestampOffset_;\n      },\n      set: function set(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true;\n\n          // reset gop buffer on timestampoffset as this signals a change in timeline\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0;\n\n          // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    });\n\n    // setting the append window affects both source buffers\n    Object.defineProperty(this, 'appendWindowStart', {\n      get: function get() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    });\n\n    // this buffer is \"updating\" if either of its native buffers are\n    Object.defineProperty(this, 'updating', {\n      get: function get() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    });\n\n    // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n    Object.defineProperty(this, 'buffered', {\n      get: function get() {\n        var start = null;\n        var end = null;\n        var arity = 0;\n        var extents = [];\n        var ranges = [];\n\n        // neither buffer has been created yet\n        if (!this.videoBuffer_ && !this.audioBuffer_) {\n          return _videoJs2['default'].createTimeRange();\n        }\n\n        // only one buffer is configured\n        if (!this.videoBuffer_) {\n          return this.audioBuffer_.buffered;\n        }\n        if (!this.audioBuffer_) {\n          return this.videoBuffer_.buffered;\n        }\n\n        // both buffers are configured\n        if (this.audioDisabled_) {\n          return this.videoBuffer_.buffered;\n        }\n\n        // both buffers are empty\n        if (this.videoBuffer_.buffered.length === 0 && this.audioBuffer_.buffered.length === 0) {\n          return _videoJs2['default'].createTimeRange();\n        }\n\n        // Handle the case where we have both buffers and create an\n        // intersection of the two\n        var videoBuffered = this.videoBuffer_.buffered;\n        var audioBuffered = this.audioBuffer_.buffered;\n        var count = videoBuffered.length;\n\n        // A) Gather up all start and end times\n        while (count--) {\n          extents.push({ time: videoBuffered.start(count), type: 'start' });\n          extents.push({ time: videoBuffered.end(count), type: 'end' });\n        }\n        count = audioBuffered.length;\n        while (count--) {\n          extents.push({ time: audioBuffered.start(count), type: 'start' });\n          extents.push({ time: audioBuffered.end(count), type: 'end' });\n        }\n        // B) Sort them by time\n        extents.sort(function (a, b) {\n          return a.time - b.time;\n        });\n\n        // C) Go along one by one incrementing arity for start and decrementing\n        //    arity for ends\n        for (count = 0; count < extents.length; count++) {\n          if (extents[count].type === 'start') {\n            arity++;\n\n            // D) If arity is ever incremented to 2 we are entering an\n            //    overlapping range\n            if (arity === 2) {\n              start = extents[count].time;\n            }\n          } else if (extents[count].type === 'end') {\n            arity--;\n\n            // E) If arity is ever decremented to 1 we leaving an\n            //    overlapping range\n            if (arity === 1) {\n              end = extents[count].time;\n            }\n          }\n\n          // F) Record overlapping ranges\n          if (start !== null && end !== null) {\n            ranges.push([start, end]);\n            start = null;\n            end = null;\n          }\n        }\n\n        return _videoJs2['default'].createTimeRanges(ranges);\n      }\n    });\n  }\n\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n  _createClass(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment;\n\n      // Cast ArrayBuffer to TypedArray\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n\n      (0, _createTextTracksIfNecessary2['default'])(this, this.mediaSource_, segment);\n\n      // Add the segments to the pendingBuffers array\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      }\n\n      // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n      this.processPendingSegments_();\n      return;\n    }\n\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        }\n\n        // Do nothing if a SourceBuffer of this type already exists\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null;\n\n        // If the mediasource already has a SourceBuffer for the codec\n        // use that\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_'];\n          // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer;\n\n        // Wire up the events to the SourceBuffer\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              }\n              // if the other type if updating we don't trigger\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({ action: 'flush' });\n    }\n\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      }\n\n      // Remove Metadata Cues (id3)\n      (0, _removeCuesFromTrack2['default'])(start, end, this.metadataTrack_);\n\n      // Remove Any Captions\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          (0, _removeCuesFromTrack2['default'])(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      };\n\n      // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n\n        segmentObj[type].initSegment = initSegment;\n\n        // Gather any captions into a single array\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        }\n\n        // Gather any metadata into a single array\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments);\n\n      // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({ type: 'audioinfo', info: sortedSegments.audio.info });\n      }\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({ type: 'videoinfo', info: sortedSegments.video.info });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false;\n\n      // Merge multiple video and audio segments into one and append\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n        // TODO: are video tracks the only ones with text tracks?\n        (0, _addTextTrackData.addTextTrackData)(this, sortedSegments.captions, sortedSegments.metadata);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      }\n\n      // We are no longer in the internal \"updating\" state\n      this.bufferUpdating_ = false;\n    }\n\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = undefined;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes);\n\n        // Combine the individual segments into one large typed-array\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({ action: 'reset' });\n      }\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }]);\n\n  return VirtualSourceBuffer;\n})(_videoJs2['default'].EventTarget);\n\nexports['default'] = VirtualSourceBuffer;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./add-text-track-data\":64,\"./codec-utils\":65,\"./create-text-tracks-if-necessary\":66,\"./remove-cues-from-track\":72,\"./transmuxer-worker\":73,\"webwackify\":76}],76:[function(require,module,exports){\n// By default assume browserify was used to bundle app. These arguments are passed to\n// the module by browserify.\nvar bundleFn = arguments[3];\nvar sources = arguments[4];\nvar cache = arguments[5];\nvar stringify = JSON.stringify;\nvar webpack = false;\n\n// webpackBootstrap\nvar webpackBootstrapFn = function(modules) {\n  // The module cache\n  var installedModules = {};\n\n  // The require function\n  function __webpack_require__(moduleId) {\n\n    // Check if module is in cache\n    if(installedModules[moduleId]) {\n      return installedModules[moduleId].exports;\n    }\n    // Create a new module (and put it into the cache)\n    var module = installedModules[moduleId] = {\n      i: moduleId,\n      l: false,\n      exports: {}\n    };\n\n    // Execute the module function\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n    // Flag the module as loaded\n    module.l = true;\n\n    // Return the exports of the module\n    return module.exports;\n  }\n\n\n  // expose the modules object (__webpack_modules__)\n  __webpack_require__.m = modules;\n\n  // expose the module cache\n  __webpack_require__.c = installedModules;\n\n  // define getter function for harmony exports\n  __webpack_require__.d = function(exports, name, getter) {\n    if(!__webpack_require__.o(exports, name)) {\n      Object.defineProperty(exports, name, {\n        configurable: false,\n        enumerable: true,\n        get: getter\n      });\n    }\n  };\n\n  // getDefaultExport function for compatibility with non-harmony modules\n  __webpack_require__.n = function(module) {\n    var getter = module && module.__esModule ?\n      function getDefault() { return module['default']; } :\n      function getModuleExports() { return module; };\n\n    __webpack_require__.d(getter, 'a', getter);\n    return getter;\n  };\n\n  // Object.prototype.hasOwnProperty.call\n  __webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n  // __webpack_public_path__\n  __webpack_require__.p = \"\";\n\n  // Load entry module and return exports\n  return __webpack_require__(__webpack_require__.s = entryModule);\n}\n\nif (typeof bundleFn === 'undefined') {\n  // Assume this was bundled with webpack and not browserify\n  webpack = true;\n  bundleFn = webpackBootstrapFn;\n  sources = __webpack_modules__;\n}\n\nvar bundleWithBrowserify = function(fn) {\n  // with browserify we must find the module key ourselves\n  var cacheKeys = Object.keys(cache);\n  var fnModuleKey;\n\n  for (var i = 0; i < cacheKeys.length; i++) {\n    var cacheKey = cacheKeys[i];\n    var cacheExports = cache[cacheKey].exports;\n\n    // Using babel as a transpiler to use esmodule, the export will always\n    // be an object with the default export as a property of it. To ensure\n    // the existing api and babel esmodule exports are both supported we\n    // check for both\n    if (cacheExports === fn || cacheExports && cacheExports.default === fn) {\n        fnModuleKey = cacheKey;\n        break;\n    }\n  }\n\n  // if we couldn't find one, lets make one\n  if (!fnModuleKey) {\n    fnModuleKey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n\n    var fnModuleCache = {};\n\n    for (var i = 0; i < cacheKeys.length; i++) {\n      var cacheKey = cacheKeys[i];\n\n      fnModuleCache[cacheKey] = cacheKey;\n    }\n\n    sources[fnModuleKey] = [\n      'function(require,module,exports){' + fn + '(self); }',\n      fnModuleCache\n    ];\n  }\n\n  var entryKey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n  var entryCache = {};\n\n  entryCache[fnModuleKey] = fnModuleKey;\n  sources[entryKey] = [\n    'function(require,module,exports){' +\n    // try to call default if defined to also support babel esmodule exports\n      'var f = require(' + stringify(fnModuleKey) + ');' +\n      '(f.default ? f.default : f)(self);' +\n    '}',\n    entryCache\n  ];\n\n  return '(' + bundleFn + ')({'\n        + Object.keys(sources).map(function(key) {\n            return stringify(key) + ':['\n                + sources[key][0] + ','\n                + stringify(sources[key][1]) + ']';\n        }).join(',')\n        + '},{},[' + stringify(entryKey) + '])';\n};\n\nvar bundleWithWebpack = function(fn, fnModuleId) {\n  var devMode = typeof fnModuleId === 'string';\n  var sourceStrings;\n\n  if (devMode) {\n    sourceStrings = {};\n  } else {\n    sourceStrings = [];\n  }\n\n  Object.keys(sources).forEach(function(sKey) {\n    if (!sources[sKey]) {\n      return;\n    }\n    sourceStrings[sKey] = sources[sKey].toString();\n  });\n\n  var fnModuleExports = __webpack_require__(fnModuleId);\n\n  // Using babel as a transpiler to use esmodule, the export will always\n  // be an object with the default export as a property of it. To ensure\n  // the existing api and babel esmodule exports are both supported we\n  // check for both\n  if (!(fnModuleExports && (fnModuleExports === fn || fnModuleExports.default === fn))) {\n    var fnSourceString = sourceStrings[fnModuleId];\n\n    sourceStrings[fnModuleId] = fnSourceString.substring(0, fnSourceString.length - 1) +\n                                '\\n' + fn.name + '();\\n}';\n  }\n\n  var modulesString;\n\n  if (devMode) {\n    // must escape quotes to support webpack loader options\n    fnModuleId = stringify(fnModuleId);\n    // dev mode in webpack4, modules are passed as an object\n    var mappedSourceStrings = Object.keys(sourceStrings).map(function(sKey) {\n      return stringify(sKey) + ':' + sourceStrings[sKey];\n    });\n\n    modulesString = '{' + mappedSourceStrings.join(',') + '}';\n  } else {\n    modulesString = '[' + sourceStrings.join(',') + ']';\n  }\n\n  return 'var fn = (' + bundleFn.toString().replace('entryModule', fnModuleId) + ')('\n        + modulesString\n        + ');\\n'\n        // not a function when calling a function from the current scope\n        + '(typeof fn === \"function\") && fn(self);';\n\n};\n\nmodule.exports = function webwackify(fn, fnModuleId) {\n  var src;\n\n  if (webpack) {\n    src = bundleWithWebpack(fn, fnModuleId);\n  } else {\n    src = bundleWithBrowserify(fn);\n  }\n\n  var blob = new Blob([src], { type: 'text/javascript' });\n  var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\n  var workerUrl = URL.createObjectURL(blob);\n  var worker = new Worker(workerUrl);\n  worker.objectURL = workerUrl;\n  return worker;\n};\n\n},{}],77:[function(require,module,exports){\n(function (global){\n/**\n * @file videojs-contrib-hls.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-contrib-hls/blob/master/LICENSE\n */\n'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x4, _x5, _x6) { var _again = true; _function: while (_again) { var object = _x4, property = _x5, receiver = _x6; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x4 = parent; _x5 = property; _x6 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _globalDocument = require('global/document');\n\nvar _globalDocument2 = _interopRequireDefault(_globalDocument);\n\nvar _playlistLoader = require('./playlist-loader');\n\nvar _playlistLoader2 = _interopRequireDefault(_playlistLoader);\n\nvar _playlist = require('./playlist');\n\nvar _playlist2 = _interopRequireDefault(_playlist);\n\nvar _xhr = require('./xhr');\n\nvar _xhr2 = _interopRequireDefault(_xhr);\n\nvar _aesDecrypter = require('aes-decrypter');\n\nvar _binUtils = require('./bin-utils');\n\nvar _binUtils2 = _interopRequireDefault(_binUtils);\n\nvar _videojsContribMediaSources = require('videojs-contrib-media-sources');\n\nvar _m3u8Parser = require('m3u8-parser');\n\nvar _m3u8Parser2 = _interopRequireDefault(_m3u8Parser);\n\nvar _videoJs = (typeof window !== \"undefined\" ? window['videojs'] : typeof global !== \"undefined\" ? global['videojs'] : null);\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\nvar _masterPlaylistController = require('./master-playlist-controller');\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _renditionMixin = require('./rendition-mixin');\n\nvar _renditionMixin2 = _interopRequireDefault(_renditionMixin);\n\nvar _globalWindow = require('global/window');\n\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\nvar _playbackWatcher = require('./playback-watcher');\n\nvar _playbackWatcher2 = _interopRequireDefault(_playbackWatcher);\n\nvar _reloadSourceOnError = require('./reload-source-on-error');\n\nvar _reloadSourceOnError2 = _interopRequireDefault(_reloadSourceOnError);\n\nvar _playlistSelectorsJs = require('./playlist-selectors.js');\n\nvar Hls = {\n  PlaylistLoader: _playlistLoader2['default'],\n  Playlist: _playlist2['default'],\n  Decrypter: _aesDecrypter.Decrypter,\n  AsyncStream: _aesDecrypter.AsyncStream,\n  decrypt: _aesDecrypter.decrypt,\n  utils: _binUtils2['default'],\n\n  STANDARD_PLAYLIST_SELECTOR: _playlistSelectorsJs.lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: _playlistSelectorsJs.lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: _playlistSelectorsJs.comparePlaylistBandwidth,\n  comparePlaylistResolution: _playlistSelectorsJs.comparePlaylistResolution,\n\n  xhr: (0, _xhr2['default'])()\n};\n\n// 0.5 MB/s\nvar INITIAL_BANDWIDTH = 4194304;\n\n// Define getter/setters for config properites\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls, prop, {\n    get: function get() {\n      _videoJs2['default'].log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return _config2['default'][prop];\n    },\n    set: function set(value) {\n      _videoJs2['default'].log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        _videoJs2['default'].log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      _config2['default'][prop] = value;\n    }\n  });\n});\n\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n};\n\n// HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\nHls.canPlaySource = function () {\n  return _videoJs2['default'].log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\n/**\n * Whether the browser has built-in HLS support.\n */\nHls.supportsNativeHls = (function () {\n  var video = _globalDocument2['default'].createElement('video');\n\n  // native HLS is definitely not supported if HTML5 video isn't\n  if (!_videoJs2['default'].getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  // HLS manifests can go by many mime-types\n  var canPlay = [\n  // Apple santioned\n  'application/vnd.apple.mpegurl',\n  // Apple sanctioned for backwards compatibility\n  'audio/mpegurl',\n  // Very common\n  'audio/x-mpegurl',\n  // Very common\n  'application/x-mpegurl',\n  // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n\n  return canPlay.some(function (canItPlay) {\n    return (/maybe|probably/i.test(video.canPlayType(canItPlay))\n    );\n  });\n})();\n\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\nHls.isSupported = function () {\n  return _videoJs2['default'].log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component = _videoJs2['default'].getComponent('Component');\n\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = (function (_Component) {\n  _inherits(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    var _this = this;\n\n    _classCallCheck(this, HlsHandler);\n\n    _get(Object.getPrototypeOf(HlsHandler.prototype), 'constructor', this).call(this, tech, options.hls);\n\n    // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = (0, _videoJs2['default'])(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get() {\n            _videoJs2['default'].log.warn('player.hls is deprecated. Use player.tech_.hls instead.');\n            tech.trigger({ type: 'usage', name: 'hls-player-access' });\n            return _this;\n          }\n        });\n      }\n    }\n\n    this.tech_ = tech;\n    this.source_ = source;\n    this.stats = {};\n    this.ignoreNextSeekingEvent_ = false;\n    this.setOptions_();\n\n    // overriding native HLS only works if audio tracks have been emulated\n    // error early if we're misconfigured:\n    if (this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    }\n\n    // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n    this.on(_globalDocument2['default'], ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = _globalDocument2['default'].fullscreenElement || _globalDocument2['default'].webkitFullscreenElement || _globalDocument2['default'].mozFullScreenElement || _globalDocument2['default'].msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.fastQualityChange_();\n      }\n    });\n\n    this.on(this.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n    this.on(this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    this.on(this.tech_, 'play', this.play);\n  }\n\n  /**\n   * The Source Handler object, which informs video.js what additional\n   * MIME types are supported and sets up playback. It is registered\n   * automatically to the appropriate tech based on the capabilities of\n   * the browser it is running in. It is not necessary to use or modify\n   * this object in normal usage.\n   */\n\n  _createClass(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this;\n\n      // defaults\n      this.options_.withCredentials = this.options_.withCredentials || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      // start playlist selection at a reasonable bandwidth for\n      // broadband internet (0.5 MB/s) or mobile (0.0625 MB/s)\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = INITIAL_BANDWIDTH;\n      }\n\n      // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === INITIAL_BANDWIDTH;\n\n      // grab options passed to player.src\n      ['withCredentials', 'bandwidth'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n\n      this.bandwidth = this.options_.bandwidth;\n    }\n\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n  }, {\n    key: 'src',\n    value: function src(_src) {\n      var _this3 = this;\n\n      // do nothing if the src is falsey\n      if (!_src) {\n        return;\n      }\n      this.setOptions_();\n      // add master playlist controller options\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls;\n\n      this.masterPlaylistController_ = new _masterPlaylistController.MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new _playbackWatcher2['default'](_videoJs2['default'].mergeOptions(this.options_, {\n        seekable: function seekable() {\n          return _this3.seekable();\n        }\n      }));\n\n      this.masterPlaylistController_.on('error', function () {\n        var player = _videoJs2['default'].players[_this3.tech_.options_.playerId];\n\n        player.error(_this3.masterPlaylistController_.error);\n      });\n\n      // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls.STANDARD_PLAYLIST_SELECTOR.bind(this);\n\n      this.masterPlaylistController_.selectInitialPlaylist = Hls.INITIAL_PLAYLIST_SELECTOR.bind(this);\n\n      // re-expose some internal objects for backwards compatibility with < v2\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource;\n\n      // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput;\n            // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth;\n            // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = undefined;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n\n            return systemBitrate;\n          },\n          set: function set() {\n            _videoJs2['default'].log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        }\n      });\n\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        (0, _renditionMixin2['default'])(_this3);\n      });\n\n      // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n\n      // In the live case, we need to ignore the very first `seeking` event since\n      // that will be the result of the seek-to-live behavior\n      this.on(this.masterPlaylistController_, 'firstplay', function () {\n        this.ignoreNextSeekingEvent_ = true;\n      });\n\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      });\n\n      // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(_videoJs2['default'].URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = _videoJs2['default'].players[this.tech_.options_.playerId];\n\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n\n    /**\n     * Begin playing the video.\n     */\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n  }, {\n    key: 'duration',\n    value: function duration() {\n      return this.masterPlaylistController_.duration();\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n  }, {\n    key: 'seekable',\n    value: function seekable() {\n      return this.masterPlaylistController_.seekable();\n    }\n\n    /**\n    * Abort all outstanding work and cleanup.\n    */\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n      _get(Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }]);\n\n  return HlsHandler;\n})(Component);\n\nvar HlsSourceHandler = function HlsSourceHandler(mode) {\n  return {\n    canHandleSource: function canHandleSource(srcObj) {\n      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n      var localOptions = _videoJs2['default'].mergeOptions(_videoJs2['default'].options, options);\n\n      // this forces video.js to skip this tech/mode if its not the one we have been\n      // overriden to use, by returing that we cannot handle the source.\n      if (localOptions.hls && localOptions.hls.mode && localOptions.hls.mode !== mode) {\n        return false;\n      }\n      return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n    },\n    handleSource: function handleSource(source, tech) {\n      var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n      var localOptions = _videoJs2['default'].mergeOptions(_videoJs2['default'].options, options, { hls: { mode: mode } });\n\n      if (mode === 'flash') {\n        // We need to trigger this asynchronously to give others the chance\n        // to bind to the event when a source is set at player creation\n        tech.setTimeout(function () {\n          tech.trigger('loadstart');\n        }, 1);\n      }\n\n      tech.hls = new HlsHandler(source, tech, localOptions);\n      tech.hls.xhr = (0, _xhr2['default'])();\n\n      tech.hls.src(source.src);\n      return tech.hls;\n    },\n    canPlayType: function canPlayType(type) {\n      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n      var localOptions = _videoJs2['default'].mergeOptions(_videoJs2['default'].options, options);\n\n      if (HlsSourceHandler.canPlayType(type, localOptions)) {\n        return 'maybe';\n      }\n      return '';\n    }\n  };\n};\n\nHlsSourceHandler.canPlayType = function (type, options) {\n  // No support for IE 10 or below\n  if (_videoJs2['default'].browser.IE_VERSION && _videoJs2['default'].browser.IE_VERSION <= 10) {\n    return false;\n  }\n\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  // favor native HLS support if it's available\n  if (!options.hls.overrideNative && Hls.supportsNativeHls) {\n    return false;\n  }\n  return mpegurlRE.test(type);\n};\n\nif (typeof _videoJs2['default'].MediaSource === 'undefined' || typeof _videoJs2['default'].URL === 'undefined') {\n  _videoJs2['default'].MediaSource = _videojsContribMediaSources.MediaSource;\n  _videoJs2['default'].URL = _videojsContribMediaSources.URL;\n}\n\nvar flashTech = _videoJs2['default'].getTech('Flash');\n\n// register source handlers with the appropriate techs\nif (_videojsContribMediaSources.MediaSource.supportsNativeMediaSources()) {\n  _videoJs2['default'].getTech('Html5').registerSourceHandler(HlsSourceHandler('html5'), 0);\n}\nif (_globalWindow2['default'].Uint8Array && flashTech) {\n  flashTech.registerSourceHandler(HlsSourceHandler('flash'));\n}\n\n_videoJs2['default'].HlsHandler = HlsHandler;\n_videoJs2['default'].HlsSourceHandler = HlsSourceHandler;\n_videoJs2['default'].Hls = Hls;\nif (!_videoJs2['default'].use) {\n  _videoJs2['default'].registerComponent('Hls', Hls);\n}\n_videoJs2['default'].m3u8 = _m3u8Parser2['default'];\n_videoJs2['default'].options.hls = _videoJs2['default'].options.hls || {};\n\nif (_videoJs2['default'].registerPlugin) {\n  _videoJs2['default'].registerPlugin('reloadSourceOnError', _reloadSourceOnError2['default']);\n} else {\n  _videoJs2['default'].plugin('reloadSourceOnError', _reloadSourceOnError2['default']);\n}\n\nmodule.exports = {\n  Hls: Hls,\n  HlsHandler: HlsHandler,\n  HlsSourceHandler: HlsSourceHandler\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./bin-utils\":2,\"./config\":3,\"./master-playlist-controller\":5,\"./playback-watcher\":8,\"./playlist\":11,\"./playlist-loader\":9,\"./playlist-selectors.js\":10,\"./reload-source-on-error\":13,\"./rendition-mixin\":14,\"./xhr\":21,\"aes-decrypter\":25,\"global/document\":31,\"global/window\":32,\"m3u8-parser\":33,\"videojs-contrib-media-sources\":74}]},{},[77])(77)\n});","var trim = require('trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n","/*\n * pkcs7.pad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\n'use strict';\n\nvar PADDING;\n\n/**\n * Returns a new Uint8Array that is padded with PKCS#7 padding.\n * @param plaintext {Uint8Array} the input bytes before encryption\n * @return {Uint8Array} the padded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nmodule.exports = function pad(plaintext) {\n  var padding = PADDING[(plaintext.byteLength % 16) || 0],\n      result = new Uint8Array(plaintext.byteLength + padding.length);\n  result.set(plaintext);\n  result.set(padding, plaintext.byteLength);\n  return result;\n};\n\n// pre-define the padding values\nPADDING = [\n  [16, 16, 16, 16,\n   16, 16, 16, 16,\n   16, 16, 16, 16,\n   16, 16, 16, 16],\n\n  [15, 15, 15, 15,\n   15, 15, 15, 15,\n   15, 15, 15, 15,\n   15, 15, 15],\n\n  [14, 14, 14, 14,\n   14, 14, 14, 14,\n   14, 14, 14, 14,\n   14, 14],\n\n  [13, 13, 13, 13,\n   13, 13, 13, 13,\n   13, 13, 13, 13,\n   13],\n\n  [12, 12, 12, 12,\n   12, 12, 12, 12,\n   12, 12, 12, 12],\n\n  [11, 11, 11, 11,\n   11, 11, 11, 11,\n   11, 11, 11],\n\n  [10, 10, 10, 10,\n   10, 10, 10, 10,\n   10, 10],\n\n  [9, 9, 9, 9,\n   9, 9, 9, 9,\n   9],\n\n  [8, 8, 8, 8,\n   8, 8, 8, 8],\n\n  [7, 7, 7, 7,\n   7, 7, 7],\n\n  [6, 6, 6, 6,\n   6, 6],\n\n  [5, 5, 5, 5,\n   5],\n\n  [4, 4, 4, 4],\n\n  [3, 3, 3],\n\n  [2, 2],\n\n  [1]\n];\n","/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = undefined;\n  var x = undefined;\n  var xInv = undefined;\n  var d = [];\n  var th = [];\n  var x2 = undefined;\n  var x4 = undefined;\n  var x8 = undefined;\n  var s = undefined;\n  var tEnc = undefined;\n  var tDec = undefined;\n\n  // Compute double and third tables\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x;\n\n    // Compute MixColumns\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  }\n\n  // Compactify. Considerable speedup on Firefox.\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n  return tables;\n};\nvar aesTables = null;\n\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = (function () {\n  function AES(key) {\n    _classCallCheck(this, AES);\n\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n    if (!aesTables) {\n      aesTables = precompute();\n    }\n    // then make a copy of that object for use\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = undefined;\n    var j = undefined;\n    var tmp = undefined;\n    var encKey = undefined;\n    var decKey = undefined;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey];\n\n    // schedule encryption keys\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1];\n\n      // apply sbox\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n        // shift rows and add rcon\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    }\n\n    // schedule decryption keys\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n  _createClass(AES, [{\n    key: 'decrypt',\n    value: function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n      var key = this._key[1];\n      // state variables a,b,c,d are loaded with pre-whitened data\n      var a = encrypted0 ^ key[0];\n      var b = encrypted3 ^ key[1];\n      var c = encrypted2 ^ key[2];\n      var d = encrypted1 ^ key[3];\n      var a2 = undefined;\n      var b2 = undefined;\n      var c2 = undefined;\n\n      // key.length === 2 ?\n      var nInnerRounds = key.length / 4 - 2;\n      var i = undefined;\n      var kIndex = 4;\n      var table = this._tables[1];\n\n      // load up the tables\n      var table0 = table[0];\n      var table1 = table[1];\n      var table2 = table[2];\n      var table3 = table[3];\n      var sbox = table[4];\n\n      // Inner rounds. Cribbed from OpenSSL.\n      for (i = 0; i < nInnerRounds; i++) {\n        a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n        b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n        c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n        d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n        kIndex += 4;\n        a = a2;b = b2;c = c2;\n      }\n\n      // Last round.\n      for (i = 0; i < 4; i++) {\n        out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n        a2 = a;a = b;b = c;c = d;d = a2;\n      }\n    }\n  }]);\n\n  return AES;\n})();\n\nexports['default'] = AES;\nmodule.exports = exports['default'];","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","/**\n * mpd-parser\n * @version 0.6.1\n * @copyright 2018 Brightcove, Inc\n * @license Apache-2.0\n */\nimport URLToolkit from 'url-toolkit';\nimport window from 'global/window';\n\nvar version = \"0.6.1\";\n\nvar formatAudioPlaylist = function formatAudioPlaylist(_ref) {\n  var _attributes;\n\n  var attributes = _ref.attributes,\n      segments = _ref.segments;\n\n  var playlist = {\n    attributes: (_attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs\n    }, _attributes['PROGRAM-ID'] = 1, _attributes),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\n\nvar formatVttPlaylist = function formatVttPlaylist(_ref2) {\n  var _attributes2;\n\n  var attributes = _ref2.attributes,\n      segments = _ref2.segments;\n\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodIndex,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }];\n    // targetDuration should be the same duration as the only segment\n    attributes.duration = attributes.sourceDuration;\n  }\n  return {\n    attributes: (_attributes2 = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n};\n\nvar organizeAudioPlaylists = function organizeAudioPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var role = playlist.attributes.role && playlist.attributes.role.value || 'main';\n    var language = playlist.attributes.lang || '';\n\n    var label = 'main';\n\n    if (language) {\n      label = playlist.attributes.lang + ' (' + role + ')';\n    }\n\n    // skip if we already have the highest quality audio for a language\n    if (a[label] && a[label].playlists[0].attributes.BANDWIDTH > playlist.attributes.bandwidth) {\n      return a;\n    }\n\n    a[label] = {\n      language: language,\n      autoselect: true,\n      'default': role === 'main',\n      playlists: [formatAudioPlaylist(playlist)],\n      uri: ''\n    };\n\n    return a;\n  }, {});\n};\n\nvar organizeVttPlaylists = function organizeVttPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var label = playlist.attributes.lang || 'text';\n\n    // skip if we already have subtitles\n    if (a[label]) {\n      return a;\n    }\n\n    a[label] = {\n      language: label,\n      'default': false,\n      autoselect: false,\n      playlists: [formatVttPlaylist(playlist)],\n      uri: ''\n    };\n\n    return a;\n  }, {});\n};\n\nvar formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n  var _attributes3;\n\n  var attributes = _ref3.attributes,\n      segments = _ref3.segments;\n\n  var playlist = {\n    attributes: (_attributes3 = {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes3['PROGRAM-ID'] = 1, _attributes3),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\n\nvar toM3u8 = function toM3u8(dashPlaylists) {\n  var _mediaGroups;\n\n  if (!dashPlaylists.length) {\n    return {};\n  }\n\n  // grab all master attributes\n  var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n      duration = _dashPlaylists$0$attr.sourceDuration,\n      _dashPlaylists$0$attr2 = _dashPlaylists$0$attr.minimumUpdatePeriod,\n      minimumUpdatePeriod = _dashPlaylists$0$attr2 === undefined ? 0 : _dashPlaylists$0$attr2;\n\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.contentType === 'video';\n  };\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.contentType === 'audio';\n  };\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n\n  var videoPlaylists = dashPlaylists.filter(videoOnly).map(formatVideoPlaylist);\n  var audioPlaylists = dashPlaylists.filter(audioOnly);\n  var vttPlaylists = dashPlaylists.filter(vttOnly);\n\n  var master = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: (_mediaGroups = {\n      AUDIO: {},\n      VIDEO: {}\n    }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n    uri: '',\n    duration: duration,\n    playlists: videoPlaylists,\n    minimumUpdatePeriod: minimumUpdatePeriod * 1000\n  };\n\n  if (audioPlaylists.length) {\n    master.mediaGroups.AUDIO.audio = organizeAudioPlaylists(audioPlaylists);\n  }\n\n  if (vttPlaylists.length) {\n    master.mediaGroups.SUBTITLES.subs = organizeVttPlaylists(vttPlaylists);\n  }\n\n  return master;\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar isObject = function isObject(obj) {\n  return !!obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, objects = Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.reduce(function (result, source) {\n\n    Object.keys(source).forEach(function (key) {\n\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  }\n\n  // if the base URL is relative then combine with the current location\n  if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = URLToolkit.buildAbsoluteURL(window.location.href, baseUrl);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls, follows\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\nvar urlTypeToSegment = function urlTypeToSegment(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === undefined ? '' : _ref$baseUrl,\n      _ref$source = _ref.source,\n      source = _ref$source === undefined ? '' : _ref$source,\n      _ref$range = _ref.range,\n      range = _ref$range === undefined ? '' : _ref$range;\n\n  var init = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range) {\n    var ranges = range.split('-');\n    var startRange = parseInt(ranges[0], 10);\n    var endRange = parseInt(ranges[1], 10);\n\n    init.byterange = {\n      length: endRange - startRange,\n      offset: startRange\n    };\n  }\n\n  return init;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nvar getLiveRValue = function getLiveRValue(attributes, time, duration) {\n  var NOW = attributes.NOW,\n      clientOffset = attributes.clientOffset,\n      availabilityStartTime = attributes.availabilityStartTime,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n      _attributes$start = attributes.start,\n      start = _attributes$start === undefined ? 0 : _attributes$start,\n      _attributes$minimumUp = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp === undefined ? 0 : _attributes$minimumUp;\n\n  var now = (NOW + clientOffset) / 1000;\n  var periodStartWC = availabilityStartTime + start;\n  var periodEndWC = now + minimumUpdatePeriod;\n  var periodDuration = periodEndWC - periodStartWC;\n\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === undefined ? 'static' : _attributes$type,\n      _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp2 === undefined ? 0 : _attributes$minimumUp2,\n      _attributes$media = attributes.media,\n      media = _attributes$media === undefined ? '' : _attributes$media,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale2 = attributes.timescale,\n      timescale = _attributes$timescale2 === undefined ? 1 : _attributes$timescale2,\n      _attributes$startNumb = attributes.startNumber,\n      startNumber = _attributes$startNumb === undefined ? 1 : _attributes$startNumb,\n      timeline = attributes.periodIndex;\n\n  var segments = [];\n  var time = -1;\n\n  for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    var S = segmentTimeline[sIndex];\n    var duration = S.d;\n    var repeat = S.r || 0;\n    var segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n\n      time = segmentTime;\n    }\n\n    var count = void 0;\n\n    if (repeat < 0) {\n      var nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    var end = startNumber + segments.length + count;\n    var number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({ number: number, duration: duration / timescale, time: time, timeline: timeline });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nvar range = function range(start, end) {\n  var result = [];\n\n  for (var i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\n\nvar flatten = function flatten(lists) {\n  return lists.reduce(function (x, y) {\n    return x.concat(y);\n  }, []);\n};\n\nvar from = function from(list) {\n  if (!list.length) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\n\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\nvar segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  'static': function _static(attributes) {\n    var duration = attributes.duration,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n        sourceDuration = attributes.sourceDuration;\n\n\n    return {\n      start: 0,\n      end: Math.ceil(sourceDuration / (duration / timescale))\n    };\n  },\n\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic: function dynamic(attributes) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === undefined ? 1 : _attributes$timescale2,\n        duration = attributes.duration,\n        _attributes$start = attributes.start,\n        start = _attributes$start === undefined ? 0 : _attributes$start,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === undefined ? 0 : _attributes$minimumUp,\n        _attributes$timeShift = attributes.timeShiftBufferDepth,\n        timeShiftBufferDepth = _attributes$timeShift === undefined ? Infinity : _attributes$timeShift;\n\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + start;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    var segmentCount = Math.ceil(periodDuration * timescale / duration);\n    var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n\n    return {\n      start: Math.max(0, availableStart),\n      end: Math.min(segmentCount, availableEnd)\n    };\n  }\n};\n\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\nvar toSegments = function toSegments(attributes) {\n  return function (number, index) {\n    var duration = attributes.duration,\n        _attributes$timescale3 = attributes.timescale,\n        timescale = _attributes$timescale3 === undefined ? 1 : _attributes$timescale3,\n        periodIndex = attributes.periodIndex,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === undefined ? 1 : _attributes$startNumb;\n\n\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodIndex,\n      time: index * duration\n    };\n  };\n};\n\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseByDuration = function parseByDuration(attributes) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === undefined ? 'static' : _attributes$type,\n      duration = attributes.duration,\n      _attributes$timescale4 = attributes.timescale,\n      timescale = _attributes$timescale4 === undefined ? 1 : _attributes$timescale4,\n      sourceDuration = attributes.sourceDuration;\n\n  var _segmentRange$type = segmentRange[type](attributes),\n      start = _segmentRange$type.start,\n      end = _segmentRange$type.end;\n\n  var segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    var index = segments.length - 1;\n\n    // final segment may be less than full segment duration\n    segments[index].duration = sourceDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\nvar identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\nvar identifierReplacement = function identifierReplacement(values) {\n  return function (match, identifier, format, width) {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n\n    var value = '' + values[identifier];\n\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n\n    if (value.length >= width) {\n      return value;\n    }\n\n    return '' + new Array(width - value.length + 1).join('0') + value;\n  };\n};\n\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\nvar constructTemplateUrl = function constructTemplateUrl(url, values) {\n  return url.replace(identifierPattern, identifierReplacement(values));\n};\n\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodIndex\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\nvar segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n  var templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n\n  var _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? { sourceURL: '', range: '' } : _attributes$initializ;\n\n\n  var mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n\n  var segments = parseTemplateInfo(attributes, segmentTimeline);\n\n  return segments.map(function (segment) {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n\n    var uri = constructTemplateUrl(attributes.media || '', templateValues);\n\n    return {\n      uri: uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number\n    };\n  });\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\nvar SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? {} : _attributes$initializ;\n\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n\n  segment.map = initSegment;\n\n  return segment;\n};\n\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\nvar segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n  var duration = attributes.duration,\n      _attributes$segmentUr = attributes.segmentUrls,\n      segmentUrls = _attributes$segmentUr === undefined ? [] : _attributes$segmentUr;\n\n  // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n    return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n  });\n  var segmentTimeInfo = void 0;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  var segments = segmentTimeInfo.map(function (segmentTime, index) {\n    if (segmentUrlMap[index]) {\n      var segment = segmentUrlMap[index];\n\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      return segment;\n    }\n    // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n  }).filter(function (segment) {\n    return segment;\n  });\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\nvar segmentsFromBase = function segmentsFromBase(attributes) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? {} : _attributes$initializ,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n      _attributes$indexRang = attributes.indexRange,\n      indexRange = _attributes$indexRang === undefined ? '' : _attributes$indexRang,\n      duration = attributes.duration;\n\n  // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({ baseUrl: baseUrl, source: baseUrl, range: indexRange });\n\n  segment.map = initSegment;\n\n  // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n  if (duration) {\n    var segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration / timescale;\n    segment.timeline = 0;\n  }\n\n  // This is used for mediaSequence\n  segment.number = 0;\n\n  return [segment];\n};\n\nvar generateSegments = function generateSegments(_ref) {\n  var attributes = _ref.attributes,\n      segmentInfo = _ref.segmentInfo;\n\n  var segmentAttributes = void 0;\n  var segmentsFn = void 0;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  if (!segmentsFn) {\n    return { attributes: attributes };\n  }\n\n  var segments = segmentsFn(segmentAttributes, segmentInfo.timeline);\n\n  // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n  if (segmentAttributes.duration) {\n    var _segmentAttributes = segmentAttributes,\n        duration = _segmentAttributes.duration,\n        _segmentAttributes$ti = _segmentAttributes.timescale,\n        timescale = _segmentAttributes$ti === undefined ? 1 : _segmentAttributes$ti;\n\n\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce(function (max, segment) {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  return {\n    attributes: segmentAttributes,\n    segments: segments\n  };\n};\n\nvar toPlaylists = function toPlaylists(representations) {\n  return representations.map(generateSegments);\n};\n\nvar findChildren = function findChildren(element, name) {\n  return from(element.childNodes).filter(function (_ref) {\n    var tagName = _ref.tagName;\n    return tagName === name;\n  });\n};\n\nvar getContent = function getContent(element) {\n  return element.textContent.trim();\n};\n\nvar parseDuration = function parseDuration(str) {\n  var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  var SECONDS_IN_DAY = 24 * 60 * 60;\n  var SECONDS_IN_HOUR = 60 * 60;\n  var SECONDS_IN_MIN = 60;\n\n  // P10Y10M10DT10H10M10.1S\n  var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  var match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  var _match$slice = match.slice(1),\n      year = _match$slice[0],\n      month = _match$slice[1],\n      day = _match$slice[2],\n      hour = _match$slice[3],\n      minute = _match$slice[4],\n      second = _match$slice[5];\n\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\n\nvar parseDate = function parseDate(str) {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/;\n\n  // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\n// TODO: maybe order these in some way that makes it easy to find specific attributes\nvar parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration: function mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime: function availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start: function start(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width: function width(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height: function height(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth: function bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber: function startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The aprsed timescale\n   */\n  timescale: function timescale(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration: function duration(value) {\n    var parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d: function d(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t: function t(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r: function r(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT: function DEFAULT(value) {\n    return value;\n  }\n};\n\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\nvar parseAttributes = function parseAttributes(el) {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce(function (a, e) {\n    var parseFn = parsers[e.name] || parsers.DEFAULT;\n\n    a[e.name] = parseFn(e.value);\n\n    return a;\n  }, {});\n};\n\nfunction decodeB64ToUint8Array(b64Text) {\n  var decodedString = window.atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n  return array;\n}\n\nvar keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\nvar buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} timeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\nvar getSegmentInformation = function getSegmentInformation(adaptationSet) {\n  var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n    return merge({ tag: 'SegmentURL' }, parseAttributes(s));\n  });\n  var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  var segmentTimelineParentNode = segmentList || segmentTemplate;\n  var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0];\n\n  // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n  var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = { sourceURL: template.initialization };\n  }\n\n  var segmentInfo = {\n    template: template,\n    timeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n      return parseAttributes(s);\n    }),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls: segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n\n  Object.keys(segmentInfo).forEach(function (key) {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n\n  return segmentInfo;\n};\n\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\nvar inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n  return function (representation) {\n    var repBaseUrlElements = findChildren(representation, 'BaseURL');\n    var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n    var representationSegmentInfo = getSegmentInformation(representation);\n\n    return repBaseUrls.map(function (baseUrl) {\n      return {\n        segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge(attributes, { baseUrl: baseUrl })\n      };\n    });\n  };\n};\n\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\nvar generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n  return contentProtectionNodes.reduce(function (acc, node) {\n    var attributes = parseAttributes(node);\n    var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = { attributes: attributes };\n\n      var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        var pssh = getContent(psshNode);\n        var psshBuffer = pssh && decodeB64ToUint8Array(pssh);\n\n        acc[keySystem].pssh = psshBuffer;\n      }\n    }\n\n    return acc;\n  }, {});\n};\n\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\nvar toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n  return function (adaptationSet) {\n    var adaptationSetAttributes = parseAttributes(adaptationSet);\n    var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    var role = findChildren(adaptationSet, 'Role')[0];\n    var roleAttributes = { role: parseAttributes(role) };\n\n    var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n\n    var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n    if (Object.keys(contentProtection).length) {\n      attrs = merge(attrs, { contentProtection: contentProtection });\n    }\n\n    var segmentInfo = getSegmentInformation(adaptationSet);\n    var representations = findChildren(adaptationSet, 'Representation');\n    var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n};\n\n/**\n * Maps an Period node to a list of Representation inforamtion objects for all\n * AdaptationSet nodes contained within the Period\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {Node} period\n *        Period node from the mpd\n * @param {number} periodIndex\n *        Index of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\nvar toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n  return function (period, periodIndex) {\n    var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period, 'BaseURL'));\n    var periodAtt = parseAttributes(period);\n    var periodAttributes = merge(mpdAttributes, periodAtt, { periodIndex: periodIndex });\n    var adaptationSets = findChildren(period, 'AdaptationSet');\n    var periodSegmentInfo = getSegmentInformation(period);\n\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n};\n\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\nvar inheritAttributes = function inheritAttributes(mpd) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$manifestUri = options.manifestUri,\n      manifestUri = _options$manifestUri === undefined ? '' : _options$manifestUri,\n      _options$NOW = options.NOW,\n      NOW = _options$NOW === undefined ? Date.now() : _options$NOW,\n      _options$clientOffset = options.clientOffset,\n      clientOffset = _options$clientOffset === undefined ? 0 : _options$clientOffset;\n\n  var periods = findChildren(mpd, 'Period');\n\n  if (periods.length !== 1) {\n    // TODO add support for multiperiod\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  var mpdAttributes = parseAttributes(mpd);\n  var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL'));\n\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n\n  return flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)));\n};\n\nvar stringToMpdXml = function stringToMpdXml(manifestString) {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  var parser = new window.DOMParser();\n  var xml = parser.parseFromString(manifestString, 'application/xml');\n  var mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\nvar parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n  var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  var attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nvar VERSION = version;\n\nvar parse = function parse(manifestString, options) {\n  return toM3u8(toPlaylists(inheritAttributes(stringToMpdXml(manifestString), options)));\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\nvar parseUTCTiming = function parseUTCTiming(manifestString) {\n  return parseUTCTimingScheme(stringToMpdXml(manifestString));\n};\n\nexport { VERSION, parse, parseUTCTiming };\n","/**\n * @file async-stream.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _stream = require('./stream');\n\nvar _stream2 = _interopRequireDefault(_stream);\n\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\nvar AsyncStream = (function (_Stream) {\n  _inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    _classCallCheck(this, AsyncStream);\n\n    _get(Object.getPrototypeOf(AsyncStream.prototype), 'constructor', this).call(this, _stream2['default']);\n    this.jobs = [];\n    this.delay = 1;\n    this.timeout_ = null;\n  }\n\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n  _createClass(AsyncStream, [{\n    key: 'processJob_',\n    value: function processJob_() {\n      this.jobs.shift()();\n      if (this.jobs.length) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      } else {\n        this.timeout_ = null;\n      }\n    }\n\n    /**\n     * push a job into the stream\n     *\n     * @param {Function} job the job to push into the stream\n     */\n  }, {\n    key: 'push',\n    value: function push(job) {\n      this.jobs.push(job);\n      if (!this.timeout_) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      }\n    }\n  }]);\n\n  return AsyncStream;\n})(_stream2['default']);\n\nexports['default'] = AsyncStream;\nmodule.exports = exports['default'];","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [\n  96000,\n  88200,\n  64000,\n  48000,\n  44100,\n  32000,\n  24000,\n  22050,\n  16000,\n  12000,\n  11025,\n  8000,\n  7350\n];\n\nvar parseSyncSafeInteger = function(data) {\n  return (data[0] << 21) |\n          (data[1] << 14) |\n          (data[2] << 7) |\n          (data[3]);\n};\n\n// return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\nvar percentEncode = function(bytes, start, end) {\n  var i, result = '';\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n  return result;\n};\n\n// return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nvar parseIso88591 = function(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function(header, byteIndex) {\n  var\n    returnSize = (header[byteIndex + 6] << 21) |\n                 (header[byteIndex + 7] << 14) |\n                 (header[byteIndex + 8] << 7) |\n                 (header[byteIndex + 9]),\n    flags = header[byteIndex + 5],\n    footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function(header, byteIndex) {\n  var\n    lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n    middle = header[byteIndex + 4] << 3,\n    highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n  return (highTwo | middle) | lowThree;\n};\n\nvar parseType = function(header, byteIndex) {\n  if ((header[byteIndex] === 'I'.charCodeAt(0)) &&\n      (header[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n      (header[byteIndex + 2] === '3'.charCodeAt(0))) {\n    return 'timed-metadata';\n  } else if ((header[byteIndex] & 0xff === 0xff) &&\n             ((header[byteIndex + 1] & 0xf0) === 0xf0)) {\n    return 'audio';\n  }\n  return null;\n};\n\nvar parseSampleRate = function(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function(packet) {\n  var frameStart, frameSize, frame, frameHeader;\n\n  // find the start of the first frame and the end of the tag\n  frameStart = 10;\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  }\n\n  // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n    if (frameSize < 1) {\n      return null;\n    }\n    frameHeader = String.fromCharCode(packet[frameStart],\n                                      packet[frameStart + 1],\n                                      packet[frameStart + 2],\n                                      packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = ((d[3] & 0x01)  << 30) |\n                       (d[4]  << 22) |\n                       (d[5] << 14) |\n                       (d[6] << 6) |\n                       (d[7] >>> 2);\n            size *= 4;\n            size += d[7] & 0x03;\n\n            return size;\n          }\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n  return null;\n};\n\nmodule.exports = {\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\n * @license\n * Video.js 6.12.1 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar window = _interopDefault(require('global/window'));\nvar document = _interopDefault(require('global/document'));\nvar tsml = _interopDefault(require('tsml'));\nvar safeParseTuple = _interopDefault(require('safe-json-parse/tuple'));\nvar xhr = _interopDefault(require('xhr'));\nvar vtt = _interopDefault(require('videojs-vtt.js'));\n\nvar version = \"6.12.1\";\n\n/**\n * @file browser.js\n * @module browser\n */\nvar USER_AGENT = window.navigator && window.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n\n/*\n * Device is an iPhone\n *\n * @type {Boolean}\n * @constant\n * @private\n */\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n  return null;\n}();\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n  return null;\n}();\n\n// Old Android is defined as Version older than 2.3, and requiring a webkit version of the android browser\nvar IS_OLD_ANDROID = IS_ANDROID && /webkit/i.test(USER_AGENT) && ANDROID_VERSION < 2.3;\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n  return null;\n}();\nvar IS_IE8 = /MSIE\\s8\\.0/.test(USER_AGENT);\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window || window.navigator.maxTouchPoints || window.DocumentTouch && window.document instanceof window.DocumentTouch);\n\nvar BACKGROUND_SIZE_SUPPORTED = isReal() && 'backgroundSize' in window.document.createElement('video').style;\n\nvar browser = (Object.freeze || Object)({\n\tIS_IPAD: IS_IPAD,\n\tIS_IPHONE: IS_IPHONE,\n\tIS_IPOD: IS_IPOD,\n\tIS_IOS: IS_IOS,\n\tIOS_VERSION: IOS_VERSION,\n\tIS_ANDROID: IS_ANDROID,\n\tANDROID_VERSION: ANDROID_VERSION,\n\tIS_OLD_ANDROID: IS_OLD_ANDROID,\n\tIS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n\tIS_FIREFOX: IS_FIREFOX,\n\tIS_EDGE: IS_EDGE,\n\tIS_CHROME: IS_CHROME,\n\tCHROME_VERSION: CHROME_VERSION,\n\tIS_IE8: IS_IE8,\n\tIE_VERSION: IE_VERSION,\n\tIS_SAFARI: IS_SAFARI,\n\tIS_ANY_SAFARI: IS_ANY_SAFARI,\n\tTOUCH_ENABLED: TOUCH_ENABLED,\n\tBACKGROUND_SIZE_SUPPORTED: BACKGROUND_SIZE_SUPPORTED\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar taggedTemplateLiteralLoose = function (strings, raw) {\n  strings.raw = raw;\n  return strings;\n};\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\nfunction reduce(object, fn) {\n  var initial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\nfunction assign(target) {\n  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n\n  return target;\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isObject(value) {\n  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file log.js\n * @module log\n */\nvar log = void 0;\n\n// This is the private tracking variable for logging level.\nvar level = 'info';\n\n// This is the private tracking variable for the logging history.\nvar history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n *\n * @param  {boolean} [stringify]\n *         By default, only old IEs should get console argument stringification,\n *         but this is exposed as a parameter to facilitate testing.\n */\nvar logByType = function logByType(type, args) {\n  var stringify = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !!IE_VERSION && IE_VERSION < 11;\n\n  var lvl = log.levels[level];\n  var lvlRegExp = new RegExp('^(' + lvl + ')$');\n\n  if (type !== 'log') {\n\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  }\n\n  // Add a clone of the args at this point to history.\n  if (history) {\n    history.push([].concat(args));\n  }\n\n  // Add console prefix after adding to history.\n  args.unshift('VIDEOJS:');\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n  if (!window.console) {\n    return;\n  }\n\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  var fn = window.console[type];\n\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window.console.info || window.console.log;\n  }\n\n  // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n\n  // IEs previous to 11 log objects uselessly as \"[object Object]\"; so, JSONify\n  // objects and arrays for those less-capable browsers.\n  if (stringify) {\n    args = args.map(function (a) {\n      if (isObject(a) || Array.isArray(a)) {\n        try {\n          return JSON.stringify(a);\n        } catch (x) {\n          return String(a);\n        }\n      }\n\n      // Cast to string before joining, so we get null and undefined explicitly\n      // included in output (as we would in a modern console).\n      return String(a);\n    }).join(' ');\n  }\n\n  // Old IE versions do not allow .apply() for console methods (they are\n  // reported as objects rather than functions).\n  if (!fn.apply) {\n    fn(args);\n  } else {\n    fn[Array.isArray(args) ? 'apply' : 'call'](window.console, args);\n  }\n};\n\n/**\n * Logs plain debug messages. Similar to `console.log`.\n *\n * @class\n * @param    {Mixed[]} args\n *           One or more messages or objects that should be logged.\n */\nlog = function log() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  logByType('log', args);\n};\n\n/**\n * Enumeration of available logging levels, where the keys are the level names\n * and the values are `|`-separated strings containing logging methods allowed\n * in that logging level. These strings are used to create a regular expression\n * matching the function name being called.\n *\n * Levels provided by video.js are:\n *\n * - `off`: Matches no calls. Any value that can be cast to `false` will have\n *   this effect. The most restrictive.\n * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n *   `log.warn`, and `log.error`).\n * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n * - `warn`: Matches `log.warn` and `log.error` calls.\n * - `error`: Matches only `log.error` calls.\n *\n * @type {Object}\n */\nlog.levels = {\n  all: 'debug|log|warn|error',\n  off: '',\n  debug: 'debug|log|warn|error',\n  info: 'log|warn|error',\n  warn: 'warn|error',\n  error: 'error',\n  DEFAULT: level\n};\n\n/**\n * Get or set the current logging level. If a string matching a key from\n * {@link log.levels} is provided, acts as a setter. Regardless of argument,\n * returns the current logging level.\n *\n * @param  {string} [lvl]\n *         Pass to set a new logging level.\n *\n * @return {string}\n *         The current logging level.\n */\nlog.level = function (lvl) {\n  if (typeof lvl === 'string') {\n    if (!log.levels.hasOwnProperty(lvl)) {\n      throw new Error('\"' + lvl + '\" in not a valid log level');\n    }\n    level = lvl;\n  }\n  return level;\n};\n\n/**\n * Returns an array containing everything that has been logged to the history.\n *\n * This array is a shallow clone of the internal history record. However, its\n * contents are _not_ cloned; so, mutating objects inside this array will\n * mutate them in history.\n *\n * @return {Array}\n */\nlog.history = function () {\n  return history ? [].concat(history) : [];\n};\n\n/**\n * Clears the internal history tracking, but does not prevent further history\n * tracking.\n */\nlog.history.clear = function () {\n  if (history) {\n    history.length = 0;\n  }\n};\n\n/**\n * Disable history tracking if it is currently enabled.\n */\nlog.history.disable = function () {\n  if (history !== null) {\n    history.length = 0;\n    history = null;\n  }\n};\n\n/**\n * Enable history tracking if it is currently disabled.\n */\nlog.history.enable = function () {\n  if (history === null) {\n    history = [];\n  }\n};\n\n/**\n * Logs error messages. Similar to `console.error`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as an error\n */\nlog.error = function () {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return logByType('error', args);\n};\n\n/**\n * Logs warning messages. Similar to `console.warn`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as a warning.\n */\nlog.warn = function () {\n  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  return logByType('warn', args);\n};\n\n/**\n * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n * log if `console.debug` is not available\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as debug.\n */\nlog.debug = function () {\n  for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    args[_key4] = arguments[_key4];\n  }\n\n  return logByType('debug', args);\n};\n\nvar log$1 = log;\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n/**\n * A safe getComputedStyle with an IE8 fallback.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a null-check to\n * make sure  that the player doesn't break in these cases.\n *\n * @param {Element} el\n *        The element you want the computed style of\n *\n * @param {string} prop\n *        The property name you want\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n *\n * @static\n * @const\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window.getComputedStyle === 'function') {\n    var cs = window.getComputedStyle(el);\n\n    return cs ? cs[prop] : '';\n  }\n\n  return el.currentStyle[prop] || '';\n}\n\nvar _templateObject = taggedTemplateLiteralLoose(['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.'], ['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.']);\n\n/**\n * @file dom.js\n * @module dom\n */\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @param {string} str\n *        The string to check\n *\n * @return {boolean}\n *         - True if the string is non-blank\n *         - False otherwise\n *\n */\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @param {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n *\n */\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @param {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n\n/**\n * Whether the current DOM interface appears to be real.\n *\n * @return {Boolean}\n */\nfunction isReal() {\n  return (\n\n    // Both document and window will never be undefined thanks to `global`.\n    document === window.document &&\n\n    // In IE < 9, DOM methods return \"object\" as their type, so all we can\n    // confidently check is that it exists.\n    typeof document.createElement !== 'undefined'\n  );\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param {Mixed} value\n *        The thing to check\n *\n * @return {boolean}\n *         - True if it is a DOM element\n *         - False otherwise\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *\n */\nfunction isInFrame() {\n\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window.parent !== window.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @param {string} method\n *         The method to create the query with.\n *\n * @return {Function}\n *         The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties.\n *\n * @param {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {String|Element|TextNode|Array|Function} [content]\n *         Contents for the element (see: {@link dom:normalizeContent})\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl() {\n  var tagName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n  var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var content = arguments[3];\n\n  var el = document.createElement(tagName);\n\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName];\n\n    // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log$1.warn(tsml(_templateObject, propName, val));\n      el.setAttribute(propName, val);\n\n      // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param {Element} el\n *        The element to add text content into\n *\n * @param {string} text\n *        The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a CSS class\n *\n * @param {Element} element\n *        Element to check\n *\n * @param {string} classToCheck\n *        Class name to check for\n *\n * @return {boolean}\n *         - True if the element had the class\n *         - False otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n  return classRegExp(classToCheck).test(element.className);\n}\n\n/**\n * Add a CSS class name to an element\n *\n * @param {Element} element\n *        Element to add class name to.\n *\n * @param {string} classToAdd\n *        Class name to add.\n *\n * @return {Element}\n *         The dom element with the added class name.\n */\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd);\n\n    // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n\n/**\n * Remove a CSS class name from an element\n *\n * @param {Element} element\n *        Element to remove a class name from.\n *\n * @param {string} classToRemove\n *        Class name to remove\n *\n * @return {Element}\n *         The dom element with class name removed.\n */\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n\n/**\n * The callback definition for toggleElClass.\n *\n * @callback Dom~PredicateCallback\n * @param {Element} element\n *        The DOM element of the Component.\n *\n * @param {string} classToToggle\n *        The `className` that wants to be toggled\n *\n * @return {boolean|undefined}\n *         - If true the `classToToggle` will get added to `element`.\n *         - If false the `classToToggle` will get removed from `element`.\n *         - If undefined this callback will be ignored\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param {Element} element\n *        The element to toggle a class name on.\n *\n * @param {string} classToToggle\n *        The class that should be toggled\n *\n * @param {boolean|PredicateCallback} [predicate]\n *        See the return value for {@link Dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n\n  // This CANNOT use `classList` internally because IE does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  }\n\n  // If the necessary class operation matches the current state of the\n  // element, no action is required.\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @param {Element} tag\n *        Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element.\n */\nfunction getAttributes(tag) {\n  var obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but older browsers\n  // won't know about HTML5 boolean attributes that we still read from\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to get the value of\n *\n * @return {string}\n *         value of the attribute\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to set\n *\n * @param {string} value\n *        Value to set the attribute to\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to remove\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text while dragging controls\n */\nfunction blockTextSelection() {\n  document.body.focus();\n  document.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking\n */\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n\n/**\n * The postion of a DOM element on the page.\n *\n * @typedef {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left\n *\n * @property {number} top\n *           Pixels on top\n */\n\n/**\n * Offset Left.\n * getBoundingClientRect technique from\n * John Resig\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param {Element} el\n *        Element from which to get offset\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  var box = void 0;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop;\n\n  // Android sometimes returns slightly off decimal values, so need to round\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n\n/**\n * x and y coordinates for a dom element or mouse pointer\n *\n * @typedef {Object} Dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get pointer position in element\n * Returns an object with x and y coordinates.\n * The base on the coordinates are the bottom left of the element.\n *\n * @param {Element} el\n *        Element on which to get the pointer position on\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {Dom~Coordinates}\n *         A Coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param {Mixed} value\n *        Check if this value is a text node.\n *\n * @return {boolean}\n *         - True if it is a text node\n *         - False otherwise\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param {Element} el\n *        The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but protects\n * from falling into the trap of simply writing to `innerHTML`, which is\n * an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        - String: Normalized into a text node.\n *        - Element/TextNode: Passed through.\n *        - Array: A one-dimensional array of strings, elements, nodes, or functions\n *          (which return single strings, elements, or nodes).\n *        - Function: If the sole argument, is expected to produce a string, element,\n *          node, or array as defined above.\n *\n * @return {Array}\n *         All of the content that was passed in normalized.\n */\nfunction normalizeContent(content) {\n\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param {Element} el\n *        Element to append normalized content to.\n *\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with inserted normalized content.\n *\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if event was a single left click\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {boolean}\n *         - True if a left click\n *         - False if not a left click\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  if (IE_VERSION === 9) {\n    // Ignore IE9\n\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *        A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param {Element|String} [context=document]\n *        A DOM element within which to query. Can also be a selector\n *        string in which case the first matching element will be used\n *        as context. If missing (or no element matches selector), falls\n *        back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nvar $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *           A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param {Element|String} [context=document]\n *           A DOM element within which to query. Can also be a selector\n *           string in which case the first matching element will be used\n *           as context. If missing (or no element matches selector), falls\n *           back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none were found.\n *\n */\nvar $$ = createQuerier('querySelectorAll');\n\n\n\nvar Dom = (Object.freeze || Object)({\n\tisReal: isReal,\n\tisEl: isEl,\n\tisInFrame: isInFrame,\n\tcreateEl: createEl,\n\ttextContent: textContent,\n\tprependTo: prependTo,\n\thasClass: hasClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\ttoggleClass: toggleClass,\n\tsetAttributes: setAttributes,\n\tgetAttributes: getAttributes,\n\tgetAttribute: getAttribute,\n\tsetAttribute: setAttribute,\n\tremoveAttribute: removeAttribute,\n\tblockTextSelection: blockTextSelection,\n\tunblockTextSelection: unblockTextSelection,\n\tgetBoundingClientRect: getBoundingClientRect,\n\tfindPosition: findPosition,\n\tgetPointerPosition: getPointerPosition,\n\tisTextNode: isTextNode,\n\temptyEl: emptyEl,\n\tnormalizeContent: normalizeContent,\n\tappendContent: appendContent,\n\tinsertContent: insertContent,\n\tisSingleLeftClick: isSingleLeftClick,\n\t$: $,\n\t$$: $$\n});\n\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\nvar _guid = 1;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar elData = {};\n\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\nvar elIdAttr = 'vdata' + new Date().getTime();\n\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  }\n\n  // Remove all stored data\n  delete elData[id];\n\n  // Remove the elIdAttr property from the DOM node\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window.event;\n\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n\n    window.addEventListener('test', null, opts);\n    window.removeEventListener('test', null, opts);\n  } catch (e) {\n    // disregard\n  }\n})();\n\n/**\n * Touch events Chrome expects to be passive\n */\nvar passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = { passive: true };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n\n  var handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         - Returns the opposite of `defaultPrevented` if default was prevented\n *         - Otherwise returns undefined\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = { type: event, target: elem };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented) {\n    var targetData = getData(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event Listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\nvar Events = (Object.freeze || Object)({\n\tfixEvent: fixEvent,\n\ton: on,\n\toff: off,\n\ttrigger: trigger,\n\tone: one\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nvar _windowLoaded = false;\nvar videojs$2 = void 0;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nvar autoSetup = function autoSetup() {\n\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs$2.options.autoSetup === false) {\n    return;\n  }\n\n  // One day, when we stop supporting IE8, go back to this, but in the meantime...*hack hack hack*\n  // var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  // var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  // var mediaEls = vids.concat(audios);\n\n  // Because IE8 doesn't support calling slice on a node list, we need to loop\n  // through each list of elements to build up a new, combined list of elements.\n  var vids = document.getElementsByTagName('video');\n  var audios = document.getElementsByTagName('audio');\n  var divs = document.getElementsByTagName('video-js');\n  var mediaEls = [];\n\n  if (vids && vids.length > 0) {\n    for (var i = 0, e = vids.length; i < e; i++) {\n      mediaEls.push(vids[i]);\n    }\n  }\n\n  if (audios && audios.length > 0) {\n    for (var _i = 0, _e = audios.length; _i < _e; _i++) {\n      mediaEls.push(audios[_i]);\n    }\n  }\n\n  if (divs && divs.length > 0) {\n    for (var _i2 = 0, _e2 = divs.length; _i2 < _e2; _i2++) {\n      mediaEls.push(divs[_i2]);\n    }\n  }\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n\n    for (var _i3 = 0, _e3 = mediaEls.length; _i3 < _e3; _i3++) {\n      var mediaEl = mediaEls[_i3];\n\n      // Check if element exists, has getAttribute func.\n      // IE seems to consider typeof el.getAttribute == 'object' instead of\n      // 'function' like expected, at least when loading the player immediately.\n      if (mediaEl && mediaEl.getAttribute) {\n\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs$2(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs$2 = vjs;\n  }\n\n  window.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n\n  style.className = className;\n\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file fn.js\n * @module fn\n */\n/**\n * Bind (a.k.a proxy or Context). A simple method for changing the context of a function\n * It also stores a unique id on the function so it can be easily removed from events.\n *\n * @param {Mixed} context\n *        The object to bind as scope.\n *\n * @param {Function} fn\n *        The function to be bound to a scope.\n *\n * @param {number} [uid]\n *        An optional unique ID for the function to be set\n *\n * @return {Function}\n *         The new function that will be bound into the context given\n */\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  };\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @param  {Function} fn\n *         The function to be throttled.\n *\n * @param  {Number}   wait\n *         The number of milliseconds by which to throttle.\n *\n * @return {Function}\n */\nvar throttle = function throttle(fn, wait) {\n  var last = Date.now();\n\n  var throttled = function throttled() {\n    var now = Date.now();\n\n    if (now - last >= wait) {\n      fn.apply(undefined, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @param  {Function} func\n *         The function to wrap with debounce behavior.\n *\n * @param  {number} wait\n *         The number of milliseconds to wait after the last invocation.\n *\n * @param  {boolean} [immediate]\n *         Whether or not to invoke the function immediately upon creation.\n *\n * @param  {Object} [context=window]\n *         The \"context\" in which the debounced function should debounce. For\n *         example, if this function should be tied to a Video.js player,\n *         the player can be passed here. Alternatively, defaults to the\n *         global `window` object.\n *\n * @return {Function}\n *         A debounced function.\n */\nvar debounce = function debounce(func, wait, immediate) {\n  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : window;\n\n  var timeout = void 0;\n\n  /* eslint-disable consistent-this */\n  return function () {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n};\n\n/**\n * @file src/js/event-target.js\n */\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nvar EventTarget = function EventTarget() {};\n\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\nEventTarget.prototype.allowedEvents_ = {};\n\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener alialing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event;\n\n  if (typeof event === 'string') {\n    event = { type: type };\n  }\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nvar isValidEventType = function isValidEventType(type) {\n  return (\n    // The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target = void 0;\n  var type = void 0;\n  var listener = void 0;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n\n  listener = bind(self, listener);\n\n  return { isTargetingSelf: isTargetingSelf, target: target, type: type, listener: listener };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilites to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nvar EventedMixin = {\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on$$1() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      };\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one$$1() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener;\n\n    // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        for (var _len3 = arguments.length, largs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        _this2.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$$1(targetOrType, typeOrListener, listener) {\n\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener);\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @returns {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {String} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var eventBusKey = options.eventBusKey;\n\n  // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error('The eventBusKey \"' + eventBusKey + '\" does not refer to an element.');\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', { className: 'vjs-event-bus' });\n  }\n\n  assign(target, EventedMixin);\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', function () {\n    target.off();\n    window.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nvar StatefulMixin = {\n\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @returns {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes = void 0;\n\n    each(stateUpdates, function (value, key) {\n\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @returns {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n/**\n * Deep-merge one or more options objects, recursively merging **only** plain\n * object properties.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @returns {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component = function () {\n\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    classCallCheck(this, Component);\n\n\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = mergeOptions({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = mergeOptions(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n\n      this.id_ = id + '_component_' + newGUID();\n    }\n\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, { eventBusKey: this.el_ ? 'el_' : null });\n    }\n    stateful(this, this.constructor.defaultState);\n\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready);\n    // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Component.prototype.dispose = function dispose() {\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({ type: 'dispose', bubbles: false });\n\n    // Dispose all children.\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  };\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n\n\n  Component.prototype.player = function player() {\n    return this.player_;\n  };\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Component.prototype.options = function options(obj) {\n    log$1.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  };\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n\n\n  Component.prototype.el = function el() {\n    return this.el_;\n  };\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Component.prototype.createEl = function createEl$$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  };\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n\n\n  Component.prototype.localize = function localize(string, tokens) {\n    var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : string;\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  };\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n\n\n  Component.prototype.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  };\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n\n\n  Component.prototype.id = function id() {\n    return this.id_;\n  };\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n\n\n  Component.prototype.name = function name() {\n    return this.name_;\n  };\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n\n\n  Component.prototype.children = function children() {\n    return this.children_;\n  };\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n\n\n  Component.prototype.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  };\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n\n\n  Component.prototype.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    return this.childNameIndex_[name];\n  };\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n\n\n  Component.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.children_.length;\n\n    var component = void 0;\n    var componentName = void 0;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n\n      var componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error('Component ' + componentClassName + ' does not exist');\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n\n    this.children_.splice(index, 0, component);\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  };\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n\n\n  Component.prototype.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  };\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n\n\n  Component.prototype.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = _this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      var workingChildren = void 0;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name = void 0;\n        var opts = void 0;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return { name: name, opts: opts };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  };\n\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n\n\n  Component.prototype.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  };\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.ready = function ready(fn) {\n    var sync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  };\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n\n\n  Component.prototype.triggerReady = function triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  };\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$ = function $$$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  };\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$$ = function $$$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  };\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n\n\n  Component.prototype.hasClass = function hasClass$$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  };\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n\n\n  Component.prototype.addClass = function addClass$$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  };\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n\n\n  Component.prototype.removeClass = function removeClass$$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  };\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n\n\n  Component.prototype.toggleClass = function toggleClass$$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  };\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n\n\n  Component.prototype.show = function show() {\n    this.removeClass('vjs-hidden');\n  };\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n\n\n  Component.prototype.hide = function hide() {\n    this.addClass('vjs-hidden');\n  };\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  };\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  };\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n\n\n  Component.prototype.getAttribute = function getAttribute$$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n\n\n  Component.prototype.setAttribute = function setAttribute$$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  };\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n\n\n  Component.prototype.removeAttribute = function removeAttribute$$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  };\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  };\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n\n\n  Component.prototype.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  };\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n\n\n  Component.prototype.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  };\n\n  /**\n   * Get the width or the height of the `Component` elements computed style. Uses\n   * `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n\n\n  Component.prototype.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window.getComputedStyle === 'function') {\n      var computedStyle = window.getComputedStyle(this.el_);\n\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    }\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs on IE8 and wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0) {\n      var rule = 'offset' + toTitleCase(widthOrHeight);\n\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  };\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains width and height values of the `Component`s\n   * computed style.\n   *\n   * @return {Component~DimensionObject}\n   *         The dimensions of the components element\n   */\n\n\n  Component.prototype.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  };\n\n  /**\n   * Get the width of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} width\n   *           The width of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  };\n\n  /**\n   * Get the height of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  };\n\n  /**\n   * Set the focus to this component\n   */\n\n\n  Component.prototype.focus = function focus() {\n    this.el_.focus();\n  };\n\n  /**\n   * Remove the focus from this component\n   */\n\n\n  Component.prototype.blur = function blur() {\n    this.el_.blur();\n  };\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n\n\n  Component.prototype.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    var tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    var touchTimeThreshold = 200;\n\n    var couldBeTap = void 0;\n\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = new Date().getTime();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = new Date().getTime() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  };\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n\n\n  Component.prototype.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    var report = bind(this.player(), this.player().reportUserActivity);\n\n    var touchHolding = void 0;\n\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  };\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n\n\n  Component.prototype.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId, disposeFn;\n\n    fn = bind(this, fn);\n\n    timeoutId = window.setTimeout(function () {\n      _this2.off('dispose', disposeFn);\n      fn();\n    }, timeout);\n\n    disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.on('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n\n\n  Component.prototype.clearTimeout = function clearTimeout(timeoutId) {\n    window.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.off('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n\n\n  Component.prototype.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n\n    var intervalId = window.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.on('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n\n\n  Component.prototype.clearInterval = function clearInterval(intervalId) {\n    window.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.off('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n\n\n  Component.prototype.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id, disposeFn;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n\n      id = window.requestAnimationFrame(function () {\n        _this4.off('dispose', disposeFn);\n        fn();\n      });\n\n      disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = 'vjs-raf-' + id;\n      this.on('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.setTimeout(fn, 1000 / 60);\n  };\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n\n\n  Component.prototype.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = 'vjs-raf-' + id;\n\n      this.off('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.clearTimeout(id);\n  };\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error('Illegal component name, \"' + name + '\"; must be a non-empty string.');\n    }\n\n    var Tech = Component.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason = void 0;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error('Illegal component, \"' + name + '\"; ' + reason + '.');\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n\n    return ComponentToRegister;\n  };\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window.requestAnimationFrame === 'function' && typeof window.cancelAnimationFrame === 'function';\n\nComponent.registerComponent('Component', Component);\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @function time-ranges:indexFunction\n *\n * @param {number} [index=0]\n *        The range number to return the time for.\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n * @depricated index must be set to a value, in the future this will throw an error.\n */\n\n/**\n * An object that contains ranges of time for various reasons.\n *\n * @typedef {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this Object\n *\n * @property {time-ranges:indexFunction} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {time-ranges:indexFunction} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {number} index\n *        The index to check\n *\n * @param {number} maxIndex\n *        The maximum possible index\n *\n * @throws {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error('Failed to execute \\'' + fnName + '\\' on \\'TimeRanges\\': The index provided (' + index + ') is non-numeric or out of bounds (0-' + maxIndex + ').');\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {string} valueIndex\n *        The proprety that should be used to get the time. should be 'start' or 'end'\n *\n * @param {Array} ranges\n *        An array of time ranges\n *\n * @param {Array} [rangeIndex=0]\n *        The index to start the search at\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n *\n * @depricated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @param {Array} [ranges]\n *        An array of time ranges.\n */\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n\n/**\n * Should create a fake `TimeRange` object which mimics an HTML5 time range instance.\n *\n * @param {number|Array} start\n *        The start of a single range or an array of ranges\n *\n * @param {number} end\n *        The end of a single range.\n *\n * @private\n */\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start = void 0;\n  var end = void 0;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nvar FullscreenApi = {};\n\n// browser API methods\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Old WebKit (Safari 5.1)\n['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'],\n// Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\n\nvar specApi = apiMap[0];\nvar browserApi = void 0;\n\n// determine the supported set of functions\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n}\n\n/**\n * @file media-error.js\n */\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_CUSTOM\n * @property {string} 2 - MEDIA_ERR_ABORTED\n * @property {string} 3 - MEDIA_ERR_NETWORK\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\n  // values should be accessible on both the class and instance\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {Boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nvar textTracksToJson = function textTracksToJson(tech) {\n\n  var trackEls = tech.$$('track');\n\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n\n  return tech.textTracks();\n};\n\nvar textTrackConverter = { textTracksToJson: textTracksToJson, jsonToTextTracks: jsonToTextTracks, trackToJson_: trackToJson_ };\n\n/**\n * @file modal-dialog.js\n */\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\nvar ESC = 27;\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = function (_Component) {\n  inherits(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    classCallCheck(this, ModalDialog);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n    _this.content(_this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + '-content'\n    }, {\n      role: 'document'\n    });\n\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + '-description vjs-control-text',\n      id: _this.el().getAttribute('aria-describedby')\n    });\n\n    textContent(_this.descEl_, _this.description());\n    _this.el_.appendChild(_this.descEl_);\n    _this.el_.appendChild(_this.contentEl_);\n    return _this;\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  ModalDialog.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + '_description',\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  ModalDialog.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ModalDialog.prototype.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + ' vjs-hidden ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles `keydown` events on the document, looking for ESC, which closes\n   * the modal.\n   *\n   * @param {EventTarget~Event} e\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyPress = function handleKeyPress(e) {\n    if (e.which === ESC && this.closeable()) {\n      this.close();\n    }\n  };\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n\n\n  ModalDialog.prototype.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  };\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n\n\n  ModalDialog.prototype.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  };\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n\n\n  ModalDialog.prototype.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      if (this.closeable()) {\n        this.on(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n      }\n\n      // Hide controls and note if they were enabled.\n      this.hadControls_ = player.controls();\n      player.controls(false);\n\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  };\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n\n\n  ModalDialog.prototype.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  };\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n\n\n  ModalDialog.prototype.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n    var player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    if (this.closeable()) {\n      this.off(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n    }\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  };\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n\n\n  ModalDialog.prototype.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', { controlText: 'Close Modal Dialog' });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  };\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n\n\n  ModalDialog.prototype.fill = function fill() {\n    this.fillWith(this.content());\n  };\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n\n\n  ModalDialog.prototype.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n\n    /**\n     * Fired just before a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#beforemodalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  };\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n\n\n  ModalDialog.prototype.empty = function empty() {\n    /**\n     * Fired just before a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#beforemodalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n     * Fired just after a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#modalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalempty');\n  };\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n\n\n  ModalDialog.prototype.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  };\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n\n      this.focus();\n\n      this.on(document, 'keydown', this.handleKeyDown);\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n\n    this.off(document, 'keydown', this.handleKeyDown);\n  };\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyDown = function handleKeyDown(event) {\n    // exit early if it isn't a tab key\n    if (event.which !== 9) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex = void 0;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window.HTMLAnchorElement || child instanceof window.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window.HTMLInputElement || child instanceof window.HTMLSelectElement || child instanceof window.HTMLTextAreaElement || child instanceof window.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window.HTMLIFrameElement || child instanceof window.HTMLObjectElement || child instanceof window.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\n\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList = function (_EventTarget) {\n  inherits(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @param {Object} [list]\n   *        The child object with inheritance done manually for ie8.\n   *\n   * @abstract\n   */\n  function TrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    var _ret;\n\n    var list = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    classCallCheck(this, TrackList);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    if (!list) {\n      list = _this; // eslint-disable-line\n      if (IS_IE8) {\n        list = document.createElement('custom');\n        for (var prop in TrackList.prototype) {\n          if (prop !== 'constructor') {\n            list[prop] = TrackList.prototype[prop];\n          }\n        }\n      }\n    }\n\n    list.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get$$1() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      list.addTrack(tracks[i]);\n    }\n\n    // must return the object, as for ie8 it will not be this\n    // but a reference to a document object\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  TrackList.prototype.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track: track,\n        type: 'addtrack'\n      });\n    }\n  };\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n\n\n  TrackList.prototype.removeTrack = function removeTrack(rtrack) {\n    var track = void 0;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track: track,\n      type: 'removetrack'\n    });\n  };\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {String} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n\n\n  TrackList.prototype.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\nvar AudioTrackList = function (_TrackList) {\n  inherits(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, AudioTrackList);\n\n    var list = void 0;\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (IS_IE8) {\n      list = document.createElement('custom');\n      for (var prop in TrackList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TrackList.prototype[prop];\n        }\n      }\n      for (var _prop in AudioTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = AudioTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    list.changing_ = false;\n\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  AudioTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * @file video-track-list.js\n */\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\nvar VideoTrackList = function (_TrackList) {\n  inherits(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, VideoTrackList);\n\n    var list = void 0;\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (IS_IE8) {\n      list = document.createElement('custom');\n      for (var prop in TrackList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TrackList.prototype[prop];\n        }\n      }\n      for (var _prop in VideoTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = VideoTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    list.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(list, 'selectedIndex', {\n      get: function get$$1() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n        return -1;\n      },\n      set: function set$$1() {}\n    });\n\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  VideoTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', function () {\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * @file text-track-list.js\n */\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList = function (_TrackList) {\n  inherits(TextTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {TextTrack[]} [tracks=[]]\n   *        A list of `TextTrack` to instantiate the list with.\n   */\n  function TextTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, TextTrackList);\n\n    var list = void 0;\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (IS_IE8) {\n      list = document.createElement('custom');\n      for (var prop in TrackList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TrackList.prototype[prop];\n        }\n      }\n      for (var _prop in TextTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = TextTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  TextTrackList.prototype.addTrack = function addTrack(track) {\n    _TrackList.prototype.addTrack.call(this, track);\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', bind(this, function () {\n      this.trigger('change');\n    }));\n\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', bind(this, function () {\n        this.trigger('selectedlanguagechange');\n      }));\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\n\nvar HtmlTrackElementList = function () {\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList() {\n    var trackElements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, HtmlTrackElementList);\n\n    var list = this; // eslint-disable-line\n\n    if (IS_IE8) {\n      list = document.createElement('custom');\n\n      for (var prop in HtmlTrackElementList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = HtmlTrackElementList.prototype[prop];\n        }\n      }\n    }\n\n    list.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get$$1() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      list.addTrackElement_(trackElements[i]);\n    }\n\n    if (IS_IE8) {\n      return list;\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  };\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_ = void 0;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n\n        break;\n      }\n    }\n\n    return trackElement_;\n  };\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        this.trackElements_.splice(i, 1);\n\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\n\nvar TextTrackCueList = function () {\n\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    classCallCheck(this, TextTrackCueList);\n\n    var list = this; // eslint-disable-line\n\n    if (IS_IE8) {\n      list = document.createElement('custom');\n\n      for (var prop in TextTrackCueList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TextTrackCueList.prototype[prop];\n        }\n      }\n    }\n\n    TextTrackCueList.prototype.setCues_.call(list, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get$$1() {\n        return this.length_;\n      }\n    });\n\n    if (IS_IE8) {\n      return list;\n    }\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  TextTrackCueList.prototype.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get$$1() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  };\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n\n\n  TextTrackCueList.prototype.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track = function (_EventTarget) {\n  inherits(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track() {\n    var _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, Track);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var track = _this; // eslint-disable-line\n\n    if (IS_IE8) {\n      track = document.createElement('custom');\n      for (var prop in Track.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = Track.prototype[prop];\n        }\n      }\n    }\n\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(track, key, {\n        get: function get$$1() {\n          return trackProps[key];\n        },\n        set: function set$$1() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _ret = track, possibleConstructorReturn(_this, _ret);\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @param  {String} url\n *         The url to parse\n *\n * @return {url:URLObject}\n *         An object of url details\n */\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  var a = document.createElement('a');\n\n  a.href = url;\n\n  // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div = void 0;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = '<a href=\"' + url + '\"></a>';\n    a = div.firstChild;\n    // prevent the div from affecting layout\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  }\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n\n/**\n * Get absolute version of relative URL. Used to tell flash correct URL.\n *\n *\n * @param  {string} url\n *         URL to make absolute\n *\n * @return {string}\n *         Absolute URL\n *\n * @see http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n\n    div.innerHTML = '<a href=\"' + url + '\">x</a>';\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @param {string} path\n *        The fileName path like '/path/to/file.mp4'\n *\n * @returns {string}\n *          The extension in lower case or an empty string if no\n *          extension could be found.\n */\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @param {string} url\n *        The url to check.\n *\n * @return {boolean}\n *         Whether it is a cross domain request or not.\n */\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window.location;\n  var urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n\n  return crossOrigin;\n};\n\nvar Url = (Object.freeze || Object)({\n\tparseUrl: parseUrl,\n\tgetAbsoluteURL: getAbsoluteURL,\n\tgetFileExtension: getFileExtension,\n\tisCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window.WebVTT.Parser(window, window.vttjs, window.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window.console && window.console.groupCollapsed) {\n      window.console.groupCollapsed('Text Track parsing errors for ' + track.src);\n    }\n    errors.forEach(function (error) {\n      return log$1.error(error);\n    });\n    if (window.console && window.console.groupEnd) {\n      window.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specifed url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  xhr(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window.WebVTT !== 'function') {\n      if (track.tech_) {\n        var loadHandler = function loadHandler() {\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.on('vttjsloaded', loadHandler);\n        track.tech_.on('vttjserror', function () {\n          log$1.error('vttjs failed to load, stopping trying to process ' + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\nvar TextTrack = function (_Track) {\n  inherits(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack() {\n    var _this, _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, TextTrack);\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings['default'];\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var tt = (_this = possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n\n    tt.tech_ = settings.tech;\n\n    if (IS_IE8) {\n      for (var prop in TextTrack.prototype) {\n        if (prop !== 'constructor') {\n          tt[prop] = TextTrack.prototype[prop];\n        }\n      }\n    }\n\n    tt.cues_ = [];\n    tt.activeCues_ = [];\n\n    var cues = new TextTrackCueList(tt.cues_);\n    var activeCues = new TextTrackCueList(tt.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(tt, function () {\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to it's nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      tt.tech_.ready(function () {\n        tt.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    /**\n     * @memberof TextTrack\n     * @member {boolean} default\n     *         If this track was set to be on or off by default. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n    Object.defineProperty(tt, 'default', {\n      get: function get$$1() {\n        return default_;\n      },\n      set: function set$$1() {}\n    });\n\n    /**\n     * @memberof TextTrack\n     * @member {string} mode\n     *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n     *         not be set if setting to an invalid mode.\n     * @instance\n     *\n     * @fires TextTrack#modechange\n     */\n    Object.defineProperty(tt, 'mode', {\n      get: function get$$1() {\n        return mode;\n      },\n      set: function set$$1(newMode) {\n        var _this2 = this;\n\n        if (!TextTrackMode[newMode]) {\n          return;\n        }\n        mode = newMode;\n        if (mode === 'showing') {\n\n          this.tech_.ready(function () {\n            _this2.tech_.on('timeupdate', timeupdateHandler);\n          }, true);\n        }\n        /**\n         * An event that fires when mode changes on this track. This allows\n         * the TextTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec!\n         *\n         * @event TextTrack#modechange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('modechange');\n      }\n    });\n\n    /**\n     * @memberof TextTrack\n     * @member {TextTrackCueList} cues\n     *         The text track cue list for this TextTrack.\n     * @instance\n     */\n    Object.defineProperty(tt, 'cues', {\n      get: function get$$1() {\n        if (!this.loaded_) {\n          return null;\n        }\n\n        return cues;\n      },\n      set: function set$$1() {}\n    });\n\n    /**\n     * @memberof TextTrack\n     * @member {TextTrackCueList} activeCues\n     *         The list text track cues that are currently active for this TextTrack.\n     * @instance\n     */\n    Object.defineProperty(tt, 'activeCues', {\n      get: function get$$1() {\n        if (!this.loaded_) {\n          return null;\n        }\n\n        // nothing to do\n        if (this.cues.length === 0) {\n          return activeCues;\n        }\n\n        var ct = this.tech_.currentTime();\n        var active = [];\n\n        for (var i = 0, l = this.cues.length; i < l; i++) {\n          var cue = this.cues[i];\n\n          if (cue.startTime <= ct && cue.endTime >= ct) {\n            active.push(cue);\n          } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n            active.push(cue);\n          }\n        }\n\n        changed = false;\n\n        if (active.length !== this.activeCues_.length) {\n          changed = true;\n        } else {\n          for (var _i = 0; _i < active.length; _i++) {\n            if (this.activeCues_.indexOf(active[_i]) === -1) {\n              changed = true;\n            }\n          }\n        }\n\n        this.activeCues_ = active;\n        activeCues.setCues_(this.activeCues_);\n\n        return activeCues;\n      },\n\n\n      // /!\\ Keep this setter empty (see the timeupdate handler above)\n      set: function set$$1() {}\n    });\n\n    if (settings.src) {\n      tt.src = settings.src;\n      loadTrack(settings.src, tt);\n    } else {\n      tt.loaded_ = true;\n    }\n\n    return _ret = tt, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  TextTrack.prototype.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window.vttjs && !(originalCue instanceof window.vttjs.VTTCue)) {\n      cue = new window.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  };\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n\n\n  TextTrack.prototype.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack = function (_Track) {\n  inherits(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack() {\n    var _this, _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, AudioTrack);\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var track = (_this = possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n    var enabled = false;\n\n    if (IS_IE8) {\n      for (var prop in AudioTrack.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = AudioTrack.prototype[prop];\n        }\n      }\n    }\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(track, 'enabled', {\n      get: function get$$1() {\n        return enabled;\n      },\n      set: function set$$1(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      track.enabled = settings.enabled;\n    }\n    track.loaded_ = true;\n\n    return _ret = track, possibleConstructorReturn(_this, _ret);\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack = function (_Track) {\n  inherits(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack() {\n    var _this, _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, VideoTrack);\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var track = (_this = possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n    var selected = false;\n\n    if (IS_IE8) {\n      for (var prop in VideoTrack.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = VideoTrack.prototype[prop];\n        }\n      }\n    }\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(track, 'selected', {\n      get: function get$$1() {\n        return selected;\n      },\n      set: function set$$1(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      track.selected = settings.selected;\n    }\n\n    return _ret = track, possibleConstructorReturn(_this, _ret);\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @file html-track-element.js\n */\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = function (_EventTarget) {\n  inherits(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, HTMLTrackElement);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var readyState = void 0;\n    var trackElement = _this; // eslint-disable-line\n\n    if (IS_IE8) {\n      trackElement = document.createElement('custom');\n\n      for (var prop in HTMLTrackElement.prototype) {\n        if (prop !== 'constructor') {\n          trackElement[prop] = HTMLTrackElement.prototype[prop];\n        }\n      }\n    }\n\n    var track = new TextTrack(options);\n\n    trackElement.kind = track.kind;\n    trackElement.src = track.src;\n    trackElement.srclang = track.language;\n    trackElement.label = track.label;\n    trackElement['default'] = track['default'];\n\n    /**\n     * @memberof HTMLTrackElement\n     * @member {HTMLTrackElement~ReadyState} readyState\n     *         The current ready state of the track element.\n     * @instance\n     */\n    Object.defineProperty(trackElement, 'readyState', {\n      get: function get$$1() {\n        return readyState;\n      }\n    });\n\n    /**\n     * @memberof HTMLTrackElement\n     * @member {TextTrack} track\n     *         The underlying TextTrack object.\n     * @instance\n     *\n     */\n    Object.defineProperty(trackElement, 'track', {\n      get: function get$$1() {\n        return track;\n      }\n    });\n\n    readyState = NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      trackElement.trigger({\n        type: 'load',\n        target: trackElement\n      });\n    });\n\n    if (IS_IE8) {\n      var _ret;\n\n      return _ret = trackElement, possibleConstructorReturn(_this, _ret);\n    }\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\n\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + 'Tracks';\n  NORMAL[type].privateName = type + 'Tracks_';\n});\n\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\n\nvar ALL = mergeOptions(NORMAL, REMOTE);\n\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  var tracks = self.textTracks();\n\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n\n  var track = new ALL.text.TrackClass(options);\n\n  tracks.addTrack(track);\n\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\nvar Tech = function (_Component) {\n  inherits(Tech, _Component);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Tech() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    classCallCheck(this, Tech);\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.hasStarted_ = false;\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options['native' + track + 'Tracks'] === false) {\n        _this['featuresNative' + track + 'Tracks'] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n    return _this;\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  Tech.prototype.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  };\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n\n\n  Tech.prototype.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n\n\n  Tech.prototype.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n\n    this.off('durationchange', this.onDurationChange);\n  };\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n\n\n  Tech.prototype.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  };\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n\n\n  Tech.prototype.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  };\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  Tech.prototype.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  };\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n\n\n  Tech.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n\n\n  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  };\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n\n\n  Tech.prototype.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  };\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n\n\n  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n  };\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Tech.prototype.dispose = function dispose() {\n\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n\n\n  Tech.prototype.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(function (type) {\n      var list = _this3[type + 'Tracks']() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  };\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n\n\n  Tech.prototype.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n\n      this.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.reset = function reset() {};\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n\n\n  Tech.prototype.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  };\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks wether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n\n\n  Tech.prototype.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n    return createTimeRanges();\n  };\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n\n\n  Tech.prototype.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    }\n  };\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n\n\n  Tech.prototype.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n     *\n     * @event Tech#audiotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n     *\n     * @event Tech#videotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n     *\n     * @event Tech#texttrackchange\n     * @type {EventTarget~Event}\n     */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + 'trackchange');\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  };\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n\n\n  Tech.prototype.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document.body.contains(this.el())) {\n\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      var script = document.createElement('script');\n\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.12.4/vtt.min.js';\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  };\n\n  /**\n   * Emulate texttracks\n   *\n   */\n\n\n  Tech.prototype.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  };\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Tech.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n\n\n  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack() {\n    var _this7 = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var manualCleanup = arguments[1];\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log$1.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n\n\n  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  };\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPoster = function setPoster() {};\n\n  /**\n   * A method to check for the presence of the 'playsinine' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.playsinline = function playsinline() {};\n\n  /**\n   * A method to set or unset the 'playsinine' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPlaysinline = function setPlaysinline() {};\n\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the tech can support the given source\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  };\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  };\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error('Tech ' + name + ' must be a Tech');\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n\n    Tech.techs_[name] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  };\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requsted.\n   */\n\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window && window.videojs && window.videojs[name]) {\n      log$1.warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');\n      return window.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating wether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\nTech.prototype.featuresMuteControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating wether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  var deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source hander found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.on('dispose', this.disposeSourceHandler);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\nvar middlewares = {};\nvar middlewareInstances = {};\n\nvar TERMINATOR = {};\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\n\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n */\nfunction get$1(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middlware from left to right to the tech.\n */\nfunction set$1(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the method\n * on each middleware from left to right.\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n */\nfunction mediate(middleware, tech, method) {\n  var arg = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR;\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n\n  executeRight(middleware, method, returnValue, terminated);\n\n  return returnValue;\n}\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1\n};\n\nvar allowedSetters = {\n  setCurrentTime: 1\n};\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var middleware = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var next = arguments[2];\n  var player = arguments[3];\n  var acc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  var lastRun = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var mwFactory = middleware[0],\n      mwrest = middleware.slice(1);\n\n  // if mwFactory is a string, then we're at a fork in the road\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory);\n\n    // if setSource isn't present, implicitly select this middleware\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nvar getMimetype = function getMimetype() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({ src: src })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n\n/**\n * @file loader.js\n */\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader = function (_Component) {\n  inherits(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value stroe of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    classCallCheck(this, MediaLoader);\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({ createEl: false }, options);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_, ready));\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file button.js\n */\n/**\n * Clickable Component which is clickable or keyboard actionable,\n * but is not a native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent = function (_Component) {\n  inherits(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    classCallCheck(this, ClickableComponent);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.emitTapEvents();\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createEl = function createEl$$1() {\n    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log$1.error('Creating a ClickableComponent with an HTML element of ' + tag + ' is not supported; use a Button instead.');\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  ClickableComponent.prototype.dispose = function dispose() {\n    // remove controlTextEl_ on dipose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a control text element on this `Component`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n\n    return this.controlTextEl_;\n  };\n\n  /**\n   * Get or set the localize text to use for the controls on the `Component`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  ClickableComponent.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.el();\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ClickableComponent.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-control vjs-button ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Enable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('focus', this.handleFocus);\n      this.on('blur', this.handleBlur);\n    }\n  };\n\n  /**\n   * Disable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n  };\n\n  /**\n   * This gets called when a `ClickableComponent` gets:\n   * - Clicked (via the `click` event, listening starts in the constructor)\n   * - Tapped (via the `tap` event, listening starts in the constructor)\n   * - The following things happen in order:\n   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n   *      `ClickableComponent`.\n   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n   *      {@link ClickableComponent#handleKeyPress}.\n   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n   *      the space or enter key.\n   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n   *      event as a parameter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n\n\n  ClickableComponent.prototype.handleClick = function handleClick(event) {};\n\n  /**\n   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  ClickableComponent.prototype.handleFocus = function handleFocus(event) {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when this ClickableComponent has focus and a key gets pressed down. By\n   * default it will call `this.handleClick` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  ClickableComponent.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.trigger('click');\n    } else if (_Component.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  /**\n   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  ClickableComponent.prototype.handleBlur = function handleBlur(event) {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage = function (_ClickableComponent) {\n  inherits(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    classCallCheck(this, PosterImage);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.update();\n    player.on('posterchange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n    _ClickableComponent.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  PosterImage.prototype.createEl = function createEl$$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n\n    // To ensure the poster image resizes while maintaining its original aspect\n    // ratio, use a div with `background-size` when available. For browsers that\n    // do not support `background-size` (e.g. IE8), fall back on using a regular\n    // img element.\n    if (!BACKGROUND_SIZE_SUPPORTED) {\n      this.fallbackImg_ = createEl('img');\n      el.appendChild(this.fallbackImg_);\n    }\n\n    return el;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n\n\n  PosterImage.prototype.update = function update(event) {\n    var url = this.player().poster();\n\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.setSrc = function setSrc(url) {\n    if (this.fallbackImg_) {\n      this.fallbackImg_.src = url;\n    } else {\n      var backgroundImage = '';\n\n      // Any falsey values should stay as an empty string, otherwise\n      // this will throw an extra error\n      if (url) {\n        backgroundImage = 'url(\"' + url + '\")';\n      }\n\n      this.el_.style.backgroundImage = backgroundImage;\n    }\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n\n\n  PosterImage.prototype.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\nfunction constructColor(color, opacity) {\n  var hex = void 0;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\nvar TextTrackDisplay = function (_Component) {\n  inherits(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    classCallCheck(this, TextTrackDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options, ready));\n\n    player.on('loadstart', bind(_this, _this.toggleDisplay));\n    player.on('texttrackchange', bind(_this, _this.updateDisplay));\n    player.on('loadstart', bind(_this, _this.preselectTrack));\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind(_this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', bind(this, this.updateDisplay));\n\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  TextTrackDisplay.prototype.preselectTrack = function preselectTrack() {\n    var modes = { captions: 1, subtitles: 1 };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc = void 0;\n    var firstCaptions = void 0;\n    var preferredTrack = void 0;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language === track.language) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track['default']) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precendence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  };\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n\n\n  TextTrackDisplay.prototype.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TextTrackDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  };\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n\n\n  TextTrackDisplay.prototype.clearDisplay = function clearDisplay() {\n    if (typeof window.WebVTT === 'function') {\n      window.WebVTT.processCues(window, [], this.el_);\n    }\n  };\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n\n\n  TextTrackDisplay.prototype.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n\n    this.clearDisplay();\n\n    // Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  };\n\n  /**\n   * Add an {@link Texttrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack} track\n   *        Text track object to be added to the list.\n   */\n\n\n  TextTrackDisplay.prototype.updateForTrack = function updateForTrack(track) {\n    if (typeof window.WebVTT !== 'function' || !track.activeCues) {\n      return;\n    }\n\n    var cues = [];\n\n    for (var _i = 0; _i < track.activeCues.length; _i++) {\n      cues.push(track.activeCues[_i]);\n    }\n\n    window.WebVTT.processCues(window, cues, this.el_);\n\n    if (!this.player_.textTrackSettings) {\n      return;\n    }\n\n    var overrides = this.player_.textTrackSettings.getValues();\n\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = '2px 2px 3px ' + darkGray + ', 2px 2px 4px ' + darkGray + ', 2px 2px 5px ' + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + darkGray + ', 2px 2px ' + darkGray + ', 3px 3px ' + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + lightGray + ', 0 1px ' + lightGray + ', -1px -1px ' + darkGray + ', 0 -1px ' + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = '0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window.parseFloat(cueDiv.style.fontSize);\n\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner = function (_Component) {\n  inherits(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    classCallCheck(this, LoadingSpinner);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  LoadingSpinner.prototype.createEl = function createEl$$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button = function (_ClickableComponent) {\n  inherits(Button, _ClickableComponent);\n\n  function Button() {\n    classCallCheck(this, Button);\n    return possibleConstructorReturn(this, _ClickableComponent.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  Button.prototype.createEl = function createEl(tag) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    tag = 'button';\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = assign({\n\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Button.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var className = this.constructor.name;\n\n    log$1.warn('Adding an actionable (user controllable) child to a Button (' + className + ') is not supported; use a ClickableComponent instead.');\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component.prototype.addChild.call(this, child, options);\n  };\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n\n\n  Button.prototype.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n    this.el_.removeAttribute('disabled');\n  };\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n\n\n  Button.prototype.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n    this.el_.setAttribute('disabled', 'disabled');\n  };\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n\n\n  Button.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\n    if (event.which === 32 || event.which === 13) {\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    _ClickableComponent.prototype.handleKeyPress.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton = function (_Button) {\n  inherits(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    classCallCheck(this, BigPlayButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  BigPlayButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  };\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  BigPlayButton.prototype.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  BigPlayButton.prototype.handleKeyPress = function handleKeyPress(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyPress.call(this, event);\n  };\n\n  BigPlayButton.prototype.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\n\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton = function (_Button) {\n  inherits(CloseButton, _Button);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function CloseButton(player, options) {\n    classCallCheck(this, CloseButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CloseButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-close-button ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when this will be\n   * triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n\n\n  CloseButton.prototype.handleClick = function handleClick(event) {\n\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({ type: 'close', bubbles: false });\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle = function (_Button) {\n  inherits(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    classCallCheck(this, PlayToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'play', _this.handlePlay);\n    _this.on(player, 'pause', _this.handlePause);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlayToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-play-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlayToggle.prototype.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n\n\n  PlayToggle.prototype.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  };\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n\n\n  PlayToggle.prototype.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.controlText('Pause');\n  };\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n\n\n  PlayToggle.prototype.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.controlText('Play');\n  };\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  PlayToggle.prototype.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\n\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n* Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in seconds)\n* will force a number of leading zeros to cover the length of the guide.\n*\n* @param {number} seconds\n*        Number of seconds to be turned into a string\n*\n* @param {number} guide\n*        Number (in seconds) to model the string after\n*\n* @return {string}\n*         Time formatted as H:MM:SS or M:SS\n*/\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n\n  return h + m + s;\n};\n\nvar implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime implementation.\n *        Will receive the current time in seconds and the guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\nvar formatTime = function (seconds) {\n  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\n\n  return implementation(seconds, guide);\n};\n\n/**\n * @file time-display.js\n */\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar TimeDisplay = function (_Component) {\n  inherits(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    classCallCheck(this, TimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.throttledUpdateContent = throttle(bind(_this, _this.updateContent), 25);\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TimeDisplay.prototype.createEl = function createEl$$1(plainName) {\n    var className = this.buildCSSClass();\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + ' vjs-time-control vjs-control',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize(this.labelText_) + '\\xA0</span>'\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + '-display'\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off'\n    });\n\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  TimeDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  };\n\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  };\n\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  };\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  TimeDisplay.prototype.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\n\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay = function (_TimeDisplay) {\n  inherits(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    classCallCheck(this, CurrentTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CurrentTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  };\n\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  CurrentTimeDisplay.prototype.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\n    this.updateFormattedTime_(time);\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  CurrentTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay = function (_TimeDisplay) {\n  inherits(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    classCallCheck(this, DurationDisplay);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DurationDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  };\n\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n\n\n  DurationDisplay.prototype.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (duration && this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\n\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider = function (_Component) {\n  inherits(TimeDivider, _Component);\n\n  function TimeDivider() {\n    classCallCheck(this, TimeDivider);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeDivider.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay = function (_TimeDisplay) {\n  inherits(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    classCallCheck(this, RemainingTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  RemainingTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  };\n\n  /**\n   * The remaining time display prefixes numbers with a \"minus\" character.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  RemainingTimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    // TODO: The \"-\" should be decorative, and not announced by a screen reader\n    return '-' + _TimeDisplay.prototype.formatTime_.call(this, time);\n  };\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n\n\n  RemainingTimeDisplay.prototype.updateContent = function updateContent(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  RemainingTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay = function (_Component) {\n  inherits(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    classCallCheck(this, LiveDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.updateShowing();\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LiveDisplay.prototype.createEl = function createEl$$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Stream Type') + '\\xA0</span>' + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  LiveDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n\n\n  LiveDisplay.prototype.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file slider.js\n */\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider = function (_Component) {\n  inherits(Slider, _Component);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function Slider(player, options) {\n    classCallCheck(this, Slider);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.bar = _this.getChild(_this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  Slider.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n\n\n  Slider.prototype.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('focus', this.handleFocus);\n    this.on('blur', this.handleBlur);\n    this.on('click', this.handleClick);\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n\n\n  Slider.prototype.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    var doc = this.bar.el_.ownerDocument;\n\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  };\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Slider.prototype.createEl = function createEl$$1(type) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n\n\n  Slider.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n    blockTextSelection();\n\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('slideractive');\n\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n\n    this.handleMouseMove(event);\n  };\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  Slider.prototype.handleMouseMove = function handleMouseMove(event) {};\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n\n\n  Slider.prototype.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n\n    unblockTextSelection();\n\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('sliderinactive');\n\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n\n    this.update();\n  };\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @returns {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n\n\n  Slider.prototype.update = function update() {\n\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    }\n\n    // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n    var progress = this.getPercent();\n    var bar = this.bar;\n\n    // If there's no bar...\n    if (!bar) {\n      return;\n    }\n\n    // Protect against no duration and other division issues\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    }\n\n    // Convert to a percentage for setting\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style;\n\n    // Set the new bar width or height\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  };\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - postition.x for vertical `Slider`s\n   *         - postition.y for horizontal `Slider`s\n   */\n\n\n  Slider.prototype.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  };\n\n  /**\n   * Handle a `focus` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to run.\n   *\n   * @listens focus\n   */\n\n\n  Slider.prototype.handleFocus = function handleFocus() {\n    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n\n\n  Slider.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepForward();\n    }\n  };\n\n  /**\n   * Handle a `blur` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to run.\n   *\n   * @listens blur\n   */\n\n  Slider.prototype.handleBlur = function handleBlur() {\n    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n\n\n  Slider.prototype.handleClick = function handleClick(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  };\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n\n\n  Slider.prototype.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar = function (_Component) {\n  inherits(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    classCallCheck(this, LoadProgressBar);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.partEls_ = [];\n    _this.on(player, 'progress', _this.update);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LoadProgressBar.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Loaded') + '</span>: 0%</span>'\n    });\n  };\n\n  LoadProgressBar.prototype.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n\n\n  LoadProgressBar.prototype.update = function update(event) {\n    var buffered = this.player_.buffered();\n    var duration = this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n\n    // get the percent width of a time compared to the total end\n    var percentify = function percentify(time, end) {\n      // no NaN\n      var percent = time / end || 0;\n\n      return (percent >= 1 ? 1 : percent) * 100 + '%';\n    };\n\n    // update the width of the progress bar\n    this.el_.style.width = percentify(bufferedEnd, duration);\n\n    // add child elements to represent the individual buffered time ranges\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      }\n\n      // set the percent based on the width of the progress bar (bufferedEnd)\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    }\n\n    // remove unused buffered range elements\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip = function (_Component) {\n  inherits(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    classCallCheck(this, TimeTooltip);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeTooltip.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    });\n  };\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  TimeTooltip.prototype.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    var pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = '-' + pullTooltipBy + 'px';\n    textContent(this.el_, content);\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar = function (_Component) {\n  inherits(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    classCallCheck(this, PlayProgressBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  PlayProgressBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Progress') + '</span>: 0%</span>'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  PlayProgressBar.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var time = _this2.player_.scrubbing() ? _this2.player_.getCache().currentTime : _this2.player_.currentTime();\n\n      var content = formatTime(time, _this2.player_.duration());\n      var timeTooltip = _this2.getChild('timeTooltip');\n\n      if (timeTooltip) {\n        timeTooltip.update(seekBarRect, seekBarPoint, content);\n      }\n    });\n  };\n\n  return PlayProgressBar;\n}(Component);\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices or IE8\nif ((!IE_VERSION || IE_VERSION > 8) && !IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay = function (_Component) {\n  inherits(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    classCallCheck(this, MouseTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.update = throttle(bind(_this, _this.update), 25);\n    return _this;\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  MouseTimeDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  MouseTimeDisplay.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var duration = _this2.player_.duration();\n      var content = formatTime(seekBarPoint * duration, duration);\n\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + 'px';\n      _this2.getChild('timeTooltip').update(seekBarRect, seekBarPoint, content);\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\n\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n// The number of seconds the `step*` functions move the timeline.\nvar STEP_SECONDS = 5;\n\n// The interval at which the bar should update as it progresses.\nvar UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar = function (_Slider) {\n  inherits(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    classCallCheck(this, SeekBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.setEventHandlers_();\n    return _this;\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.setEventHandlers_ = function setEventHandlers_() {\n    var _this2 = this;\n\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n\n    this.on(this.player_, ['playing'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n\n      _this2.updateInterval = _this2.setInterval(function () {\n        _this2.requestAnimationFrame(function () {\n          _this2.update();\n        });\n      }, UPDATE_REFRESH_INTERVAL);\n    });\n\n    this.on(this.player_, ['ended', 'pause', 'waiting'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n    });\n\n    this.on(this.player_, ['timeupdate', 'ended'], this.update);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  SeekBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  };\n\n  /**\n   * This function updates the play progress bar and accessiblity\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessiblity\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.update_ = function update_(currentTime, percent) {\n    var duration = this.player_.duration();\n\n    // machine readable value of progress bar (percentage complete)\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n    // human readable value of progress bar (time complete)\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n    // Update the `PlayProgressBar`.\n    this.bar.update(getBoundingClientRect(this.el_), percent);\n  };\n\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @returns {number}\n   *          The current percent at a number from 0-1\n   */\n\n\n  SeekBar.prototype.update = function update(event) {\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  };\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  };\n\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  SeekBar.prototype.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  };\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n\n\n  SeekBar.prototype.getPercent = function getPercent() {\n    var percent = this.getCurrentTime_() / this.player_.duration();\n\n    return percent >= 1 ? 1 : percent;\n  };\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  SeekBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n\n\n  SeekBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime = this.calculateDistance(event) * this.player_.duration();\n\n    // Don't let video end while scrubbing.\n    if (newTime === this.player_.duration()) {\n      newTime = newTime - 0.1;\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.player_.currentTime(newTime);\n  };\n\n  SeekBar.prototype.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  SeekBar.prototype.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  };\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n\n\n  SeekBar.prototype.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  };\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  };\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  };\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n\n\n  SeekBar.prototype.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down. By\n   * default it will call `this.handleAction` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  SeekBar.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.handleAction(event);\n    } else if (_Slider.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Slider.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices or IE8\nif ((!IE_VERSION || IE_VERSION > 8) && !IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nSeekBar.prototype.playerEvent = 'timeupdate';\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl = function (_Component) {\n  inherits(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    classCallCheck(this, ProgressControl);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.handleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_this, _this.handleMouseSeek), 25);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  ProgressControl.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  };\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n\n\n  ProgressControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n      // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  };\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  ProgressControl.prototype.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  };\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  ProgressControl.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n\n    this.addClass('disabled');\n\n    this.enabled_ = false;\n  };\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  ProgressControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  ProgressControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\n\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file fullscreen-toggle.js\n */\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle = function (_Button) {\n  inherits(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    classCallCheck(this, FullscreenToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[FullscreenApi.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  FullscreenToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-fullscreen-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n\n\n  FullscreenToggle.prototype.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  };\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  FullscreenToggle.prototype.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\n\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel = function (_Component) {\n  inherits(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    classCallCheck(this, VolumeLevel);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  VolumeLevel.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-bar.js\n */\n// Required children\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar = function (_Slider) {\n  inherits(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    classCallCheck(this, VolumeBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.on('slideractive', _this.updateLastVolume_);\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  };\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  VolumeBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n\n\n  VolumeBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  };\n\n  /**\n   * If the player is muted unmute it.\n   */\n\n\n  VolumeBar.prototype.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  };\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n\n\n  VolumeBar.prototype.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  };\n\n  /**\n   * Increase volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  };\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  };\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n\n\n  VolumeBar.prototype.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  };\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n\n\n  VolumeBar.prototype.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  };\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n\n\n  VolumeBar.prototype.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\n\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n// Required children\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl = function (_Component) {\n  inherits(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumeControl);\n\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    checkVolumeSupport(_this, player);\n\n    _this.throttledHandleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n    _this.on('touchstart', _this.handleMouseDown);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n      _this.addClass('vjs-slider-active');\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n      _this.removeClass('vjs-slider-active');\n      _this.trigger('sliderinactive');\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeControl.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-control vjs-control ' + orientationClass\n    });\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  VolumeControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\n\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file mute-toggle.js\n */\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle = function (_Button) {\n  inherits(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    classCallCheck(this, MuteToggle);\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    checkMuteSupport(_this, player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MuteToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-mute-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MuteToggle.prototype.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  };\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n\n\n  MuteToggle.prototype.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  };\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3;\n\n    // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n    if (IS_IOS) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    }\n\n    // TODO improve muted icon classes\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, 'vjs-vol-' + i);\n    }\n    addClass(this.el_, 'vjs-vol-' + level);\n  };\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\n\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n// Required children\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel = function (_Component) {\n  inherits(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumePanel);\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n    return _this;\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  };\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  };\n\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n\n\n  VolumePanel.prototype.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    }\n\n    // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumePanel.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-panel vjs-control ' + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\n\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * @file menu.js\n */\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu = function (_Component) {\n  inherits(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    classCallCheck(this, Menu);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyPress);\n    return _this;\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n\n\n  Menu.prototype.addItem = function addItem(component) {\n    this.addChild(component);\n    component.on('click', bind(this, function (event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton();\n\n        // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere and it logs an error on IE8\n        if (component.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }));\n  };\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n\n\n  Menu.prototype.createEl = function createEl$$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n\n    return el;\n  };\n\n  Menu.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n\n\n  Menu.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepBack();\n    }\n  };\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n\n\n  Menu.prototype.focus = function focus() {\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton = function (_Component) {\n  inherits(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, MenuButton);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n    _this.on(_this.menuButton_, 'focus', _this.handleFocus);\n    _this.on(_this.menuButton_, 'blur', _this.handleBlur);\n\n    _this.on('keydown', _this.handleSubmenuKeyPress);\n    return _this;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  MenuButton.prototype.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n\n\n  MenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, { menuButton: this });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      var title = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n\n      this.hideThreshold_ += 1;\n\n      menu.children_.unshift(title);\n      prependTo(title, menu.contentEl());\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n\n\n  MenuButton.prototype.createItems = function createItems() {};\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuButton.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  };\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n\n\n  MenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + buttonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  MenuButton.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.menuButton_.el();\n\n    return this.menuButton_.controlText(text, el);\n  };\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuButton.prototype.handleClick = function handleClick(event) {\n    // When you click the button it adds focus, which will show the menu.\n    // So we'll remove focus when the mouse leaves the button. Focus is needed\n    // for tab navigation.\n\n    this.one(this.menu.contentEl(), 'mouseleave', bind(this, function (e) {\n      this.unpressButton();\n      this.el_.blur();\n    }));\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  };\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n\n\n  MenuButton.prototype.focus = function focus() {\n    this.menuButton_.focus();\n  };\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n\n\n  MenuButton.prototype.blur = function blur() {\n    this.menuButton_.blur();\n  };\n\n  /**\n   * This gets called when a `MenuButton` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  MenuButton.prototype.handleFocus = function handleFocus() {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when a `MenuButton` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  MenuButton.prototype.handleBlur = function handleBlur() {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n      // Up (38) key or Down (40) key press the 'button'\n    } else if (event.which === 38 || event.which === 40) {\n      if (!this.buttonPressed_) {\n        this.pressButton();\n        event.preventDefault();\n      }\n    }\n  };\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n    }\n  };\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n\n\n  MenuButton.prototype.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  };\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n\n\n  MenuButton.prototype.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  };\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.disable = function disable() {\n    this.unpressButton();\n\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n\n    this.menuButton_.disable();\n  };\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton = function (_MenuButton) {\n  inherits(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    classCallCheck(this, TrackButton);\n\n    var tracks = options.tracks;\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return possibleConstructorReturn(_this);\n    }\n\n    var updateHandler = bind(_this, _this.update);\n\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-item.js\n */\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem = function (_ClickableComponent) {\n  inherits(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    classCallCheck(this, MenuItem);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n    return _this;\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label) + '</span>',\n      tabIndex: -1\n    }, props), attrs);\n  };\n\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuItem.prototype.handleClick = function handleClick(event) {\n    this.selected(true);\n  };\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n\n\n  MenuItem.prototype.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem = function (_MenuItem) {\n  inherits(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    classCallCheck(this, TextTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_this, args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      var event = void 0;\n\n      _this.on(['tap', 'click'], function () {\n        if (_typeof(window.Event) !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    _this.handleTracksChange();\n    return _this;\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  TextTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var kind = this.track.kind;\n    var kinds = this.track.kinds;\n    var tracks = this.player_.textTracks();\n\n    if (!kinds) {\n      kinds = [kind];\n    }\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      if (track === this.track && kinds.indexOf(track.kind) > -1) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  };\n\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  TextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  TextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  TextTrackMenuItem.prototype.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem = function (_TextTrackMenuItem) {\n  inherits(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    classCallCheck(this, OffTextTrackMenuItem);\n\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      kind: options.kind,\n      kinds: options.kinds,\n      'default': false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n    options.multiSelectable = false;\n\n    return possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  OffTextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  OffTextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton = function (_TrackButton) {\n  inherits(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, TextTrackButton);\n\n    options.tracks = player.textTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  TextTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var TrackMenuItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TextTrackMenuItem;\n\n\n    // Label is an overide for the [track] off label\n    // USed to localise captions/subtitles\n    var label = void 0;\n\n    if (this.label_) {\n      label = this.label_ + ' off';\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n\n    this.hideThreshold_ += 1;\n\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n\n        item.addClass('vjs-' + track.kind + '-menu-item');\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem = function (_MenuItem) {\n  inherits(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    classCallCheck(this, ChaptersTrackMenuItem);\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  ChaptersTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  };\n\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n\n\n  ChaptersTrackMenuItem.prototype.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime();\n\n    // vjs.log(currentTime, cue.startTime);\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton = function (_TextTrackButton) {\n  inherits(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    classCallCheck(this, ChaptersButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  ChaptersButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n\n\n  ChaptersButton.prototype.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n    _TextTrackButton.prototype.update.call(this);\n  };\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n\n\n  ChaptersButton.prototype.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  };\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n\n\n  ChaptersButton.prototype.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  };\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n\n\n  ChaptersButton.prototype.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase(this.kind_));\n  };\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n\n\n  ChaptersButton.prototype.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  };\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n\n\n  ChaptersButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, { track: this.track_, cue: cue });\n\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\n\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton = function (_TextTrackButton) {\n  inherits(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    classCallCheck(this, DescriptionsButton);\n\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    var tracks = player.textTracks();\n    var changeHandler = bind(_this, _this.handleTracksChange);\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  DescriptionsButton.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DescriptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  DescriptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\n\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton = function (_TextTrackButton) {\n  inherits(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    classCallCheck(this, SubtitlesButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubtitlesButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubtitlesButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem = function (_TextTrackMenuItem) {\n  inherits(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    classCallCheck(this, CaptionSettingsMenuItem);\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      'default': false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n\n    options.name = 'CaptionSettingsMenuItem';\n\n    var _this = possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n\n    _this.addClass('vjs-texttrack-settings');\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n    return _this;\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  CaptionSettingsMenuItem.prototype.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton = function (_TextTrackButton) {\n  inherits(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    classCallCheck(this, CaptionsButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CaptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  CaptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  CaptionsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.kind_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\n\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem = function (_TextTrackMenuItem) {\n  inherits(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    classCallCheck(this, SubsCapsMenuItem);\n    return possibleConstructorReturn(this, _TextTrackMenuItem.apply(this, arguments));\n  }\n\n  SubsCapsMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Captions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton = function (_TextTrackButton) {\n  inherits(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, SubsCapsButton);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options));\n\n    _this.label_ = 'subtitles';\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubsCapsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubsCapsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  SubsCapsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.label_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem = function (_MenuItem) {\n  inherits(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    classCallCheck(this, AudioTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n\n    _this.addClass('vjs-' + track.kind + '-menu-item');\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  AudioTrackMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Descriptions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  AudioTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      track.enabled = track === this.track;\n    }\n  };\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n\n\n  AudioTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton = function (_TrackButton) {\n  inherits(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, AudioTrackButton);\n\n    options.tracks = player.audioTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  AudioTrackButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  AudioTrackButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n\n\n  AudioTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem = function (_MenuItem) {\n  inherits(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    classCallCheck(this, PlaybackRateMenuItem);\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n    return _this;\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player().playbackRate(this.rate);\n  };\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuItem.prototype.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\n\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton = function (_MenuButton) {\n  inherits(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    classCallCheck(this, PlaybackRateMenuButton);\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    _this.updateVisibility();\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n    _this.on(player, 'ratechange', _this.updateLabel);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  PlaybackRateMenuButton.prototype.createEl = function createEl$$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n\n    el.appendChild(this.labelEl_);\n\n    return el;\n  };\n\n  PlaybackRateMenuButton.prototype.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlaybackRateMenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  PlaybackRateMenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n\n\n  PlaybackRateMenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), { rate: rates[i] + 'x' }));\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Updates ARIA accessibility attributes\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  };\n\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuButton.prototype.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates();\n\n    // this will select first one if the last one currently selected\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n    this.player().playbackRate(newRate);\n  };\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  };\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  };\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  };\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer = function (_Component) {\n  inherits(Spacer, _Component);\n\n  function Spacer() {\n    classCallCheck(this, Spacer);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  Spacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-spacer ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  Spacer.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer = function (_Spacer) {\n  inherits(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    classCallCheck(this, CustomControlSpacer);\n    return possibleConstructorReturn(this, _Spacer.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  CustomControlSpacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-custom-control-spacer ' + _Spacer.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  CustomControlSpacer.prototype.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    });\n\n    // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n    el.innerHTML = '\\xA0';\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n// Required children\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar = function (_Component) {\n  inherits(ControlBar, _Component);\n\n  function ControlBar() {\n    classCallCheck(this, ControlBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ControlBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay = function (_ModalDialog) {\n  inherits(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    classCallCheck(this, ErrorDisplay);\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.on(player, 'error', _this.open);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  ErrorDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-error-display ' + _ModalDialog.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n\n\n  ErrorDisplay.prototype.content = function content() {\n    var error = this.player().error();\n\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\n\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/**\n * @file text-track-settings.js\n */\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\n\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\n\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    'default': 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\n\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\nvar TextTrackSettings = function (_ModalDialog) {\n  inherits(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    classCallCheck(this, TextTrackSettings);\n\n    options.temporary = false;\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.updateDisplay = bind(_this, _this.updateDisplay);\n\n    // fill the modal and pretend we have opened it\n    _this.fill();\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n    return _this;\n  }\n\n  TextTrackSettings.prototype.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElSelect_ = function createElSelect_(key) {\n    var _this2 = this;\n\n    var legendId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'label';\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n\n    return ['<' + type + ' id=\"' + id + '\" class=\"' + (type === 'label' ? 'vjs-label' : '') + '\">', this.localize(config.label), '</' + type + '>', '<select aria-labelledby=\"' + selectLabelledbyIds + '\">'].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n\n      return ['<option id=\"' + optionId + '\" value=\"' + o[0] + '\" ', 'aria-labelledby=\"' + selectLabelledbyIds + ' ' + optionId + '\">', _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  };\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFgColor_ = function createElFgColor_() {\n    var legendId = 'captions-text-legend-' + this.id_;\n\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElBgColor_ = function createElBgColor_() {\n    var legendId = 'captions-background-' + this.id_;\n\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElWinColor_ = function createElWinColor_() {\n    var legendId = 'captions-window-' + this.id_;\n\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  };\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  };\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: ['<button class=\"vjs-default-button\" title=\"' + defaultsDescription + '\">', this.localize('Reset'), '<span class=\"vjs-control-text\"> ' + defaultsDescription + '</span>', '</button>', '<button class=\"vjs-done-button\">' + this.localize('Done') + '</button>'].join('')\n    });\n  };\n\n  TextTrackSettings.prototype.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  TextTrackSettings.prototype.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  TextTrackSettings.prototype.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  TextTrackSettings.prototype.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  };\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  };\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  };\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n\n\n  TextTrackSettings.prototype.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config['default'] : 0;\n\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  };\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n\n\n  TextTrackSettings.prototype.restoreSettings = function restoreSettings() {\n    var values = void 0;\n\n    try {\n      values = JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log$1.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  };\n\n  /**\n   * Save text track settings to localStorage\n   */\n\n\n  TextTrackSettings.prototype.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  };\n\n  /**\n   * Update display of text track settings\n   */\n\n\n  TextTrackSettings.prototype.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    this.off(document, 'keydown', this.handleKeyDown);\n\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager = function (_Component) {\n  inherits(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    classCallCheck(this, ResizeManager);\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    var options_ = mergeOptions({ createEl: !RESIZE_OBSERVER_AVAILABLE }, options);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_));\n\n    _this.ResizeObserver = options.ResizeObserver || window.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, player);\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (_this.el_.contentWindow) {\n          on(_this.el_.contentWindow, 'resize', _this.debouncedHandler_);\n        }\n        _this.off('load', _this.loadListener_);\n      };\n\n      _this.on('load', _this.loadListener_);\n    }\n    return _this;\n  }\n\n  ResizeManager.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager'\n    });\n  };\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n\n\n  ResizeManager.prototype.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger('playerresize');\n  };\n\n  ResizeManager.prototype.dispose = function dispose() {\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.el_ && this.el_.contentWindow) {\n      off(this.el_.contentWindow, 'resize', this.debouncedHandler_);\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nvar innerHTMLDescriptorPolyfill = {};\n\nif (!IS_IE8) {\n  innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n    get: function get() {\n      return this.cloneNode(true).innerHTML;\n    },\n    set: function set(v) {\n      // make a dummy node to use innerHTML on\n      var dummy = document.createElement(this.nodeName.toLowerCase());\n\n      // set innerHTML to the value provided\n      dummy.innerHTML = v;\n\n      // make a document fragment to hold the nodes from dummy\n      var docFrag = document.createDocumentFragment();\n\n      // copy all of the nodes created by the innerHTML on dummy\n      // to the document fragment\n      while (dummy.childNodes.length) {\n        docFrag.appendChild(dummy.childNodes[0]);\n      }\n\n      // remove content\n      this.innerText = '';\n\n      // now we add all of that html in one by appending the\n      // document fragment. This is how innerHTML does it.\n      window.Element.prototype.appendChild.call(this, docFrag);\n\n      // then return the result that innerHTML's setter would\n      return this.innerHTML;\n    }\n  });\n}\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window.HTMLMediaElement.prototype, window.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n\n/**\n * Patches browser internal functions so that we can tell syncronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n\n      sourcesetLoad(tech);\n\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\nvar srcDescriptorPolyfill = {};\n\nif (!IS_IE8) {\n  srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n    get: function get() {\n      if (this.hasAttribute('src')) {\n        return getAbsoluteURL(window.Element.prototype.getAttribute.call(this, 'src'));\n      }\n\n      return '';\n    },\n    set: function set(v) {\n      window.Element.prototype.setAttribute.call(this, 'src', v);\n\n      return v;\n    }\n  });\n}\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nvar _templateObject$2 = taggedTemplateLiteralLoose(['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.'], ['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.']);\n\n/**\n * @file html5.js\n */\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SouceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 = function (_Tech) {\n  inherits(Html5, _Tech);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Html5(options, ready) {\n    classCallCheck(this, Html5);\n\n    var _this = possibleConstructorReturn(this, _Tech.call(this, options, ready));\n\n    var source = options.source;\n    var crossoriginTracks = false;\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n            _this.remoteTextTracks().addTrack(node.track);\n            _this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn(tsml(_templateObject$2));\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    _this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n    return _this;\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  Html5.prototype.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    _Tech.prototype.dispose.call(this);\n  };\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n\n\n  Html5.prototype.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  };\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState = void 0;\n\n    // captures a snapshot of every metadata track's current state\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  };\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this2 = this;\n\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n      var elTracks = _this2.el()[props.getterName];\n      var techTracks = _this2[props.getterName]();\n\n      if (!_this2['featuresNative' + props.capitalName + 'Tracks'] || !elTracks || !elTracks.addEventListener) {\n        return;\n      }\n      var listeners = {\n        change: function change(e) {\n          techTracks.trigger({\n            type: 'change',\n            target: techTracks,\n            currentTarget: techTracks,\n            srcElement: techTracks\n          });\n        },\n        addtrack: function addtrack(e) {\n          techTracks.addTrack(e.track);\n        },\n        removetrack: function removetrack(e) {\n          techTracks.removeTrack(e.track);\n        }\n      };\n      var removeOldTracks = function removeOldTracks() {\n        var removeTracks = [];\n\n        for (var i = 0; i < techTracks.length; i++) {\n          var found = false;\n\n          for (var j = 0; j < elTracks.length; j++) {\n            if (elTracks[j] === techTracks[i]) {\n              found = true;\n              break;\n            }\n          }\n\n          if (!found) {\n            removeTracks.push(techTracks[i]);\n          }\n        }\n\n        while (removeTracks.length) {\n          techTracks.removeTrack(removeTracks.shift());\n        }\n      };\n\n      Object.keys(listeners).forEach(function (eventName) {\n        var listener = listeners[eventName];\n\n        elTracks.addEventListener(eventName, listener);\n        _this2.on('dispose', function (e) {\n          return elTracks.removeEventListener(eventName, listener);\n        });\n      });\n\n      // Remove (native) tracks that are not used anymore\n      _this2.on('loadstart', removeOldTracks);\n      _this2.on('dispose', function (e) {\n        return _this2.off('loadstart', removeOldTracks);\n      });\n    });\n  };\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Html5.prototype.createEl = function createEl$$1() {\n    var el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video');\n\n        // determine if native controls should be used\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          'class': 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  };\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n\n\n  Html5.prototype.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    var eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  };\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n\n\n  Html5.prototype.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  };\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n\n\n  Html5.prototype.duration = function duration() {\n    var _this3 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this3.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this3.el_.duration === Infinity) {\n            _this3.trigger('durationchange');\n          }\n          _this3.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  };\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n\n\n  Html5.prototype.width = function width() {\n    return this.el_.offsetWidth;\n  };\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The heigth of the HTML5 media element.\n   */\n\n\n  Html5.prototype.height = function height() {\n    return this.el_.offsetHeight;\n  };\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n\n\n  Html5.prototype.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this4 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', { isFullscreen: false });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n\n        this.trigger('fullscreenchange', { isFullscreen: true });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this4.off('webkitbeginfullscreen', beginFn);\n      _this4.off('webkitendfullscreen', endFn);\n    });\n  };\n\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n\n\n  Html5.prototype.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window.navigator && window.navigator.userAgent || '';\n\n      // Seems to be broken in Chromium/Chrome && Safari in Leopard\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n\n\n  Html5.prototype.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play();\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  };\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n\n\n  Html5.prototype.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  };\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  Html5.prototype.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(_src);\n  };\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n\n\n  Html5.prototype.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  };\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n\n\n  Html5.prototype.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  };\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n\n\n  Html5.prototype.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Html5.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  };\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to intialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Html5.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options['default']) {\n      htmlTrackElement['default'] = options['default'];\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {Boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Html5.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n\n\n  Html5.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n\n\n  Html5.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window.performance && typeof window.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window.performance.now();\n    } else if (window.performance && window.performance.timing && typeof window.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window.Date.now() - window.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\nif (isReal()) {\n\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE9 with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted;\n\n    // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n    Html5.TEST_VID.muted = !muted;\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overriden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  if (IS_IE8) {\n    return false;\n  }\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', { get: noop, set: noop });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n\n/**\n * Boolean indicating wether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggred instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggred instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks();\n\n// HTML5 Feature detection and Device Fixes --------------------------------- //\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\nvar mp4RE = /^video\\/mp4/i;\n\nHtml5.patchCanPlayType = function () {\n\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n\n    // Override Android 2.2 and less canPlayType method which is broken\n  } else if (IS_OLD_ANDROID) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mp4RE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n};\n\n// by default, patch the media element\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occured during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - Flase indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NEWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n\n/**\n * Get the value of `videoHeight` from the video element. `videoHeigth` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\n\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @proprety {Tech~SourceObject} source\n *        The source object\n *\n * @proprety {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE9 on Windows 7 without MediaPlayer throws an error here\n  // https://github.com/videojs/video.js/issues/519\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n\n    return Html5.nativeSourceHandler.canPlayType('video/' + ext);\n  }\n\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\n\nTech.registerTech('Html5', Html5);\n\nvar _templateObject$1 = taggedTemplateLiteralLoose(['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      '], ['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      ']);\n\n/**\n * @file player.js\n */\n// Subclasses Component\n// The following imports are used only to ensure that the corresponding modules\n// are always included in the video.js package. Importing the modules will\n// execute them and they will register themselves with video.js.\n// Import Html5 tech, at least for disposing the original video tag.\n// The following tech events are simply re-triggered\n// on the player when they happen\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player = function (_Component) {\n  inherits(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    classCallCheck(this, Player);\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || 'vjs_video_' + newGUID();\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n          element = element.parentNode;\n        }\n      }\n    }\n\n    // Run base component initializing with new options\n\n    // Tracks when a tech changes the poster\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    _this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    _this.isReady_ = false;\n\n    // Init state hasStarted_\n    _this.hasStarted_ = false;\n\n    // Init state userActive_\n    _this.userActive_ = false;\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    _this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    _this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    _this.language(_this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n\n      Object.getOwnPropertyNames(options.languages).forEach(function (name$$1) {\n        languagesToLower[name$$1.toLowerCase()] = options.languages[name$$1];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    // Cache for video property values.\n    _this.cache_ = {};\n\n    // Set poster\n    _this.poster_ = options.poster || '';\n\n    // Set controls\n    _this.controls_ = !!options.controls;\n\n    // Set default values for lastVolume\n    _this.cache_.lastVolume = 1;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n\n    // the attribute overrides the option\n    if (tag.hasAttribute('autoplay')) {\n      _this.options_.autoplay = true;\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    }\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    _this.scrubbing_ = false;\n\n    _this.el_ = _this.createEl();\n\n    // Set default value for lastPlaybackRate\n    _this.cache_.lastPlaybackRate = _this.defaultPlaybackRate();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(_this, { eventBusKey: 'el_' });\n\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    var playerOptionsCopy = mergeOptions(_this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      var plugins = options.plugins;\n\n      Object.keys(plugins).forEach(function (name$$1) {\n        if (typeof this[name$$1] === 'function') {\n          this[name$$1](plugins[name$$1]);\n        } else {\n          throw new Error('plugin \"' + name$$1 + '\" does not exist');\n        }\n      }, _this);\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n\n    _this.middleware_ = [];\n\n    _this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    _this.el_.setAttribute('role', 'region');\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // if (browser.TOUCH_ENABLED) {\n    //   this.addClass('vjs-touch-enabled');\n    // }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[_this.id_] = _this;\n\n    // Add a major version class to aid css in plugins\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass('vjs-v' + majorVersion);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    _this.userActive(true);\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n    _this.on('fullscreenchange', _this.handleFullscreenChange_);\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.changingSrc_ = false;\n    _this.playWaitingForReady_ = false;\n    _this.playOnLoadstart_ = null;\n    return _this;\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  Player.prototype.dispose = function dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this);\n\n    // the actual .el_ is removed here\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  Player.prototype.createEl = function createEl$$1() {\n    var tag = this.tag;\n    var el = void 0;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n\n      playerElIngest = this.playerElIngest_ = el;\n\n      // copy over properties from the video-js element\n      // ie8 doesn't support Object.keys nor hasOwnProperty\n      // on dom elements so we have to specify properties individually\n      ['autoplay', 'controls', 'crossOrigin', 'defaultMuted', 'defaultPlaybackRate', 'loop', 'muted', 'playbackRate', 'src', 'volume'].forEach(function (prop) {\n        if (typeof el[prop] !== 'undefined') {\n          tag[prop] = el[prop];\n        }\n      });\n    }\n\n    // set tabindex to -1 to remove the video element from the focus order\n    tag.setAttribute('tabindex', '-1');\n    // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button)\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 if JAWS is not being used\n    if (IE_VERSION) {\n      tag.setAttribute('role', 'application');\n    }\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // workaround so we don't totally break IE7\n      // http://stackoverflow.com/questions/3653444/css-styles-not-applied-on-dynamic-elements-in-internet-explorer-7\n      if (attr === 'class') {\n        el.className += ' ' + attrs[attr];\n\n        if (divEmbed) {\n          tag.className += ' ' + attrs[attr];\n        }\n      } else {\n        el.setAttribute(attr, attrs[attr]);\n\n        if (divEmbed) {\n          tag.setAttribute(attr, attrs[attr]);\n        }\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n    if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n\n    // Hide any links within the video/audio tag, because IE doesn't hide them completely.\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n\n    this.el_ = el;\n\n    return el;\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n\n\n  Player.prototype.width = function width(value) {\n    return this.dimension('width', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n\n\n  Player.prototype.height = function height(value) {\n    return this.dimension('height', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n\n\n  Player.prototype.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log$1.error('Improper value \"' + value + '\" supplied for for ' + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  };\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will toggle the fluid class.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n\n\n  Player.prototype.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n\n\n  Player.prototype.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n\n\n  Player.prototype.updateStyleEl_ = function updateStyleEl_() {\n    if (window.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width = void 0;\n    var height = void 0;\n    var aspectRatio = void 0;\n    var idClass = void 0;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n\n    setTextContent(this.styleEl_, '\\n      .' + idClass + ' {\\n        width: ' + width + 'px;\\n        height: ' + height + 'px;\\n      }\\n\\n      .' + idClass + '.vjs-fluid {\\n        padding-top: ' + ratioMultiplier * 100 + '%;\\n      }\\n    ');\n  };\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n\n\n  Player.prototype.loadTech_ = function loadTech_(techName, source) {\n    var _this2 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay();\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + '_' + titleTechName + '_api',\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      techOptions[props.getterName] = _this2[props.privateName];\n    });\n\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error('No Tech named \\'' + titleTechName + '\\' exists! \\'' + titleTechName + '\\' should be registered using videojs.registerTech()\\'');\n    }\n\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this2.on(_this2.tech_, event, _this2['handleTech' + toTitleCase(event) + '_']);\n    });\n\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this2.on(_this2.tech_, event, function (eventObj) {\n        if (_this2.tech_.playbackRate() === 0 && _this2.tech_.seeking()) {\n          _this2.queuedCallbacks_.push({\n            callback: _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'].bind(_this2),\n            event: eventObj\n          });\n          return;\n        }\n        _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'](eventObj);\n      });\n    });\n\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  };\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n\n\n  Player.prototype.unloadTech_ = function unloadTech_() {\n    var _this3 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      _this3[props.privateName] = _this3[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n\n    this.isReady_ = false;\n\n    this.tech_.dispose();\n\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  };\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n\n\n  Player.prototype.tech = function tech(safety) {\n    if (safety === undefined) {\n      log$1.warn(tsml(_templateObject$1));\n    }\n\n    return this.tech_;\n  };\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n\n\n  Player.prototype.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n\n    // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n    this.on(this.tech_, 'mousedown', this.handleTechClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  };\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n\n\n  Player.prototype.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mousedown', this.handleTechClick_);\n  };\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n\n\n  Player.prototype.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n\n    // Chrome and Safari both have issues with autoplay.\n    // In Safari (5.1.1), when we move the video element into the container div, autoplay doesn't work.\n    // In Chrome (15), if you have autoplay + a poster + no controls, the video gets hidden (but audio plays)\n    // This fixes both issues. Need to wait for API, so it updates displays correctly\n    if ((this.src() || this.currentSrc()) && this.tag && this.options_.autoplay && this.paused()) {\n      try {\n        // Chrome Fix. Fixed in Chrome v16.\n        delete this.tag.poster;\n      } catch (e) {\n        log$1('deleting tag.poster throws in some browsers', e);\n      }\n    }\n  };\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n\n    // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n    this.manualAutoplay_(this.autoplay());\n  };\n\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n\n\n  Player.prototype.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this4 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this4.muted();\n\n      _this4.muted(true);\n\n      var playPromise = _this4.play();\n\n      if (!playPromise || !playPromise.then || !playPromise['catch']) {\n        return;\n      }\n\n      return playPromise['catch'](function (e) {\n        // restore old value of muted on failure\n        _this4.muted(previouslyMuted);\n      });\n    };\n\n    var promise = void 0;\n\n    if (type === 'any') {\n      promise = this.play();\n\n      if (promise && promise.then && promise['catch']) {\n        promise['catch'](function () {\n          return muted();\n        });\n      }\n    } else if (type === 'muted') {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!promise || !promise.then || !promise['catch']) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this4.trigger({ type: 'autoplay-success', autoplay: type });\n    })['catch'](function (e) {\n      _this4.trigger({ type: 'autoplay-failure', autoplay: type });\n    });\n  };\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n\n\n  Player.prototype.updateSourceCaches_ = function updateSourceCaches_() {\n    var srcObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n\n    // if we are a blob url, don't update the source cache\n    // blob urls can arise when playback is done via Media Source Extension (MSE)\n    // such as m3u8 sources with @videojs/http-streaming (VHS)\n    if (/^blob:/.test(src)) {\n      return;\n    }\n\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = mergeOptions({}, srcObj, { src: src, type: type });\n\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  };\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n\n\n  Player.prototype.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this5 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      // update the source to the intial source right away\n      // in some cases this will be empty string\n      this.updateSourceCaches_(event.src);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            _this5.updateSourceCaches_(_this5.techGet_('currentSrc'));\n          }\n\n          _this5.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  };\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n\n\n  Player.prototype.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  };\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n    this.trigger('play');\n  };\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n\n\n  Player.prototype.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  };\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n\n\n  Player.prototype.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this6 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n    this.trigger('waiting');\n    this.one('timeupdate', function () {\n      return _this6.removeClass('vjs-waiting');\n    });\n  };\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplay');\n  };\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplaythrough');\n  };\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n    this.trigger('playing');\n  };\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeking');\n  };\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeked');\n  };\n\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n\n\n  Player.prototype.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log$1.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n    this.trigger('firstplay');\n  };\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n\n\n  Player.prototype.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n    this.trigger('pause');\n  };\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n\n\n  Player.prototype.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n    this.trigger('ended');\n  };\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  };\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mousedown\n   * @private\n   */\n\n\n  Player.prototype.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  };\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n\n\n  Player.prototype.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  };\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  };\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  };\n\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  };\n\n  /**\n   * Fired when the player switches in or out of fullscreen mode\n   *\n   * @private\n   * @listens Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleFullscreenChange_ = function handleFullscreenChange_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  };\n\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n\n\n  Player.prototype.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  };\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('fullscreenchange');\n  };\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n\n\n  Player.prototype.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n\n    this.error(error);\n  };\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n\n\n  Player.prototype.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n    this.trigger('textdata', data);\n  };\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n\n\n  Player.prototype.getCache = function getCache() {\n    return this.cache_;\n  };\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n\n\n  Player.prototype.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set$1(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  };\n\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n\n\n  Player.prototype.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get$1(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1('Video.js: ' + method + ' method not defined for ' + this.techName_ + ' playback technology.', e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log$1('Video.js: ' + method + ' unavailable on ' + this.techName_ + ' playback technology element.', e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log$1(e);\n      throw e;\n    }\n  };\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n\n\n  Player.prototype.play = function play() {\n    var _this7 = this;\n\n    var PromiseClass = this.options_.Promise || window.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this7.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  };\n\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n\n\n  Player.prototype.play_ = function play_() {\n    var _this8 = this;\n\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : silencePromise;\n\n    // If this is called while we have a play queued up on a loadstart, remove\n    // that listener to avoid getting in a potentially bad state.\n    if (this.playOnLoadstart_) {\n      this.off('loadstart', this.playOnLoadstart_);\n    }\n\n    // If the player/tech is not ready, queue up another call to `play()` for\n    // when it is. This will loop back into this method for another attempt at\n    // playback when the tech is ready.\n    if (!this.isReady_) {\n\n      // Bail out if we're already waiting for `ready`!\n      if (this.playWaitingForReady_) {\n        return;\n      }\n\n      this.playWaitingForReady_ = true;\n      this.ready(function () {\n        _this8.playWaitingForReady_ = false;\n        callback(_this8.play());\n      });\n\n      // If the player/tech is ready and we have a source, we can attempt playback.\n    } else if (!this.changingSrc_ && (this.src() || this.currentSrc())) {\n      callback(this.techGet_('play'));\n      return;\n\n      // If the tech is ready, but we do not have a source, we'll need to wait\n      // for both the `ready` and a `loadstart` when the source is finally\n      // resolved by middleware and set on the player.\n      //\n      // This can happen if `play()` is called while changing sources or before\n      // one has been set on the player.\n    } else {\n\n      this.playOnLoadstart_ = function () {\n        _this8.playOnLoadstart_ = null;\n        callback(_this8.play());\n      };\n\n      this.one('loadstart', this.playOnLoadstart_);\n    }\n  };\n\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n\n\n  Player.prototype.pause = function pause() {\n    this.techCall_('pause');\n  };\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n\n\n  Player.prototype.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  };\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n\n\n  Player.prototype.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  };\n\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        wether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n\n\n  Player.prototype.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  };\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n\n\n  Player.prototype.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    }\n\n    // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  };\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n\n\n  Player.prototype.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds);\n\n    // Standardize on Inifity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      /**\n       * @event Player#durationchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('durationchange');\n    }\n  };\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  };\n\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  };\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n\n\n  Player.prototype.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  };\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is bufferred 0 being 0% and 1 being 100%\n   */\n\n\n  Player.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  };\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n\n\n  Player.prototype.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  };\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n\n\n  Player.prototype.volume = function volume(percentAsDecimal) {\n    var vol = void 0;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  };\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n\n\n  Player.prototype.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  };\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on intial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n\n\n  Player.prototype.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  };\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n\n\n  Player.prototype.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  };\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n\n\n  Player.prototype.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  };\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n\n\n  Player.prototype.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      return;\n    }\n    return !!this.isFullscreen_;\n  };\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.requestFullscreen = function requestFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(true);\n\n    if (fsApi.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, fsApi.fullscreenchange, bind(this, function documentFullscreenChange(e) {\n        this.isFullscreen(document[fsApi.fullscreenElement]);\n\n        // If cancelling fullscreen, remove event listener.\n        if (this.isFullscreen() === false) {\n          off(document, fsApi.fullscreenchange, documentFullscreenChange);\n        }\n        /**\n         * @event Player#fullscreenchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('fullscreenchange');\n      }));\n\n      this.el_[fsApi.requestFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.exitFullscreen = function exitFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(false);\n\n    // Check for browser element fullscreen support\n    if (fsApi.requestFullscreen) {\n      document[fsApi.exitFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n\n\n  Player.prototype.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document, 'keydown', bind(this, this.fullWindowOnEscKey));\n\n    // Hide any scroll bars\n    document.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('enterFullWindow');\n  };\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n\n\n  Player.prototype.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (event.keyCode === 27) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  };\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n\n\n  Player.prototype.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.fullWindowOnEscKey);\n\n    // Unhide scroll bars.\n    document.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('exitFullWindow');\n  };\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Player.prototype.canPlayType = function canPlayType(type) {\n    var can = void 0;\n\n    // Loop through each playback technology in the options order\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n\n\n  Player.prototype.selectSource = function selectSource(sources) {\n    var _this9 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found = void 0;\n\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n\n      return found;\n    };\n\n    var foundSourceAndTech = void 0;\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this9.options_[techName.toLowerCase()])) {\n        return { source: source, tech: techName };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  };\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n\n\n  Player.prototype.src = function src(source) {\n    var _this10 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    var sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n      }, 0);\n      return;\n    }\n\n    // intial sources\n    this.changingSrc_ = true;\n\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this10.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      _this10.cache_.sources = sources;\n      _this10.updateSourceCaches_(middlewareSource);\n\n      var err = _this10.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this10.src(sources.slice(1));\n        }\n\n        _this10.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        _this10.setTimeout(function () {\n          this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        _this10.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this10.tech_);\n    });\n  };\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates wether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {Boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n\n\n  Player.prototype.src_ = function src_(source) {\n    var _this11 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this11.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n\n    return false;\n  };\n\n  /**\n   * Begin loading the src data.\n   */\n\n\n  Player.prototype.load = function load() {\n    this.techCall_('load');\n  };\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * and calls `reset` on the tech`.\n   */\n\n\n  Player.prototype.reset = function reset() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n  };\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n\n\n  Player.prototype.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  };\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n\n\n  Player.prototype.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  };\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjuction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n\n\n  Player.prototype.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  };\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n\n\n  Player.prototype.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  };\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false maens that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n\n\n  Player.prototype.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  };\n\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n\n\n  Player.prototype.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay = void 0;\n\n    // if the value is a valid string set it to that\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false;\n\n      // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false;\n\n      // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = techAutoplay || this.options_.autoplay;\n\n    // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  };\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n\n\n  Player.prototype.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n    return this.techGet_('playsinline');\n  };\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {string}\n   *         The current value of loop when getting\n   */\n\n\n  Player.prototype.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  };\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n\n\n  Player.prototype.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('posterchange');\n  };\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  };\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n\n\n  Player.prototype.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  };\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n\n\n  Player.prototype.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  };\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n\n\n  Player.prototype.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // ie8 just logs \"[object object]\" if you just log the error object\n    log$1.error('(CODE:' + this.error_.code + ' ' + MediaError.errorTypes[this.error_.code] + ')', this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n    this.trigger('error');\n\n    return;\n  };\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n\n\n  Player.prototype.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  };\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n\n\n  Player.prototype.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('userinactive');\n  };\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n\n\n  Player.prototype.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress = void 0;\n    var lastMoveX = void 0;\n    var lastMoveY = void 0;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    var inactivityTimeout = void 0;\n\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  };\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n\n\n  Player.prototype.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the intial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n\n\n  Player.prototype.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n\n\n  Player.prototype.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  };\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n\n\n  Player.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  };\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Player.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  };\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n\n\n  Player.prototype.removeRemoteTextTrack = function removeRemoteTextTrack() {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref3$track = _ref3.track,\n        track = _ref3$track === undefined ? arguments[0] : _ref3$track;\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n\n\n  Player.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  };\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n\n\n  Player.prototype.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  };\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n\n\n  Player.prototype.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  };\n\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the lanugage\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n\n\n  Player.prototype.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  };\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n\n\n  Player.prototype.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  };\n\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n\n\n  Player.prototype.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  };\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n\n\n  Player.prototype.createModal = function createModal(content, options) {\n    var _this12 = this;\n\n    options = options || {};\n    options.content = content || '';\n\n    var modal = new ModalDialog(this, options);\n\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this12.removeChild(modal);\n    });\n\n    modal.open();\n    return modal;\n  };\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log$1.error(err);\n      }\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  };\n\n  /**\n   * Determine wether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n\n\n  Player.prototype.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i');\n\n    // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style ||\n    // IE10-specific (2012 flex spec)\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name$$1) {\n  var props = ALL[name$$1];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Global player list\n *\n * @type {Object}\n */\nPlayer.players = {};\n\nvar navigator = window.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n\n  html5: {},\n  flash: {},\n\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'controlBar', 'errorDisplay', 'textTrackSettings'],\n\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n\n  // locales and their language translations\n  languages: {},\n\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.'\n};\n\nif (!IS_IE8) {\n  Player.prototype.options_.children.push('resizeManager');\n}\n\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\n\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype['handleTech' + toTitleCase(event) + '_'] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nvar BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nvar pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {boolean}\n *          Whether or not the plugin has been registered.\n */\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {Function|undefined}\n *          The plugin (or undefined).\n */\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {Boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @returns {Function}\n *          A wrapper function for the given plugin.\n */\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: null }, true);\n\n    var instance = plugin.apply(this, arguments);\n\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: instance });\n\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @returns {Function}\n */\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n\n  return function () {\n    triggerSetupEvent(this, { name: name, plugin: PluginSubClass, instance: null }, true);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = new (Function.prototype.bind.apply(PluginSubClass, [null].concat([this].concat(args))))();\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\nvar Plugin = function () {\n\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    classCallCheck(this, Plugin);\n\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player;\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = bind(this, this.dispose);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  Plugin.prototype.version = function version() {\n    return this.constructor.VERSION;\n  };\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @returns {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n\n\n  Plugin.prototype.getEventHash = function getEventHash() {\n    var hash = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  };\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @returns {boolean}\n   *          Whether or not default was prevented.\n   */\n\n\n  Plugin.prototype.trigger = function trigger$$1(event) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  };\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n\n\n  Plugin.prototype.handleStateChanged = function handleStateChanged(e) {};\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n\n\n  Plugin.prototype.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  };\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @returns {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  };\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @returns {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error('Illegal plugin name, \"' + name + '\", must be a string, was ' + (typeof name === 'undefined' ? 'undefined' : _typeof(name)) + '.');\n    }\n\n    if (pluginExists(name)) {\n      log$1.warn('A plugin named \"' + name + '\" already exists. You may want to avoid re-registering plugins!');\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error('Illegal plugin name, \"' + name + '\", cannot share a name with an existing player method!');\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error('Illegal plugin for \"' + name + '\", must be a function, was ' + (typeof plugin === 'undefined' ? 'undefined' : _typeof(plugin)) + '.');\n    }\n\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  };\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param {string} name\n   *        The name of the plugin to be deregistered.\n   */\n\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  };\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @returns {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n\n\n  Plugin.getPlugins = function getPlugins() {\n    var names = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.keys(pluginStorage);\n\n    var result = void 0;\n\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n\n    return result;\n  };\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @returns {string}\n   *          The plugin's version or an empty string.\n   */\n\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n\n/**\n * Function for subclassing using the same inheritance that\n * videojs uses internally\n *\n * @static\n * @const\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @param {Object} [subClassMethods={}]\n *        The class to inherit to\n *\n * @return {Object}\n *         The new object with subClassMethods that inherited superClass.\n */\nvar extendFn = function extendFn(superClass) {\n  var subClassMethods = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if ((typeof subClassMethods === 'undefined' ? 'undefined' : _typeof(subClassMethods)) === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass);\n\n  // Extend subObj's prototype with functions and other properties from props\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n// Include the built-in techs\n// HTML5 Element Shim for IE8\nif (typeof HTMLVideoElement === 'undefined' && isReal()) {\n  document.createElement('video');\n  document.createElement('audio');\n  document.createElement('track');\n  document.createElement('video-js');\n}\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @returns {string}\n *          The string, without any leading `#`.\n */\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n\n/**\n * Doubles as the main function for users to create a player instance and also\n * the main library object.\n * The `videojs` function can be used to initialize or retrieve a player.\n  *\n * @param {string|Element} id\n *        Video element or video element ID\n *\n * @param {Object} [options]\n *        Optional options object for config/settings\n *\n * @param {Component~ReadyCallback} [ready]\n *        Optional ready callback\n *\n * @return {Player}\n *         A player instance\n */\nfunction videojs(id, options, ready) {\n  var player = videojs.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log$1.warn('Player \"' + id + '\" is already initialised. Options will not be applied.');\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  if (!document.body.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n\n  videojs.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  var PlayerComponent = Component.getComponent('Player');\n\n  player = new PlayerComponent(el, options, ready);\n\n  videojs.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n\n  return player;\n}\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n */\nvideojs.hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n * @function videojs.hooks\n *\n * @param {string} type\n *        the lifecyle to get hooks from\n *\n * @param {Function|Function[]} [fn]\n *        Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nvideojs.hooks = function (type, fn) {\n  videojs.hooks_[type] = videojs.hooks_[type] || [];\n  if (fn) {\n    videojs.hooks_[type] = videojs.hooks_[type].concat(fn);\n  }\n  return videojs.hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs.hook = function (type, fn) {\n  videojs.hooks(type, fn);\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs.hookOnce = function (type, fn) {\n  videojs.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs.removeHook(type, wrapper);\n      return original.apply(undefined, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle that the function hooked to\n *\n * @param {Function} fn\n *        The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nvideojs.removeHook = function (type, fn) {\n  var index = videojs.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs.hooks_[type] = videojs.hooks_[type].slice();\n  videojs.hooks_[type].splice(index, 1);\n\n  return true;\n};\n\n// Add default styles\nif (window.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style = $('.vjs-styles-defaults');\n\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n    setTextContent(style, '\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    ');\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs);\n\n/**\n * Current software version. Follows semver.\n *\n * @type {string}\n */\nvideojs.VERSION = version;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs.getPlayers = function () {\n  return Player.players;\n};\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @returns {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs.getPlayer = function (id) {\n  var players = Player.players;\n  var tag = void 0;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs.getAllPlayers = function () {\n  return (\n\n    // Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\n/**\n * Expose players object.\n *\n * @memberOf videojs\n * @property {Object} players\n */\nvideojs.players = Player.players;\n\n/**\n * Get a component class object by name\n *\n * @borrows Component.getComponent as videojs.getComponent\n */\nvideojs.getComponent = Component.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\nvideojs.registerComponent = function (name$$1, comp) {\n  if (Tech.isTech(comp)) {\n    log$1.warn('The ' + name$$1 + ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)');\n  }\n\n  Component.registerComponent.call(Component, name$$1, comp);\n};\n\n/**\n * Get a Tech class object by name\n *\n * @borrows Tech.getTech as videojs.getTech\n */\nvideojs.getTech = Tech.getTech;\n\n/**\n * Register a Tech so it can referred to by name.\n * This is used in the tech order for the player.\n *\n * @borrows Tech.registerTech as videojs.registerTech\n */\nvideojs.registerTech = Tech.registerTech;\n\n/**\n * Register a middleware to a source type.\n *\n * @param {String} type A string representing a MIME type.\n * @param {function(player):object} middleware A middleware factory that takes a player.\n */\nvideojs.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @memberOf {videojs}\n * @property {object} middleware.TERMINATOR\n */\n// Object.defineProperty is not available in IE8\nif (!IS_IE8 && Object.defineProperty) {\n  Object.defineProperty(videojs, 'middleware', {\n    value: {},\n    writeable: false,\n    enumerable: true\n  });\n\n  Object.defineProperty(videojs.middleware, 'TERMINATOR', {\n    value: TERMINATOR,\n    writeable: false,\n    enumerable: true\n  });\n} else {\n  videojs.middleware = { TERMINATOR: TERMINATOR };\n}\n\n/**\n * A suite of browser and device tests from {@link browser}.\n *\n * @type {Object}\n * @private\n */\nvideojs.browser = browser;\n\n/**\n * Whether or not the browser supports touch events. Included for backward\n * compatibility with 4.x, but deprecated. Use `videojs.browser.TOUCH_ENABLED`\n * instead going forward.\n *\n * @deprecated since version 5.0\n * @type {boolean}\n */\nvideojs.TOUCH_ENABLED = TOUCH_ENABLED;\n\n/**\n * Subclass an existing class\n * Mimics ES6 subclassing with the `extend` keyword\n *\n * @borrows extend:extendFn as videojs.extend\n */\nvideojs.extend = extendFn;\n\n/**\n * Merge two options objects recursively\n * Performs a deep merge like lodash.merge but **only merges plain objects**\n * (not arrays, elements, anything else)\n * Other values will be copied directly from the second object.\n *\n * @borrows merge-options:mergeOptions as videojs.mergeOptions\n */\nvideojs.mergeOptions = mergeOptions;\n\n/**\n * Change the context (this) of a function\n *\n * > NOTE: as of v5.0 we require an ES5 shim, so you should use the native\n * `function() {}.bind(newContext);` instead of this.\n *\n * @borrows fn:bind as videojs.bind\n */\nvideojs.bind = bind;\n\n/**\n * Register a Video.js plugin.\n *\n * @borrows plugin:registerPlugin as videojs.registerPlugin\n * @method registerPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be registered. Must be a string and\n *         must not match an existing plugin or a method on the `Player`\n *         prototype.\n *\n * @param  {Function} plugin\n *         A sub-class of `Plugin` or a function for basic plugins.\n *\n * @return {Function}\n *         For advanced plugins, a factory function for that plugin. For\n *         basic plugins, a wrapper function that initializes the plugin.\n */\nvideojs.registerPlugin = Plugin.registerPlugin;\n\n/**\n * Deregister a Video.js plugin.\n *\n * @borrows plugin:deregisterPlugin as videojs.deregisterPlugin\n * @method deregisterPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be deregistered. Must be a string and\n *         must match an existing plugin or a method on the `Player`\n *         prototype.\n *\n */\nvideojs.deregisterPlugin = Plugin.deregisterPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated\n *        videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\nvideojs.plugin = function (name$$1, plugin) {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name$$1, plugin);\n};\n\n/**\n * Gets an object containing multiple Video.js plugins.\n *\n * @param  {Array} [names]\n *         If provided, should be an array of plugin names. Defaults to _all_\n *         plugin names.\n *\n * @return {Object|undefined}\n *         An object containing plugin(s) associated with their name(s) or\n *         `undefined` if no matching plugins exist).\n */\nvideojs.getPlugins = Plugin.getPlugins;\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {Function|undefined}\n *         The plugin (or `undefined`).\n */\nvideojs.getPlugin = Plugin.getPlugin;\n\n/**\n * Gets a plugin's version, if available\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {string}\n *         The plugin's version or an empty string.\n */\nvideojs.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n\n  videojs.options.languages = mergeOptions(videojs.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n\n  return videojs.options.languages[code];\n};\n\n/**\n * Log messages\n *\n * @borrows log:log as videojs.log\n */\nvideojs.log = log$1;\n\n/**\n * Creates an emulated TimeRange object.\n *\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRange\n */\n/**\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRanges\n */\nvideojs.createTimeRange = videojs.createTimeRanges = createTimeRanges;\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS\n * Supplying a guide (in seconds) will force a number of leading zeros\n * to cover the length of the guide\n *\n * @borrows format-time:formatTime as videojs.formatTime\n */\nvideojs.formatTime = formatTime;\n\n/**\n * Replaces format-time with a custom implementation, to be used in place of the default.\n *\n * @borrows format-time:setFormatTime as videojs.setFormatTime\n *\n * @method setFormatTime\n *\n * @param {Function} customFn\n *        A custom format-time function which will be called with the current time and guide (in seconds) as arguments.\n *        Passed fn should return a string.\n */\nvideojs.setFormatTime = setFormatTime;\n\n/**\n * Resets format-time to the default implementation.\n *\n * @borrows format-time:resetFormatTime as videojs.resetFormatTime\n *\n * @method resetFormatTime\n */\nvideojs.resetFormatTime = resetFormatTime;\n\n/**\n * Resolve and parse the elements of a URL\n *\n * @borrows url:parseUrl as videojs.parseUrl\n *\n */\nvideojs.parseUrl = parseUrl;\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @borrows url:isCrossOrigin as videojs.isCrossOrigin\n */\nvideojs.isCrossOrigin = isCrossOrigin;\n\n/**\n * Event target class.\n *\n * @borrows EventTarget as videojs.EventTarget\n */\nvideojs.EventTarget = EventTarget;\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @borrows events:on as videojs.on\n */\nvideojs.on = on;\n\n/**\n * Trigger a listener only once for an event\n *\n * @borrows events:one as videojs.one\n */\nvideojs.one = one;\n\n/**\n * Removes event listeners from an element\n *\n * @borrows events:off as videojs.off\n */\nvideojs.off = off;\n\n/**\n * Trigger an event for an element\n *\n * @borrows events:trigger as videojs.trigger\n */\nvideojs.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper. Here's a simple example:\n *\n * @param {Object} options\n *        settings for the request.\n *\n * @return {XMLHttpRequest|XDomainRequest}\n *         The request object.\n *\n * @see https://github.com/Raynos/xhr\n */\nvideojs.xhr = xhr;\n\n/**\n * TextTrack class\n *\n * @borrows TextTrack as videojs.TextTrack\n */\nvideojs.TextTrack = TextTrack;\n\n/**\n * export the AudioTrack class so that source handlers can create\n * AudioTracks and then add them to the players AudioTrackList\n *\n * @borrows AudioTrack as videojs.AudioTrack\n */\nvideojs.AudioTrack = AudioTrack;\n\n/**\n * export the VideoTrack class so that source handlers can create\n * VideoTracks and then add them to the players VideoTrackList\n *\n * @borrows VideoTrack as videojs.VideoTrack\n */\nvideojs.VideoTrack = VideoTrack;\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @borrows dom:isEl as videojs.isEl\n * @deprecated Use videojs.dom.isEl() instead\n */\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @borrows dom:isTextNode as videojs.isTextNode\n * @deprecated Use videojs.dom.isTextNode() instead\n */\n\n/**\n * Creates an element and applies properties.\n *\n * @borrows dom:createEl as videojs.createEl\n * @deprecated Use videojs.dom.createEl() instead\n */\n\n/**\n * Check if an element has a CSS class\n *\n * @borrows dom:hasElClass as videojs.hasClass\n * @deprecated Use videojs.dom.hasClass() instead\n */\n\n/**\n * Add a CSS class name to an element\n *\n * @borrows dom:addElClass as videojs.addClass\n * @deprecated Use videojs.dom.addClass() instead\n */\n\n/**\n * Remove a CSS class name from an element\n *\n * @borrows dom:removeElClass as videojs.removeClass\n * @deprecated Use videojs.dom.removeClass() instead\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @borrows dom:toggleElClass as videojs.toggleClass\n * @deprecated Use videojs.dom.toggleClass() instead\n */\n\n/**\n * Apply attributes to an HTML element.\n *\n * @borrows dom:setElAttributes as videojs.setAttribute\n * @deprecated Use videojs.dom.setAttributes() instead\n */\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @borrows dom:getElAttributes as videojs.getAttributes\n * @deprecated Use videojs.dom.getAttributes() instead\n */\n\n/**\n * Empties the contents of an element.\n *\n * @borrows dom:emptyEl as videojs.emptyEl\n * @deprecated Use videojs.dom.emptyEl() instead\n */\n\n/**\n * Normalizes and appends content to an element.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:appendContents as videojs.appendContet\n * @deprecated Use videojs.dom.appendContent() instead\n */\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:insertContent as videojs.insertContent\n * @deprecated Use videojs.dom.insertContent() instead\n */\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs[k] = function () {\n    log$1.warn('videojs.' + k + '() is deprecated; use videojs.dom.' + k + '() instead');\n    return Dom[k].apply(null, arguments);\n  };\n});\n\n/**\n * A safe getComputedStyle with an IE8 fallback.\n *\n * This is because in Firefox, if the player is loaded in an iframe with `display:none`,\n * then `getComputedStyle` returns `null`, so, we do a null-check to make sure\n * that the player doesn't break in these cases.\n * See https://bugzilla.mozilla.org/show_bug.cgi?id=548397 for more details.\n *\n * @borrows computed-style:computedStyle as videojs.computedStyle\n */\nvideojs.computedStyle = computedStyle;\n\n/**\n * Export the Dom utilities for use in external plugins\n * and Tech's\n */\nvideojs.dom = Dom;\n\n/**\n * Export the Url utilities for use in external plugins\n * and Tech's\n */\nvideojs.url = Url;\n\nmodule.exports = videojs;\n","'use strict';\n\nmodule.exports = {\n  H264_STREAM_TYPE: 0x1B,\n  ADTS_STREAM_TYPE: 0x0F,\n  METADATA_STREAM_TYPE: 0x15\n};\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"middle\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n","/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _decrypter = require('./decrypter');\n\nvar _asyncStream = require('./async-stream');\n\nvar _asyncStream2 = _interopRequireDefault(_asyncStream);\n\nexports['default'] = {\n  decrypt: _decrypter.decrypt,\n  Decrypter: _decrypter.Decrypter,\n  AsyncStream: _asyncStream2['default']\n};\nmodule.exports = exports['default'];","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","'use strict';\n\nvar _lineStream = require('./line-stream');\n\nvar _lineStream2 = _interopRequireDefault(_lineStream);\n\nvar _parseStream = require('./parse-stream');\n\nvar _parseStream2 = _interopRequireDefault(_parseStream);\n\nvar _parser = require('./parser');\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nmodule.exports = {\n  LineStream: _lineStream2['default'],\n  ParseStream: _parseStream2['default'],\n  Parser: _parser2['default']\n}; /**\n    * @file m3u8/index.js\n    *\n    * Utilities for parsing M3U8 files. If the entire manifest is available,\n    * `Parser` will create an object representation with enough detail for managing\n    * playback. `ParseStream` and `LineStream` are lower-level parsing primitives\n    * that do not assume the entirety of the manifest is ready and expose a\n    * ReadableStream-like interface.\n    */","/*\n * pkcs7\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\n'use strict';\n\nexports.pad = require('./pad.js');\nexports.unpad = require('./unpad.js');\n","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200e\",\n  \"&rlm;\": \"\\u200f\",\n  \"&nbsp;\": \"\\u00a0\"\n};\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  // Unescape a string 's'.\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n  function unescape(s) {\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n      s = s.replace(m[0], unescape1);\n    }\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"middle\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"middle\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line;\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n","// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  if(typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if(typeof define === 'function' && define.amd)\n    define([], function() { return URLToolkit; });\n  else if(typeof exports === 'object')\n    exports[\"URLToolkit\"] = URLToolkit;\n  else\n    root[\"URLToolkit\"] = URLToolkit;\n})(this);\n/* jshint ignore:end */\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"video.js\")):\"function\"==typeof define&&define.amd?define([\"videojs\"],t):\"object\"==typeof exports?exports.VueVideoPlayer=t(require(\"video.js\")):e.VueVideoPlayer=t(e.videojs)}(this,function(e){return function(e){function t(i){if(n[i])return n[i].exports;var r=n[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var n={};return t.m=e,t.c=n,t.i=function(e){return e},t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:i})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"/\",t(t.s=3)}([function(t,n){t.exports=e},function(e,t,n){\"use strict\";function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(t,\"__esModule\",{value:!0});var r=n(0),o=function(e){return e&&e.__esModule?e:{default:e}}(r),s=window.videojs||o.default;\"function\"!=typeof Object.assign&&Object.defineProperty(Object,\"assign\",{value:function(e,t){if(null==e)throw new TypeError(\"Cannot convert undefined or null to object\");for(var n=Object(e),i=1;i<arguments.length;i++){var r=arguments[i];if(null!=r)for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(n[o]=r[o])}return n},writable:!0,configurable:!0});var a=[\"loadeddata\",\"canplay\",\"canplaythrough\",\"play\",\"pause\",\"waiting\",\"playing\",\"ended\",\"error\"];t.default={name:\"video-player\",props:{start:{type:Number,default:0},crossOrigin:{type:String,default:\"\"},playsinline:{type:Boolean,default:!1},customEventName:{type:String,default:\"statechanged\"},options:{type:Object,required:!0},events:{type:Array,default:function(){return[]}},globalOptions:{type:Object,default:function(){return{controls:!0,controlBar:{remainingTimeDisplay:!1,playToggle:{},progressControl:{},fullscreenToggle:{},volumeMenuButton:{inline:!1,vertical:!0}},techOrder:[\"html5\"],plugins:{}}}},globalEvents:{type:Array,default:function(){return[]}}},data:function(){return{player:null,reseted:!0}},mounted:function(){this.player||this.initialize()},beforeDestroy:function(){this.player&&this.dispose()},methods:{initialize:function(){var e=this,t=Object.assign({},this.globalOptions,this.options);this.playsinline&&(this.$refs.video.setAttribute(\"playsinline\",this.playsinline),this.$refs.video.setAttribute(\"webkit-playsinline\",this.playsinline),this.$refs.video.setAttribute(\"x5-playsinline\",this.playsinline),this.$refs.video.setAttribute(\"x5-video-player-type\",\"h5\"),this.$refs.video.setAttribute(\"x5-video-player-fullscreen\",!1)),\"\"!==this.crossOrigin&&(this.$refs.video.crossOrigin=this.crossOrigin,this.$refs.video.setAttribute(\"crossOrigin\",this.crossOrigin));var n=function(t,n){t&&e.$emit(t,e.player),n&&e.$emit(e.customEventName,i({},t,n))};t.plugins&&delete t.plugins.__ob__;var r=this;this.player=s(this.$refs.video,t,function(){for(var e=this,t=a.concat(r.events).concat(r.globalEvents),i={},o=0;o<t.length;o++)\"string\"==typeof t[o]&&void 0===i[t[o]]&&function(t){i[t]=null,e.on(t,function(){n(t,!0)})}(t[o]);this.on(\"timeupdate\",function(){n(\"timeupdate\",this.currentTime())}),r.$emit(\"ready\",this)})},dispose:function(e){var t=this;this.player&&this.player.dispose&&(\"Flash\"!==this.player.techName_&&this.player.pause&&this.player.pause(),this.player.dispose(),this.player=null,this.$nextTick(function(){t.reseted=!1,t.$nextTick(function(){t.reseted=!0,t.$nextTick(function(){e&&e()})})}))}},watch:{options:{deep:!0,handler:function(e,t){var n=this;this.dispose(function(){e&&e.sources&&e.sources.length&&n.initialize()})}}}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var i=n(1),r=n.n(i);for(var o in i)[\"default\",\"default\"].indexOf(o)<0&&function(e){n.d(t,e,function(){return i[e]})}(o);var s=n(5),a=n(4),l=a(r.a,s.a,!1,null,null,null);t.default=l.exports},function(e,t,n){\"use strict\";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,\"__esModule\",{value:!0}),t.install=t.videoPlayer=t.videojs=void 0;var r=n(0),o=i(r),s=n(2),a=i(s),l=window.videojs||o.default,u=function(e,t){t&&(t.options&&(a.default.props.globalOptions.default=function(){return t.options}),t.events&&(a.default.props.globalEvents.default=function(){return t.events})),e.component(a.default.name,a.default)},d={videojs:l,videoPlayer:a.default,install:u};t.default=d,t.videojs=l,t.videoPlayer=a.default,t.install=u},function(e,t){e.exports=function(e,t,n,i,r,o){var s,a=e=e||{},l=typeof e.default;\"object\"!==l&&\"function\"!==l||(s=e,a=e.default);var u=\"function\"==typeof a?a.options:a;t&&(u.render=t.render,u.staticRenderFns=t.staticRenderFns,u._compiled=!0),n&&(u.functional=!0),r&&(u._scopeId=r);var d;if(o?(d=function(e){e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext,e||\"undefined\"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),i&&i.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(o)},u._ssrRegister=d):i&&(d=i),d){var c=u.functional,f=c?u.render:u.beforeCreate;c?(u._injectStyles=d,u.render=function(e,t){return d.call(t),f(e,t)}):u.beforeCreate=f?[].concat(f,d):[d]}return{esModule:s,exports:a,options:u}}},function(e,t,n){\"use strict\";var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return e.reseted?n(\"div\",{staticClass:\"video-player\"},[n(\"video\",{ref:\"video\",staticClass:\"video-js\"})]):e._e()},r=[],o={render:i,staticRenderFns:r};t.a=o}])});","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Parse mpeg2 transport stream packets to extract basic timing information\n */\n'use strict';\n\nvar StreamTypes = require('../m2ts/stream-types.js');\nvar handleRollover = require('../m2ts/timestamp-rollover-stream.js').handleRollover;\nvar probe = {};\nprobe.ts = require('../m2ts/probe.js');\nprobe.aac = require('../aac/probe.js');\n\n\nvar\n  PES_TIMESCALE = 90000,\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\nvar isLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * walks through segment data looking for pat and pmt packets to parse out\n * program map table information\n */\nvar parsePsi_ = function(bytes, pmt) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type;\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pat':\n          if (!pmt.pid) {\n            pmt.pid = probe.ts.parsePat(packet);\n          }\n          break;\n        case 'pmt':\n          if (!pmt.table) {\n            pmt.table = probe.ts.parsePmt(packet);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // Found the pat and pmt, we can stop walking the segment\n      if (pmt.pid && pmt.table) {\n        return;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last audio pes packets\n */\nvar parseAudioPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed;\n\n  var endLoop = false;\n\n  // Start walking from start of segment to get first audio packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last audio packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last video pes packets as well as timing information for the first\n * key frame.\n */\nvar parseVideoPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed, frame, i, pes;\n\n  var endLoop = false;\n\n  var currentFrame = {\n    data: [],\n    size: 0\n  };\n\n  // Start walking from start of segment to get first video packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video') {\n            if (pusi && !endLoop) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            if (!result.firstKeyFrame) {\n              if (pusi) {\n                if (currentFrame.size !== 0) {\n                  frame = new Uint8Array(currentFrame.size);\n                  i = 0;\n                  while (currentFrame.data.length) {\n                    pes = currentFrame.data.shift();\n                    frame.set(pes, i);\n                    i += pes.byteLength;\n                  }\n                  if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                    result.firstKeyFrame = probe.ts.parsePesTime(frame);\n                    result.firstKeyFrame.type = 'video';\n                  }\n                  currentFrame.size = 0;\n                }\n              }\n              currentFrame.data.push(packet);\n              currentFrame.size += packet.byteLength;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop && result.firstKeyFrame) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last video packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * Adjusts the timestamp information for the segment to account for\n * rollover and convert to seconds based on pes packet timescale (90khz clock)\n */\nvar adjustTimestamp_ = function(segmentInfo, baseTimestamp) {\n  if (segmentInfo.audio && segmentInfo.audio.length) {\n    var audioBaseTimestamp = baseTimestamp;\n    if (typeof audioBaseTimestamp === 'undefined') {\n      audioBaseTimestamp = segmentInfo.audio[0].dts;\n    }\n    segmentInfo.audio.forEach(function(info) {\n      info.dts = handleRollover(info.dts, audioBaseTimestamp);\n      info.pts = handleRollover(info.pts, audioBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n  }\n\n  if (segmentInfo.video && segmentInfo.video.length) {\n    var videoBaseTimestamp = baseTimestamp;\n    if (typeof videoBaseTimestamp === 'undefined') {\n      videoBaseTimestamp = segmentInfo.video[0].dts;\n    }\n    segmentInfo.video.forEach(function(info) {\n      info.dts = handleRollover(info.dts, videoBaseTimestamp);\n      info.pts = handleRollover(info.pts, videoBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n    if (segmentInfo.firstKeyFrame) {\n      var frame = segmentInfo.firstKeyFrame;\n      frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n      frame.pts = handleRollover(frame.pts, videoBaseTimestamp);\n      // time in seconds\n      frame.dtsTime = frame.dts / PES_TIMESCALE;\n      frame.ptsTime = frame.dts / PES_TIMESCALE;\n    }\n  }\n};\n\n/**\n * inspects the aac data stream for start and end time information\n */\nvar inspectAac_ = function(bytes) {\n  var\n    endLoop = false,\n    audioCount = 0,\n    sampleRate = null,\n    timestamp = null,\n    frameSize = 0,\n    byteIndex = 0,\n    packet;\n\n  while (bytes.length - byteIndex >= 3) {\n    var type = probe.aac.parseType(bytes, byteIndex);\n    switch (type) {\n      case 'timed-metadata':\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (bytes.length - byteIndex < 10) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseId3TagSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (timestamp === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          timestamp = probe.aac.parseAacTimestamp(packet);\n        }\n        byteIndex += frameSize;\n        break;\n      case 'audio':\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (bytes.length - byteIndex < 7) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseAdtsSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (sampleRate === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          sampleRate = probe.aac.parseSampleRate(packet);\n        }\n        audioCount++;\n        byteIndex += frameSize;\n        break;\n      default:\n        byteIndex++;\n        break;\n    }\n    if (endLoop) {\n      return null;\n    }\n  }\n  if (sampleRate === null || timestamp === null) {\n    return null;\n  }\n\n  var audioTimescale = PES_TIMESCALE / sampleRate;\n\n  var result = {\n    audio: [\n      {\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      },\n      {\n        type: 'audio',\n        dts: timestamp + (audioCount * 1024 * audioTimescale),\n        pts: timestamp + (audioCount * 1024 * audioTimescale)\n      }\n    ]\n  };\n\n  return result;\n};\n\n/**\n * inspects the transport stream segment data for start and end time information\n * of the audio and video tracks (when present) as well as the first key frame's\n * start time.\n */\nvar inspectTs_ = function(bytes) {\n  var pmt = {\n    pid: null,\n    table: null\n  };\n\n  var result = {};\n\n  parsePsi_(bytes, pmt);\n\n  for (var pid in pmt.table) {\n    if (pmt.table.hasOwnProperty(pid)) {\n      var type = pmt.table[pid];\n      switch (type) {\n        case StreamTypes.H264_STREAM_TYPE:\n          result.video = [];\n          parseVideoPes_(bytes, pmt, result);\n          if (result.video.length === 0) {\n            delete result.video;\n          }\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          result.audio = [];\n          parseAudioPes_(bytes, pmt, result);\n          if (result.audio.length === 0) {\n            delete result.audio;\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Inspects segment byte data and returns an object with start and end timing information\n *\n * @param {Uint8Array} bytes The segment byte data\n * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n *  timestamps for rollover. This value must be in 90khz clock.\n * @return {Object} Object containing start and end frame timing info of segment.\n */\nvar inspect = function(bytes, baseTimestamp) {\n  var isAacData = isLikelyAacData(bytes);\n\n  var result;\n\n  if (isAacData) {\n    result = inspectAac_(bytes);\n  } else {\n    result = inspectTs_(bytes);\n  }\n\n  if (!result || (!result.audio && !result.video)) {\n    return null;\n  }\n\n  adjustTimestamp_(result, baseTimestamp);\n\n  return result;\n};\n\nmodule.exports = {\n  inspect: inspect\n};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _stream = require('./stream');\n\nvar _stream2 = _interopRequireDefault(_stream);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file m3u8/line-stream.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\nvar LineStream = function (_Stream) {\n  _inherits(LineStream, _Stream);\n\n  function LineStream() {\n    _classCallCheck(this, LineStream);\n\n    var _this = _possibleConstructorReturn(this, (LineStream.__proto__ || Object.getPrototypeOf(LineStream)).call(this));\n\n    _this.buffer = '';\n    return _this;\n  }\n\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {String} data the text to process\n   */\n\n\n  _createClass(LineStream, [{\n    key: 'push',\n    value: function push(data) {\n      var nextNewline = void 0;\n\n      this.buffer += data;\n      nextNewline = this.buffer.indexOf('\\n');\n\n      for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n        this.trigger('data', this.buffer.substring(0, nextNewline));\n        this.buffer = this.buffer.substring(nextNewline + 1);\n      }\n    }\n  }]);\n\n  return LineStream;\n}(_stream2['default']);\n\nexports['default'] = LineStream;","/*\n * pkcs7.unpad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\n'use strict';\n\n/**\n * Returns the subarray of a Uint8Array without PKCS#7 padding.\n * @param padded {Uint8Array} unencrypted bytes that have been padded\n * @return {Uint8Array} the unpadded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nmodule.exports = function unpad(padded) {\n  return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n};\n","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  var i\n  if ((i = window.document.currentScript) && (i = i.src.match(/(.+\\/)[^/]+\\.js$/))) {\n    __webpack_public_path__ = i[1] // eslint-disable-line\n  }\n}\n","import mod from \"-!../../../../.config/yarn/global/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../.config/yarn/global/node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../../.config/yarn/global/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../.config/yarn/global/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../.config/yarn/global/node_modules/vue-loader/lib/index.js??vue-loader-options!./Live.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../../.config/yarn/global/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../.config/yarn/global/node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../../.config/yarn/global/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../.config/yarn/global/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../.config/yarn/global/node_modules/vue-loader/lib/index.js??vue-loader-options!./Live.vue?vue&type=style&index=0&lang=css&\"","\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n","/**\n * @license\n * Video.js 7.1.0 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport tsml from 'tsml';\nimport xhr from 'xhr';\nimport vtt from 'videojs-vtt.js';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport URLToolkit from 'url-toolkit';\nimport { Parser } from 'm3u8-parser';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\n\nvar version = \"7.1.0\";\n\n/**\n * @file log.js\n * @module log\n */\n\nvar log = void 0;\n\n// This is the private tracking variable for logging level.\nvar level = 'info';\n\n// This is the private tracking variable for the logging history.\nvar history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\nvar logByType = function logByType(type, args) {\n  var lvl = log.levels[level];\n  var lvlRegExp = new RegExp('^(' + lvl + ')$');\n\n  if (type !== 'log') {\n\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  }\n\n  // Add a clone of the args at this point to history.\n  if (history) {\n    history.push([].concat(args));\n  }\n\n  // Add console prefix after adding to history.\n  args.unshift('VIDEOJS:');\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n  if (!window$1.console) {\n    return;\n  }\n\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  var fn = window$1.console[type];\n\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window$1.console.info || window$1.console.log;\n  }\n\n  // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n\n  fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n};\n\n/**\n * Logs plain debug messages. Similar to `console.log`.\n *\n * @class\n * @param    {Mixed[]} args\n *           One or more messages or objects that should be logged.\n */\nlog = function log() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  logByType('log', args);\n};\n\n/**\n * Enumeration of available logging levels, where the keys are the level names\n * and the values are `|`-separated strings containing logging methods allowed\n * in that logging level. These strings are used to create a regular expression\n * matching the function name being called.\n *\n * Levels provided by video.js are:\n *\n * - `off`: Matches no calls. Any value that can be cast to `false` will have\n *   this effect. The most restrictive.\n * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n *   `log.warn`, and `log.error`).\n * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n * - `warn`: Matches `log.warn` and `log.error` calls.\n * - `error`: Matches only `log.error` calls.\n *\n * @type {Object}\n */\nlog.levels = {\n  all: 'debug|log|warn|error',\n  off: '',\n  debug: 'debug|log|warn|error',\n  info: 'log|warn|error',\n  warn: 'warn|error',\n  error: 'error',\n  DEFAULT: level\n};\n\n/**\n * Get or set the current logging level. If a string matching a key from\n * {@link log.levels} is provided, acts as a setter. Regardless of argument,\n * returns the current logging level.\n *\n * @param  {string} [lvl]\n *         Pass to set a new logging level.\n *\n * @return {string}\n *         The current logging level.\n */\nlog.level = function (lvl) {\n  if (typeof lvl === 'string') {\n    if (!log.levels.hasOwnProperty(lvl)) {\n      throw new Error('\"' + lvl + '\" in not a valid log level');\n    }\n    level = lvl;\n  }\n  return level;\n};\n\n/**\n * Returns an array containing everything that has been logged to the history.\n *\n * This array is a shallow clone of the internal history record. However, its\n * contents are _not_ cloned; so, mutating objects inside this array will\n * mutate them in history.\n *\n * @return {Array}\n */\nlog.history = function () {\n  return history ? [].concat(history) : [];\n};\n\n/**\n * Clears the internal history tracking, but does not prevent further history\n * tracking.\n */\nlog.history.clear = function () {\n  if (history) {\n    history.length = 0;\n  }\n};\n\n/**\n * Disable history tracking if it is currently enabled.\n */\nlog.history.disable = function () {\n  if (history !== null) {\n    history.length = 0;\n    history = null;\n  }\n};\n\n/**\n * Enable history tracking if it is currently disabled.\n */\nlog.history.enable = function () {\n  if (history === null) {\n    history = [];\n  }\n};\n\n/**\n * Logs error messages. Similar to `console.error`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as an error\n */\nlog.error = function () {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return logByType('error', args);\n};\n\n/**\n * Logs warning messages. Similar to `console.warn`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as a warning.\n */\nlog.warn = function () {\n  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  return logByType('warn', args);\n};\n\n/**\n * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n * log if `console.debug` is not available\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as debug.\n */\nlog.debug = function () {\n  for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    args[_key4] = arguments[_key4];\n  }\n\n  return logByType('debug', args);\n};\n\nvar log$1 = log;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar taggedTemplateLiteralLoose = function (strings, raw) {\n  strings.raw = raw;\n  return strings;\n};\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\nfunction reduce(object, fn) {\n  var initial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\nfunction assign(target) {\n  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n\n  return target;\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isObject(value) {\n  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a null-check to\n * make sure  that the player doesn't break in these cases.\n *\n * @param {Element} el\n *        The element you want the computed style of\n *\n * @param {string} prop\n *        The property name you want\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n *\n * @static\n * @const\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var cs = window$1.getComputedStyle(el);\n\n    return cs ? cs[prop] : '';\n  }\n\n  return '';\n}\n\nvar _templateObject = taggedTemplateLiteralLoose(['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.'], ['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.']);\n\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @param {string} str\n *        The string to check\n *\n * @return {boolean}\n *         - True if the string is non-blank\n *         - False otherwise\n *\n */\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @param {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n *\n */\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @param {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n\n/**\n * Whether the current DOM interface appears to be real.\n *\n * @return {Boolean}\n */\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param {Mixed} value\n *        The thing to check\n *\n * @return {boolean}\n *         - True if it is a DOM element\n *         - False otherwise\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *\n */\nfunction isInFrame() {\n\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @param {string} method\n *         The method to create the query with.\n *\n * @return {Function}\n *         The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties.\n *\n * @param {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {String|Element|TextNode|Array|Function} [content]\n *         Contents for the element (see: {@link dom:normalizeContent})\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl() {\n  var tagName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n  var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var content = arguments[3];\n\n  var el = document.createElement(tagName);\n\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName];\n\n    // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log$1.warn(tsml(_templateObject, propName, val));\n      el.setAttribute(propName, val);\n\n      // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param {Element} el\n *        The element to add text content into\n *\n * @param {string} text\n *        The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a CSS class\n *\n * @param {Element} element\n *        Element to check\n *\n * @param {string} classToCheck\n *        Class name to check for\n *\n * @return {boolean}\n *         - True if the element had the class\n *         - False otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n  return classRegExp(classToCheck).test(element.className);\n}\n\n/**\n * Add a CSS class name to an element\n *\n * @param {Element} element\n *        Element to add class name to.\n *\n * @param {string} classToAdd\n *        Class name to add.\n *\n * @return {Element}\n *         The dom element with the added class name.\n */\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd);\n\n    // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n\n/**\n * Remove a CSS class name from an element\n *\n * @param {Element} element\n *        Element to remove a class name from.\n *\n * @param {string} classToRemove\n *        Class name to remove\n *\n * @return {Element}\n *         The dom element with class name removed.\n */\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n\n/**\n * The callback definition for toggleElClass.\n *\n * @callback Dom~PredicateCallback\n * @param {Element} element\n *        The DOM element of the Component.\n *\n * @param {string} classToToggle\n *        The `className` that wants to be toggled\n *\n * @return {boolean|undefined}\n *         - If true the `classToToggle` will get added to `element`.\n *         - If false the `classToToggle` will get removed from `element`.\n *         - If undefined this callback will be ignored\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param {Element} element\n *        The element to toggle a class name on.\n *\n * @param {string} classToToggle\n *        The class that should be toggled\n *\n * @param {boolean|PredicateCallback} [predicate]\n *        See the return value for {@link Dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  }\n\n  // If the necessary class operation matches the current state of the\n  // element, no action is required.\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @param {Element} tag\n *        Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element.\n */\nfunction getAttributes(tag) {\n  var obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to get the value of\n *\n * @return {string}\n *         value of the attribute\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to set\n *\n * @param {string} value\n *        Value to set the attribute to\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to remove\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text while dragging controls\n */\nfunction blockTextSelection() {\n  document.body.focus();\n  document.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking\n */\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n\n/**\n * The postion of a DOM element on the page.\n *\n * @typedef {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left\n *\n * @property {number} top\n *           Pixels on top\n */\n\n/**\n * Offset Left.\n * getBoundingClientRect technique from\n * John Resig\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param {Element} el\n *        Element from which to get offset\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  var box = void 0;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop;\n\n  // Android sometimes returns slightly off decimal values, so need to round\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n\n/**\n * x and y coordinates for a dom element or mouse pointer\n *\n * @typedef {Object} Dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get pointer position in element\n * Returns an object with x and y coordinates.\n * The base on the coordinates are the bottom left of the element.\n *\n * @param {Element} el\n *        Element on which to get the pointer position on\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {Dom~Coordinates}\n *         A Coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param {Mixed} value\n *        Check if this value is a text node.\n *\n * @return {boolean}\n *         - True if it is a text node\n *         - False otherwise\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param {Element} el\n *        The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but protects\n * from falling into the trap of simply writing to `innerHTML`, which is\n * an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        - String: Normalized into a text node.\n *        - Element/TextNode: Passed through.\n *        - Array: A one-dimensional array of strings, elements, nodes, or functions\n *          (which return single strings, elements, or nodes).\n *        - Function: If the sole argument, is expected to produce a string, element,\n *          node, or array as defined above.\n *\n * @return {Array}\n *         All of the content that was passed in normalized.\n */\nfunction normalizeContent(content) {\n\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param {Element} el\n *        Element to append normalized content to.\n *\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with inserted normalized content.\n *\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if event was a single left click\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {boolean}\n *         - True if a left click\n *         - False if not a left click\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *        A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param {Element|String} [context=document]\n *        A DOM element within which to query. Can also be a selector\n *        string in which case the first matching element will be used\n *        as context. If missing (or no element matches selector), falls\n *        back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nvar $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *           A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param {Element|String} [context=document]\n *           A DOM element within which to query. Can also be a selector\n *           string in which case the first matching element will be used\n *           as context. If missing (or no element matches selector), falls\n *           back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none were found.\n *\n */\nvar $$ = createQuerier('querySelectorAll');\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\nvar _guid = 1;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar elData = {};\n\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\nvar elIdAttr = 'vdata' + new Date().getTime();\n\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  }\n\n  // Remove all stored data\n  delete elData[id];\n\n  // Remove the elIdAttr property from the DOM node\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n\n    window$1.addEventListener('test', null, opts);\n    window$1.removeEventListener('test', null, opts);\n  } catch (e) {\n    // disregard\n  }\n})();\n\n/**\n * Touch events Chrome expects to be passive\n */\nvar passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = { passive: true };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n\n  var handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         - Returns the opposite of `defaultPrevented` if default was prevented\n *         - Otherwise returns undefined\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = { type: event, target: elem };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented) {\n    var targetData = getData(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event Listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\n\nvar _windowLoaded = false;\nvar videojs = void 0;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nvar autoSetup = function autoSetup() {\n\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs);\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i];\n\n      // Check if element exists, has getAttribute func.\n      if (mediaEl && mediaEl.getAttribute) {\n\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window$1, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n\n  style.className = className;\n\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file fn.js\n * @module fn\n */\n\n/**\n * Bind (a.k.a proxy or Context). A simple method for changing the context of a function\n * It also stores a unique id on the function so it can be easily removed from events.\n *\n * @param {Mixed} context\n *        The object to bind as scope.\n *\n * @param {Function} fn\n *        The function to be bound to a scope.\n *\n * @param {number} [uid]\n *        An optional unique ID for the function to be set\n *\n * @return {Function}\n *         The new function that will be bound into the context given\n */\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  };\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @param  {Function} fn\n *         The function to be throttled.\n *\n * @param  {Number}   wait\n *         The number of milliseconds by which to throttle.\n *\n * @return {Function}\n */\nvar throttle = function throttle(fn, wait) {\n  var last = Date.now();\n\n  var throttled = function throttled() {\n    var now = Date.now();\n\n    if (now - last >= wait) {\n      fn.apply(undefined, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @param  {Function} func\n *         The function to wrap with debounce behavior.\n *\n * @param  {number} wait\n *         The number of milliseconds to wait after the last invocation.\n *\n * @param  {boolean} [immediate]\n *         Whether or not to invoke the function immediately upon creation.\n *\n * @param  {Object} [context=window]\n *         The \"context\" in which the debounced function should debounce. For\n *         example, if this function should be tied to a Video.js player,\n *         the player can be passed here. Alternatively, defaults to the\n *         global `window` object.\n *\n * @return {Function}\n *         A debounced function.\n */\nvar debounce = function debounce(func, wait, immediate) {\n  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : window$1;\n\n  var timeout = void 0;\n\n  /* eslint-disable consistent-this */\n  return function () {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n};\n\n/**\n * @file src/js/event-target.js\n */\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nvar EventTarget = function EventTarget() {};\n\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\nEventTarget.prototype.allowedEvents_ = {};\n\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener alialing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event;\n\n  if (typeof event === 'string') {\n    event = { type: type };\n  }\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nvar isValidEventType = function isValidEventType(type) {\n  return (\n    // The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target = void 0;\n  var type = void 0;\n  var listener = void 0;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n\n  listener = bind(self, listener);\n\n  return { isTargetingSelf: isTargetingSelf, target: target, type: type, listener: listener };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nvar EventedMixin = {\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on$$1() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      };\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one$$1() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener;\n\n    // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        for (var _len3 = arguments.length, largs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        _this2.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$$1(targetOrType, typeOrListener, listener) {\n\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener);\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @returns {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {String} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var eventBusKey = options.eventBusKey;\n\n  // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error('The eventBusKey \"' + eventBusKey + '\" does not refer to an element.');\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', { className: 'vjs-event-bus' });\n  }\n\n  assign(target, EventedMixin);\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nvar StatefulMixin = {\n\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @returns {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes = void 0;\n\n    each(stateUpdates, function (value, key) {\n\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @returns {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n\n/**\n * Deep-merge one or more options objects, recursively merging **only** plain\n * object properties.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @returns {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component = function () {\n\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    classCallCheck(this, Component);\n\n\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = mergeOptions({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = mergeOptions(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n\n      this.id_ = id + '_component_' + newGUID();\n    }\n\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, { eventBusKey: this.el_ ? 'el_' : null });\n    }\n    stateful(this, this.constructor.defaultState);\n\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready);\n    // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Component.prototype.dispose = function dispose() {\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({ type: 'dispose', bubbles: false });\n\n    // Dispose all children.\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  };\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n\n\n  Component.prototype.player = function player() {\n    return this.player_;\n  };\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Component.prototype.options = function options(obj) {\n    log$1.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  };\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n\n\n  Component.prototype.el = function el() {\n    return this.el_;\n  };\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Component.prototype.createEl = function createEl$$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  };\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n\n\n  Component.prototype.localize = function localize(string, tokens) {\n    var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : string;\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  };\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n\n\n  Component.prototype.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  };\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n\n\n  Component.prototype.id = function id() {\n    return this.id_;\n  };\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n\n\n  Component.prototype.name = function name() {\n    return this.name_;\n  };\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n\n\n  Component.prototype.children = function children() {\n    return this.children_;\n  };\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n\n\n  Component.prototype.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  };\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n\n\n  Component.prototype.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    return this.childNameIndex_[name];\n  };\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n\n\n  Component.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.children_.length;\n\n    var component = void 0;\n    var componentName = void 0;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n\n      var componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error('Component ' + componentClassName + ' does not exist');\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n\n    this.children_.splice(index, 0, component);\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  };\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n\n\n  Component.prototype.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  };\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n\n\n  Component.prototype.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = _this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      var workingChildren = void 0;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name = void 0;\n        var opts = void 0;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return { name: name, opts: opts };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  };\n\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n\n\n  Component.prototype.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  };\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.ready = function ready(fn) {\n    var sync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  };\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n\n\n  Component.prototype.triggerReady = function triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  };\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$ = function $$$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  };\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$$ = function $$$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  };\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n\n\n  Component.prototype.hasClass = function hasClass$$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  };\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n\n\n  Component.prototype.addClass = function addClass$$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  };\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n\n\n  Component.prototype.removeClass = function removeClass$$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  };\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n\n\n  Component.prototype.toggleClass = function toggleClass$$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  };\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n\n\n  Component.prototype.show = function show() {\n    this.removeClass('vjs-hidden');\n  };\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n\n\n  Component.prototype.hide = function hide() {\n    this.addClass('vjs-hidden');\n  };\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  };\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  };\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n\n\n  Component.prototype.getAttribute = function getAttribute$$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n\n\n  Component.prototype.setAttribute = function setAttribute$$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  };\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n\n\n  Component.prototype.removeAttribute = function removeAttribute$$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  };\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  };\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n\n\n  Component.prototype.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  };\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n\n\n  Component.prototype.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  };\n\n  /**\n   * Get the width or the height of the `Component` elements computed style. Uses\n   * `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n\n\n  Component.prototype.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window$1.getComputedStyle === 'function') {\n      var computedStyle = window$1.getComputedStyle(this.el_);\n\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    }\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0) {\n      var rule = 'offset' + toTitleCase(widthOrHeight);\n\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  };\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains width and height values of the `Component`s\n   * computed style.\n   *\n   * @return {Component~DimensionObject}\n   *         The dimensions of the components element\n   */\n\n\n  Component.prototype.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  };\n\n  /**\n   * Get the width of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} width\n   *           The width of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  };\n\n  /**\n   * Get the height of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  };\n\n  /**\n   * Set the focus to this component\n   */\n\n\n  Component.prototype.focus = function focus() {\n    this.el_.focus();\n  };\n\n  /**\n   * Remove the focus from this component\n   */\n\n\n  Component.prototype.blur = function blur() {\n    this.el_.blur();\n  };\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n\n\n  Component.prototype.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    var tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    var touchTimeThreshold = 200;\n\n    var couldBeTap = void 0;\n\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = new Date().getTime();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = new Date().getTime() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  };\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n\n\n  Component.prototype.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    var report = bind(this.player(), this.player().reportUserActivity);\n\n    var touchHolding = void 0;\n\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  };\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n\n\n  Component.prototype.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId, disposeFn;\n\n    fn = bind(this, fn);\n\n    timeoutId = window$1.setTimeout(function () {\n      _this2.off('dispose', disposeFn);\n      fn();\n    }, timeout);\n\n    disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.on('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n\n\n  Component.prototype.clearTimeout = function clearTimeout(timeoutId) {\n    window$1.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.off('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n\n\n  Component.prototype.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n\n    var intervalId = window$1.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.on('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n\n\n  Component.prototype.clearInterval = function clearInterval(intervalId) {\n    window$1.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.off('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n\n\n  Component.prototype.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id, disposeFn;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n\n      id = window$1.requestAnimationFrame(function () {\n        _this4.off('dispose', disposeFn);\n        fn();\n      });\n\n      disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = 'vjs-raf-' + id;\n      this.on('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.setTimeout(fn, 1000 / 60);\n  };\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n\n\n  Component.prototype.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window$1.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = 'vjs-raf-' + id;\n\n      this.off('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.clearTimeout(id);\n  };\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error('Illegal component name, \"' + name + '\"; must be a non-empty string.');\n    }\n\n    var Tech = Component.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason = void 0;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error('Illegal component, \"' + name + '\"; ' + reason + '.');\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n\n    return ComponentToRegister;\n  };\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\n\nComponent.registerComponent('Component', Component);\n\n/**\n * @file browser.js\n * @module browser\n */\n\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n\n/*\n * Device is an iPhone\n *\n * @type {Boolean}\n * @constant\n * @private\n */\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n  return null;\n}();\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n  return null;\n}();\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n  return null;\n}();\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\n\nvar browser = /*#__PURE__*/Object.freeze({\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IPOD: IS_IPOD,\n  IS_IOS: IS_IOS,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_ANY_SAFARI: IS_ANY_SAFARI,\n  TOUCH_ENABLED: TOUCH_ENABLED\n});\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @function time-ranges:indexFunction\n *\n * @param {number} [index=0]\n *        The range number to return the time for.\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n * @depricated index must be set to a value, in the future this will throw an error.\n */\n\n/**\n * An object that contains ranges of time for various reasons.\n *\n * @typedef {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this Object\n *\n * @property {time-ranges:indexFunction} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {time-ranges:indexFunction} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {number} index\n *        The index to check\n *\n * @param {number} maxIndex\n *        The maximum possible index\n *\n * @throws {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error('Failed to execute \\'' + fnName + '\\' on \\'TimeRanges\\': The index provided (' + index + ') is non-numeric or out of bounds (0-' + maxIndex + ').');\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {string} valueIndex\n *        The property that should be used to get the time. should be 'start' or 'end'\n *\n * @param {Array} ranges\n *        An array of time ranges\n *\n * @param {Array} [rangeIndex=0]\n *        The index to start the search at\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n *\n * @depricated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @param {Array} [ranges]\n *        An array of time ranges.\n */\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n\n/**\n * Should create a fake `TimeRange` object which mimics an HTML5 time range instance.\n *\n * @param {number|Array} start\n *        The start of a single range or an array of ranges\n *\n * @param {number} end\n *        The end of a single range.\n *\n * @private\n */\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start = void 0;\n  var end = void 0;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nvar FullscreenApi = {};\n\n// browser API methods\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Old WebKit (Safari 5.1)\n['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'],\n// Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\n\nvar specApi = apiMap[0];\nvar browserApi = void 0;\n\n// determine the supported set of functions\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n}\n\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_CUSTOM\n * @property {string} 2 - MEDIA_ERR_ABORTED\n * @property {string} 3 - MEDIA_ERR_NETWORK\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\n  // values should be accessible on both the class and instance\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {Boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nvar textTracksToJson = function textTracksToJson(tech) {\n\n  var trackEls = tech.$$('track');\n\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n\n  return tech.textTracks();\n};\n\nvar textTrackConverter = { textTracksToJson: textTracksToJson, jsonToTextTracks: jsonToTextTracks, trackToJson_: trackToJson_ };\n\n/**\n * @file modal-dialog.js\n */\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\nvar ESC = 27;\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = function (_Component) {\n  inherits(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    classCallCheck(this, ModalDialog);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n    _this.content(_this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + '-content'\n    }, {\n      role: 'document'\n    });\n\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + '-description vjs-control-text',\n      id: _this.el().getAttribute('aria-describedby')\n    });\n\n    textContent(_this.descEl_, _this.description());\n    _this.el_.appendChild(_this.descEl_);\n    _this.el_.appendChild(_this.contentEl_);\n    return _this;\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  ModalDialog.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + '_description',\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  ModalDialog.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ModalDialog.prototype.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + ' vjs-hidden ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles `keydown` events on the document, looking for ESC, which closes\n   * the modal.\n   *\n   * @param {EventTarget~Event} e\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyPress = function handleKeyPress(e) {\n    if (e.which === ESC && this.closeable()) {\n      this.close();\n    }\n  };\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n\n\n  ModalDialog.prototype.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  };\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n\n\n  ModalDialog.prototype.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  };\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n\n\n  ModalDialog.prototype.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      if (this.closeable()) {\n        this.on(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n      }\n\n      // Hide controls and note if they were enabled.\n      this.hadControls_ = player.controls();\n      player.controls(false);\n\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  };\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n\n\n  ModalDialog.prototype.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  };\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n\n\n  ModalDialog.prototype.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n    var player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    if (this.closeable()) {\n      this.off(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n    }\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  };\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n\n\n  ModalDialog.prototype.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', { controlText: 'Close Modal Dialog' });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  };\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n\n\n  ModalDialog.prototype.fill = function fill() {\n    this.fillWith(this.content());\n  };\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n\n\n  ModalDialog.prototype.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n\n    /**\n     * Fired just before a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#beforemodalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  };\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n\n\n  ModalDialog.prototype.empty = function empty() {\n    /**\n     * Fired just before a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#beforemodalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n     * Fired just after a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#modalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalempty');\n  };\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n\n\n  ModalDialog.prototype.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  };\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n\n      this.focus();\n\n      this.on(document, 'keydown', this.handleKeyDown);\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n\n    this.off(document, 'keydown', this.handleKeyDown);\n  };\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyDown = function handleKeyDown(event) {\n    // exit early if it isn't a tab key\n    if (event.which !== 9) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex = void 0;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\n\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList = function (_EventTarget) {\n  inherits(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  function TrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, TrackList);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    _this.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(_this, 'length', {\n      get: function get$$1() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n    return _this;\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  TrackList.prototype.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track: track,\n        type: 'addtrack'\n      });\n    }\n  };\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n\n\n  TrackList.prototype.removeTrack = function removeTrack(rtrack) {\n    var track = void 0;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track: track,\n      type: 'removetrack'\n    });\n  };\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {String} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n\n\n  TrackList.prototype.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\nvar AudioTrackList = function (_TrackList) {\n  inherits(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, AudioTrackList);\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    var _this = possibleConstructorReturn(this, _TrackList.call(this, tracks));\n\n    _this.changing_ = false;\n    return _this;\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  AudioTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * @file video-track-list.js\n */\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\nvar VideoTrackList = function (_TrackList) {\n  inherits(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, VideoTrackList);\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    var _this = possibleConstructorReturn(this, _TrackList.call(this, tracks));\n\n    _this.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(_this, 'selectedIndex', {\n      get: function get$$1() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n        return -1;\n      },\n      set: function set$$1() {}\n    });\n    return _this;\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  VideoTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', function () {\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * @file text-track-list.js\n */\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList = function (_TrackList) {\n  inherits(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    classCallCheck(this, TextTrackList);\n    return possibleConstructorReturn(this, _TrackList.apply(this, arguments));\n  }\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  TextTrackList.prototype.addTrack = function addTrack(track) {\n    _TrackList.prototype.addTrack.call(this, track);\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', bind(this, function () {\n      this.trigger('change');\n    }));\n\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', bind(this, function () {\n        this.trigger('selectedlanguagechange');\n      }));\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nvar HtmlTrackElementList = function () {\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList() {\n    var trackElements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, HtmlTrackElementList);\n\n    this.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get: function get$$1() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  };\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_ = void 0;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n\n        break;\n      }\n    }\n\n    return trackElement_;\n  };\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        this.trackElements_.splice(i, 1);\n\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nvar TextTrackCueList = function () {\n\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    classCallCheck(this, TextTrackCueList);\n\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get: function get$$1() {\n        return this.length_;\n      }\n    });\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  TextTrackCueList.prototype.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get$$1() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  };\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n\n\n  TextTrackCueList.prototype.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track = function (_EventTarget) {\n  inherits(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, Track);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_this, key, {\n        get: function get$$1() {\n          return trackProps[key];\n        },\n        set: function set$$1() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @param  {String} url\n *         The url to parse\n *\n * @return {url:URLObject}\n *         An object of url details\n */\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  var a = document.createElement('a');\n\n  a.href = url;\n\n  // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div = void 0;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = '<a href=\"' + url + '\"></a>';\n    a = div.firstChild;\n    // prevent the div from affecting layout\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  }\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n\n/**\n * Get absolute version of relative URL. Used to tell flash correct URL.\n *\n *\n * @param  {string} url\n *         URL to make absolute\n *\n * @return {string}\n *         Absolute URL\n *\n * @see http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n\n    div.innerHTML = '<a href=\"' + url + '\">x</a>';\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @param {string} path\n *        The fileName path like '/path/to/file.mp4'\n *\n * @returns {string}\n *          The extension in lower case or an empty string if no\n *          extension could be found.\n */\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @param {string} url\n *        The url to check.\n *\n * @return {boolean}\n *         Whether it is a cross domain request or not.\n */\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window$1.location;\n  var urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed('Text Track parsing errors for ' + track.src);\n    }\n    errors.forEach(function (error) {\n      return log$1.error(error);\n    });\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  xhr(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        var loadHandler = function loadHandler() {\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.on('vttjsloaded', loadHandler);\n        track.tech_.on('vttjserror', function () {\n          log$1.error('vttjs failed to load, stopping trying to process ' + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\nvar TextTrack = function (_Track) {\n  inherits(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, TextTrack);\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings.default;\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    _this.tech_ = settings.tech;\n\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_this, function () {\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to it's nature as a getter function. Do not remove or cues will\n      // stop updating!\n      /* eslint-disable no-unused-expressions */\n      this.activeCues;\n      /* eslint-enable no-unused-expressions */\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_this, {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get: function get$$1() {\n          return default_;\n        },\n        set: function set$$1() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get$$1() {\n          return mode;\n        },\n        set: function set$$1(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n          mode = newMode;\n          if (mode === 'showing') {\n\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get$$1() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set$$1() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get$$1() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          // nothing to do\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n\n          return activeCues;\n        },\n        set: function set$$1() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n      loadTrack(settings.src, _this);\n    } else {\n      _this.loaded_ = true;\n    }\n    return _this;\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  TextTrack.prototype.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  };\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n\n\n  TextTrack.prototype.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack = function (_Track) {\n  inherits(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, AudioTrack);\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    var enabled = false;\n\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(_this, 'enabled', {\n      get: function get$$1() {\n        return enabled;\n      },\n      set: function set$$1(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack = function (_Track) {\n  inherits(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, VideoTrack);\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    var selected = false;\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(_this, 'selected', {\n      get: function get$$1() {\n        return selected;\n      },\n      set: function set$$1(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @file html-track-element.js\n */\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = function (_EventTarget) {\n  inherits(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, HTMLTrackElement);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var readyState = void 0;\n\n    var track = new TextTrack(options);\n\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this.default = track.default;\n\n    Object.defineProperties(_this, {\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get$$1() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get$$1() {\n          return track;\n        }\n      }\n    });\n\n    readyState = NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _this\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\n\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + 'Tracks';\n  NORMAL[type].privateName = type + 'Tracks_';\n});\n\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\n\nvar ALL = mergeOptions(NORMAL, REMOTE);\n\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  var tracks = self.textTracks();\n\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n\n  var track = new ALL.text.TrackClass(options);\n\n  tracks.addTrack(track);\n\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\nvar Tech = function (_Component) {\n  inherits(Tech, _Component);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Tech() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    classCallCheck(this, Tech);\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.hasStarted_ = false;\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options['native' + track + 'Tracks'] === false) {\n        _this['featuresNative' + track + 'Tracks'] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n    return _this;\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  Tech.prototype.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  };\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n\n\n  Tech.prototype.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n\n\n  Tech.prototype.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n\n    this.off('durationchange', this.onDurationChange);\n  };\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n\n\n  Tech.prototype.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  };\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n\n\n  Tech.prototype.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  };\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  Tech.prototype.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  };\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n\n\n  Tech.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n\n\n  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  };\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n\n\n  Tech.prototype.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  };\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n\n\n  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n  };\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Tech.prototype.dispose = function dispose() {\n\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n\n\n  Tech.prototype.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(function (type) {\n      var list = _this3[type + 'Tracks']() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  };\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n\n\n  Tech.prototype.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n\n      this.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.reset = function reset() {};\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n\n\n  Tech.prototype.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  };\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n\n\n  Tech.prototype.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n    return createTimeRanges();\n  };\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n\n\n  Tech.prototype.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    }\n  };\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n\n\n  Tech.prototype.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n     *\n     * @event Tech#audiotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n     *\n     * @event Tech#videotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n     *\n     * @event Tech#texttrackchange\n     * @type {EventTarget~Event}\n     */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + 'trackchange');\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  };\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n\n\n  Tech.prototype.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document.body.contains(this.el())) {\n\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      var script = document.createElement('script');\n\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  };\n\n  /**\n   * Emulate texttracks\n   *\n   */\n\n\n  Tech.prototype.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  };\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Tech.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n\n\n  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack() {\n    var _this7 = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var manualCleanup = arguments[1];\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log$1.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n\n\n  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  };\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPoster = function setPoster() {};\n\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.playsinline = function playsinline() {};\n\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPlaysinline = function setPlaysinline() {};\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {Boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.overrideNativeAudioTracks = function overrideNativeAudioTracks() {};\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {Boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.overrideNativeVideoTracks = function overrideNativeVideoTracks() {};\n\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the tech can support the given source\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  };\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  };\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error('Tech ' + name + ' must be a Tech');\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n\n    Tech.techs_[name] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  };\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log$1.warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\nTech.prototype.featuresMuteControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  var deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source handler found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.on('dispose', this.disposeSourceHandler);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\nvar middlewares = {};\nvar middlewareInstances = {};\n\nvar TERMINATOR = {};\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n */\nfunction get$1(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n */\nfunction set$1(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the method\n * on each middleware from left to right.\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n */\nfunction mediate(middleware, tech, method) {\n  var arg = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR;\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n\n  executeRight(middleware, method, returnValue, terminated);\n\n  return returnValue;\n}\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1\n};\n\nvar allowedSetters = {\n  setCurrentTime: 1\n};\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var middleware = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var next = arguments[2];\n  var player = arguments[3];\n  var acc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  var lastRun = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var mwFactory = middleware[0],\n      mwrest = middleware.slice(1);\n\n  // if mwFactory is a string, then we're at a fork in the road\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory);\n\n    // if setSource isn't present, implicitly select this middleware\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nvar getMimetype = function getMimetype() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({ src: src })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n\n/**\n * @file loader.js\n */\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader = function (_Component) {\n  inherits(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    classCallCheck(this, MediaLoader);\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({ createEl: false }, options);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_, ready));\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file clickable-component.js\n */\n\n/**\n * Clickable Component which is clickable or keyboard actionable,\n * but is not a native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent = function (_Component) {\n  inherits(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    classCallCheck(this, ClickableComponent);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.emitTapEvents();\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createEl = function createEl$$1() {\n    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log$1.error('Creating a ClickableComponent with an HTML element of ' + tag + ' is not supported; use a Button instead.');\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  ClickableComponent.prototype.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a control text element on this `Component`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n\n    return this.controlTextEl_;\n  };\n\n  /**\n   * Get or set the localize text to use for the controls on the `Component`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  ClickableComponent.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.el();\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ClickableComponent.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-control vjs-button ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Enable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('focus', this.handleFocus);\n      this.on('blur', this.handleBlur);\n    }\n  };\n\n  /**\n   * Disable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n  };\n\n  /**\n   * This gets called when a `ClickableComponent` gets:\n   * - Clicked (via the `click` event, listening starts in the constructor)\n   * - Tapped (via the `tap` event, listening starts in the constructor)\n   * - The following things happen in order:\n   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n   *      `ClickableComponent`.\n   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n   *      {@link ClickableComponent#handleKeyPress}.\n   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n   *      the space or enter key.\n   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n   *      event as a parameter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n\n\n  ClickableComponent.prototype.handleClick = function handleClick(event) {};\n\n  /**\n   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  ClickableComponent.prototype.handleFocus = function handleFocus(event) {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when this ClickableComponent has focus and a key gets pressed down. By\n   * default it will call `this.handleClick` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  ClickableComponent.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.trigger('click');\n    } else if (_Component.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  /**\n   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  ClickableComponent.prototype.handleBlur = function handleBlur(event) {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage = function (_ClickableComponent) {\n  inherits(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    classCallCheck(this, PosterImage);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.update();\n    player.on('posterchange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n    _ClickableComponent.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  PosterImage.prototype.createEl = function createEl$$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n\n    return el;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n\n\n  PosterImage.prototype.update = function update(event) {\n    var url = this.player().poster();\n\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.setSrc = function setSrc(url) {\n    var backgroundImage = '';\n\n    // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n    if (url) {\n      backgroundImage = 'url(\"' + url + '\")';\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n\n\n  PosterImage.prototype.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\nfunction constructColor(color, opacity) {\n  var hex = void 0;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\nvar TextTrackDisplay = function (_Component) {\n  inherits(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    classCallCheck(this, TextTrackDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options, ready));\n\n    player.on('loadstart', bind(_this, _this.toggleDisplay));\n    player.on('texttrackchange', bind(_this, _this.updateDisplay));\n    player.on('loadstart', bind(_this, _this.preselectTrack));\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind(_this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', bind(this, this.updateDisplay));\n\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  TextTrackDisplay.prototype.preselectTrack = function preselectTrack() {\n    var modes = { captions: 1, subtitles: 1 };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc = void 0;\n    var firstCaptions = void 0;\n    var preferredTrack = void 0;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language === track.language) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  };\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n\n\n  TextTrackDisplay.prototype.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TextTrackDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  };\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n\n\n  TextTrackDisplay.prototype.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  };\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n\n\n  TextTrackDisplay.prototype.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n\n    this.clearDisplay();\n\n    // Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  };\n\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack} track\n   *        Text track object to be added to the list.\n   */\n\n\n  TextTrackDisplay.prototype.updateForTrack = function updateForTrack(track) {\n    if (typeof window$1.WebVTT !== 'function' || !track.activeCues) {\n      return;\n    }\n\n    var cues = [];\n\n    for (var _i = 0; _i < track.activeCues.length; _i++) {\n      cues.push(track.activeCues[_i]);\n    }\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    if (!this.player_.textTrackSettings) {\n      return;\n    }\n\n    var overrides = this.player_.textTrackSettings.getValues();\n\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = '2px 2px 3px ' + darkGray + ', 2px 2px 4px ' + darkGray + ', 2px 2px 5px ' + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + darkGray + ', 2px 2px ' + darkGray + ', 3px 3px ' + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + lightGray + ', 0 1px ' + lightGray + ', -1px -1px ' + darkGray + ', 0 -1px ' + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = '0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner = function (_Component) {\n  inherits(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    classCallCheck(this, LoadingSpinner);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  LoadingSpinner.prototype.createEl = function createEl$$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button = function (_ClickableComponent) {\n  inherits(Button, _ClickableComponent);\n\n  function Button() {\n    classCallCheck(this, Button);\n    return possibleConstructorReturn(this, _ClickableComponent.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  Button.prototype.createEl = function createEl(tag) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    tag = 'button';\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = assign({\n\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Button.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var className = this.constructor.name;\n\n    log$1.warn('Adding an actionable (user controllable) child to a Button (' + className + ') is not supported; use a ClickableComponent instead.');\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component.prototype.addChild.call(this, child, options);\n  };\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n\n\n  Button.prototype.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n    this.el_.removeAttribute('disabled');\n  };\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n\n\n  Button.prototype.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n    this.el_.setAttribute('disabled', 'disabled');\n  };\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n\n\n  Button.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\n    if (event.which === 32 || event.which === 13) {\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    _ClickableComponent.prototype.handleKeyPress.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton = function (_Button) {\n  inherits(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    classCallCheck(this, BigPlayButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  BigPlayButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  };\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  BigPlayButton.prototype.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  BigPlayButton.prototype.handleKeyPress = function handleKeyPress(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyPress.call(this, event);\n  };\n\n  BigPlayButton.prototype.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\n\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton = function (_Button) {\n  inherits(CloseButton, _Button);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function CloseButton(player, options) {\n    classCallCheck(this, CloseButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CloseButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-close-button ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when this will be\n   * triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n\n\n  CloseButton.prototype.handleClick = function handleClick(event) {\n\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({ type: 'close', bubbles: false });\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle = function (_Button) {\n  inherits(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    classCallCheck(this, PlayToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'play', _this.handlePlay);\n    _this.on(player, 'pause', _this.handlePause);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlayToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-play-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlayToggle.prototype.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n\n\n  PlayToggle.prototype.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  };\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n\n\n  PlayToggle.prototype.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.controlText('Pause');\n  };\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n\n\n  PlayToggle.prototype.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.controlText('Play');\n  };\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  PlayToggle.prototype.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\n\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n* Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in seconds)\n* will force a number of leading zeros to cover the length of the guide.\n*\n* @param {number} seconds\n*        Number of seconds to be turned into a string\n*\n* @param {number} guide\n*        Number (in seconds) to model the string after\n*\n* @return {string}\n*         Time formatted as H:MM:SS or M:SS\n*/\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n\n  return h + m + s;\n};\n\nvar implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime implementation.\n *        Will receive the current time in seconds and the guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\nfunction formatTime (seconds) {\n  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\n\n  return implementation(seconds, guide);\n}\n\n/**\n * @file time-display.js\n */\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar TimeDisplay = function (_Component) {\n  inherits(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    classCallCheck(this, TimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.throttledUpdateContent = throttle(bind(_this, _this.updateContent), 25);\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TimeDisplay.prototype.createEl = function createEl$$1(plainName) {\n    var className = this.buildCSSClass();\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + ' vjs-time-control vjs-control',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize(this.labelText_) + '\\xA0</span>'\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + '-display'\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off'\n    });\n\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  TimeDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  };\n\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  };\n\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  };\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  TimeDisplay.prototype.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\n\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay = function (_TimeDisplay) {\n  inherits(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    classCallCheck(this, CurrentTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CurrentTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  };\n\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  CurrentTimeDisplay.prototype.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\n    this.updateFormattedTime_(time);\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  CurrentTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay = function (_TimeDisplay) {\n  inherits(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    classCallCheck(this, DurationDisplay);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DurationDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  };\n\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n\n\n  DurationDisplay.prototype.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (duration && this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\n\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider = function (_Component) {\n  inherits(TimeDivider, _Component);\n\n  function TimeDivider() {\n    classCallCheck(this, TimeDivider);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeDivider.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay = function (_TimeDisplay) {\n  inherits(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    classCallCheck(this, RemainingTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  RemainingTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  };\n\n  /**\n   * The remaining time display prefixes numbers with a \"minus\" character.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  RemainingTimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    // TODO: The \"-\" should be decorative, and not announced by a screen reader\n    return '-' + _TimeDisplay.prototype.formatTime_.call(this, time);\n  };\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n\n\n  RemainingTimeDisplay.prototype.updateContent = function updateContent(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  RemainingTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay = function (_Component) {\n  inherits(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    classCallCheck(this, LiveDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.updateShowing();\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LiveDisplay.prototype.createEl = function createEl$$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Stream Type') + '\\xA0</span>' + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  LiveDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n\n\n  LiveDisplay.prototype.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file slider.js\n */\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider = function (_Component) {\n  inherits(Slider, _Component);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function Slider(player, options) {\n    classCallCheck(this, Slider);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.bar = _this.getChild(_this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  Slider.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n\n\n  Slider.prototype.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('focus', this.handleFocus);\n    this.on('blur', this.handleBlur);\n    this.on('click', this.handleClick);\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n\n\n  Slider.prototype.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    var doc = this.bar.el_.ownerDocument;\n\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  };\n\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Slider.prototype.createEl = function createEl$$1(type) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n\n\n  Slider.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n    blockTextSelection();\n\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('slideractive');\n\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n\n    this.handleMouseMove(event);\n  };\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  Slider.prototype.handleMouseMove = function handleMouseMove(event) {};\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n\n\n  Slider.prototype.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n\n    unblockTextSelection();\n\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('sliderinactive');\n\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n\n    this.update();\n  };\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @returns {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n\n\n  Slider.prototype.update = function update() {\n\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    }\n\n    // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n    var progress = this.getPercent();\n    var bar = this.bar;\n\n    // If there's no bar...\n    if (!bar) {\n      return;\n    }\n\n    // Protect against no duration and other division issues\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    }\n\n    // Convert to a percentage for setting\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style;\n\n    // Set the new bar width or height\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  };\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n\n\n  Slider.prototype.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  };\n\n  /**\n   * Handle a `focus` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to run.\n   *\n   * @listens focus\n   */\n\n\n  Slider.prototype.handleFocus = function handleFocus() {\n    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n\n\n  Slider.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepForward();\n    }\n  };\n\n  /**\n   * Handle a `blur` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to run.\n   *\n   * @listens blur\n   */\n\n  Slider.prototype.handleBlur = function handleBlur() {\n    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n\n\n  Slider.prototype.handleClick = function handleClick(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  };\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n\n\n  Slider.prototype.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar = function (_Component) {\n  inherits(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    classCallCheck(this, LoadProgressBar);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.partEls_ = [];\n    _this.on(player, 'progress', _this.update);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LoadProgressBar.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Loaded') + '</span>: 0%</span>'\n    });\n  };\n\n  LoadProgressBar.prototype.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n\n\n  LoadProgressBar.prototype.update = function update(event) {\n    var buffered = this.player_.buffered();\n    var duration = this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n\n    // get the percent width of a time compared to the total end\n    var percentify = function percentify(time, end) {\n      // no NaN\n      var percent = time / end || 0;\n\n      return (percent >= 1 ? 1 : percent) * 100 + '%';\n    };\n\n    // update the width of the progress bar\n    this.el_.style.width = percentify(bufferedEnd, duration);\n\n    // add child elements to represent the individual buffered time ranges\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      }\n\n      // set the percent based on the width of the progress bar (bufferedEnd)\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    }\n\n    // remove unused buffered range elements\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip = function (_Component) {\n  inherits(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    classCallCheck(this, TimeTooltip);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeTooltip.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    });\n  };\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  TimeTooltip.prototype.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    var pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = '-' + pullTooltipBy + 'px';\n    textContent(this.el_, content);\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar = function (_Component) {\n  inherits(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    classCallCheck(this, PlayProgressBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  PlayProgressBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Progress') + '</span>: 0%</span>'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  PlayProgressBar.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var time = _this2.player_.scrubbing() ? _this2.player_.getCache().currentTime : _this2.player_.currentTime();\n\n      var content = formatTime(time, _this2.player_.duration());\n      var timeTooltip = _this2.getChild('timeTooltip');\n\n      if (timeTooltip) {\n        timeTooltip.update(seekBarRect, seekBarPoint, content);\n      }\n    });\n  };\n\n  return PlayProgressBar;\n}(Component);\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay = function (_Component) {\n  inherits(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    classCallCheck(this, MouseTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.update = throttle(bind(_this, _this.update), 25);\n    return _this;\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  MouseTimeDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  MouseTimeDisplay.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var duration = _this2.player_.duration();\n      var content = formatTime(seekBarPoint * duration, duration);\n\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + 'px';\n      _this2.getChild('timeTooltip').update(seekBarRect, seekBarPoint, content);\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\n\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n\n// The number of seconds the `step*` functions move the timeline.\nvar STEP_SECONDS = 5;\n\n// The interval at which the bar should update as it progresses.\nvar UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar = function (_Slider) {\n  inherits(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    classCallCheck(this, SeekBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.setEventHandlers_();\n    return _this;\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.setEventHandlers_ = function setEventHandlers_() {\n    var _this2 = this;\n\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n\n    this.on(this.player_, ['playing'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n\n      _this2.updateInterval = _this2.setInterval(function () {\n        _this2.requestAnimationFrame(function () {\n          _this2.update();\n        });\n      }, UPDATE_REFRESH_INTERVAL);\n    });\n\n    this.on(this.player_, ['ended', 'pause', 'waiting'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n    });\n\n    this.on(this.player_, ['timeupdate', 'ended'], this.update);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  SeekBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  };\n\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessibility\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.update_ = function update_(currentTime, percent) {\n    var duration = this.player_.duration();\n\n    // machine readable value of progress bar (percentage complete)\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n    // human readable value of progress bar (time complete)\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n    // Update the `PlayProgressBar`.\n    this.bar.update(getBoundingClientRect(this.el_), percent);\n  };\n\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @returns {number}\n   *          The current percent at a number from 0-1\n   */\n\n\n  SeekBar.prototype.update = function update(event) {\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  };\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  };\n\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  SeekBar.prototype.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  };\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n\n\n  SeekBar.prototype.getPercent = function getPercent() {\n    var percent = this.getCurrentTime_() / this.player_.duration();\n\n    return percent >= 1 ? 1 : percent || 0;\n  };\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  SeekBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n\n\n  SeekBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime = this.calculateDistance(event) * this.player_.duration();\n\n    // Don't let video end while scrubbing.\n    if (newTime === this.player_.duration()) {\n      newTime = newTime - 0.1;\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.player_.currentTime(newTime);\n  };\n\n  SeekBar.prototype.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  SeekBar.prototype.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  };\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n\n\n  SeekBar.prototype.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  };\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  };\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  };\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n\n\n  SeekBar.prototype.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down. By\n   * default it will call `this.handleAction` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  SeekBar.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.handleAction(event);\n    } else if (_Slider.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Slider.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nSeekBar.prototype.playerEvent = 'timeupdate';\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl = function (_Component) {\n  inherits(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    classCallCheck(this, ProgressControl);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.handleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_this, _this.handleMouseSeek), 25);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  ProgressControl.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  };\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n\n\n  ProgressControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n      // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  };\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  ProgressControl.prototype.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  };\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  ProgressControl.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n\n    this.addClass('disabled');\n\n    this.enabled_ = false;\n  };\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  ProgressControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  ProgressControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\n\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file fullscreen-toggle.js\n */\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle = function (_Button) {\n  inherits(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    classCallCheck(this, FullscreenToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[FullscreenApi.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  FullscreenToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-fullscreen-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n\n\n  FullscreenToggle.prototype.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  };\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  FullscreenToggle.prototype.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\n\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel = function (_Component) {\n  inherits(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    classCallCheck(this, VolumeLevel);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  VolumeLevel.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-bar.js\n */\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar = function (_Slider) {\n  inherits(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    classCallCheck(this, VolumeBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.on('slideractive', _this.updateLastVolume_);\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  };\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  VolumeBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n\n\n  VolumeBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  };\n\n  /**\n   * If the player is muted unmute it.\n   */\n\n\n  VolumeBar.prototype.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  };\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n\n\n  VolumeBar.prototype.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  };\n\n  /**\n   * Increase volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  };\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  };\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n\n\n  VolumeBar.prototype.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  };\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n\n\n  VolumeBar.prototype.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  };\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n\n\n  VolumeBar.prototype.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\n\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl = function (_Component) {\n  inherits(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumeControl);\n\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    checkVolumeSupport(_this, player);\n\n    _this.throttledHandleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n    _this.on('touchstart', _this.handleMouseDown);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n      _this.addClass('vjs-slider-active');\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n      _this.removeClass('vjs-slider-active');\n      _this.trigger('sliderinactive');\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeControl.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-control vjs-control ' + orientationClass\n    });\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  VolumeControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\n\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file mute-toggle.js\n */\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle = function (_Button) {\n  inherits(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    classCallCheck(this, MuteToggle);\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    checkMuteSupport(_this, player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MuteToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-mute-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MuteToggle.prototype.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  };\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n\n\n  MuteToggle.prototype.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  };\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3;\n\n    // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n    if (IS_IOS) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    }\n\n    // TODO improve muted icon classes\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, 'vjs-vol-' + i);\n    }\n    addClass(this.el_, 'vjs-vol-' + level);\n  };\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\n\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel = function (_Component) {\n  inherits(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumePanel);\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n    return _this;\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  };\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  };\n\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n\n\n  VolumePanel.prototype.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    }\n\n    // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumePanel.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-panel vjs-control ' + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\n\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * @file menu.js\n */\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu = function (_Component) {\n  inherits(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    classCallCheck(this, Menu);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyPress);\n    return _this;\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n\n\n  Menu.prototype.addItem = function addItem(component) {\n    this.addChild(component);\n    component.on('click', bind(this, function (event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton();\n\n        // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere\n        if (component.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }));\n  };\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n\n\n  Menu.prototype.createEl = function createEl$$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n\n    return el;\n  };\n\n  Menu.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n\n\n  Menu.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepBack();\n    }\n  };\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n\n\n  Menu.prototype.focus = function focus() {\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton = function (_Component) {\n  inherits(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, MenuButton);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n    _this.on(_this.menuButton_, 'focus', _this.handleFocus);\n    _this.on(_this.menuButton_, 'blur', _this.handleBlur);\n\n    _this.on('keydown', _this.handleSubmenuKeyPress);\n    return _this;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  MenuButton.prototype.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n\n\n  MenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, { menuButton: this });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      var title = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n\n      this.hideThreshold_ += 1;\n\n      menu.children_.unshift(title);\n      prependTo(title, menu.contentEl());\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n\n\n  MenuButton.prototype.createItems = function createItems() {};\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuButton.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  };\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n\n\n  MenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + buttonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  MenuButton.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.menuButton_.el();\n\n    return this.menuButton_.controlText(text, el);\n  };\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuButton.prototype.handleClick = function handleClick(event) {\n    // When you click the button it adds focus, which will show the menu.\n    // So we'll remove focus when the mouse leaves the button. Focus is needed\n    // for tab navigation.\n\n    this.one(this.menu.contentEl(), 'mouseleave', bind(this, function (e) {\n      this.unpressButton();\n      this.el_.blur();\n    }));\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  };\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n\n\n  MenuButton.prototype.focus = function focus() {\n    this.menuButton_.focus();\n  };\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n\n\n  MenuButton.prototype.blur = function blur() {\n    this.menuButton_.blur();\n  };\n\n  /**\n   * This gets called when a `MenuButton` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  MenuButton.prototype.handleFocus = function handleFocus() {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when a `MenuButton` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  MenuButton.prototype.handleBlur = function handleBlur() {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n      // Up (38) key or Down (40) key press the 'button'\n    } else if (event.which === 38 || event.which === 40) {\n      if (!this.buttonPressed_) {\n        this.pressButton();\n        event.preventDefault();\n      }\n    }\n  };\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n    }\n  };\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n\n\n  MenuButton.prototype.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  };\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n\n\n  MenuButton.prototype.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  };\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.disable = function disable() {\n    this.unpressButton();\n\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n\n    this.menuButton_.disable();\n  };\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton = function (_MenuButton) {\n  inherits(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    classCallCheck(this, TrackButton);\n\n    var tracks = options.tracks;\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return possibleConstructorReturn(_this);\n    }\n\n    var updateHandler = bind(_this, _this.update);\n\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-item.js\n */\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem = function (_ClickableComponent) {\n  inherits(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    classCallCheck(this, MenuItem);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n    return _this;\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label) + '</span>',\n      tabIndex: -1\n    }, props), attrs);\n  };\n\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuItem.prototype.handleClick = function handleClick(event) {\n    this.selected(true);\n  };\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n\n\n  MenuItem.prototype.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem = function (_MenuItem) {\n  inherits(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    classCallCheck(this, TextTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_this, args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      var event = void 0;\n\n      _this.on(['tap', 'click'], function () {\n        if (_typeof(window$1.Event) !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    _this.handleTracksChange();\n    return _this;\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  TextTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var kind = this.track.kind;\n    var kinds = this.track.kinds;\n    var tracks = this.player_.textTracks();\n\n    if (!kinds) {\n      kinds = [kind];\n    }\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      if (track === this.track && kinds.indexOf(track.kind) > -1) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  };\n\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  TextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  TextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  TextTrackMenuItem.prototype.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem = function (_TextTrackMenuItem) {\n  inherits(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    classCallCheck(this, OffTextTrackMenuItem);\n\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n    options.multiSelectable = false;\n\n    return possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  OffTextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  OffTextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton = function (_TrackButton) {\n  inherits(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, TextTrackButton);\n\n    options.tracks = player.textTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  TextTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var TrackMenuItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TextTrackMenuItem;\n\n\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    var label = void 0;\n\n    if (this.label_) {\n      label = this.label_ + ' off';\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n\n    this.hideThreshold_ += 1;\n\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n\n        item.addClass('vjs-' + track.kind + '-menu-item');\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem = function (_MenuItem) {\n  inherits(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    classCallCheck(this, ChaptersTrackMenuItem);\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  ChaptersTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  };\n\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n\n\n  ChaptersTrackMenuItem.prototype.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime();\n\n    // vjs.log(currentTime, cue.startTime);\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton = function (_TextTrackButton) {\n  inherits(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    classCallCheck(this, ChaptersButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  ChaptersButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n\n\n  ChaptersButton.prototype.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n    _TextTrackButton.prototype.update.call(this);\n  };\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n\n\n  ChaptersButton.prototype.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  };\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n\n\n  ChaptersButton.prototype.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  };\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n\n\n  ChaptersButton.prototype.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase(this.kind_));\n  };\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n\n\n  ChaptersButton.prototype.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  };\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n\n\n  ChaptersButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, { track: this.track_, cue: cue });\n\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\n\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton = function (_TextTrackButton) {\n  inherits(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    classCallCheck(this, DescriptionsButton);\n\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    var tracks = player.textTracks();\n    var changeHandler = bind(_this, _this.handleTracksChange);\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  DescriptionsButton.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DescriptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  DescriptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\n\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton = function (_TextTrackButton) {\n  inherits(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    classCallCheck(this, SubtitlesButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubtitlesButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubtitlesButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem = function (_TextTrackMenuItem) {\n  inherits(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    classCallCheck(this, CaptionSettingsMenuItem);\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n\n    options.name = 'CaptionSettingsMenuItem';\n\n    var _this = possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n\n    _this.addClass('vjs-texttrack-settings');\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n    return _this;\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  CaptionSettingsMenuItem.prototype.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton = function (_TextTrackButton) {\n  inherits(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    classCallCheck(this, CaptionsButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CaptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  CaptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  CaptionsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.kind_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\n\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem = function (_TextTrackMenuItem) {\n  inherits(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    classCallCheck(this, SubsCapsMenuItem);\n    return possibleConstructorReturn(this, _TextTrackMenuItem.apply(this, arguments));\n  }\n\n  SubsCapsMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Captions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton = function (_TextTrackButton) {\n  inherits(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, SubsCapsButton);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options));\n\n    _this.label_ = 'subtitles';\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubsCapsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubsCapsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  SubsCapsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.label_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem = function (_MenuItem) {\n  inherits(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    classCallCheck(this, AudioTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n\n    _this.addClass('vjs-' + track.kind + '-menu-item');\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  AudioTrackMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Descriptions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  AudioTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      track.enabled = track === this.track;\n    }\n  };\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n\n\n  AudioTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton = function (_TrackButton) {\n  inherits(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, AudioTrackButton);\n\n    options.tracks = player.audioTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  AudioTrackButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  AudioTrackButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n\n\n  AudioTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem = function (_MenuItem) {\n  inherits(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    classCallCheck(this, PlaybackRateMenuItem);\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n    return _this;\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player().playbackRate(this.rate);\n  };\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuItem.prototype.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\n\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton = function (_MenuButton) {\n  inherits(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    classCallCheck(this, PlaybackRateMenuButton);\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    _this.updateVisibility();\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n    _this.on(player, 'ratechange', _this.updateLabel);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  PlaybackRateMenuButton.prototype.createEl = function createEl$$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n\n    el.appendChild(this.labelEl_);\n\n    return el;\n  };\n\n  PlaybackRateMenuButton.prototype.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlaybackRateMenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  PlaybackRateMenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n\n\n  PlaybackRateMenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), { rate: rates[i] + 'x' }));\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Updates ARIA accessibility attributes\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  };\n\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuButton.prototype.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates();\n\n    // this will select first one if the last one currently selected\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n    this.player().playbackRate(newRate);\n  };\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  };\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  };\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  };\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer = function (_Component) {\n  inherits(Spacer, _Component);\n\n  function Spacer() {\n    classCallCheck(this, Spacer);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  Spacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-spacer ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  Spacer.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer = function (_Spacer) {\n  inherits(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    classCallCheck(this, CustomControlSpacer);\n    return possibleConstructorReturn(this, _Spacer.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  CustomControlSpacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-custom-control-spacer ' + _Spacer.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  CustomControlSpacer.prototype.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    });\n\n    // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n    el.innerHTML = '\\xA0';\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar = function (_Component) {\n  inherits(ControlBar, _Component);\n\n  function ControlBar() {\n    classCallCheck(this, ControlBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ControlBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay = function (_ModalDialog) {\n  inherits(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    classCallCheck(this, ErrorDisplay);\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.on(player, 'error', _this.open);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  ErrorDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-error-display ' + _ModalDialog.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n\n\n  ErrorDisplay.prototype.content = function content() {\n    var error = this.player().error();\n\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\n\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/**\n * @file text-track-settings.js\n */\n\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\n\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\n\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\n\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\nvar TextTrackSettings = function (_ModalDialog) {\n  inherits(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    classCallCheck(this, TextTrackSettings);\n\n    options.temporary = false;\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.updateDisplay = bind(_this, _this.updateDisplay);\n\n    // fill the modal and pretend we have opened it\n    _this.fill();\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n    return _this;\n  }\n\n  TextTrackSettings.prototype.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElSelect_ = function createElSelect_(key) {\n    var _this2 = this;\n\n    var legendId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'label';\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n\n    return ['<' + type + ' id=\"' + id + '\" class=\"' + (type === 'label' ? 'vjs-label' : '') + '\">', this.localize(config.label), '</' + type + '>', '<select aria-labelledby=\"' + selectLabelledbyIds + '\">'].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n\n      return ['<option id=\"' + optionId + '\" value=\"' + o[0] + '\" ', 'aria-labelledby=\"' + selectLabelledbyIds + ' ' + optionId + '\">', _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  };\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFgColor_ = function createElFgColor_() {\n    var legendId = 'captions-text-legend-' + this.id_;\n\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElBgColor_ = function createElBgColor_() {\n    var legendId = 'captions-background-' + this.id_;\n\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElWinColor_ = function createElWinColor_() {\n    var legendId = 'captions-window-' + this.id_;\n\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  };\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  };\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: ['<button class=\"vjs-default-button\" title=\"' + defaultsDescription + '\">', this.localize('Reset'), '<span class=\"vjs-control-text\"> ' + defaultsDescription + '</span>', '</button>', '<button class=\"vjs-done-button\">' + this.localize('Done') + '</button>'].join('')\n    });\n  };\n\n  TextTrackSettings.prototype.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  TextTrackSettings.prototype.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  TextTrackSettings.prototype.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  TextTrackSettings.prototype.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  };\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  };\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  };\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n\n\n  TextTrackSettings.prototype.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config.default : 0;\n\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  };\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n\n\n  TextTrackSettings.prototype.restoreSettings = function restoreSettings() {\n    var values = void 0;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log$1.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  };\n\n  /**\n   * Save text track settings to localStorage\n   */\n\n\n  TextTrackSettings.prototype.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  };\n\n  /**\n   * Update display of text track settings\n   */\n\n\n  TextTrackSettings.prototype.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    this.off(document, 'keydown', this.handleKeyDown);\n\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager = function (_Component) {\n  inherits(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    classCallCheck(this, ResizeManager);\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    var options_ = mergeOptions({ createEl: !RESIZE_OBSERVER_AVAILABLE }, options);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_));\n\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, player);\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (_this.el_.contentWindow) {\n          on(_this.el_.contentWindow, 'resize', _this.debouncedHandler_);\n        }\n        _this.off('load', _this.loadListener_);\n      };\n\n      _this.on('load', _this.loadListener_);\n    }\n    return _this;\n  }\n\n  ResizeManager.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager'\n    });\n  };\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n\n\n  ResizeManager.prototype.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger('playerresize');\n  };\n\n  ResizeManager.prototype.dispose = function dispose() {\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.el_ && this.el_.contentWindow) {\n      off(this.el_.contentWindow, 'resize', this.debouncedHandler_);\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase());\n\n    // set innerHTML to the value provided\n    dummy.innerHTML = v;\n\n    // make a document fragment to hold the nodes from dummy\n    var docFrag = document.createDocumentFragment();\n\n    // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    }\n\n    // remove content\n    this.innerText = '';\n\n    // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n    window$1.Element.prototype.appendChild.call(this, docFrag);\n\n    // then return the result that innerHTML's setter would\n    return this.innerHTML;\n  }\n});\n\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n\n      sourcesetLoad(tech);\n\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nvar _templateObject$1 = taggedTemplateLiteralLoose(['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.'], ['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.']);\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 = function (_Tech) {\n  inherits(Html5, _Tech);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Html5(options, ready) {\n    classCallCheck(this, Html5);\n\n    var _this = possibleConstructorReturn(this, _Tech.call(this, options, ready));\n\n    var source = options.source;\n    var crossoriginTracks = false;\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n            _this.remoteTextTracks().addTrack(node.track);\n            _this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn(tsml(_templateObject$1));\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    _this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n    return _this;\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  Html5.prototype.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    _Tech.prototype.dispose.call(this);\n  };\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n\n\n  Html5.prototype.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  };\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState = void 0;\n\n    // captures a snapshot of every metadata track's current state\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  };\n\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {String} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {Boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n\n\n  Html5.prototype.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this;\n\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this['featuresNative' + type + 'Tracks']) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + 'TracksListeners_']) {\n      Object.keys(this[lowerCaseType + 'TracksListeners_']).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + 'Tracks'];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + 'TracksListeners_'][eventName]);\n      });\n    }\n\n    this['featuresNative' + type + 'Tracks'] = !override;\n    this[lowerCaseType + 'TracksListeners_'] = null;\n\n    this.proxyNativeTracksForType_(lowerCaseType);\n  };\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {Boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n\n\n  Html5.prototype.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  };\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {Boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n\n\n  Html5.prototype.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  };\n\n  /**\n    * Proxy native track list events for the given type to our track\n    * lists if the browser we are playing in supports that type of track list.\n    *\n    * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n    * @private\n    */\n\n\n  Html5.prototype.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this['featuresNative' + props.capitalName + 'Tracks'] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n\n      elTracks.addEventListener(eventName, listener);\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    });\n\n    // Remove (native) tracks that are not used anymore\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  };\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  };\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Html5.prototype.createEl = function createEl$$1() {\n    var el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video');\n\n        // determine if native controls should be used\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  };\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n\n\n  Html5.prototype.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    var eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  };\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n\n\n  Html5.prototype.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  };\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n\n\n  Html5.prototype.duration = function duration() {\n    var _this5 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  };\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n\n\n  Html5.prototype.width = function width() {\n    return this.el_.offsetWidth;\n  };\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n\n\n  Html5.prototype.height = function height() {\n    return this.el_.offsetHeight;\n  };\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n\n\n  Html5.prototype.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', { isFullscreen: false });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n\n        this.trigger('fullscreenchange', { isFullscreen: true });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  };\n\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n\n\n  Html5.prototype.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || '';\n\n      // Seems to be broken in Chromium/Chrome && Safari in Leopard\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n\n\n  Html5.prototype.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play();\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  };\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n\n\n  Html5.prototype.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  };\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  Html5.prototype.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(_src);\n  };\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n\n\n  Html5.prototype.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  };\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n\n\n  Html5.prototype.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  };\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n\n\n  Html5.prototype.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Html5.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  };\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Html5.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {Boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Html5.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n\n\n  Html5.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n\n\n  Html5.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\nif (isReal()) {\n\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted;\n\n    // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n    Html5.TEST_VID.muted = !muted;\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', { get: noop, set: noop });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks();\n\n// HTML5 Feature detection and Device Fixes --------------------------------- //\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\nHtml5.patchCanPlayType = function () {\n\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n};\n\n// by default, patch the media element\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\n\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n\n    return Html5.nativeSourceHandler.canPlayType('video/' + ext);\n  }\n\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\n\nTech.registerTech('Html5', Html5);\n\nvar _templateObject$2 = taggedTemplateLiteralLoose(['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      '], ['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      ']);\n\n// The following tech events are simply re-triggered\n// on the player when they happen\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player = function (_Component) {\n  inherits(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    classCallCheck(this, Player);\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || 'vjs_video_' + newGUID();\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n          element = element.parentNode;\n        }\n      }\n    }\n\n    // Run base component initializing with new options\n\n    // Tracks when a tech changes the poster\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    _this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    _this.isReady_ = false;\n\n    // Init state hasStarted_\n    _this.hasStarted_ = false;\n\n    // Init state userActive_\n    _this.userActive_ = false;\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    _this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    _this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    _this.language(_this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n\n      Object.getOwnPropertyNames(options.languages).forEach(function (name$$1) {\n        languagesToLower[name$$1.toLowerCase()] = options.languages[name$$1];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    // Cache for video property values.\n    _this.cache_ = {};\n\n    // Set poster\n    _this.poster_ = options.poster || '';\n\n    // Set controls\n    _this.controls_ = !!options.controls;\n\n    // Set default values for lastVolume\n    _this.cache_.lastVolume = 1;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n\n    // the attribute overrides the option\n    if (tag.hasAttribute('autoplay')) {\n      _this.options_.autoplay = true;\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    }\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    _this.scrubbing_ = false;\n\n    _this.el_ = _this.createEl();\n\n    // Set default value for lastPlaybackRate\n    _this.cache_.lastPlaybackRate = _this.defaultPlaybackRate();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(_this, { eventBusKey: 'el_' });\n\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    var playerOptionsCopy = mergeOptions(_this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      var plugins = options.plugins;\n\n      Object.keys(plugins).forEach(function (name$$1) {\n        if (typeof this[name$$1] === 'function') {\n          this[name$$1](plugins[name$$1]);\n        } else {\n          throw new Error('plugin \"' + name$$1 + '\" does not exist');\n        }\n      }, _this);\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n\n    _this.middleware_ = [];\n\n    _this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    _this.el_.setAttribute('role', 'region');\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // if (browser.TOUCH_ENABLED) {\n    //   this.addClass('vjs-touch-enabled');\n    // }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[_this.id_] = _this;\n\n    // Add a major version class to aid css in plugins\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass('vjs-v' + majorVersion);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    _this.userActive(true);\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n    _this.on('fullscreenchange', _this.handleFullscreenChange_);\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.changingSrc_ = false;\n    _this.playWaitingForReady_ = false;\n    _this.playOnLoadstart_ = null;\n    return _this;\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  Player.prototype.dispose = function dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this);\n\n    // the actual .el_ is removed here\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  Player.prototype.createEl = function createEl$$1() {\n    var tag = this.tag;\n    var el = void 0;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n\n      playerElIngest = this.playerElIngest_ = el;\n      // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n      Object.keys(el).forEach(function (k) {\n        tag[k] = el[k];\n      });\n    }\n\n    // set tabindex to -1 to remove the video element from the focus order\n    tag.setAttribute('tabindex', '-1');\n    // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button)\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 if JAWS is not being used\n    if (IE_VERSION) {\n      tag.setAttribute('role', 'application');\n    }\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n\n    // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n\n    this.el_ = el;\n\n    return el;\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n\n\n  Player.prototype.width = function width(value) {\n    return this.dimension('width', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n\n\n  Player.prototype.height = function height(value) {\n    return this.dimension('height', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n\n\n  Player.prototype.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log$1.error('Improper value \"' + value + '\" supplied for for ' + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  };\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will toggle the fluid class.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n\n\n  Player.prototype.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n\n\n  Player.prototype.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n\n\n  Player.prototype.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width = void 0;\n    var height = void 0;\n    var aspectRatio = void 0;\n    var idClass = void 0;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n\n    setTextContent(this.styleEl_, '\\n      .' + idClass + ' {\\n        width: ' + width + 'px;\\n        height: ' + height + 'px;\\n      }\\n\\n      .' + idClass + '.vjs-fluid {\\n        padding-top: ' + ratioMultiplier * 100 + '%;\\n      }\\n    ');\n  };\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n\n\n  Player.prototype.loadTech_ = function loadTech_(techName, source) {\n    var _this2 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay();\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + '_' + titleTechName + '_api',\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      techOptions[props.getterName] = _this2[props.privateName];\n    });\n\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error('No Tech named \\'' + titleTechName + '\\' exists! \\'' + titleTechName + '\\' should be registered using videojs.registerTech()\\'');\n    }\n\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this2.on(_this2.tech_, event, _this2['handleTech' + toTitleCase(event) + '_']);\n    });\n\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this2.on(_this2.tech_, event, function (eventObj) {\n        if (_this2.tech_.playbackRate() === 0 && _this2.tech_.seeking()) {\n          _this2.queuedCallbacks_.push({\n            callback: _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'].bind(_this2),\n            event: eventObj\n          });\n          return;\n        }\n        _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'](eventObj);\n      });\n    });\n\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  };\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n\n\n  Player.prototype.unloadTech_ = function unloadTech_() {\n    var _this3 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      _this3[props.privateName] = _this3[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n\n    this.isReady_ = false;\n\n    this.tech_.dispose();\n\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  };\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n\n\n  Player.prototype.tech = function tech(safety) {\n    if (safety === undefined) {\n      log$1.warn(tsml(_templateObject$2));\n    }\n\n    return this.tech_;\n  };\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n\n\n  Player.prototype.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n\n    // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n    this.on(this.tech_, 'mousedown', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  };\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n\n\n  Player.prototype.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mousedown', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  };\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n\n\n  Player.prototype.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n  };\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n\n    // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n    this.manualAutoplay_(this.autoplay());\n  };\n\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n\n\n  Player.prototype.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this4 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this4.muted();\n\n      _this4.muted(true);\n\n      var playPromise = _this4.play();\n\n      if (!playPromise || !playPromise.then || !playPromise.catch) {\n        return;\n      }\n\n      return playPromise.catch(function (e) {\n        // restore old value of muted on failure\n        _this4.muted(previouslyMuted);\n      });\n    };\n\n    var promise = void 0;\n\n    if (type === 'any') {\n      promise = this.play();\n\n      if (promise && promise.then && promise.catch) {\n        promise.catch(function () {\n          return muted();\n        });\n      }\n    } else if (type === 'muted') {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!promise || !promise.then || !promise.catch) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this4.trigger({ type: 'autoplay-success', autoplay: type });\n    }).catch(function (e) {\n      _this4.trigger({ type: 'autoplay-failure', autoplay: type });\n    });\n  };\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n\n\n  Player.prototype.updateSourceCaches_ = function updateSourceCaches_() {\n    var srcObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = mergeOptions({}, srcObj, { src: src, type: type });\n\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  };\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n\n\n  Player.prototype.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this5 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      // update the source to the intial source right away\n      // in some cases this will be empty string\n      this.updateSourceCaches_(event.src);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            _this5.updateSourceCaches_(_this5.techGet_('currentSrc'));\n          }\n\n          _this5.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  };\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n\n\n  Player.prototype.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  };\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n    this.trigger('play');\n  };\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n\n\n  Player.prototype.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  };\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n\n\n  Player.prototype.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this6 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n    this.trigger('waiting');\n    this.one('timeupdate', function () {\n      return _this6.removeClass('vjs-waiting');\n    });\n  };\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplay');\n  };\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplaythrough');\n  };\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n    this.trigger('playing');\n  };\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeking');\n  };\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeked');\n  };\n\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   * @deprecated As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n\n\n  Player.prototype.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log$1.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n    this.trigger('firstplay');\n  };\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n\n\n  Player.prototype.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n    this.trigger('pause');\n  };\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n\n\n  Player.prototype.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n    this.trigger('ended');\n  };\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  };\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mousedown\n   * @private\n   */\n\n\n  Player.prototype.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  };\n\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n\n\n  Player.prototype.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    }\n\n    // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      if (this.isFullscreen()) {\n        this.exitFullscreen();\n      } else {\n        this.requestFullscreen();\n      }\n    }\n  };\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n\n\n  Player.prototype.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  };\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  };\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  };\n\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  };\n\n  /**\n   * Fired when the player switches in or out of fullscreen mode\n   *\n   * @private\n   * @listens Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleFullscreenChange_ = function handleFullscreenChange_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  };\n\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n\n\n  Player.prototype.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  };\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('fullscreenchange');\n  };\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n\n\n  Player.prototype.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n\n    this.error(error);\n  };\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n\n\n  Player.prototype.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n    this.trigger('textdata', data);\n  };\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n\n\n  Player.prototype.getCache = function getCache() {\n    return this.cache_;\n  };\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n\n\n  Player.prototype.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set$1(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  };\n\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n\n\n  Player.prototype.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get$1(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1('Video.js: ' + method + ' method not defined for ' + this.techName_ + ' playback technology.', e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log$1('Video.js: ' + method + ' unavailable on ' + this.techName_ + ' playback technology element.', e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log$1(e);\n      throw e;\n    }\n  };\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a `Promise` only if the browser returns one and the player\n   *         is ready to begin playback. For some browsers and all non-ready\n   *         situations, this will return `undefined`.\n   */\n\n\n  Player.prototype.play = function play() {\n    var _this7 = this;\n\n    // If this is called while we have a play queued up on a loadstart, remove\n    // that listener to avoid getting in a potentially bad state.\n    if (this.playOnLoadstart_) {\n      this.off('loadstart', this.playOnLoadstart_);\n    }\n\n    // If the player/tech is not ready, queue up another call to `play()` for\n    // when it is. This will loop back into this method for another attempt at\n    // playback when the tech is ready.\n    if (!this.isReady_) {\n\n      // Bail out if we're already waiting for `ready`!\n      if (this.playWaitingForReady_) {\n        return;\n      }\n\n      this.playWaitingForReady_ = true;\n      this.ready(function () {\n        _this7.playWaitingForReady_ = false;\n        silencePromise(_this7.play());\n      });\n\n      // If the player/tech is ready and we have a source, we can attempt playback.\n    } else if (!this.changingSrc_ && (this.src() || this.currentSrc())) {\n      return this.techGet_('play');\n\n      // If the tech is ready, but we do not have a source, we'll need to wait\n      // for both the `ready` and a `loadstart` when the source is finally\n      // resolved by middleware and set on the player.\n      //\n      // This can happen if `play()` is called while changing sources or before\n      // one has been set on the player.\n    } else {\n\n      this.playOnLoadstart_ = function () {\n        _this7.playOnLoadstart_ = null;\n        silencePromise(_this7.play());\n      };\n\n      this.one('loadstart', this.playOnLoadstart_);\n    }\n  };\n\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n\n\n  Player.prototype.pause = function pause() {\n    this.techCall_('pause');\n  };\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n\n\n  Player.prototype.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  };\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n\n\n  Player.prototype.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  };\n\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n\n\n  Player.prototype.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  };\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n\n\n  Player.prototype.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    }\n\n    // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  };\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n\n\n  Player.prototype.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds);\n\n    // Standardize on Infinity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      /**\n       * @event Player#durationchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('durationchange');\n    }\n  };\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  };\n\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  };\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n\n\n  Player.prototype.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  };\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n\n\n  Player.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  };\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n\n\n  Player.prototype.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  };\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n\n\n  Player.prototype.volume = function volume(percentAsDecimal) {\n    var vol = void 0;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  };\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n\n\n  Player.prototype.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  };\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n\n\n  Player.prototype.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  };\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n\n\n  Player.prototype.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  };\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n\n\n  Player.prototype.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  };\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n\n\n  Player.prototype.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      return;\n    }\n    return !!this.isFullscreen_;\n  };\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.requestFullscreen = function requestFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(true);\n\n    if (fsApi.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, fsApi.fullscreenchange, bind(this, function documentFullscreenChange(e) {\n        this.isFullscreen(document[fsApi.fullscreenElement]);\n\n        // If cancelling fullscreen, remove event listener.\n        if (this.isFullscreen() === false) {\n          off(document, fsApi.fullscreenchange, documentFullscreenChange);\n        }\n        /**\n         * @event Player#fullscreenchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('fullscreenchange');\n      }));\n\n      this.el_[fsApi.requestFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.exitFullscreen = function exitFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(false);\n\n    // Check for browser element fullscreen support\n    if (fsApi.requestFullscreen) {\n      document[fsApi.exitFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n\n\n  Player.prototype.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document, 'keydown', bind(this, this.fullWindowOnEscKey));\n\n    // Hide any scroll bars\n    document.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('enterFullWindow');\n  };\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n\n\n  Player.prototype.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (event.keyCode === 27) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  };\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n\n\n  Player.prototype.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.fullWindowOnEscKey);\n\n    // Unhide scroll bars.\n    document.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('exitFullWindow');\n  };\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Player.prototype.canPlayType = function canPlayType(type) {\n    var can = void 0;\n\n    // Loop through each playback technology in the options order\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n\n\n  Player.prototype.selectSource = function selectSource(sources) {\n    var _this8 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found = void 0;\n\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n\n      return found;\n    };\n\n    var foundSourceAndTech = void 0;\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this8.options_[techName.toLowerCase()])) {\n        return { source: source, tech: techName };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  };\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n\n\n  Player.prototype.src = function src(source) {\n    var _this9 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    var sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n      }, 0);\n      return;\n    }\n\n    // intial sources\n    this.changingSrc_ = true;\n\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this9.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      _this9.cache_.sources = sources;\n      _this9.updateSourceCaches_(middlewareSource);\n\n      var err = _this9.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this9.src(sources.slice(1));\n        }\n\n        _this9.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        _this9.setTimeout(function () {\n          this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        _this9.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this9.tech_);\n    });\n  };\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {Boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n\n\n  Player.prototype.src_ = function src_(source) {\n    var _this10 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this10.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n\n    return false;\n  };\n\n  /**\n   * Begin loading the src data.\n   */\n\n\n  Player.prototype.load = function load() {\n    this.techCall_('load');\n  };\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * and calls `reset` on the tech`.\n   */\n\n\n  Player.prototype.reset = function reset() {\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n  };\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n\n\n  Player.prototype.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  };\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n\n\n  Player.prototype.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  };\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n\n\n  Player.prototype.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  };\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n\n\n  Player.prototype.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  };\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n\n\n  Player.prototype.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  };\n\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n\n\n  Player.prototype.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay = void 0;\n\n    // if the value is a valid string set it to that\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false;\n\n      // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false;\n\n      // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = techAutoplay || this.options_.autoplay;\n\n    // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  };\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n\n\n  Player.prototype.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n    return this.techGet_('playsinline');\n  };\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {string}\n   *         The current value of loop when getting\n   */\n\n\n  Player.prototype.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  };\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n\n\n  Player.prototype.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('posterchange');\n  };\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  };\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n\n\n  Player.prototype.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  };\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n\n\n  Player.prototype.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  };\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n\n\n  Player.prototype.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n    log$1.error('(CODE:' + this.error_.code + ' ' + MediaError.errorTypes[this.error_.code] + ')', this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n    this.trigger('error');\n\n    return;\n  };\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n\n\n  Player.prototype.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  };\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n\n\n  Player.prototype.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('userinactive');\n  };\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n\n\n  Player.prototype.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress = void 0;\n    var lastMoveX = void 0;\n    var lastMoveY = void 0;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    var inactivityTimeout = void 0;\n\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  };\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n\n\n  Player.prototype.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n\n\n  Player.prototype.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n\n\n  Player.prototype.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  };\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n\n\n  Player.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  };\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Player.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  };\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n\n\n  Player.prototype.removeRemoteTextTrack = function removeRemoteTextTrack() {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref3$track = _ref3.track,\n        track = _ref3$track === undefined ? arguments[0] : _ref3$track;\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n\n\n  Player.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  };\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n\n\n  Player.prototype.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  };\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n\n\n  Player.prototype.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  };\n\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n\n\n  Player.prototype.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  };\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n\n\n  Player.prototype.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  };\n\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n\n\n  Player.prototype.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  };\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n\n\n  Player.prototype.createModal = function createModal(content, options) {\n    var _this11 = this;\n\n    options = options || {};\n    options.content = content || '';\n\n    var modal = new ModalDialog(this, options);\n\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this11.removeChild(modal);\n    });\n\n    modal.open();\n    return modal;\n  };\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log$1.error(err);\n      }\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  };\n\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n\n\n  Player.prototype.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i');\n\n    // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style ||\n    // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name$$1) {\n  var props = ALL[name$$1];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Global player list\n *\n * @type {Object}\n */\nPlayer.players = {};\n\nvar navigator = window$1.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n\n  html5: {},\n  flash: {},\n\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n\n  // locales and their language translations\n  languages: {},\n\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.'\n};\n\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\n\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype['handleTech' + toTitleCase(event) + '_'] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nvar BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nvar pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {boolean}\n *          Whether or not the plugin has been registered.\n */\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {Function|undefined}\n *          The plugin (or undefined).\n */\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {Boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @returns {Function}\n *          A wrapper function for the given plugin.\n */\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: null }, true);\n\n    var instance = plugin.apply(this, arguments);\n\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: instance });\n\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @returns {Function}\n */\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n\n  return function () {\n    triggerSetupEvent(this, { name: name, plugin: PluginSubClass, instance: null }, true);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = new (Function.prototype.bind.apply(PluginSubClass, [null].concat([this].concat(args))))();\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\nvar Plugin = function () {\n\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    classCallCheck(this, Plugin);\n\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player;\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = bind(this, this.dispose);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  Plugin.prototype.version = function version() {\n    return this.constructor.VERSION;\n  };\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @returns {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n\n\n  Plugin.prototype.getEventHash = function getEventHash() {\n    var hash = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  };\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @returns {boolean}\n   *          Whether or not default was prevented.\n   */\n\n\n  Plugin.prototype.trigger = function trigger$$1(event) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  };\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n\n\n  Plugin.prototype.handleStateChanged = function handleStateChanged(e) {};\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n\n\n  Plugin.prototype.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  };\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @returns {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  };\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @returns {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error('Illegal plugin name, \"' + name + '\", must be a string, was ' + (typeof name === 'undefined' ? 'undefined' : _typeof(name)) + '.');\n    }\n\n    if (pluginExists(name)) {\n      log$1.warn('A plugin named \"' + name + '\" already exists. You may want to avoid re-registering plugins!');\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error('Illegal plugin name, \"' + name + '\", cannot share a name with an existing player method!');\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error('Illegal plugin for \"' + name + '\", must be a function, was ' + (typeof plugin === 'undefined' ? 'undefined' : _typeof(plugin)) + '.');\n    }\n\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  };\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param {string} name\n   *        The name of the plugin to be deregistered.\n   */\n\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  };\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @returns {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n\n\n  Plugin.getPlugins = function getPlugins() {\n    var names = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.keys(pluginStorage);\n\n    var result = void 0;\n\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n\n    return result;\n  };\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @returns {string}\n   *          The plugin's version or an empty string.\n   */\n\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n\n/**\n * Function for subclassing using the same inheritance that\n * videojs uses internally\n *\n * @static\n * @const\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @param {Object} [subClassMethods={}]\n *        The class to inherit to\n *\n * @return {Object}\n *         The new object with subClassMethods that inherited superClass.\n */\nvar extendFn = function extendFn(superClass) {\n  var subClassMethods = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if ((typeof subClassMethods === 'undefined' ? 'undefined' : _typeof(subClassMethods)) === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass);\n\n  // Extend subObj's prototype with functions and other properties from props\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @returns {string}\n *          The string, without any leading `#`.\n */\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n\n/**\n * Doubles as the main function for users to create a player instance and also\n * the main library object.\n * The `videojs` function can be used to initialize or retrieve a player.\n  *\n * @param {string|Element} id\n *        Video element or video element ID\n *\n * @param {Object} [options]\n *        Optional options object for config/settings\n *\n * @param {Component~ReadyCallback} [ready]\n *        Optional ready callback\n *\n * @return {Player}\n *         A player instance\n */\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log$1.warn('Player \"' + id + '\" is already initialised. Options will not be applied.');\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  if (!document.body.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  var PlayerComponent = Component.getComponent('Player');\n\n  player = new PlayerComponent(el, options, ready);\n\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n\n  return player;\n}\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n */\nvideojs$1.hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n * @function videojs.hooks\n *\n * @param {string} type\n *        the lifecyle to get hooks from\n *\n * @param {Function|Function[]} [fn]\n *        Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n  return videojs$1.hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(undefined, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle that the function hooked to\n *\n * @param {Function} fn\n *        The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n\n  return true;\n};\n\n// Add default styles\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style$1 = $('.vjs-styles-defaults');\n\n  if (!style$1) {\n    style$1 = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style$1, head.firstChild);\n    }\n    setTextContent(style$1, '\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    ');\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs$1);\n\n/**\n * Current software version. Follows semver.\n *\n * @type {string}\n */\nvideojs$1.VERSION = version;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs$1.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @returns {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag = void 0;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs$1.getAllPlayers = function () {\n  return (\n\n    // Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\n/**\n * Expose players object.\n *\n * @memberOf videojs\n * @property {Object} players\n */\nvideojs$1.players = Player.players;\n\n/**\n * Get a component class object by name\n *\n * @borrows Component.getComponent as videojs.getComponent\n */\nvideojs$1.getComponent = Component.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\nvideojs$1.registerComponent = function (name$$1, comp) {\n  if (Tech.isTech(comp)) {\n    log$1.warn('The ' + name$$1 + ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)');\n  }\n\n  Component.registerComponent.call(Component, name$$1, comp);\n};\n\n/**\n * Get a Tech class object by name\n *\n * @borrows Tech.getTech as videojs.getTech\n */\nvideojs$1.getTech = Tech.getTech;\n\n/**\n * Register a Tech so it can referred to by name.\n * This is used in the tech order for the player.\n *\n * @borrows Tech.registerTech as videojs.registerTech\n */\nvideojs$1.registerTech = Tech.registerTech;\n\n/**\n * Register a middleware to a source type.\n *\n * @param {String} type A string representing a MIME type.\n * @param {function(player):object} middleware A middleware factory that takes a player.\n */\nvideojs$1.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @memberOf {videojs}\n * @property {object} middleware.TERMINATOR\n */\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\n\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n\n/**\n * A suite of browser and device tests from {@link browser}.\n *\n * @type {Object}\n * @private\n */\nvideojs$1.browser = browser;\n\n/**\n * Whether or not the browser supports touch events. Included for backward\n * compatibility with 4.x, but deprecated. Use `videojs.browser.TOUCH_ENABLED`\n * instead going forward.\n *\n * @deprecated since version 5.0\n * @type {boolean}\n */\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\n\n/**\n * Subclass an existing class\n * Mimics ES6 subclassing with the `extend` keyword\n *\n * @borrows extend:extendFn as videojs.extend\n */\nvideojs$1.extend = extendFn;\n\n/**\n * Merge two options objects recursively\n * Performs a deep merge like lodash.merge but **only merges plain objects**\n * (not arrays, elements, anything else)\n * Other values will be copied directly from the second object.\n *\n * @borrows merge-options:mergeOptions as videojs.mergeOptions\n */\nvideojs$1.mergeOptions = mergeOptions;\n\n/**\n * Change the context (this) of a function\n *\n * > NOTE: as of v5.0 we require an ES5 shim, so you should use the native\n * `function() {}.bind(newContext);` instead of this.\n *\n * @borrows fn:bind as videojs.bind\n */\nvideojs$1.bind = bind;\n\n/**\n * Register a Video.js plugin.\n *\n * @borrows plugin:registerPlugin as videojs.registerPlugin\n * @method registerPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be registered. Must be a string and\n *         must not match an existing plugin or a method on the `Player`\n *         prototype.\n *\n * @param  {Function} plugin\n *         A sub-class of `Plugin` or a function for basic plugins.\n *\n * @return {Function}\n *         For advanced plugins, a factory function for that plugin. For\n *         basic plugins, a wrapper function that initializes the plugin.\n */\nvideojs$1.registerPlugin = Plugin.registerPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated\n *        videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\nvideojs$1.plugin = function (name$$1, plugin) {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name$$1, plugin);\n};\n\n/**\n * Gets an object containing multiple Video.js plugins.\n *\n * @param  {Array} [names]\n *         If provided, should be an array of plugin names. Defaults to _all_\n *         plugin names.\n *\n * @return {Object|undefined}\n *         An object containing plugin(s) associated with their name(s) or\n *         `undefined` if no matching plugins exist).\n */\nvideojs$1.getPlugins = Plugin.getPlugins;\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {Function|undefined}\n *         The plugin (or `undefined`).\n */\nvideojs$1.getPlugin = Plugin.getPlugin;\n\n/**\n * Gets a plugin's version, if available\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {string}\n *         The plugin's version or an empty string.\n */\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n\n  return videojs$1.options.languages[code];\n};\n\n/**\n * Log messages\n *\n * @borrows log:log as videojs.log\n */\nvideojs$1.log = log$1;\n\n/**\n * Creates an emulated TimeRange object.\n *\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRange\n */\n/**\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRanges\n */\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS\n * Supplying a guide (in seconds) will force a number of leading zeros\n * to cover the length of the guide\n *\n * @borrows format-time:formatTime as videojs.formatTime\n */\nvideojs$1.formatTime = formatTime;\n\n/**\n * Replaces format-time with a custom implementation, to be used in place of the default.\n *\n * @borrows format-time:setFormatTime as videojs.setFormatTime\n *\n * @method setFormatTime\n *\n * @param {Function} customFn\n *        A custom format-time function which will be called with the current time and guide (in seconds) as arguments.\n *        Passed fn should return a string.\n */\nvideojs$1.setFormatTime = setFormatTime;\n\n/**\n * Resets format-time to the default implementation.\n *\n * @borrows format-time:resetFormatTime as videojs.resetFormatTime\n *\n * @method resetFormatTime\n */\nvideojs$1.resetFormatTime = resetFormatTime;\n\n/**\n * Resolve and parse the elements of a URL\n *\n * @borrows url:parseUrl as videojs.parseUrl\n *\n */\nvideojs$1.parseUrl = parseUrl;\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @borrows url:isCrossOrigin as videojs.isCrossOrigin\n */\nvideojs$1.isCrossOrigin = isCrossOrigin;\n\n/**\n * Event target class.\n *\n * @borrows EventTarget as videojs.EventTarget\n */\nvideojs$1.EventTarget = EventTarget;\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @borrows events:on as videojs.on\n */\nvideojs$1.on = on;\n\n/**\n * Trigger a listener only once for an event\n *\n * @borrows events:one as videojs.one\n */\nvideojs$1.one = one;\n\n/**\n * Removes event listeners from an element\n *\n * @borrows events:off as videojs.off\n */\nvideojs$1.off = off;\n\n/**\n * Trigger an event for an element\n *\n * @borrows events:trigger as videojs.trigger\n */\nvideojs$1.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper. Here's a simple example:\n *\n * @param {Object} options\n *        settings for the request.\n *\n * @return {XMLHttpRequest|XDomainRequest}\n *         The request object.\n *\n * @see https://github.com/Raynos/xhr\n */\nvideojs$1.xhr = xhr;\n\n/**\n * TextTrack class\n *\n * @borrows TextTrack as videojs.TextTrack\n */\nvideojs$1.TextTrack = TextTrack;\n\n/**\n * export the AudioTrack class so that source handlers can create\n * AudioTracks and then add them to the players AudioTrackList\n *\n * @borrows AudioTrack as videojs.AudioTrack\n */\nvideojs$1.AudioTrack = AudioTrack;\n\n/**\n * export the VideoTrack class so that source handlers can create\n * VideoTracks and then add them to the players VideoTrackList\n *\n * @borrows VideoTrack as videojs.VideoTrack\n */\nvideojs$1.VideoTrack = VideoTrack;\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @borrows dom:isEl as videojs.isEl\n * @deprecated Use videojs.dom.isEl() instead\n */\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @borrows dom:isTextNode as videojs.isTextNode\n * @deprecated Use videojs.dom.isTextNode() instead\n */\n\n/**\n * Creates an element and applies properties.\n *\n * @borrows dom:createEl as videojs.createEl\n * @deprecated Use videojs.dom.createEl() instead\n */\n\n/**\n * Check if an element has a CSS class\n *\n * @borrows dom:hasElClass as videojs.hasClass\n * @deprecated Use videojs.dom.hasClass() instead\n */\n\n/**\n * Add a CSS class name to an element\n *\n * @borrows dom:addElClass as videojs.addClass\n * @deprecated Use videojs.dom.addClass() instead\n */\n\n/**\n * Remove a CSS class name from an element\n *\n * @borrows dom:removeElClass as videojs.removeClass\n * @deprecated Use videojs.dom.removeClass() instead\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @borrows dom:toggleElClass as videojs.toggleClass\n * @deprecated Use videojs.dom.toggleClass() instead\n */\n\n/**\n * Apply attributes to an HTML element.\n *\n * @borrows dom:setElAttributes as videojs.setAttribute\n * @deprecated Use videojs.dom.setAttributes() instead\n */\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @borrows dom:getElAttributes as videojs.getAttributes\n * @deprecated Use videojs.dom.getAttributes() instead\n */\n\n/**\n * Empties the contents of an element.\n *\n * @borrows dom:emptyEl as videojs.emptyEl\n * @deprecated Use videojs.dom.emptyEl() instead\n */\n\n/**\n * Normalizes and appends content to an element.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:appendContents as videojs.appendContet\n * @deprecated Use videojs.dom.appendContent() instead\n */\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:insertContent as videojs.insertContent\n * @deprecated Use videojs.dom.insertContent() instead\n */\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log$1.warn('videojs.' + k + '() is deprecated; use videojs.dom.' + k + '() instead');\n    return Dom[k].apply(null, arguments);\n  };\n});\n\n/**\n * A safe getComputedStyle.\n *\n * This is because in Firefox, if the player is loaded in an iframe with `display:none`,\n * then `getComputedStyle` returns `null`, so, we do a null-check to make sure\n * that the player doesn't break in these cases.\n * See https://bugzilla.mozilla.org/show_bug.cgi?id=548397 for more details.\n *\n * @borrows computed-style:computedStyle as videojs.computedStyle\n */\nvideojs$1.computedStyle = computedStyle;\n\n/**\n * Export the Dom utilities for use in external plugins\n * and Tech's\n */\nvideojs$1.dom = Dom;\n\n/**\n * Export the Url utilities for use in external plugins\n * and Tech's\n */\nvideojs$1.url = Url;\n\n/**\n * @videojs/http-streaming\n * @version 1.1.0\n * @copyright 2018 Brightcove, Inc\n * @license Apache-2.0\n */\n\n/**\n * @file resolve-url.js\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  }\n\n  // if the base URL is relative then combine with the current location\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n\nvar classCallCheck$1 = function classCallCheck$$1(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass$1 = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$2 = function get$$1(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get$$1(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits$1 = function inherits$$1(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn$1 = function possibleConstructorReturn$$1(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray$1 = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$2 = videojs$1.log;\n\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  }\n\n  // consider the playlist unchanged if the number of segments is equal and the media\n  // sequence number is unchanged\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media);\n\n  // if the update could overlap existing segment information, merge the two segment lists\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  }\n\n  // resolve any segment URIs to prevent us from having to do it later\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  });\n\n  // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n  result.playlists[media.uri] = mergedPlaylist;\n\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n\n      log$2.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n  return delay;\n};\n\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits$1(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls, withCredentials) {\n    classCallCheck$1(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn$1(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    // initialize the loader state\n    _this.state = 'HAVE_NOTHING';\n\n    // live playlist staleness timeout\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media().uri, 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri);\n      });\n    });\n    return _this;\n  }\n\n  createClass$1(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr$$1, url, startingState) {\n      // any in-flight request is now finished\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[url],\n        status: xhr$$1.status,\n        message: 'HLS playlist request error at URL: ' + url,\n        responseText: xhr$$1.responseText,\n        code: xhr$$1.status >= 500 ? 4 : 2\n      };\n\n      this.trigger('error');\n    }\n\n    // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr$$1, url) {\n      var _this2 = this;\n\n      // any in-flight request is now finished\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n\n      var parser = new Parser();\n\n      parser.push(xhr$$1.responseText);\n      parser.end();\n      parser.manifest.uri = url;\n      // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n      parser.manifest.attributes = parser.manifest.attributes || {};\n\n      // merge this playlist into the master\n      var update = updateMaster(this.master, parser.manifest);\n\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[parser.manifest.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      // refresh live playlists after a target duration passes\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this;\n\n      // getter\n      if (!playlist) {\n        return this.media_;\n      }\n\n      // setter\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state;\n\n      // find the playlist object if the target playlist has been\n      // specified by URI\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri;\n\n      // switch to fully loaded playlists immediately\n      if (this.master.playlists[playlist.uri].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist;\n\n        // trigger media change if the active media has been updated\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n        return;\n      }\n\n      // switching to the active playlist is a no-op\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA';\n\n      // there is already an outstanding playlist request\n      if (this.request) {\n        if (resolveUrl(this.master.uri, playlist.uri) === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      }\n\n      // request the new playlist\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.master.uri, playlist.uri),\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist.uri, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri);\n\n        // fire loadedmetadata the first time a media playlist is loaded\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n      // Need to restore state now that no activity is happening\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true;\n\n      // request the specified URL\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        }\n\n        // clear the loader's request reference\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser();\n\n        parser.push(req.responseText);\n        parser.end();\n\n        _this5.state = 'HAVE_MASTER';\n\n        parser.manifest.uri = _this5.srcUrl;\n\n        // loaded a master playlist\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n          return;\n        }\n\n        // loaded a media playlist\n        // infer a master playlist if none was previously requested\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: 0\n          }]\n        };\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n        _this5.master.playlists[0].resolvedUri = _this5.srcUrl;\n        // m3u8-parser does not attach an attributes property to media playlists so make\n        // sure that the property is attached to avoid undefined reference errors\n        _this5.master.playlists[0].attributes = _this5.master.playlists[0].attributes || {};\n        _this5.haveMetadata(req, _this5.srcUrl);\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\nvar createTimeRange = videojs$1.createTimeRange;\n\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence;\n  // if a start time is available for segment immediately following\n  // the interval, use it\n  var segment = playlist.segments[i];\n\n  // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return { result: segment.start, precise: true };\n    }\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n  while (i--) {\n    segment = playlist.segments[i];\n    if (typeof segment.end !== 'undefined') {\n      return { result: result + segment.end, precise: true };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return { result: result + segment.start, precise: true };\n    }\n  }\n  return { result: result, precise: false };\n};\n\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence;\n  // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  }\n  // indicate we didn't find a useful duration estimate\n  return { result: -1, precise: false };\n};\n\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  }\n\n  // do a backward walk to estimate the duration\n  backward = backwardDuration(playlist, endSequence);\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  }\n\n  // walk forward to see if a precise duration estimate can be made\n  // that way\n  forward = forwardDuration(playlist, endSequence);\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  }\n\n  // return the less-precise, playlist-based duration estimate\n  return backward.result + expired;\n};\n\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  }\n\n  // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    }\n\n    // duration should be Infinity for live playlists\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  }\n\n  // calculate the total duration based on the segment durations\n  return intervalDuration(playlist, endSequence, expired);\n};\n\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    }\n    // We were unable to find a good segment within the playlist\n    // so select the first segment\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  }\n\n  // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n    startIndex = 0;\n  }\n\n  // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  }\n\n  // We are out of possible candidates so load the last one...\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n\n  return !playlist.disabled && !blacklisted;\n};\n\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n\n  return (size - bytesReceived * 8) / bandwidth;\n};\n\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n};\n\n// exports\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr$$1 = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options);\n\n    // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      }\n\n      // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      }\n\n      // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr$$1;\n};\n\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n  return '.';\n};\n\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n\n  return transferable;\n};\n\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n\n/**\n * utils to help dump binary data to the console\n */\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n  return result;\n};\n\nvar utils = /*#__PURE__*/Object.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n});\n\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n\n// Fudge factor to account for TimeRanges rounding\nvar TIME_FUDGE_FACTOR = 1 / 30;\n// Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - TIME_FUDGE_FACTOR <= time && end + TIME_FUDGE_FACTOR >= time;\n  });\n};\n\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_;\n\n  // create an in-band caption track if one is present in the segment\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({ type: 'usage', name: 'hls-608' });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i];\n\n    // Remove any overlapping cue\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n\n/**\n * @file add-text-track-data.js\n */\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset;\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler);\n\n    // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = [];\n\n      // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      }\n\n      // Group cues by their startTime value\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n\n        return obj;\n      }, {});\n\n      // Sort startTimes by ascending order\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      });\n\n      // Map each cue group's endTime to the next group's startTime\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration;\n\n        // Map each cue's endTime the next group's startTime\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({ data: m, target: selfShim });\n            });\n          }\n        }\n      };\n\n      fn.call(selfShim);\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({ data: m, target: o });\n        });\n      };\n      this.isThisThread = true;\n    }\n  };\n}\n// Test Worker capabilities\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL);\n\n    // Native browser on some Samsung devices throws for transferables, let's detect it\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], { type: SCRIPT_TYPE }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n  var transmuxerWorker = function () {\n\n    var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n    var win;\n\n    if (typeof window !== \"undefined\") {\n      win = window;\n    } else if (typeof commonjsGlobal !== \"undefined\") {\n      win = commonjsGlobal;\n    } else if (typeof self !== \"undefined\") {\n      win = self;\n    } else {\n      win = {};\n    }\n\n    var window_1 = win;\n\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS;\n\n    // pre-calculate constants\n    (function () {\n      var i;\n      types = {\n        avc1: [], // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [], // codingname\n        mvex: [],\n        mvhd: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      };\n\n      // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length;\n\n      // calculate the total size we need to allocate\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4);\n\n      // copy the payload into the result\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]);\n\n      // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length;\n      // build traf boxes for each track fragment\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i;\n\n      // leave the full box header (4 bytes) all zero\n\n      // write the sample table\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i;\n\n        // assemble the SPSs\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        }\n\n        // assemble the PPSs\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length // numOfSequenceParameterSets\n        ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n        ]).concat(pictureParameterSets))), // \"PPS\"\n        box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n        );\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([\n\n        // SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n\n      return box(types.tkhd, result);\n    };\n\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF]));\n\n      // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n\n      // audio tracks require less metadata\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      }\n\n      // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]);\n      // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader;\n\n      // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0;\n\n        // trun flag constants\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2014 Brightcove\n     * All rights reserved.\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n        this.off = function (type, listener) {\n          var index;\n          if (!listeners[type]) {\n            return false;\n          }\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n          if (!callbacks) {\n            return;\n          }\n          // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n          if (arguments.length === 2) {\n            length = callbacks.length;\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n            length = callbacks.length;\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n\n      return destination;\n    };\n\n    // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    var stream = Stream;\n\n    // -----------------\n    // Link To Transport\n    // -----------------\n\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0;\n\n      // go through the sei_rbsp parsing each each individual sei_message\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        }\n\n        // Parse payload type\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n        payloadType += bytes[i++];\n\n        // Parse payload size\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n        payloadSize += bytes[i++];\n\n        // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        }\n\n        // skip the payload and parse the next message\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    };\n\n    // see ANSI/SCTE 128-1 (2013), section 8.1\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      }\n\n      // itu_t_t35_provider_code should be 49 (ATSC) for captions\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      }\n\n      // the user_identifier should be \"GA94\" to indicate ATSC1 data\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      }\n\n      // finally, user_data_type_code should be 0x03 for caption data\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      }\n\n      // return the user_data_type_structure and strip the trailing\n      // marker bits\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    };\n\n    // see CEA-708-D, section 4.4\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data;\n\n      // if this is just filler, return immediately\n      if (!(userData[0] & 0x40)) {\n        return results;\n      }\n\n      // parse out the cc_data_1 and cc_data_2 fields\n      count = userData[0] & 0x1f;\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        };\n\n        // capture cc data when cc_valid is 1\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n      return results;\n    };\n\n    var CaptionStream = function CaptionStream() {\n\n      CaptionStream.prototype.init.call(this);\n\n      this.captionPackets_ = [];\n\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n\n      this.reset();\n\n      // forward data and done events from CCs to this CaptionStream\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData;\n\n      // only examine SEI NALs\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      }\n\n      // parse the sei\n      sei = parseSei(event.escapedRBSP);\n\n      // ignore everything but user_data_registered_itu_t_t35\n      if (sei.payloadType !== USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      }\n\n      // parse out the user data payload\n      userData = parseUserData(sei);\n\n      // ignore unrecognized userData\n      if (!userData) {\n        return;\n      }\n\n      // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n        return;\n      }\n\n      // parse out CC data packets and save them for later\n      this.captionPackets_ = this.captionPackets_.concat(parseCaptionPackets(event.pts, userData));\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flush = function () {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.ccStreams_.forEach(function (cc) {\n          cc.flush();\n        }, this);\n        return;\n      }\n\n      // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      });\n\n      // sort caption byte-pairs based on their PTS values\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n        return a.pts - b.pts;\n      });\n\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        }\n        // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n      }, this);\n\n      this.captionPackets_.length = 0;\n      this.ccStreams_.forEach(function (cc) {\n        cc.flush();\n      }, this);\n      return;\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    };\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, discard the\n        // data; we don't want jumbled captions\n        return;\n      }\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n\n    // ----------------------\n    // Session to Application\n    // ----------------------\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1, // á\n      0x5c: 0xe9, // é\n      0x5e: 0xed, // í\n      0x5f: 0xf3, // ó\n      0x60: 0xfa, // ú\n      0x7b: 0xe7, // ç\n      0x7c: 0xf7, // ÷\n      0x7d: 0xd1, // Ñ\n      0x7e: 0xf1, // ñ\n      0x7f: 0x2588, // █\n      0x0130: 0xae, // ®\n      0x0131: 0xb0, // °\n      0x0132: 0xbd, // ½\n      0x0133: 0xbf, // ¿\n      0x0134: 0x2122, // ™\n      0x0135: 0xa2, // ¢\n      0x0136: 0xa3, // £\n      0x0137: 0x266a, // ♪\n      0x0138: 0xe0, // à\n      0x0139: 0xa0, //\n      0x013a: 0xe8, // è\n      0x013b: 0xe2, // â\n      0x013c: 0xea, // ê\n      0x013d: 0xee, // î\n      0x013e: 0xf4, // ô\n      0x013f: 0xfb, // û\n      0x0220: 0xc1, // Á\n      0x0221: 0xc9, // É\n      0x0222: 0xd3, // Ó\n      0x0223: 0xda, // Ú\n      0x0224: 0xdc, // Ü\n      0x0225: 0xfc, // ü\n      0x0226: 0x2018, // ‘\n      0x0227: 0xa1, // ¡\n      0x0228: 0x2a, // *\n      0x0229: 0x27, // '\n      0x022a: 0x2014, // —\n      0x022b: 0xa9, // ©\n      0x022c: 0x2120, // ℠\n      0x022d: 0x2022, // •\n      0x022e: 0x201c, // “\n      0x022f: 0x201d, // ”\n      0x0230: 0xc0, // À\n      0x0231: 0xc2, // Â\n      0x0232: 0xc7, // Ç\n      0x0233: 0xc8, // È\n      0x0234: 0xca, // Ê\n      0x0235: 0xcb, // Ë\n      0x0236: 0xeb, // ë\n      0x0237: 0xce, // Î\n      0x0238: 0xcf, // Ï\n      0x0239: 0xef, // ï\n      0x023a: 0xd4, // Ô\n      0x023b: 0xd9, // Ù\n      0x023c: 0xf9, // ù\n      0x023d: 0xdb, // Û\n      0x023e: 0xab, // «\n      0x023f: 0xbb, // »\n      0x0320: 0xc3, // Ã\n      0x0321: 0xe3, // ã\n      0x0322: 0xcd, // Í\n      0x0323: 0xcc, // Ì\n      0x0324: 0xec, // ì\n      0x0325: 0xd2, // Ò\n      0x0326: 0xf2, // ò\n      0x0327: 0xd5, // Õ\n      0x0328: 0xf5, // õ\n      0x0329: 0x7b, // {\n      0x032a: 0x7d, // }\n      0x032b: 0x5c, // \\\n      0x032c: 0x5e, // ^\n      0x032d: 0x5f, // _\n      0x032e: 0x7c, // |\n      0x032f: 0x7e, // ~\n      0x0330: 0xc4, // Ä\n      0x0331: 0xe4, // ä\n      0x0332: 0xd6, // Ö\n      0x0333: 0xf6, // ö\n      0x0334: 0xdf, // ß\n      0x0335: 0xa5, // ¥\n      0x0336: 0xa4, // ¤\n      0x0337: 0x2502, // │\n      0x0338: 0xc5, // Å\n      0x0339: 0xe5, // å\n      0x033a: 0xd8, // Ø\n      0x033b: 0xf8, // ø\n      0x033c: 0x250c, // ┌\n      0x033d: 0x2510, // ┐\n      0x033e: 0x2514, // └\n      0x033f: 0x2518 // ┘\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    };\n\n    // the index of the last row in a CEA-608 display buffer\n    var BOTTOM_ROW = 14;\n\n    // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420];\n\n    // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n      while (i--) {\n        result.push('');\n      }\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text;\n        // remove the parity bits\n        data = packet.ccData & 0x7f7f;\n\n        // ignore duplicate control codes; the spec demands they're sent twice\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        }\n\n        // Store control codes\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          this.clearFormatting(packet.pts);\n          // if a caption was being displayed, it's gone now\n          this.flushDisplayed(packet.pts);\n\n          // flip memory\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap;\n\n          // start measuring the time to display the caption\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.topRow_ = BOTTOM_ROW - 1;\n          this.mode_ = 'rollUp';\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.topRow_ = BOTTOM_ROW - 2;\n          this.mode_ = 'rollUp';\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.topRow_ = BOTTOM_ROW - 3;\n          this.mode_ = 'rollUp';\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[BOTTOM_ROW] = this.nonDisplayed_[BOTTOM_ROW].slice(0, -1);\n          } else {\n            this.displayed_[BOTTOM_ROW] = this.displayed_[BOTTOM_ROW].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          this.mode_ = 'paintOn';\n\n          // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++;\n\n          // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[BOTTOM_ROW] = this.displayed_[BOTTOM_ROW].slice(0, -1);\n          }\n\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++;\n\n          // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts);\n\n          // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          // Detect offset control codes and adjust cursor\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03;\n\n          // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20);\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          }\n          // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          }\n\n          // We have a normal character in char0, and possibly one in char1\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n      };\n    };\n    Cea608Stream.prototype = new stream();\n    // Trigger a cue point that captures the current state of the\n    // display buffer\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_\n      // remove spaces from the start and end of the string\n      .map(function (row) {\n        return row.trim();\n      })\n      // combine all text rows to display in one cue\n      .join('\\n')\n      // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn';\n      // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null;\n\n      // Track row and column for proper line-breaking and spacing\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n\n      // This variable holds currently-applied formatting\n      this.formatting_ = [];\n    };\n\n    /**\n     * Sets up control code and related constants for this instance\n     */\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      }\n\n      // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n      this.PADDING_ = 0x0000;\n      // Pop-on Mode\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f;\n      // Roll-up Mode\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d;\n      // paint-on mode (not supported)\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29;\n      // Erasure\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n    Cea608Stream.prototype.isNormalChar = function (char) {\n      return char >= 0x20 && char <= 0x7f;\n    };\n\n    // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    };\n\n    // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    };\n\n    // Mode Implementations\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_];\n\n      // buffer characters\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[BOTTOM_ROW];\n\n      baseRow += text;\n      this.displayed_[BOTTOM_ROW] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i;\n      // clear out inactive rows\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n      // shift displayed rows up\n      for (i = this.topRow_; i < BOTTOM_ROW; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      }\n      // clear out the bottom row\n      this.displayed_[BOTTOM_ROW] = '';\n    };\n\n    // paintOn mode is not implemented\n    Cea608Stream.prototype.paintOn = function () {};\n\n    // exports\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n\n    var MAX_TS = 8589934592;\n\n    var RO_THRESH = 4294967296;\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      }\n\n      // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n\n      TimestampRolloverStream.prototype.init.call(this);\n\n      this.type_ = type;\n\n      this.push = function (data) {\n        if (data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n\n        lastDTS = data.dts;\n\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n      return result;\n    },\n\n\n    // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n\n\n    // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            // do not include the null terminator in the tag value\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n\n\n      // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n\n\n      // tag data that is not complete enough to be parsed\n      buffer = [],\n\n\n      // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this);\n\n      // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        }\n\n        // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        }\n\n        // ignore events that don't look like ID3 data\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n          return;\n        }\n\n        // add this chunk to the data we've collected so far\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength;\n\n        // grab the size of the entire frame from the ID3 header\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10));\n\n          // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n          tagSize += 10;\n        }\n\n        // if the entire frame has not arrived, wait for more data\n        if (bufferSize < tagSize) {\n          return;\n        }\n\n        // collect the entire frame so it can be parsed\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        }\n\n        // find the start of the first frame and the end of the tag\n        frameStart = 10;\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14));\n\n          // clip any padding off the end\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        }\n\n        // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame);\n\n            // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size;\n              // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n              this.trigger('timestamp', frame);\n            }\n          }\n          tag.frames.push(frame);\n\n          frameStart += 10; // advance past the frame header\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n        this.trigger('data', tag);\n      };\n    };\n    _MetadataStream.prototype = new stream();\n\n    var metadataStream = _MetadataStream;\n\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream;\n\n    // object types\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream;\n\n    // constants\n    var MP2T_PACKET_LENGTH = 188,\n\n\n    // bytes\n    SYNC_BYTE = 0x47;\n\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this);\n\n      // Deliver new bytes to the stream.\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything;\n\n        // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        }\n\n        // While we have enough data for a packet\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          }\n          // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n          startIndex++;\n          endIndex++;\n        }\n\n        // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n        this.trigger('done');\n      };\n    };\n    _TransportPacketStream.prototype = new stream();\n\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n      _TransportParseStream.prototype.init.call(this);\n      self = this;\n\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0;\n\n        // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n\n        // skip the PSI header and parse the first PMT entry\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset;\n\n        // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n        if (!(payload[5] & 0x01)) {\n          return;\n        }\n\n        // overwrite any existing program map table\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        };\n\n        // the mapping table ends at the end of the current section\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4;\n\n        // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11];\n\n        // advance the offset to the first entry in the mapping table\n        offset = 12 + programInfoLength;\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2];\n\n          // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          }\n\n          // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        }\n\n        // record the map on the packet as well\n        pmt.programMapTable = self.programMapTable;\n      };\n\n      /**\n       * Deliver a new MP2T packet to the stream.\n       */\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40);\n\n        // pid is a 13-bit field starting at the last bit of packet[1]\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2];\n\n        // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        }\n\n        // parse the rest of the packet based on the type\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n\n          // if there are any packets waiting for a PMT to be found, process them now\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n\n        this.trigger('data', result);\n      };\n    };\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n\n\n      // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags;\n\n        // get the packet length, this will be 0 for video\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]);\n\n        // find out if this packets starts a new keyframe\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0;\n        // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n        ptsDtsFlags = payload[7];\n\n        // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n          pes.dts = pes.pts;\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        }\n        // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n          flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment;\n\n        // do nothing if there is not enough buffered data for a complete\n        // PES header\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n        event.trackId = stream$$1.data[0].pid;\n\n        // reassemble the packet\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        }\n\n        // parse assembled packet's PES header\n        parsePes(packetData, event);\n\n        // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size;\n\n        // flush pending packets if the conditions are right\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        }\n\n        // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {\n            // we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n              default:\n                // ignore unknown stream types\n                return;\n            }\n\n            // if a new packet is starting, we can flush the completed\n            // packet\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            }\n\n            // buffer this fragment until we are sure we've received the\n            // complete payload\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            },\n                programMapTable = data.programMapTable;\n\n            // translate audio and video streams to tracks\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n      this.flush = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n        this.trigger('done');\n      };\n    };\n    _ElementaryStream.prototype = new stream();\n\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n    _AdtsStream = function AdtsStream() {\n      var buffer;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameNum = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        }\n\n        // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        }\n\n        // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n        while (i + 5 < buffer.length) {\n\n          // Loook for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          }\n\n          // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2;\n\n          // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n\n          frameEnd = i + frameLength;\n\n          // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n          if (buffer.byteLength < frameEnd) {\n            return;\n          }\n\n          // Otherwise, deliver the complete AAC frame\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          });\n\n          // If the buffer is empty, clear it and return\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          }\n\n          frameNum++;\n\n          // Remove the finished frame from the buffer and start the process again\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n      this.flush = function () {\n        this.trigger('done');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n\n    var adts = _AdtsStream;\n\n    var ExpGolomb;\n\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n    ExpGolomb = function ExpGolomb(workingData) {\n      var\n      // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n\n\n      // the current word being examined\n      workingWord = 0,\n\n\n      // :uint\n\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n\n      // ():uint\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      };\n\n      // ():uint\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      };\n\n      // ():void\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n        // track the amount of workingData that has been processed\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      };\n\n      // (count:int):void\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n\n          this.loadWord();\n\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      };\n\n      // (size:int):uint\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n\n\n        // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n        workingBitsAvailable -= bits;\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n        return valu;\n      };\n\n      // ():uint\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        }\n\n        // we exhausted workingWord and still have not found a 1\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      };\n\n      // ():void\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      };\n\n      // ():void\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      };\n\n      // ():uint\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n        return this.readBits(clz + 1) - 1;\n      };\n\n      // ():int\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      };\n\n      // Some convenience functions\n      // :Boolean\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      };\n\n      // ():int\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n      _NalByteStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        }\n\n        // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n\n        // advance the sync point to a NAL start, if necessary\n        for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < buffer.byteLength) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              }\n\n              // deliver the NAL unit if it isn't empty\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              }\n\n              // drop trailing zeroes\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < buffer.length);\n              syncPoint = i - 2;\n              i += 3;\n              break;\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              }\n\n              // deliver the NAL unit\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        }\n        // filter out the NAL units that were delivered\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        }\n        // reset the stream state\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n    };\n    _NalByteStream.prototype = new stream();\n\n    // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n      self = this;\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n\n        nalByteStream.push(packet);\n      };\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        }\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData;\n\n        // Find all `Emulation Prevention Bytes`\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        }\n\n        // If no Emulation Prevention Bytes were found just return the original\n        // array\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        }\n\n        // Create a new array to hold the NAL unit data\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++;\n            // Remove this position index\n            emulationPreventionBytesPositions.shift();\n          }\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n\n        // some profiles have more optional data we don't need\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];break;\n              case 2:\n                sarRatio = [12, 11];break;\n              case 3:\n                sarRatio = [10, 11];break;\n              case 4:\n                sarRatio = [16, 11];break;\n              case 5:\n                sarRatio = [40, 33];break;\n              case 6:\n                sarRatio = [24, 11];break;\n              case 7:\n                sarRatio = [20, 11];break;\n              case 8:\n                sarRatio = [32, 11];break;\n              case 9:\n                sarRatio = [80, 33];break;\n              case 10:\n                sarRatio = [18, 11];break;\n              case 11:\n                sarRatio = [15, 11];break;\n              case 12:\n                sarRatio = [64, 33];break;\n              case 13:\n                sarRatio = [160, 99];break;\n              case 14:\n                sarRatio = [4, 3];break;\n              case 15:\n                sarRatio = [3, 2];break;\n              case 16:\n                sarRatio = [2, 1];break;\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n        };\n      };\n    };\n    _H264Stream.prototype = new stream();\n\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n\n    // Constants\n    var _AacStream;\n\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.parseId3TagSize = function (header, byteIndex) {\n        var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n            flags = header[byteIndex + 5],\n            footerPresent = (flags & 16) >> 4;\n\n        if (footerPresent) {\n          return returnSize + 20;\n        }\n        return returnSize + 10;\n      };\n\n      this.parseAdtsSize = function (header, byteIndex) {\n        var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n            middle = header[byteIndex + 4] << 3,\n            highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n        return highTwo | middle | lowThree;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength;\n\n        // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            }\n\n            // check framesize\n            frameSize = this.parseId3TagSize(everything, byteIndex);\n\n            // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            if (frameSize > everything.length) {\n              break;\n            }\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if (everything[byteIndex] & 0xff === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = this.parseAdtsSize(everything, byteIndex);\n\n            // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            if (frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n          byteIndex++;\n        }\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n    };\n\n    _AacStream.prototype = new stream();\n\n    var aac = _AacStream;\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n      while (count--) {\n        a.push(0);\n      }\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    };\n\n    // Frames-of-silence to use for filling in missing AAC frames\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n\n    var silence = makeTable(coneOfSilence);\n\n    var ONE_SECOND_IN_TS = 90000,\n\n\n    // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n\n    var clock = {\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs\n    };\n\n    var H264Stream = h264.H264Stream;\n\n    // constants\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility'];\n\n    var ONE_SECOND_IN_TS$1 = 90000; // 90kHz clock\n\n    // object types\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n\n    // Helper functions\n    var createDefaultSample, isLikelyAacData, collectDtsInfo, clearDtsInfo, calculateTrackBaseMediaDecodeTime, arrayEquals, sumFrameByteLengths;\n\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n    createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0\n        }\n      };\n    };\n\n    isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n      return false;\n    };\n\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n    arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      }\n\n      // compare the value of each element in the array\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n    sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0;\n\n      // sum the byteLength's all each nal unit in the frame\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    };\n\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        }\n\n        // buffer audio data until end() is called\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes;\n\n        // return early if no audio data has been observed\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = this.trimAdtsFramesByEarliestDts_(adtsFrames);\n        track.baseMediaDecodeTime = calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n\n        this.prefixWithSilence_(track, frames);\n\n        // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n        track.samples = this.generateSampleTable_(frames);\n\n        // concatenate the audio data to constuct the mdat\n        mdat = mp4Generator.mdat(this.concatenateFrameData_(frames));\n\n        adtsFrames = [];\n\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n        // bump the sequence number for next time\n        sequenceNumber++;\n\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n\n        clearDtsInfo(track);\n\n        this.trigger('data', { track: track, boxes: boxes });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n\n      // Possibly pad (prefix) the audio track with silence if appending this track\n      // would lead to the introduction of a gap in the audio buffer\n      this.prefixWithSilence_ = function (track, frames) {\n        var baseMediaDecodeTimeTs,\n            frameDuration = 0,\n            audioGapDuration = 0,\n            audioFillFrameCount = 0,\n            audioFillDuration = 0,\n            silentFrame,\n            i;\n\n        if (!frames.length) {\n          return;\n        }\n\n        baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate);\n        // determine frame clock duration based on sample rate, round up to avoid overfills\n        frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 / (track.samplerate / 1024));\n\n        if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n          // insert the shortest possible amount (audio gap or audio to video gap)\n          audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime);\n          // number of full frames in the audio gap\n          audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n          audioFillDuration = audioFillFrameCount * frameDuration;\n        }\n\n        // don't attempt to fill gaps smaller than a single frame or larger\n        // than a half second\n        if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS$1 / 2) {\n          return;\n        }\n\n        silentFrame = silence[track.samplerate];\n\n        if (!silentFrame) {\n          // we don't have a silent frame pregenerated for the sample rate, so use a frame\n          // from the content instead\n          silentFrame = frames[0].data;\n        }\n\n        for (i = 0; i < audioFillFrameCount; i++) {\n          frames.splice(i, 0, {\n            data: silentFrame\n          });\n        }\n\n        track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n      };\n\n      // If the audio segment extends before the earliest allowed dts\n      // value, remove AAC frames until starts at or after the earliest\n      // allowed DTS so that we don't end up with a negative baseMedia-\n      // DecodeTime for the audio track\n      this.trimAdtsFramesByEarliestDts_ = function (adtsFrames) {\n        if (track.minSegmentDts >= earliestAllowedDts) {\n          return adtsFrames;\n        }\n\n        // We will need to recalculate the earliest segment Dts\n        track.minSegmentDts = Infinity;\n\n        return adtsFrames.filter(function (currentFrame) {\n          // If this is an allowed frame, keep it and record it's Dts\n          if (currentFrame.dts >= earliestAllowedDts) {\n            track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n            track.minSegmentPts = track.minSegmentDts;\n            return true;\n          }\n          // Otherwise, discard it\n          return false;\n        });\n      };\n\n      // generate the track's raw mdat data from an array of frames\n      this.generateSampleTable_ = function (frames) {\n        var i,\n            currentFrame,\n            samples = [];\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n          samples.push({\n            size: currentFrame.data.byteLength,\n            duration: 1024 // For AAC audio, all samples contain 1024 samples\n          });\n        }\n        return samples;\n      };\n\n      // generate the track's sample table from an array of frames\n      this.concatenateFrameData_ = function (frames) {\n        var i,\n            currentFrame,\n            dataOffset = 0,\n            data = new Uint8Array(sumFrameByteLengths(frames));\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n\n          data.set(currentFrame.data, dataOffset);\n          dataOffset += currentFrame.data.byteLength;\n        }\n        return data;\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n\n      this.gopCache_ = [];\n\n      this.push = function (nalUnit) {\n        collectDtsInfo(track, nalUnit);\n\n        // record the track config\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        }\n\n        // buffer video until flush() is called\n        nalUnits.push(nalUnit);\n      };\n\n      this.flush = function () {\n        var frames, gopForFusion, gops, moof, mdat, boxes;\n\n        // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n          nalUnits.shift();\n        }\n\n        // Return early if no video data has been observed\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        }\n\n        // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n        frames = this.groupNalsIntoFrames_(nalUnits);\n        gops = this.groupFramesIntoGops_(frames);\n\n        // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            gops.unshift(gopForFusion);\n            // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = this.extendFirstKeyFrame_(gops);\n          }\n        }\n\n        // Trim gops to align with gopsToAlignWith\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            });\n\n            // Keep a maximum of 6 GOPs in the cache\n            this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n            // Clear nalUnits\n            nalUnits = [];\n\n            // return early no gops can be aligned with desired gopsToAlignWith\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          }\n\n          // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n          clearDtsInfo(track);\n\n          gops = alignedGops;\n        }\n\n        collectDtsInfo(track, gops);\n\n        // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n        track.samples = this.generateSampleTable_(gops);\n\n        // Concatenate the video data and construct the mdat\n        mdat = mp4Generator.mdat(this.concatenateNalData_(gops));\n\n        track.baseMediaDecodeTime = calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        });\n\n        // Keep a maximum of 6 GOPs in the cache\n        this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n        // Clear nalUnits\n        nalUnits = [];\n\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n\n        // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n        // Bump the sequence number for next time\n        sequenceNumber++;\n\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n\n        this.trigger('data', { track: track, boxes: boxes });\n\n        this.resetStream_();\n\n        // Continue with the flush process now\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.resetStream_ = function () {\n        clearDtsInfo(track);\n\n        // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n        config = undefined;\n        pps = undefined;\n      };\n\n      // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n\n\n        // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n\n\n        // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i;\n\n        // Search for the GOP nearest to the beginning of this nal unit\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop;\n\n          // Reject Gops with different SPS or PPS\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          }\n\n          // Reject Gops that would require a negative baseMediaDecodeTime\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          }\n\n          // The distance between the end of the gop and the start of the nalUnit\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration;\n\n          // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n        return null;\n      };\n\n      this.extendFirstKeyFrame_ = function (gops) {\n        var currentGop;\n\n        if (!gops[0][0].keyFrame && gops.length > 1) {\n          // Remove the first GOP\n          currentGop = gops.shift();\n\n          gops.byteLength -= currentGop.byteLength;\n          gops.nalCount -= currentGop.nalCount;\n\n          // Extend the first frame of what is now the\n          // first gop to cover the time period of the\n          // frames we just removed\n          gops[0][0].dts = currentGop.dts;\n          gops[0][0].pts = currentGop.pts;\n          gops[0][0].duration += currentGop.duration;\n        }\n\n        return gops;\n      };\n\n      // Convert an array of nal units into an array of frames with each frame being\n      // composed of the nal units that make up that frame\n      // Also keep track of cummulative data about the frame from the nal units such\n      // as the frame duration, starting pts, etc.\n      this.groupNalsIntoFrames_ = function (nalUnits) {\n        var i,\n            currentNal,\n            currentFrame = [],\n            frames = [];\n\n        currentFrame.byteLength = 0;\n\n        for (i = 0; i < nalUnits.length; i++) {\n          currentNal = nalUnits[i];\n\n          // Split on 'aud'-type nal units\n          if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n            // Since the very first nal unit is expected to be an AUD\n            // only push to the frames array when currentFrame is not empty\n            if (currentFrame.length) {\n              currentFrame.duration = currentNal.dts - currentFrame.dts;\n              frames.push(currentFrame);\n            }\n            currentFrame = [currentNal];\n            currentFrame.byteLength = currentNal.data.byteLength;\n            currentFrame.pts = currentNal.pts;\n            currentFrame.dts = currentNal.dts;\n          } else {\n            // Specifically flag key frames for ease of use later\n            if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n              currentFrame.keyFrame = true;\n            }\n            currentFrame.duration = currentNal.dts - currentFrame.dts;\n            currentFrame.byteLength += currentNal.data.byteLength;\n            currentFrame.push(currentNal);\n          }\n        }\n\n        // For the last frame, use the duration of the previous frame if we\n        // have nothing better to go on\n        if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n          currentFrame.duration = frames[frames.length - 1].duration;\n        }\n\n        // Push the final frame\n        frames.push(currentFrame);\n        return frames;\n      };\n\n      // Convert an array of frames into an array of Gop with each Gop being composed\n      // of the frames that make up that Gop\n      // Also keep track of cummulative data about the Gop from the frames such as the\n      // Gop duration, starting pts, etc.\n      this.groupFramesIntoGops_ = function (frames) {\n        var i,\n            currentFrame,\n            currentGop = [],\n            gops = [];\n\n        // We must pre-set some of the values on the Gop since we\n        // keep running totals of these values\n        currentGop.byteLength = 0;\n        currentGop.nalCount = 0;\n        currentGop.duration = 0;\n        currentGop.pts = frames[0].pts;\n        currentGop.dts = frames[0].dts;\n\n        // store some metadata about all the Gops\n        gops.byteLength = 0;\n        gops.nalCount = 0;\n        gops.duration = 0;\n        gops.pts = frames[0].pts;\n        gops.dts = frames[0].dts;\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n\n          if (currentFrame.keyFrame) {\n            // Since the very first frame is expected to be an keyframe\n            // only push to the gops array when currentGop is not empty\n            if (currentGop.length) {\n              gops.push(currentGop);\n              gops.byteLength += currentGop.byteLength;\n              gops.nalCount += currentGop.nalCount;\n              gops.duration += currentGop.duration;\n            }\n\n            currentGop = [currentFrame];\n            currentGop.nalCount = currentFrame.length;\n            currentGop.byteLength = currentFrame.byteLength;\n            currentGop.pts = currentFrame.pts;\n            currentGop.dts = currentFrame.dts;\n            currentGop.duration = currentFrame.duration;\n          } else {\n            currentGop.duration += currentFrame.duration;\n            currentGop.nalCount += currentFrame.length;\n            currentGop.byteLength += currentFrame.byteLength;\n            currentGop.push(currentFrame);\n          }\n        }\n\n        if (gops.length && currentGop.duration <= 0) {\n          currentGop.duration = gops[gops.length - 1].duration;\n        }\n        gops.byteLength += currentGop.byteLength;\n        gops.nalCount += currentGop.nalCount;\n        gops.duration += currentGop.duration;\n\n        // push the final Gop\n        gops.push(currentGop);\n        return gops;\n      };\n\n      // generate the track's sample table from an array of gops\n      this.generateSampleTable_ = function (gops, baseDataOffset) {\n        var h,\n            i,\n            sample,\n            currentGop,\n            currentFrame,\n            dataOffset = baseDataOffset || 0,\n            samples = [];\n\n        for (h = 0; h < gops.length; h++) {\n          currentGop = gops[h];\n\n          for (i = 0; i < currentGop.length; i++) {\n            currentFrame = currentGop[i];\n\n            sample = createDefaultSample();\n\n            sample.dataOffset = dataOffset;\n            sample.compositionTimeOffset = currentFrame.pts - currentFrame.dts;\n            sample.duration = currentFrame.duration;\n            sample.size = 4 * currentFrame.length; // Space for nal unit size\n            sample.size += currentFrame.byteLength;\n\n            if (currentFrame.keyFrame) {\n              sample.flags.dependsOn = 2;\n            }\n\n            dataOffset += sample.size;\n\n            samples.push(sample);\n          }\n        }\n        return samples;\n      };\n\n      // generate the track's raw mdat data from an array of gops\n      this.concatenateNalData_ = function (gops) {\n        var h,\n            i,\n            j,\n            currentGop,\n            currentFrame,\n            currentNal,\n            dataOffset = 0,\n            nalsByteLength = gops.byteLength,\n            numberOfNals = gops.nalCount,\n            totalByteLength = nalsByteLength + 4 * numberOfNals,\n            data = new Uint8Array(totalByteLength),\n            view = new DataView(data.buffer);\n\n        // For each Gop..\n        for (h = 0; h < gops.length; h++) {\n          currentGop = gops[h];\n\n          // For each Frame..\n          for (i = 0; i < currentGop.length; i++) {\n            currentFrame = currentGop[i];\n\n            // For each NAL..\n            for (j = 0; j < currentFrame.length; j++) {\n              currentNal = currentFrame[j];\n\n              view.setUint32(dataOffset, currentNal.data.byteLength);\n              dataOffset += 4;\n              data.set(currentNal.data, dataOffset);\n              dataOffset += currentNal.data.byteLength;\n            }\n          }\n        }\n        return data;\n      };\n\n      // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          }\n\n          // current gop starts before the current gop we want to align on. so increment gop\n          // index\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n\n        return alignedGops;\n      };\n\n      // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, { byteLength: 0, duration: 0, nalCount: 0 });\n\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n    collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n    clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts;\n\n      // Optionally adjust the time so the first segment starts at zero.\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      }\n\n      // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime;\n\n      // Add to that the distance this segment is from the very first\n      baseMediaDecodeTime += minSegmentDts;\n\n      // baseMediaDecodeTime must not become negative\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$1;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     */\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this);\n\n      // Take output from multiple\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        }\n        // buffer incoming id3 tags until the final flush\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        }\n\n        // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n        this.pendingTracks.push(output.track);\n        this.pendingBoxes.push(output.boxes);\n        this.pendingBytes += output.boxes.byteLength;\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n        }\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n\n      this.emittedTracks += this.pendingTracks.length;\n\n      initSegment = mp4Generator.initSegment(this.pendingTracks);\n\n      // Create a new typed array to hold the init segment\n      event.initSegment = new Uint8Array(initSegment.byteLength);\n\n      // Create an init segment containing a moov\n      // and track definitions\n      event.initSegment.set(initSegment);\n\n      // Create a new typed array to hold the moof+mdats\n      event.data = new Uint8Array(this.pendingBytes);\n\n      // Append each moof+mdat (one per track) together\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      }\n\n      // Translate caption PTS times into second offsets into the\n      // video timeline for the segment, and add track info\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = caption.startPts - timelineStartPts;\n        caption.startTime /= 90e3;\n        caption.endTime = caption.endPts - timelineStartPts;\n        caption.endTime /= 90e3;\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      }\n\n      // Translate ID3 frame PTS times into second offsets into the\n      // video timeline for the segment\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = id3.pts - timelineStartPts;\n        id3.cueTime /= 90e3;\n        event.metadata.push(id3);\n      }\n      // We add this to every single emitted segment even though we only need\n      // it for the first\n      event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n      // Reset stream state\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0;\n\n      // Emit the built segment\n      this.trigger('data', event);\n\n      // Only emit `done` if all tracks have been flushed and emitted\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream();\n\n        // set up the parsing pipeline\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            };\n            // hook up the audio segment stream to the first track with aac data\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n            // Set up the final part of the audio pipeline\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          }\n        });\n\n        // Re-emit any data coming from the coalesce stream to the outside world\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        // Let the consumer know we have finished flushing the entire pipeline\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream();\n\n        // set up the parsing pipeline\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.videoTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('video');\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream;\n\n        // disassemble MPEG2-TS packets into elementary streams\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream);\n\n        // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n        pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n        pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n\n        pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n\n        // Hook up CEA-608/708 caption stream\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length;\n\n            // scan the tracks listed in the metadata\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            }\n\n            // hook up the video segment stream to the first track with h264 data\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo;\n                  // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              });\n\n              // Set up the final part of the video pipeline\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n\n              // Set up the final part of the audio pipeline\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            }\n          }\n        });\n\n        // Re-emit any data coming from the coalesce stream to the outside world\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        // Let the consumer know we have finished flushing the entire pipeline\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      // hook up the segment streams once track metadata is delivered\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          clearDtsInfo(audioTrack);\n          audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n            pipeline.videoTimestampRolloverStream.discontinuity();\n          }\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n          videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (pipeline.timedMetadataTimestampRolloverStream) {\n          pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      };\n\n      // feed incoming data to the front of the parsing pipeline\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n          hasFlushed = false;\n        }\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      };\n\n      // flush any buffered data\n      this.flush = function () {\n        hasFlushed = true;\n        // Start at the top of the pipeline and flush all pending work\n        this.transmuxPipeline_.headOfPipeline.flush();\n      };\n\n      // Caption data has to be reset when seeking outside buffered range\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n    _Transmuxer.prototype = new stream();\n\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES\n    };\n\n    var mp4 = {\n      generator: mp4Generator,\n      Transmuxer: transmuxer.Transmuxer,\n      AudioSegmentStream: transmuxer.AudioSegmentStream,\n      VideoSegmentStream: transmuxer.VideoSegmentStream\n    };\n\n    var classCallCheck$$1 = function classCallCheck$$1(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass$$1 = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n    var wireTransmuxerEvents = function wireTransmuxerEvents(transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n\n        var typedArray = segment.data;\n\n        segment.data = typedArray.buffer;\n        window_1.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer.captionStream) {\n        transmuxer.captionStream.on('data', function (caption) {\n          window_1.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer.on('done', function (data) {\n        window_1.postMessage({ action: 'done' });\n      });\n\n      transmuxer.on('gopInfo', function (gopInfo) {\n        window_1.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n    };\n\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n    var MessageHandlers = function () {\n      function MessageHandlers(options) {\n        classCallCheck$$1(this, MessageHandlers);\n\n        this.options = options || {};\n        this.init();\n      }\n\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n      createClass$$1(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n          this.transmuxer = new mp4.Transmuxer(this.options);\n          wireTransmuxerEvents(this.transmuxer);\n        }\n\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n\n          this.transmuxer.push(segment);\n        }\n\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers();\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n\n    return transmuxerWorker;\n  }();\n});\n\n/**\n * @file codec-utils.js\n */\n\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\nvar isAudioCodec = function isAudioCodec(codec) {\n  return (/mp4a\\.\\d+.\\d+/i.test(codec)\n  );\n};\n\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\nvar isVideoCodec = function isVideoCodec(codec) {\n  return (/avc1\\.[\\da-f]+/i.test(codec)\n  );\n};\n\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\nvar parseContentType = function parseContentType(type) {\n  var object = { type: '', parameters: {} };\n  var parameters = type.trim().split(';');\n\n  // first parameter should always be content-type\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n\n      object.parameters[name] = value;\n    }\n  });\n\n  return object;\n};\n\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n\n/**\n * @file virtual-source-buffer.js\n */\n\n// We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Player} player\n *        The player instance\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, player, mapping) {\n  if (!player || !buffer.length) {\n    return [];\n  }\n\n  // pts value for current time + 3 seconds to give a bit more wiggle room\n  var currentTimePts = Math.ceil((player.currentTime() - mapping + 3) * 90000);\n\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  }\n\n  // clamp remove range start to 0 index\n  j = Math.max(j, 0);\n\n  updatedBuffer.splice(j, i - j + 1);\n\n  return updatedBuffer;\n};\n\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits$1(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck$1(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn$1(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    });\n\n    // append muxed segments to their respective native buffers as\n    // soon as they are available\n    _this.transmuxer_ = new TransmuxWorker();\n    _this.transmuxer_.postMessage({ action: 'init', options: options });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n    };\n\n    // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true;\n\n          // reset gop buffer on timestampoffset as this signals a change in timeline\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0;\n\n          // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    });\n\n    // setting the append window affects both source buffers\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    });\n\n    // this buffer is \"updating\" if either of its native buffers are\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    });\n\n    // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        var start = null;\n        var end = null;\n        var arity = 0;\n        var extents = [];\n        var ranges = [];\n\n        // neither buffer has been created yet\n        if (!this.videoBuffer_ && !this.audioBuffer_) {\n          return videojs$1.createTimeRange();\n        }\n\n        // only one buffer is configured\n        if (!this.videoBuffer_) {\n          return this.audioBuffer_.buffered;\n        }\n        if (!this.audioBuffer_) {\n          return this.videoBuffer_.buffered;\n        }\n\n        // both buffers are configured\n        if (this.audioDisabled_) {\n          return this.videoBuffer_.buffered;\n        }\n\n        // both buffers are empty\n        if (this.videoBuffer_.buffered.length === 0 && this.audioBuffer_.buffered.length === 0) {\n          return videojs$1.createTimeRange();\n        }\n\n        // Handle the case where we have both buffers and create an\n        // intersection of the two\n        var videoBuffered = this.videoBuffer_.buffered;\n        var audioBuffered = this.audioBuffer_.buffered;\n        var count = videoBuffered.length;\n\n        // A) Gather up all start and end times\n        while (count--) {\n          extents.push({ time: videoBuffered.start(count), type: 'start' });\n          extents.push({ time: videoBuffered.end(count), type: 'end' });\n        }\n        count = audioBuffered.length;\n        while (count--) {\n          extents.push({ time: audioBuffered.start(count), type: 'start' });\n          extents.push({ time: audioBuffered.end(count), type: 'end' });\n        }\n        // B) Sort them by time\n        extents.sort(function (a, b) {\n          return a.time - b.time;\n        });\n\n        // C) Go along one by one incrementing arity for start and decrementing\n        //    arity for ends\n        for (count = 0; count < extents.length; count++) {\n          if (extents[count].type === 'start') {\n            arity++;\n\n            // D) If arity is ever incremented to 2 we are entering an\n            //    overlapping range\n            if (arity === 2) {\n              start = extents[count].time;\n            }\n          } else if (extents[count].type === 'end') {\n            arity--;\n\n            // E) If arity is ever decremented to 1 we leaving an\n            //    overlapping range\n            if (arity === 1) {\n              end = extents[count].time;\n            }\n          }\n\n          // F) Record overlapping ranges\n          if (start !== null && end !== null) {\n            ranges.push([start, end]);\n            start = null;\n            end = null;\n          }\n        }\n\n        return videojs$1.createTimeRanges(ranges);\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n  createClass$1(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment;\n\n      // Cast ArrayBuffer to TypedArray\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n\n      createTextTracksIfNecessary(this, this.mediaSource_, segment);\n\n      // Add the segments to the pendingBuffers array\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      }\n\n      // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n      this.processPendingSegments_();\n      return;\n    }\n\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        }\n\n        // Do nothing if a SourceBuffer of this type already exists\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null;\n\n        // If the mediasource already has a SourceBuffer for the codec\n        // use that\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_'];\n          // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer;\n\n        // Wire up the events to the SourceBuffer\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              }\n              // if the other type if updating we don't trigger\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({ action: 'flush' });\n    }\n\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      }\n\n      // Remove Metadata Cues (id3)\n      removeCuesFromTrack(start, end, this.metadataTrack_);\n\n      // Remove Any Captions\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      };\n\n      // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n\n        segmentObj[type].initSegment = initSegment;\n\n        // Gather any captions into a single array\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        }\n\n        // Gather any metadata into a single array\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments);\n\n      // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({ type: 'audioinfo', info: sortedSegments.audio.info });\n      }\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({ type: 'videoinfo', info: sortedSegments.video.info });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false;\n\n      // Merge multiple video and audio segments into one and append\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n        // TODO: are video tracks the only ones with text tracks?\n        addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      }\n\n      // We are no longer in the internal \"updating\" state\n      this.bufferUpdating_ = false;\n    }\n\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes);\n\n        // Combine the individual segments into one large typed-array\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({ action: 'reset' });\n      }\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits$1(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck$1(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn$1(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n\n    _this.nativeMediaSource_ = new window$1.MediaSource();\n    // delegate to the native MediaSource's methods by default\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    }\n\n    // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    });\n\n    // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n    _this.sourceBuffers = [];\n\n    _this.activeSourceBuffers_ = [];\n\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0;\n\n      // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n        _this.activeSourceBuffers_.push(sourceBuffer);\n        return;\n      }\n\n      // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n      var disableCombined = false;\n      var disableAudioOnly = true;\n\n      // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n        /* eslinst-enable */\n\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({ action: 'resetCaptions' });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    };\n\n    // Re-emit MediaSource events on the polyfill\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this);\n\n    // capture the associated player when the MediaSource is\n    // successfully attached\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_);\n      // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    });\n\n    // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n\n      this.sourceBuffers.length = 0;\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      }\n\n      // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n  createClass$1(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type);\n\n      // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_();\n\n          // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n\n/**\n * @file videojs-contrib-media-sources.js\n */\nvar urlCount = 0;\n\n// ------------\n// Media Source\n// ------------\n\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\nvideojs$1.mediaSources = {};\n\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({ type: 'sourceopen', swfId: swfId });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0;\n\n    // use the native MediaSource to generate an object URL\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    }\n    // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    }\n\n    // build a URL that can be used to map back to the emulated\n    // MediaSource\n    url = objectUrlPrefix + urlCount;\n\n    urlCount++;\n\n    // setup the mapping back to object\n    videojs$1.mediaSources[url] = object;\n\n    return url;\n  }\n};\n\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\n\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  });\n\n  // First update the playlists in playlist list\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    }\n  }\n\n  // Then update media group playlists\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate;\n        // update the playlist reference within media groups\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n      }\n    }\n  });\n\n  return update;\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits$1(DashPlaylistLoader, _EventTarget);\n\n  // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls, withCredentials, masterPlaylistLoader) {\n    classCallCheck$1(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn$1(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    }\n\n    // event naming?\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    });\n\n    // live playlist staleness timeout\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_();\n    });\n\n    // initialize the loader state\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist;\n      _this.state = 'HAVE_NOTHING';\n      return possibleConstructorReturn$1(_this);\n    }\n\n    _this.masterPlaylistLoader_ = masterPlaylistLoader;\n\n    _this.state = 'HAVE_METADATA';\n    _this.started = true;\n    // we only should have one playlist so select it\n    _this.media(srcUrlOrPlaylist);\n    // trigger async to mimic behavior of HLS, where it must request a playlist\n    window$1.setTimeout(function () {\n      _this.trigger('loadedmetadata');\n    }, 0);\n    return _this;\n  }\n\n  createClass$1(DashPlaylistLoader, [{\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      // getter\n      if (!playlist) {\n        return this.media_;\n      }\n\n      // setter\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state;\n\n      // find the playlist object if the target playlist has been specified by URI\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri;\n\n      this.state = 'HAVE_METADATA';\n\n      // switching to the active playlist is a no-op\n      if (!mediaChange) {\n        return;\n      }\n\n      // switching from an already loaded playlist\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.media_ = playlist;\n\n      this.refreshMedia_();\n\n      // trigger media change if the active media has been updated\n      if (startingState !== 'HAVE_MASTER') {\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load() {\n      // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      this.trigger('loadedplaylist');\n    }\n\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_\n      });\n\n      master.uri = this.srcUrl;\n\n      // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n\n        master.playlists[i].uri = phonyUri;\n        // set up by URI references\n        master.playlists[phonyUri] = master.playlists[i];\n      }\n\n      // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          properties.playlists[0].uri = _phonyUri;\n          // setup URI references\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this2 = this;\n\n      this.started = true;\n\n      // request the specified URL\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        }\n\n        // clear the loader's request reference\n        _this2.request = null;\n\n        if (error) {\n          _this2.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this2.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n          if (_this2.state === 'HAVE_NOTHING') {\n            _this2.started = false;\n          }\n          return _this2.trigger('error');\n        }\n\n        _this2.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this2.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this2.masterLoaded_ = Date.now();\n        }\n\n        _this2.syncClientServerClock_(_this2.onClientServerClockSync_.bind(_this2));\n      });\n    }\n\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this3 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_);\n\n      // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this3.clientOffset_ = _this3.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this3.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this3.clientOffset_ = serverTime - Date.now();\n\n        done();\n      });\n    }\n\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this4 = this;\n\n      this.master = this.parseMasterXml();\n\n      this.state = 'HAVE_MASTER';\n\n      this.trigger('loadedplaylist');\n\n      if (!this.media_) {\n        // no media playlist was specifically selected so start\n        // from the first listed one\n        this.media(this.master.playlists[0]);\n      }\n      // trigger loadedmetadata to resolve setup of media groups\n      // trigger async to mimic behavior of HLS, where it must request a playlist\n      window$1.setTimeout(function () {\n        _this4.trigger('loadedmetadata');\n      }, 0);\n\n      // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n      if (this.master.minimumUpdatePeriod) {\n        window$1.setTimeout(function () {\n          _this4.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this5 = this;\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        }\n\n        // clear the loader's request reference\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n          return _this5.trigger('error');\n        }\n\n        _this5.masterXml_ = req.responseText;\n\n        var newMaster = _this5.parseMasterXml();\n\n        _this5.master = updateMaster$1(_this5.master, newMaster);\n\n        window$1.setTimeout(function () {\n          _this5.trigger('minimumUpdatePeriod');\n        }, _this5.master.minimumUpdatePeriod);\n      });\n    }\n\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_() {\n      var _this6 = this;\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n        this.media_ = updatedMaster.playlists[this.media_.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this6.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck$1(this, SourceUpdater);\n\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass$1(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true;\n\n      // run completion handlers and process callbacks as updateend\n      // events fire\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n\n        _this2.pendingCallback_ = null;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n\n      this.runCallback_();\n    }\n\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(bytes, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        _this4.sourceBuffer_.appendBuffer(bytes);\n      }, done);\n    }\n\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n      return this.sourceBuffer_.buffered;\n    }\n\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n          _this5.sourceBuffer_.remove(start, end);\n        }, noop);\n      }\n    }\n\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || this.pendingCallback_;\n    }\n\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n        });\n        this.timestampOffset_ = offset;\n      }\n      return this.timestampOffset_;\n    }\n\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n      if (this.sourceBuffer_ && this.mediaSource.readyState === 'open') {\n        this.sourceBuffer_.abort();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\n\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0;\n\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n  return headers;\n};\n\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr$$1) {\n    xhr$$1.abort();\n  });\n};\n\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n\n  stats.bytesReceived = progressEvent.loaded;\n  // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n\n  return stats;\n};\n\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    // stop processing if received empty content\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response);\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleSegmentResponse = function handleSegmentResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    // stop processing if received empty content\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler);\n\n  // this is an encrypted segment\n  // incrementally decrypt the segment\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: segment.key.bytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, segment.key.bytes.buffer]);\n};\n\n/**\n * The purpose of this function is to get the most pertinent error from the\n * array of errors.\n * For instance if a timeout and two aborts occur, then the aborts were\n * likely triggered by the timeout so return that error object.\n */\nvar getMostImportantError = function getMostImportantError(errors) {\n  return errors.reduce(function (prev, err) {\n    return err.code > prev.code ? err : prev;\n  });\n};\n\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var errors = [];\n  var count = 0;\n\n  return function (error, segment) {\n    if (error) {\n      // If there are errors, we have to abort any outstanding requests\n      abortAll(activeXhrs);\n      errors.push(error);\n    }\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (errors.length > 0) {\n        var worstError = getMostImportantError(errors);\n\n        return doneFn(worstError, segment);\n      }\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      }\n      // Otherwise, everything is ready just continue\n      return doneFn(null, segment);\n    }\n  };\n};\n\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event));\n\n    // record the time that we receive the first byte of data\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr$$1, xhrOptions, decryptionWorker, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn);\n\n  // optionally, request the decryption key\n  if (segment.key) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr$$1(keyRequestOptions, keyRequestCallback);\n\n    activeXhrs.push(keyXhr);\n  }\n\n  // optionally, request the associated media init segment\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, finishProcessingFn);\n    var initSegmentXhr = xhr$$1(initSegmentOptions, initSegmentRequestCallback);\n\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, finishProcessingFn);\n  var segmentXhr = xhr$$1(segmentRequestOptions, segmentRequestCallback);\n\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n\n  return function () {\n    return abortAll(activeXhrs);\n  };\n};\n\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n\n// Default codec parameters if none were provided for video and/or audio\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2;\n\n  // parse the video codec\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  }\n\n  // parse the last field of the audio codec\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n\n  return result;\n};\n\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n  return 'mp2t';\n};\n\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {};\n  // Default condition for a traditional HLS (no demuxed audio/video)\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n\n    // Handle the case where we are in a multiple-audio track scenario\n    if (audioGroup) {\n      isMaat = true;\n      // Start with the everything demuxed then...\n      isMuxed = false;\n      // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  }\n\n  // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  }\n\n  // Generate the final codec strings from the codec object generated above\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  }\n\n  // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    }\n\n    // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n    return [bothVideoAudio, justAudio];\n  }\n\n  // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n  if (!codecStrings.video) {\n    return [justAudio];\n  }\n\n  // When not using separate audio media groups, audio and video is\n  // *always* muxed\n  return [bothVideoAudio];\n};\n\n// Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n    return cmp;\n  });\n};\n\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n\n  return leftBandwidth - rightBandwidth;\n};\n\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE;\n\n  // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n  return leftWidth - rightWidth;\n};\n\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  });\n\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  });\n\n  // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  }\n\n  // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1];\n\n  // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n\n  // filter out playlists without resolution information\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  });\n\n  // sort variants by resolution\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  });\n\n  // if we have the exact resolution as the player use it\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1];\n  // ensure that we pick the highest bandwidth variant that have exact resolution\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0;\n\n  // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    });\n\n    // find all the variants have the same smallest resolution\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    });\n\n    // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  }\n\n  // fallback chain of variants\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n  return chosenRep ? chosenRep.playlist : null;\n};\n\n// Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10));\n};\n\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController;\n\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  });\n\n  // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime);\n    // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  });\n\n  // Sort by bandwidth DESC\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n\n  return rebufferingEstimates[0] || null;\n};\n\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled);\n\n  // Sort ascending by bitrate\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  });\n\n  // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n\n  return playlistsWithVideo[0] || null;\n};\n\n/**\n * @file segment-loader.js\n */\n\n// in ms\nvar CHECK_BUFFER_DELAY = 500;\n\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments;\n\n  // determine a few boolean values to help make the branch below easier\n  // to read\n  var appendedLastSegment = segmentIndex === segments.length;\n\n  // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  }\n\n  // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits$1(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck$1(this, SegmentLoader);\n\n    // check pre-conditions\n    var _this = possibleConstructorReturn$1(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    }\n    // public properties\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = { rate: 0, count: 0 };\n    _this.roundTrip = NaN;\n    _this.resetStats_();\n    _this.mediaIndex = null;\n\n    // private settings\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.state_ = 'INIT';\n\n    // private instance variables\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null;\n\n    // Fragmented mp4 playback\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {};\n\n    _this.decrypter_ = settings.decrypter;\n\n    // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.syncController_.on('syncinfoupdate', function () {\n      return _this.trigger('syncinfoupdate');\n    });\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    });\n\n    // ...for determining the fetch location\n    _this.fetchAtBuffer_ = false;\n\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n  createClass$1(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n      this.resetStats_();\n    }\n\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n        return;\n      }\n\n      this.abort_();\n\n      // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n      this.state = 'READY';\n\n      // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      }\n\n      // clear out the segment being processed\n      this.pendingSegment_ = null;\n    }\n\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes\n        };\n      }\n\n      return storedMap || map;\n    }\n\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && (\n      // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_();\n\n      // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n      if (!this.playlist_) {\n        return;\n      }\n\n      // not sure if this is the best place for this\n      this.syncController_.setDateTimeMapping(this.playlist_);\n\n      // if all the configuration is ready, initialize and begin loading\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options;\n\n      // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n      if (!this.hasPlayed_()) {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = oldPlaylist ? oldPlaylist.id : null;\n\n      this.logger_('playlist update [' + oldId + ' => ' + newPlaylist.id + ']');\n\n      // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n      this.trigger('syncinfoupdate');\n\n      // if we were unpaused but waiting for a playlist, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        }\n\n        // the rest of this function depends on `oldPlaylist` being defined\n        return;\n      }\n\n      // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n\n      this.logger_('live window shift [' + mediaSequenceDiff + ']');\n\n      // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      }\n\n      // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff;\n\n        // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n\n        this.checkBufferTimeout_ = null;\n      }\n    }\n\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter;\n      // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything() {\n      this.ended_ = false;\n      this.resetLoader();\n      this.remove(0, this.duration_());\n      this.trigger('reseteverything');\n    }\n\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end);\n      }\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n    }\n\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      }\n\n      // see if we need to begin loading immediately\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      var isEndOfStream = detectEndOfStream(this.playlist_, this.mediaSource_, segmentInfo.mediaIndex);\n\n      if (isEndOfStream) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      }\n\n      // We will need to change timestampOffset of the sourceBuffer if either of\n      // the following conditions are true:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      if (segmentInfo.timeline !== this.currentTimeline_ || segmentInfo.startOfSegment !== null && segmentInfo.startOfSegment < this.sourceUpdater_.timestampOffset()) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      }\n\n      // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      }\n\n      // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      }\n\n      // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      }\n\n      // Under normal playback conditions fetching is a simple walk forward\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n\n        if (segment && segment.end) {\n          startOfSegment = segment.end;\n        } else {\n          startOfSegment = lastBufferedEnd;\n        }\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      }\n\n      // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() ||\n      // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout ||\n      // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      }\n\n      // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived);\n\n      // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1;\n\n      // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n\n      var minimumTimeSaving = 0.5;\n\n      // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      }\n\n      // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.createSimplifiedSegmentObj_(segmentInfo),\n      // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10);\n\n      // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n\n        simpleSegment.key = {\n          resolvedUri: segment.key.resolvedUri,\n          iv: iv\n        };\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      }\n\n      // The request was aborted and the SegmentLoader has already been reset\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      }\n\n      // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      // an error occurred from the active pendingSegment_ so reset everything\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n\n        // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause();\n\n        // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        }\n\n        // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      }\n\n      // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime;\n\n      // if this request included an initialization segment, save that data\n      // to the initSegment cache\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n\n      segmentInfo.bytes = simpleSegment.bytes;\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n      this.handleSegment_();\n    }\n\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo);\n\n      // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && (\n      // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset);\n        // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING';\n\n      // if the media initialization segment is changing, append it\n      // before the content segment\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n\n          this.sourceUpdater_.appendBuffer(initSegment.bytes, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n\n      this.sourceUpdater_.appendBuffer(segmentInfo.bytes, this.handleUpdateEnd_.bind(this));\n    }\n\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n\n      this.state = 'READY';\n\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline;\n\n      // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n      this.trigger('syncinfoupdate');\n\n      // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      }\n\n      // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n      this.trigger('progress');\n\n      // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n      var isEndOfStream = detectEndOfStream(segmentInfo.playlist, this.mediaSource_, segmentInfo.mediaIndex + 1);\n\n      if (isEndOfStream) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate;\n      // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1;\n      // Multiply by 8000 to convert from bytes/millisecond to bits/second\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000);\n\n      // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end;\n\n      // Do not try adding the cue if the start and end times are invalid.\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.uri,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data);\n\n      // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n      cue.value = value;\n\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\n/**\n * @file vtt-segment-loader.js\n */\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (char) {\n  return char.charCodeAt(0);\n}));\n\nvar uintToString = function uintToString(uintArray) {\n  return String.fromCharCode.apply(null, uintArray);\n};\n\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits$1(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck$1(this, VTTSegmentLoader);\n\n    // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n    var _this = possibleConstructorReturn$1(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n\n    _this.subtitlesTrack_ = null;\n    return _this;\n  }\n\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  createClass$1(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track;\n\n      // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      }\n\n      // see if we need to begin loading immediately\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n      return segmentInfo;\n    }\n\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n\n      // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n\n        var loadHandler = function loadHandler() {\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', function () {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n          _this3.state = 'READY';\n          _this3.pause();\n          _this3.trigger('error');\n        });\n\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(cue);\n      });\n\n      this.handleUpdateEnd_();\n    }\n\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = { MPEGTS: 0, LOCAL: 0 };\n\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uintToString(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uintToString(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      }\n\n      // otherwise extend cue until a CUE-IN is found\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime;\n        // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0;\n\n        // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray$1(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n    mediaTime += segment.duration;\n  }\n};\n\n/**\n * @file sync-controller.js\n */\n\nvar tsprobe = tsInspector.inspect;\n\nvar syncPointStrategies = [\n// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n\n      return syncPoint;\n    }\n    return null;\n  }\n},\n// Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart);\n\n        // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start);\n\n        // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time);\n\n          // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n\n      return syncPoint;\n    }\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits$1(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck$1(this, SyncController);\n\n    // Segment Loader state variables...\n    // ...for synching across variants\n    var _this = possibleConstructorReturn$1(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined;\n\n    // ...for synching across variants\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n  createClass$1(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      }\n\n      // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n      return this.selectSyncPoint_(syncPoints, { key: 'time', value: currentTime });\n    }\n\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0);\n\n      // Without sync-points, there is not enough information to determine the expired time\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      });\n\n      // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = [];\n\n      // Try to find a sync-point in by utilizing various strategies...\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n\n      return bestSyncPoint;\n    }\n\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n\n      // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo);\n\n          // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n\n    /**\n     * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var timescales = mp4probe.timescale(segment.map.bytes);\n      var startTime = mp4probe.startTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= startTime;\n      }\n\n      return {\n        start: startTime,\n        end: startTime + segment.duration\n      };\n    }\n\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n      }\n\n      return {\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n      return this.timelines[timeline].mapping;\n    }\n\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment;\n\n      // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n  var decrypterWorker = function () {\n\n    var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n    var win;\n\n    if (typeof window !== \"undefined\") {\n      win = window;\n    } else if (typeof commonjsGlobal !== \"undefined\") {\n      win = commonjsGlobal;\n    } else if (typeof self !== \"undefined\") {\n      win = self;\n    } else {\n      win = {};\n    }\n\n    var window_1 = win;\n\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck$$1 = function classCallCheck$$1(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass$$1 = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits$$1 = function inherits$$1(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn$$1 = function possibleConstructorReturn$$1(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n    };\n\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0;\n\n      // Compute double and third tables\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x;\n\n        // Compute MixColumns\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      }\n\n      // Compactify. Considerable speedup on Firefox.\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n      return tables;\n    };\n    var aesTables = null;\n\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck$$1(this, AES);\n\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n        if (!aesTables) {\n          aesTables = precompute();\n        }\n        // then make a copy of that object for use\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey];\n\n        // schedule encryption keys\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1];\n\n          // apply sbox\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n            // shift rows and add rcon\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        }\n\n        // schedule decryption keys\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1];\n        // state variables a,b,c,d are loaded with pre-whitened data\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0;\n\n        // key.length === 2 ?\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1];\n\n        // load up the tables\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4];\n\n        // Inner rounds. Cribbed from OpenSSL.\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;b = b2;c = c2;\n        }\n\n        // Last round.\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;a = b;b = c;c = d;d = a2;\n        }\n      };\n\n      return AES;\n    }();\n\n    /**\n     * @file stream.js\n     */\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n    var Stream = function () {\n      function Stream() {\n        classCallCheck$$1(this, Stream);\n\n        this.listeners = {};\n      }\n\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n        this.listeners[type].push(listener);\n      };\n\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        }\n\n        // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n\n    /**\n     * @file async-stream.js\n     */\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits$$1(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck$$1(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn$$1(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n      var decipher = new AES(Array.prototype.slice.call(key));\n\n      // byte and word-level access for the decrypted output\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer);\n\n      // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0;\n\n      // iteration variable\n      var wordIx = void 0;\n\n      // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3];\n\n      // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n        // decrypt the block\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n        // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n        // setup the IV for the next round\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck$$1(this, Decrypter$$1);\n\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n\n        this.asyncStream_ = new AsyncStream$$1();\n\n        // split up the encryption job and do the individual chunks asynchronously\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        }\n        // invoke the done() callback when everything is finished\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass$$1(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n\n      return transferable;\n    };\n\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n\n        /* eslint-disable no-new, handle-callback-err */\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          window_1.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n\n    return decrypterWorker;\n  }();\n});\n\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties.default ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n      return;\n    }\n\n    // Non-destructive resync\n    segmentLoader.resyncLoader();\n\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    }\n\n    // destructive reset\n    segmentLoader.resetEverything();\n\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n\n      stopLoaders(segmentLoader, mediaType);\n\n      // switch back to default audio track\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group.default;\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n\n      stopLoaders(segmentLoader, mediaType);\n\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\n\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n\n      segmentLoader.playlist(media, requestOptions);\n\n      // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions);\n\n      // If the player isn't paused, ensure that the segment loader is running\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack());\n\n      // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions);\n\n      // If the player isn't paused, ensure that the segment loader is running\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\n\nvar byGroupId = function byGroupId(type, groupId) {\n  return function (playlist) {\n    return playlist.attributes[type] === groupId;\n  };\n};\n\nvar byResolvedUri = function byResolvedUri(resolvedUri) {\n  return function (playlist) {\n    return playlist.resolvedUri === resolvedUri;\n  };\n};\n\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        _settings$master = settings.master,\n        mediaGroups = _settings$master.mediaGroups,\n        playlists = _settings$master.playlists,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = { main: { default: { default: true } } };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n      var groupPlaylists = playlists.filter(byGroupId(type, groupId));\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        // List of playlists for the current group ID that have a matching uri with\n        // this alternate audio variant\n        var matchingPlaylists = groupPlaylists.filter(byResolvedUri(properties.resolvedUri));\n\n        if (matchingPlaylists.length) {\n          // If there is a playlist that has the same uri as this audio variant, assume\n          // that the playlist is audio only. We delete the resolvedUri property here\n          // to prevent a playlist loader from being created so that we don't have\n          // both the main and audio segment loaders loading the same audio segments\n          // from the same playlist.\n          delete properties.resolvedUri;\n        }\n\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({ id: variantLabel, playlistLoader: playlistLoader }, properties);\n\n        setupListeners[type](type, properties.playlistLoader, settings);\n\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n\n    // setup single error event handler for the segment loader\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n\n        setupListeners[type](type, properties.playlistLoader, settings);\n\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            enabled: false,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n\n    // setup single error event handler for the segment loader\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        }\n\n        // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n        groups[groupId].push(videojs$1.mergeOptions({ id: variantLabel }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            enabled: false,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls;\n\n  // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  });\n\n  // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group.default;\n  })[0] || audioGroup[0]).id;\n\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  });\n\n  // custom audio track change event handler for usage event\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({ type: 'usage', name: 'hls-audio-change' });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  });\n\n  // clear existing audio tracks and add the ones we just created\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n\n  return mediaTypes;\n};\n\n/**\n * @file master-playlist-controller.js\n */\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\n\nvar Hls = void 0;\n\n// SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits$1(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck$1(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn$1(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: _this.withCredentials,\n      timeout: null\n    };\n\n    _this.mediaTypes_ = createMediaTypes();\n\n    _this.mediaSource = new videojs$1.MediaSource();\n\n    // load the media source into the player\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n    _this.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n\n    _this.decrypter_ = new Decrypter$1();\n\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_\n    };\n\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.withCredentials) : new PlaylistLoader(url, _this.hls_, _this.withCredentials);\n    _this.setupMasterPlaylistLoaderListeners_();\n\n    // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options);\n\n    // alternate audio track\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this.setupSegmentLoaderListeners_();\n\n    // Create SegmentLoader stat-getters\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n    return _this;\n  }\n\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n  createClass$1(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000;\n\n        // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        }\n\n        // if this isn't a live video and preload permits, start\n        // downloading segments\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n        _this2.setupFirstPlay();\n\n        _this2.trigger('selectedinitialmedia');\n      });\n\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        }\n\n        // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n        _this2.updateDuration();\n\n        // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n        _this2.mainSegmentLoader_.pause();\n      });\n\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000;\n\n        // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        }\n\n        // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          });\n          // useful for monitoring QoS\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({ type: 'usage', name: 'hls-rendition-disabled' });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({ type: 'usage', name: 'hls-rendition-enabled' });\n      });\n    }\n\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-demuxed' });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-webvtt' });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-aes' });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-fmp4' });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-alternate-audio' });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-playlist-cue-tags' });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n        var buffered = _this3.tech_.buffered();\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine();\n\n        // If the playlist is live, then we want to not take low water line into account.\n        // This is because in LIVE, the player plays 3 segments from the end of the\n        // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n        // in those segments, a viewer will never experience a rendition upswitch.\n        if (!currentPlaylist.endList ||\n        // For the same reason as LIVE, we ignore the low water line when the VOD\n        // duration is below the max potential low water line\n        _this3.duration() < Config.MAX_BUFFER_LOW_WATER_LINE ||\n        // we want to switch down to lower resolutions quickly to continue playback, but\n        nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH ||\n        // ensure we have some buffer before we switch up to prevent us running out of\n        // buffer while loading a higher rendition.\n        forwardBuffer >= bufferLowWaterLine) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({ type: 'usage', name: 'hls-timestamp-offset' });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method may perform destructive actions, like\n     * removing already buffered content, to readjust the currently\n     * active playlist quickly.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n\n        this.mainSegmentLoader_.resetLoader();\n        // don't need to reset audio as it is reset when media changes\n      }\n    }\n\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.tech_.setCurrentTime(0);\n      }\n\n      if (this.hasPlayed_()) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable();\n\n      // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.tech_.setCurrentTime(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this4 = this;\n\n      var media = this.masterPlaylistLoader_.media();\n\n      // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n      if (!media || this.tech_.paused() || this.hasPlayed_()) {\n        return false;\n      }\n\n      // when the video is a live stream\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this4.trigger('firstplay');\n            _this4.tech_.setCurrentTime(seekable$$1.end(0));\n            _this4.hasPlayed_ = function () {\n              return true;\n            };\n          });\n\n          return false;\n        }\n\n        // trigger firstplay to inform the source handler to ignore the next seek event\n        this.trigger('firstplay');\n        // seek to the live point\n        this.tech_.setCurrentTime(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = function () {\n        return true;\n      };\n      // we can begin loading now that everything is ready\n      this.load();\n      return true;\n    }\n\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play();\n\n        // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (isEndOfStream) {\n        this.mediaSource.endOfStream();\n      }\n    }\n\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      }\n\n      // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n      var bufferedEnd = buffered.end(buffered.length - 1);\n\n      // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0;\n\n      // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration;\n\n      // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n\n      if (isFinalRendition) {\n        // Never blacklisting this playlist because it's final rendition\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the final playlist.');\n\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      }\n      // Blacklist this playlist\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({ type: 'usage', name: 'hls-rendition-blacklisted' });\n\n      // Select a new playlist\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n\n      return this.masterPlaylistLoader_.media(nextPlaylist);\n    }\n\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      }\n\n      // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      }\n\n      // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n      if (buffered && buffered.length) {\n        return currentTime;\n      }\n\n      // cancel outstanding requests so we begin buffering at the new\n      // location\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      }\n\n      // start segment loader loading in case they are paused\n      this.load();\n    }\n\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var mainSeekable = void 0;\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      mainSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n\n      this.tech_.trigger('seekablechanged');\n    }\n\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this5 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n      var setDuration = function setDuration() {\n        _this5.mediaSource.duration = newDuration;\n        _this5.tech_.trigger('durationchange');\n\n        _this5.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      }\n\n      // if the duration has changed, invalidate the cached value\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this6 = this;\n\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this6.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n    }\n\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0;\n\n      // wait until a media playlist is available and the Media Source is\n      // attached\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes);\n      // exclude any incompatible variant streams from future playlist\n      // selection\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter =\n      // If there is more than one mime type\n      mimeTypes.length > 1 &&\n      // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 &&\n      // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ?\n      // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() :\n      // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        }\n\n        // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        }\n\n        // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n\n      return Math.min(initial + currentTime * rate, max);\n    }\n\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n    return enable;\n  };\n};\n\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck$1(this, Representation);\n\n  // Get a reference to a bound version of fastQualityChange_\n  var fastChangeFunction = hlsHandler.masterPlaylistController_.fastQualityChange_.bind(hlsHandler.masterPlaylistController_);\n\n  // some playlist attributes are optional\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH;\n\n  // The id is simply the ordinality of the media playlist\n  // within the master playlist\n  this.id = id;\n\n  // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, fastChangeFunction);\n};\n\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists;\n\n  // Add a single API-specific function to the HlsHandler instance\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n\n// Set of events that reset the playback-watcher time check logic and clear the timeout\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck$1(this, PlaybackWatcher);\n\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler);\n\n    // Define the dispose function to clean up our events\n    this.dispose = function () {\n      _this.logger_('dispose');\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n      _this.tech_.off('waiting', waitingHandler);\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n      _this.tech_.off('canplay', canPlayHandler);\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n      _this.cancelTimer_();\n    };\n  }\n\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n  createClass$1(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      }\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var seekTo = void 0;\n\n      if (seeking && this.afterSeekableWindow_(seekable, currentTime)) {\n        var seekableEnd = seekable.end(seekable.length - 1);\n\n        // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n        seekTo = seekableEnd;\n      }\n\n      if (seeking && this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0);\n\n        // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n\n        this.tech_.setCurrentTime(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      }\n\n      // All tech waiting checks failed. Use last resort correction\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime);\n\n      // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(currentTime);\n\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.');\n\n        // unknown waiting corrections may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-unknown-waiting' });\n        return;\n      }\n    }\n\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(livePoint);\n\n        // live window resyncs may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-live-resync' });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(currentTime);\n\n        // video underflow may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-video-underflow' });\n        return true;\n      }\n\n      // check for gap\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      }\n\n      // All checks failed. Returning false to indicate failure to correct waiting\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime) {\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      if (currentTime > seekable.end(seekable.length - 1) + SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length &&\n      // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0));\n\n      // only seek if we still have not played\n      this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n\n      this.tech_.trigger({ type: 'usage', name: 'hls-gap-skip' });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i);\n\n        // gap is starts no more than 4 seconds back\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({ IWillNotUseThisInPlugins: true });\n    var sourceObj = tech.currentSource_;\n\n    return next(sourceObj);\n  }\n};\n\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n\n  player.ready(function () {\n    player.trigger({ type: 'usage', name: 'hls-error-reload-initialized' });\n  });\n\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n\n    player.one('loadedmetadata', loadedMetadataHandler);\n\n    player.src(sourceObj);\n    player.trigger({ type: 'usage', name: 'hls-error-reload' });\n    player.play();\n  };\n\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({ type: 'usage', name: 'hls-error-reload-canceled' });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n    lastCalled = Date.now();\n\n    return localOptions.getSource.call(player, setSource);\n  };\n\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents);\n\n  // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n  player.reloadSourceOnError = reinitPlugin;\n};\n\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.1.0\";\n\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n\n  xhr: xhrFactory()\n};\n\n// 0.5 MB/s\nvar INITIAL_BANDWIDTH = 4194304;\n\n// Define getter/setters for config properites\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n};\n\n// HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, videoPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n\n  // upsert the content types based on the selected playlist\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: 'audio/mp4; codecs=\"' + audioPlaylist.attributes.CODECS + '\"',\n      videoContentType: 'video/mp4; codecs=\"' + videoPlaylist.attributes.CODECS + '\"'\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    }\n\n    // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  if (hlsHandler.options_.sourceType !== 'dash') {\n    return;\n  }\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, hlsHandler.playlists.media(), hlsHandler.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions;\n    }\n  }\n};\n\n/**\n * Whether the browser has built-in HLS support.\n */\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video');\n\n  // native HLS is definitely not supported if HTML5 video isn't\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  // HLS manifests can go by many mime-types\n  var canPlay = [\n  // Apple santioned\n  'application/vnd.apple.mpegurl',\n  // Apple sanctioned for backwards compatibility\n  'audio/mpegurl',\n  // Very common\n  'audio/x-mpegurl',\n  // Very common\n  'application/x-mpegurl',\n  // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n\n  return canPlay.some(function (canItPlay) {\n    return (/maybe|probably/i.test(video.canPlayType(canItPlay))\n    );\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return (/maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'))\n  );\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits$1(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck$1(this, HlsHandler);\n\n    // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n    var _this = possibleConstructorReturn$1(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech_.hls instead.');\n            tech.trigger({ type: 'usage', name: 'hls-player-access' });\n            return _this;\n          }\n        });\n      }\n\n      // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n      _player.vhs = _this;\n      // deprecated, for backwards compatibility\n      _player.dash = _this;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n    _this.ignoreNextSeekingEvent_ = false;\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    }\n\n    // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.fastQualityChange_();\n      }\n    });\n\n    _this.on(_this.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n    return _this;\n  }\n\n  createClass$1(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this;\n\n      // defaults\n      this.options_.withCredentials = this.options_.withCredentials || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      // start playlist selection at a reasonable bandwidth for\n      // broadband internet (0.5 MB/s) or mobile (0.0625 MB/s)\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = INITIAL_BANDWIDTH;\n      }\n\n      // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === INITIAL_BANDWIDTH;\n\n      // grab options passed to player.src\n      ['withCredentials', 'bandwidth'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n\n      this.bandwidth = this.options_.bandwidth;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this;\n\n      // do nothing if the src is falsey\n      if (!_src) {\n        return;\n      }\n      this.setOptions_();\n      // add master playlist controller options\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type);\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        }\n      }));\n\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n\n        player.error(_this3.masterPlaylistController_.error);\n      });\n\n      // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this);\n\n      // re-expose some internal objects for backwards compatibility with < v2\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource;\n\n      // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput;\n            // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth;\n            // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      });\n\n      // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n\n      // In the live case, we need to ignore the very first `seeking` event since\n      // that will be the result of the seek-to-live behavior\n      this.on(this.masterPlaylistController_, 'firstplay', function () {\n        this.ignoreNextSeekingEvent_ = true;\n      });\n\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      });\n\n      // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId];\n\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n      get$2(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n}\n\n// register source handlers with the appropriate techs\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    _classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  _createClass(Stream, [{\n    key: 'on',\n    value: function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n      this.listeners[type].push(listener);\n    }\n\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {String} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {Boolean} if we could turn it off or not\n     */\n\n  }, {\n    key: 'off',\n    value: function off(type, listener) {\n      if (!this.listeners[type]) {\n        return false;\n      }\n\n      var index = this.listeners[type].indexOf(listener);\n\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {String} type the event name\n     */\n\n  }, {\n    key: 'trigger',\n    value: function trigger(type) {\n      var callbacks = this.listeners[type];\n      var i = void 0;\n      var length = void 0;\n      var args = void 0;\n\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = Array.prototype.slice.call(arguments, 1);\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    }\n\n    /**\n     * Destroys the stream and cleans up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.listeners = {};\n    }\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n  }, {\n    key: 'pipe',\n    value: function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    }\n  }]);\n\n  return Stream;\n}();\n\nexports['default'] = Stream;"],"sourceRoot":""}